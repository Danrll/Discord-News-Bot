[33mcommit 22eb1cd2456265c0f3f68e9b570b3266a59544a8[m[33m ([m[1;36mHEAD -> [m[1;32mmaster[m[33m, [m[1;31morigin/master[m[33m)[m
Author: Johannes Schneider <jojo20872@gmail.com>
Date:   Fri Nov 22 17:39:11 2019 -0500

    Add discord.js and package-lock.json

[1mdiff --git a/node_modules/async-limiter/.eslintignore b/node_modules/async-limiter/.eslintignore[m
[1mnew file mode 100644[m
[1mindex 0000000..e1661e5[m
[1m--- /dev/null[m
[1m+++ b/node_modules/async-limiter/.eslintignore[m
[36m@@ -0,0 +1,2 @@[m
[32m+[m[32mcoverage[m
[32m+[m[32m.nyc_output[m
\ No newline at end of file[m
[1mdiff --git a/node_modules/async-limiter/.nycrc b/node_modules/async-limiter/.nycrc[m
[1mnew file mode 100644[m
[1mindex 0000000..874c1de[m
[1m--- /dev/null[m
[1m+++ b/node_modules/async-limiter/.nycrc[m
[36m@@ -0,0 +1,10 @@[m
[32m+[m[32m{[m
[32m+[m[32m  "check-coverage": false,[m
[32m+[m[32m  "lines": 99,[m
[32m+[m[32m  "statements": 99,[m
[32m+[m[32m  "functions": 99,[m
[32m+[m[32m  "branches": 99,[m
[32m+[m[32m  "include": [[m
[32m+[m[32m     "index.js"[m
[32m+[m[32m  ][m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/node_modules/async-limiter/.travis.yml b/node_modules/async-limiter/.travis.yml[m
[1mnew file mode 100644[m
[1mindex 0000000..37026e2[m
[1m--- /dev/null[m
[1m+++ b/node_modules/async-limiter/.travis.yml[m
[36m@@ -0,0 +1,9 @@[m
[32m+[m[32mlanguage: node_js[m
[32m+[m[32mnode_js:[m
[32m+[m[32m  - "6"[m
[32m+[m[32m  - "8"[m
[32m+[m[32m  - "10"[m
[32m+[m[32m  - "node"[m
[32m+[m[32mscript: npm run travis[m
[32m+[m[32mcache:[m
[32m+[m[32m  yarn: true[m
[1mdiff --git a/node_modules/async-limiter/LICENSE b/node_modules/async-limiter/LICENSE[m
[1mnew file mode 100644[m
[1mindex 0000000..9c91fb2[m
[1m--- /dev/null[m
[1m+++ b/node_modules/async-limiter/LICENSE[m
[36m@@ -0,0 +1,8 @@[m
[32m+[m[32mThe MIT License (MIT)[m
[32m+[m[32mCopyright (c) 2017 Samuel Reed <samuel.trace.reed@gmail.com>[m
[32m+[m
[32m+[m[32mPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:[m
[32m+[m
[32m+[m[32mThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.[m
[32m+[m
[32m+[m[32mTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.[m
[1mdiff --git a/node_modules/async-limiter/index.js b/node_modules/async-limiter/index.js[m
[1mnew file mode 100644[m
[1mindex 0000000..c9bd2f9[m
[1m--- /dev/null[m
[1m+++ b/node_modules/async-limiter/index.js[m
[36m@@ -0,0 +1,67 @@[m
[32m+[m[32m'use strict';[m
[32m+[m
[32m+[m[32mfunction Queue(options) {[m
[32m+[m[32m  if (!(this instanceof Queue)) {[m
[32m+[m[32m    return new Queue(options);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  options = options || {};[m
[32m+[m[32m  this.concurrency = options.concurrency || Infinity;[m
[32m+[m[32m  this.pending = 0;[m
[32m+[m[32m  this.jobs = [];[m
[32m+[m[32m  this.cbs = [];[m
[32m+[m[32m  this._done = done.bind(this);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mvar arrayAddMethods = [[m
[32m+[m[32m  'push',[m
[32m+[m[32m  'unshift',[m
[32m+[m[32m  'splice'[m
[32m+[m[32m];[m
[32m+[m
[32m+[m[32marrayAddMethods.forEach(function(method) {[m
[32m+[m[32m  Queue.prototype[method] = function() {[m
[32m+[m[32m    var methodResult = Array.prototype[method].apply(this.jobs, arguments);[m
[32m+[m[32m    this._run();[m
[32m+[m[32m    return methodResult;[m
[32m+[m[32m  };[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mObject.defineProperty(Queue.prototype, 'length', {[m
[32m+[m[32m  get: function() {[m
[32m+[m[32m    return this.pending + this.jobs.length;[m
[32m+[m[32m  }[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mQueue.prototype._run = function() {[m
[32m+[m[32m  if (this.pending === this.concurrency) {[m
[32m+[m[32m    return;[m
[32m+[m[32m  }[m
[32m+[m[32m  if (this.jobs.length) {[m
[32m+[m[32m    var job = this.jobs.shift();[m
[32m+[m[32m    this.pending++;[m
[32m+[m[32m    job(this._done);[m
[32m+[m[32m    this._run();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if (this.pending === 0) {[m
[32m+[m[32m    while (this.cbs.length !== 0) {[m
[32m+[m[32m      var cb = this.cbs.pop();[m
[32m+[m[32m      process.nextTick(cb);[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mQueue.prototype.onDone = function(cb) {[m
[32m+[m[32m  if (typeof cb === 'function') {[m
[32m+[m[32m    this.cbs.push(cb);[m
[32m+[m[32m    this._run();[m
[32m+[m[32m  }[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mfunction done() {[m
[32m+[m[32m  this.pending--;[m
[32m+[m[32m  this._run();[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = Queue;[m
[1mdiff --git a/node_modules/async-limiter/package.json b/node_modules/async-limiter/package.json[m
[1mnew file mode 100644[m
[1mindex 0000000..52fb731[m
[1m--- /dev/null[m
[1m+++ b/node_modules/async-limiter/package.json[m
[36m@@ -0,0 +1,69 @@[m
[32m+[m[32m{[m
[32m+[m[32m  "_from": "async-limiter@~1.0.0",[m
[32m+[m[32m  "_id": "async-limiter@1.0.1",[m
[32m+[m[32m  "_inBundle": false,[m
[32m+[m[32m  "_integrity": "sha512-csOlWGAcRFJaI6m+F2WKdnMKr4HhdhFVBk0H/QbJFMCr+uO2kwohwXQPxw/9OCxp05r5ghVBFSyioixx3gfkNQ==",[m
[32m+[m[32m  "_location": "/async-limiter",[m
[32m+[m[32m  "_phantomChildren": {},[m
[32m+[m[32m  "_requested": {[m
[32m+[m[32m    "type": "range",[m
[32m+[m[32m    "registry": true,[m
[32m+[m[32m    "raw": "async-limiter@~1.0.0",[m
[32m+[m[32m    "name": "async-limiter",[m
[32m+[m[32m    "escapedName": "async-limiter",[m
[32m+[m[32m    "rawSpec": "~1.0.0",[m
[32m+[m[32m    "saveSpec": null,[m
[32m+[m[32m    "fetchSpec": "~1.0.0"[m
[32m+[m[32m  },[m
[32m+[m[32m  "_requiredBy": [[m
[32m+[m[32m    "/ws"[m
[32m+[m[32m  ],[m
[32m+[m[32m  "_resolved": "https://registry.npmjs.org/async-limiter/-/async-limiter-1.0.1.tgz",[m
[32m+[m[32m  "_shasum": "dd379e94f0db8310b08291f9d64c3209766617fd",[m
[32m+[m[32m  "_spec": "async-limiter@~1.0.0",[m
[32m+[m[32m  "_where": "C:\\Users\\jojo2\\Documents\\Discord Bots\\Discord-Basic-Bot\\node_modules\\ws",[m
[32m+[m[32m  "author": {[m
[32m+[m[32m    "name": "Samuel Reed"[m
[32m+[m[32m  },[m
[32m+[m[32m  "bugs": {[m
[32m+[m[32m    "url": "https://github.com/strml/async-limiter/issues"[m
[32m+[m[32m  },[m
[32m+[m[32m  "bundleDependencies": false,[m
[32m+[m[32m  "dependencies": {},[m
[32m+[m[32m  "deprecated": false,[m
[32m+[m[32m  "description": "asynchronous function queue with adjustable concurrency",[m
[32m+[m[32m  "devDependencies": {[m
[32m+[m[32m    "coveralls": "^3.0.3",[m
[32m+[m[32m    "eslint": "^5.16.0",[m
[32m+[m[32m    "eslint-plugin-mocha": "^5.3.0",[m
[32m+[m[32m    "intelli-espower-loader": "^1.0.1",[m
[32m+[m[32m    "mocha": "^6.1.4",[m
[32m+[m[32m    "nyc": "^14.1.1",[m
[32m+[m[32m    "power-assert": "^1.6.1"[m
[32m+[m[32m  },[m
[32m+[m[32m  "homepage": "https://github.com/strml/async-limiter#readme",[m
[32m+[m[32m  "keywords": [[m
[32m+[m[32m    "throttle",[m
[32m+[m[32m    "async",[m
[32m+[m[32m    "limiter",[m
[32m+[m[32m    "asynchronous",[m
[32m+[m[32m    "job",[m
[32m+[m[32m    "task",[m
[32m+[m[32m    "concurrency",[m
[32m+[m[32m    "concurrent"[m
[32m+[m[32m  ],[m
[32m+[m[32m  "license": "MIT",[m
[32m+[m[32m  "name": "async-limiter",[m
[32m+[m[32m  "repository": {[m
[32m+[m[32m    "type": "git",[m
[32m+[m[32m    "url": "git+https://github.com/strml/async-limiter.git"[m
[32m+[m[32m  },[m
[32m+[m[32m  "scripts": {[m
[32m+[m[32m    "coverage": "nyc npm test && nyc report --reporter=text-lcov | coveralls",[m
[32m+[m[32m    "example": "node example",[m
[32m+[m[32m    "lint": "eslint .",[m
[32m+[m[32m    "test": "mocha --require intelli-espower-loader test/",[m
[32m+[m[32m    "travis": "npm run lint && npm run test"[m
[32m+[m[32m  },[m
[32m+[m[32m  "version": "1.0.1"[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/async-limiter/readme.md b/node_modules/async-limiter/readme.md[m
[1mnew file mode 100644[m
[1mindex 0000000..fcaa22f[m
[1m--- /dev/null[m
[1m+++ b/node_modules/async-limiter/readme.md[m
[36m@@ -0,0 +1,132 @@[m
[32m+[m[32m# Async-Limiter[m
[32m+[m
[32m+[m[32mA module for limiting concurrent asynchronous actions in flight. Forked from [queue](https://github.com/jessetane/queue).[m
[32m+[m
[32m+[m[32m[![npm](http://img.shields.io/npm/v/async-limiter.svg?style=flat-square)](http://www.npmjs.org/async-limiter)[m
[32m+[m[32m[![tests](https://img.shields.io/travis/STRML/async-limiter.svg?style=flat-square&branch=master)](https://travis-ci.org/STRML/async-limiter)[m
[32m+[m[32m[![coverage](https://img.shields.io/coveralls/STRML/async-limiter.svg?style=flat-square&branch=master)](https://coveralls.io/r/STRML/async-limiter)[m
[32m+[m
[32m+[m[32mThis module exports a class `Limiter` that implements some of the `Array` API.[m
[32m+[m[32mPass async functions (ones that accept a callback or return a promise) to an instance's additive array methods.[m
[32m+[m
[32m+[m[32m## Motivation[m
[32m+[m
[32m+[m[32mCertain functions, like `zlib`, have [undesirable behavior](https://github.com/nodejs/node/issues/8871#issuecomment-250915913) when[m
[32m+[m[32mrun at infinite concurrency.[m
[32m+[m
[32m+[m[32mIn this case, it is actually faster, and takes far less memory, to limit concurrency.[m
[32m+[m
[32m+[m[32mThis module should do the absolute minimum work necessary to queue up functions. PRs are welcome that would[m
[32m+[m[32mmake this module faster or lighter, but new functionality is not desired.[m
[32m+[m
[32m+[m[32mStyle should confirm to nodejs/node style.[m
[32m+[m
[32m+[m[32m## Example[m
[32m+[m
[32m+[m[32m``` javascript[m
[32m+[m[32mvar Limiter = require('async-limiter')[m
[32m+[m
[32m+[m[32mvar t = new Limiter({concurrency: 2});[m
[32m+[m[32mvar results = [][m
[32m+[m
[32m+[m[32m// add jobs using the familiar Array API[m
[32m+[m[32mt.push(function (cb) {[m
[32m+[m[32m  results.push('two')[m
[32m+[m[32m  cb()[m
[32m+[m[32m})[m
[32m+[m
[32m+[m[32mt.push([m
[32m+[m[32m  function (cb) {[m
[32m+[m[32m    results.push('four')[m
[32m+[m[32m    cb()[m
[32m+[m[32m  },[m
[32m+[m[32m  function (cb) {[m
[32m+[m[32m    results.push('five')[m
[32m+[m[32m    cb()[m
[32m+[m[32m  }[m
[32m+[m[32m)[m
[32m+[m
[32m+[m[32mt.unshift(function (cb) {[m
[32m+[m[32m  results.push('one')[m
[32m+[m[32m  cb()[m
[32m+[m[32m})[m
[32m+[m
[32m+[m[32mt.splice(2, 0, function (cb) {[m
[32m+[m[32m  results.push('three')[m
[32m+[m[32m  cb()[m
[32m+[m[32m})[m
[32m+[m
[32m+[m[32m// Jobs run automatically. If you want a callback when all are done,[m
[32m+[m[32m// call 'onDone()'.[m
[32m+[m[32mt.onDone(function () {[m
[32m+[m[32m  console.log('all done:', results)[m
[32m+[m[32m})[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## Zlib Example[m
[32m+[m
[32m+[m[32m```js[m
[32m+[m[32mconst zlib = require('zlib');[m
[32m+[m[32mconst Limiter = require('async-limiter');[m
[32m+[m
[32m+[m[32mconst message = {some: "data"};[m
[32m+[m[32mconst payload = new Buffer(JSON.stringify(message));[m
[32m+[m
[32m+[m[32m// Try with different concurrency values to see how this actually[m
[32m+[m[32m// slows significantly with higher concurrency![m
[32m+[m[32m//[m
[32m+[m[32m// 5:        1398.607ms[m
[32m+[m[32m// 10:       1375.668ms[m
[32m+[m[32m// Infinity: 4423.300ms[m
[32m+[m[32m//[m
[32m+[m[32mconst t = new Limiter({concurrency: 5});[m
[32m+[m[32mfunction deflate(payload, cb) {[m
[32m+[m[32m  t.push(function(done) {[m
[32m+[m[32m    zlib.deflate(payload, function(err, buffer) {[m
[32m+[m[32m      done();[m
[32m+[m[32m      cb(err, buffer);[m
[32m+[m[32m    });[m
[32m+[m[32m  });[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mconsole.time('deflate');[m
[32m+[m[32mfor(let i = 0; i < 30000; ++i) {[m
[32m+[m[32m  deflate(payload, function (err, buffer) {});[m
[32m+[m[32m}[m
[32m+[m[32mt.onDone(function() {[m
[32m+[m[32m  console.timeEnd('deflate');[m
[32m+[m[32m});[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## Install[m
[32m+[m
[32m+[m[32m`npm install async-limiter`[m
[32m+[m
[32m+[m[32m## Test[m
[32m+[m
[32m+[m[32m`npm test`[m
[32m+[m
[32m+[m[32m## API[m
[32m+[m
[32m+[m[32m### `var t = new Limiter([opts])`[m
[32m+[m[32mConstructor. `opts` may contain inital values for:[m
[32m+[m[32m* `t.concurrency`[m
[32m+[m
[32m+[m[32m## Instance methods[m
[32m+[m
[32m+[m[32m### `t.onDone(fn)`[m
[32m+[m[32m`fn` will be called once and only once, when the queue is empty.[m
[32m+[m
[32m+[m[32m## Instance methods mixed in from `Array`[m
[32m+[m[32mMozilla has docs on how these methods work [here](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array).[m
[32m+[m[32m### `t.push(element1, ..., elementN)`[m
[32m+[m[32m### `t.unshift(element1, ..., elementN)`[m
[32m+[m[32m### `t.splice(index , howMany[, element1[, ...[, elementN]]])`[m
[32m+[m
[32m+[m[32m## Properties[m
[32m+[m[32m### `t.concurrency`[m
[32m+[m[32mMax number of jobs the queue should process concurrently, defaults to `Infinity`.[m
[32m+[m
[32m+[m[32m### `t.length`[m
[32m+[m[32mJobs pending + jobs to process (readonly).[m
[32m+[m
[1mdiff --git a/node_modules/discord.js/.tern-project b/node_modules/discord.js/.tern-project[m
[1mnew file mode 100644[m
[1mindex 0000000..8f37bf0[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/.tern-project[m
[36m@@ -0,0 +1,21 @@[m
[32m+[m[32m{[m
[32m+[m[32m  "ecmaVersion": 7,[m
[32m+[m[32m  "libs": [],[m
[32m+[m[32m  "loadEagerly": [[m
[32m+[m[32m    "./src/*.js"[m
[32m+[m[32m  ],[m
[32m+[m[32m  "dontLoad": [[m
[32m+[m[32m    "node_modules/**"[m
[32m+[m[32m  ],[m
[32m+[m[32m  "plugins": {[m
[32m+[m[32m    "es_modules": {},[m
[32m+[m[32m    "node": {},[m
[32m+[m[32m    "doc_comment": {[m
[32m+[m[32m      "fullDocs": true,[m
[32m+[m[32m      "strong": true[m
[32m+[m[32m    },[m
[32m+[m[32m    "webpack": {[m
[32m+[m[32m      "configPath": "./webpack.config.js",[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/discord.js/LICENSE b/node_modules/discord.js/LICENSE[m
[1mnew file mode 100644[m
[1mindex 0000000..90cf110[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/LICENSE[m
[36m@@ -0,0 +1,190 @@[m
[32m+[m[32m                                 Apache License[m
[32m+[m[32m                           Version 2.0, January 2004[m
[32m+[m[32m                        http://www.apache.org/licenses/[m
[32m+[m
[32m+[m[32m   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION[m
[32m+[m
[32m+[m[32m   1. Definitions.[m
[32m+[m
[32m+[m[32m      "License" shall mean the terms and conditions for use, reproduction,[m
[32m+[m[32m      and distribution as defined by Sections 1 through 9 of this document.[m
[32m+[m
[32m+[m[32m      "Licensor" shall mean the copyright owner or entity authorized by[m
[32m+[m[32m      the copyright owner that is granting the License.[m
[32m+[m
[32m+[m[32m      "Legal Entity" shall mean the union of the acting entity and all[m
[32m+[m[32m      other entities that control, are controlled by, or are under common[m
[32m+[m[32m      control with that entity. For the purposes of this definition,[m
[32m+[m[32m      "control" means (i) the power, direct or indirect, to cause the[m
[32m+[m[32m      direction or management of such entity, whether by contract or[m
[32m+[m[32m      otherwise, or (ii) ownership of fifty percent (50%) or more of the[m
[32m+[m[32m      outstanding shares, or (iii) beneficial ownership of such entity.[m
[32m+[m
[32m+[m[32m      "You" (or "Your") shall mean an individual or Legal Entity[m
[32m+[m[32m      exercising permissions granted by this License.[m
[32m+[m
[32m+[m[32m      "Source" form shall mean the preferred form for making modifications,[m
[32m+[m[32m      including but not limited to software source code, documentation[m
[32m+[m[32m      source, and configuration files.[m
[32m+[m
[32m+[m[32m      "Object" form shall mean any form resulting from mechanical[m
[32m+[m[32m      transformation or translation of a Source form, including but[m
[32m+[m[32m      not limited to compiled object code, generated documentation,[m
[32m+[m[32m      and conversions to other media types.[m
[32m+[m
[32m+[m[32m      "Work" shall mean the work of authorship, whether in Source or[m
[32m+[m[32m      Object form, made available under the License, as indicated by a[m
[32m+[m[32m      copyright notice that is included in or attached to the work[m
[32m+[m[32m      (an example is provided in the Appendix below).[m
[32m+[m
[32m+[m[32m      "Derivative Works" shall mean any work, whether in Source or Object[m
[32m+[m[32m      form, that is based on (or derived from) the Work and for which the[m
[32m+[m[32m      editorial revisions, annotations, elaborations, or other modifications[m
[32m+[m[32m      represent, as a whole, an original work of authorship. For the purposes[m
[32m+[m[32m      of this License, Derivative Works shall not include works that remain[m
[32m+[m[32m      separable from, or merely link (or bind by name) to the interfaces of,[m
[32m+[m[32m      the Work and Derivative Works thereof.[m
[32m+[m
[32m+[m[32m      "Contribution" shall mean any work of authorship, including[m
[32m+[m[32m      the original version of the Work and any modifications or additions[m
[32m+[m[32m      to that Work or Derivative Works thereof, that is intentionally[m
[32m+[m[32m      submitted to Licensor for inclusion in the Work by the copyright owner[m
[32m+[m[32m      or by an individual or Legal Entity authorized to submit on behalf of[m
[32m+[m[32m      the copyright owner. For the purposes of this definition, "submitted"[m
[32m+[m[32m      means any form of electronic, verbal, or written communication sent[m
[32m+[m[32m      to the Licensor or its representatives, including but not limited to[m
[32m+[m[32m      communication on electronic mailing lists, source code control systems,[m
[32m+[m[32m      and issue tracking systems that are managed by, or on behalf of, the[m
[32m+[m[32m      Licensor for the purpose of discussing and improving the Work, but[m
[32m+[m[32m      excluding communication that is conspicuously marked or otherwise[m
[32m+[m[32m      designated in writing by the copyright owner as "Not a Contribution."[m
[32m+[m
[32m+[m[32m      "Contributor" shall mean Licensor and any individual or Legal Entity[m
[32m+[m[32m      on behalf of whom a Contribution has been received by Licensor and[m
[32m+[m[32m      subsequently incorporated within the Work.[m
[32m+[m
[32m+[m[32m   2. Grant of Copyright License. Subject to the terms and conditions of[m
[32m+[m[32m      this License, each Contributor hereby grants to You a perpetual,[m
[32m+[m[32m      worldwide, non-exclusive, no-charge, royalty-free, irrevocable[m
[32m+[m[32m      copyright license to reproduce, prepare Derivative Works of,[m
[32m+[m[32m      publicly display, publicly perform, sublicense, and distribute the[m
[32m+[m[32m      Work and such Derivative Works in Source or Object form.[m
[32m+[m
[32m+[m[32m   3. Grant of Patent License. Subject to the terms and conditions of[m
[32m+[m[32m      this License, each Contributor hereby grants to You a perpetual,[m
[32m+[m[32m      worldwide, non-exclusive, no-charge, royalty-free, irrevocable[m
[32m+[m[32m      (except as stated in this section) patent license to make, have made,[m
[32m+[m[32m      use, offer to sell, sell, import, and otherwise transfer the Work,[m
[32m+[m[32m      where such license applies only to those patent claims licensable[m
[32m+[m[32m      by such Contributor that are necessarily infringed by their[m
[32m+[m[32m      Contribution(s) alone or by combination of their Contribution(s)[m
[32m+[m[32m      with the Work to which such Contribution(s) was submitted. If You[m
[32m+[m[32m      institute patent litigation against any entity (including a[m
[32m+[m[32m      cross-claim or counterclaim in a lawsuit) alleging that the Work[m
[32m+[m[32m      or a Contribution incorporated within the Work constitutes direct[m
[32m+[m[32m      or contributory patent infringement, then any patent licenses[m
[32m+[m[32m      granted to You under this License for that Work shall terminate[m
[32m+[m[32m      as of the date such litigation is filed.[m
[32m+[m
[32m+[m[32m   4. Redistribution. You may reproduce and distribute copies of the[m
[32m+[m[32m      Work or Derivative Works thereof in any medium, with or without[m
[32m+[m[32m      modifications, and in Source or Object form, provided that You[m
[32m+[m[32m      meet the following conditions:[m
[32m+[m
[32m+[m[32m      (a) You must give any other recipients of the Work or[m
[32m+[m[32m          Derivative Works a copy of this License; and[m
[32m+[m
[32m+[m[32m      (b) You must cause any modified files to carry prominent notices[m
[32m+[m[32m          stating that You changed the files; and[m
[32m+[m
[32m+[m[32m      (c) You must retain, in the Source form of any Derivative Works[m
[32m+[m[32m          that You distribute, all copyright, patent, trademark, and[m
[32m+[m[32m          attribution notices from the Source form of the Work,[m
[32m+[m[32m          excluding those notices that do not pertain to any part of[m
[32m+[m[32m          the Derivative Works; and[m
[32m+[m
[32m+[m[32m      (d) If the Work includes a "NOTICE" text file as part of its[m
[32m+[m[32m          distribution, then any Derivative Works that You distribute must[m
[32m+[m[32m          include a readable copy of the attribution notices contained[m
[32m+[m[32m          within such NOTICE file, excluding those notices that do not[m
[32m+[m[32m          pertain to any part of the Derivative Works, in at least one[m
[32m+[m[32m          of the following places: within a NOTICE text file distributed[m
[32m+[m[32m          as part of the Derivative Works; within the Source form or[m
[32m+[m[32m          documentation, if provided along with the Derivative Works; or,[m
[32m+[m[32m          within a display generated by the Derivative Works, if and[m
[32m+[m[32m          wherever such third-party notices normally appear. The contents[m
[32m+[m[32m          of the NOTICE file are for informational purposes only and[m
[32m+[m[32m          do not modify the License. You may add Your own attribution[m
[32m+[m[32m          notices within Derivative Works that You distribute, alongside[m
[32m+[m[32m          or as an addendum to the NOTICE text from the Work, provided[m
[32m+[m[32m          that such additional attribution notices cannot be construed[m
[32m+[m[32m          as modifying the License.[m
[32m+[m
[32m+[m[32m      You may add Your own copyright statement to Your modifications and[m
[32m+[m[32m      may provide additional or different license terms and conditions[m
[32m+[m[32m      for use, reproduction, or distribution of Your modifications, or[m
[32m+[m[32m      for any such Derivative Works as a whole, provided Your use,[m
[32m+[m[32m      reproduction, and distribution of the Work otherwise complies with[m
[32m+[m[32m      the conditions stated in this License.[m
[32m+[m
[32m+[m[32m   5. Submission of Contributions. Unless You explicitly state otherwise,[m
[32m+[m[32m      any Contribution intentionally submitted for inclusion in the Work[m
[32m+[m[32m      by You to the Licensor shall be under the terms and conditions of[m
[32m+[m[32m      this License, without any additional terms or conditions.[m
[32m+[m[32m      Notwithstanding the above, nothing herein shall supersede or modify[m
[32m+[m[32m      the terms of any separate license agreement you may have executed[m
[32m+[m[32m      with Licensor regarding such Contributions.[m
[32m+[m
[32m+[m[32m   6. Trademarks. This License does not grant permission to use the trade[m
[32m+[m[32m      names, trademarks, service marks, or product names of the Licensor,[m
[32m+[m[32m      except as required for reasonable and customary use in describing the[m
[32m+[m[32m      origin of the Work and reproducing the content of the NOTICE file.[m
[32m+[m
[32m+[m[32m   7. Disclaimer of Warranty. Unless required by applicable law or[m
[32m+[m[32m      agreed to in writing, Licensor provides the Work (and each[m
[32m+[m[32m      Contributor provides its Contributions) on an "AS IS" BASIS,[m
[32m+[m[32m      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or[m
[32m+[m[32m      implied, including, without limitation, any warranties or conditions[m
[32m+[m[32m      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A[m
[32m+[m[32m      PARTICULAR PURPOSE. You are solely responsible for determining the[m
[32m+[m[32m      appropriateness of using or redistributing the Work and assume any[m
[32m+[m[32m      risks associated with Your exercise of permissions under this License.[m
[32m+[m
[32m+[m[32m   8. Limitation of Liability. In no event and under no legal theory,[m
[32m+[m[32m      whether in tort (including negligence), contract, or otherwise,[m
[32m+[m[32m      unless required by applicable law (such as deliberate and grossly[m
[32m+[m[32m      negligent acts) or agreed to in writing, shall any Contributor be[m
[32m+[m[32m      liable to You for damages, including any direct, indirect, special,[m
[32m+[m[32m      incidental, or consequential damages of any character arising as a[m
[32m+[m[32m      result of this License or out of the use or inability to use the[m
[32m+[m[32m      Work (including but not limited to damages for loss of goodwill,[m
[32m+[m[32m      work stoppage, computer failure or malfunction, or any and all[m
[32m+[m[32m      other commercial damages or losses), even if such Contributor[m
[32m+[m[32m      has been advised of the possibility of such damages.[m
[32m+[m
[32m+[m[32m   9. Accepting Warranty or Additional Liability. While redistributing[m
[32m+[m[32m      the Work or Derivative Works thereof, You may choose to offer,[m
[32m+[m[32m      and charge a fee for, acceptance of support, warranty, indemnity,[m
[32m+[m[32m      or other liability obligations and/or rights consistent with this[m
[32m+[m[32m      License. However, in accepting such obligations, You may act only[m
[32m+[m[32m      on Your own behalf and on Your sole responsibility, not on behalf[m
[32m+[m[32m      of any other Contributor, and only if You agree to indemnify,[m
[32m+[m[32m      defend, and hold each Contributor harmless for any liability[m
[32m+[m[32m      incurred by, or claims asserted against, such Contributor by reason[m
[32m+[m[32m      of your accepting any such warranty or additional liability.[m
[32m+[m
[32m+[m[32m   END OF TERMS AND CONDITIONS[m
[32m+[m
[32m+[m[32m   Copyright 2017 Amish Shah[m
[32m+[m
[32m+[m[32m   Licensed under the Apache License, Version 2.0 (the "License");[m
[32m+[m[32m   you may not use this file except in compliance with the License.[m
[32m+[m[32m   You may obtain a copy of the License at[m
[32m+[m
[32m+[m[32m       http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m
[32m+[m[32m   Unless required by applicable law or agreed to in writing, software[m
[32m+[m[32m   distributed under the License is distributed on an "AS IS" BASIS,[m
[32m+[m[32m   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.[m
[32m+[m[32m   See the License for the specific language governing permissions and[m
[32m+[m[32m   limitations under the License.[m
[1mdiff --git a/node_modules/discord.js/README.md b/node_modules/discord.js/README.md[m
[1mnew file mode 100644[m
[1mindex 0000000..e75f670[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/README.md[m
[36m@@ -0,0 +1,87 @@[m
[32m+[m[32m<div align="center">[m
[32m+[m[32m  <br />[m
[32m+[m[32m  <p>[m
[32m+[m[32m    <a href="https://discord.js.org"><img src="https://discord.js.org/static/logo.svg" width="546" alt="discord.js" /></a>[m
[32m+[m[32m  </p>[m
[32m+[m[32m  <br />[m
[32m+[m[32m  <p>[m
[32m+[m[32m    <a href="https://discord.gg/bRCvFy9"><img src="https://discordapp.com/api/guilds/222078108977594368/embed.png" alt="Discord server" /></a>[m
[32m+[m[32m    <a href="https://www.npmjs.com/package/discord.js"><img src="https://img.shields.io/npm/v/discord.js.svg?maxAge=3600" alt="NPM version" /></a>[m
[32m+[m[32m    <a href="https://www.npmjs.com/package/discord.js"><img src="https://img.shields.io/npm/dt/discord.js.svg?maxAge=3600" alt="NPM downloads" /></a>[m
[32m+[m[32m    <a href="https://travis-ci.org/discordjs/discord.js"><img src="https://travis-ci.org/discordjs/discord.js.svg" alt="Build status" /></a>[m
[32m+[m[32m    <a href="https://david-dm.org/discordjs/discord.js"><img src="https://img.shields.io/david/discordjs/discord.js.svg?maxAge=3600" alt="Dependencies" /></a>[m
[32m+[m[32m  </p>[m
[32m+[m[32m  <p>[m
[32m+[m[32m    <a href="https://nodei.co/npm/discord.js/"><img src="https://nodei.co/npm/discord.js.png?downloads=true&stars=true" alt="NPM info" /></a>[m
[32m+[m[32m  </p>[m
[32m+[m[32m</div>[m
[32m+[m
[32m+[m[32m## About[m
[32m+[m[32mdiscord.js is a powerful [node.js](https://nodejs.org) module that allows you to interact with the[m
[32m+[m[32m[Discord API](https://discordapp.com/developers/docs/intro) very easily.[m
[32m+[m
[32m+[m[32m- Object-oriented[m
[32m+[m[32m- Predictable abstractions[m
[32m+[m[32m- Performant[m
[32m+[m[32m- 100% coverage of the Discord API[m
[32m+[m
[32m+[m[32m## Installation[m
[32m+[m[32m**Node.js 6.0.0 or newer is required.**[m[41m  [m
[32m+[m[32mIgnore any warnings about unmet peer dependencies, as they're all optional.[m
[32m+[m
[32m+[m[32mWithout voice support: `npm install discord.js`[m[41m  [m
[32m+[m[32mWith voice support ([node-opus](https://www.npmjs.com/package/node-opus)): `npm install discord.js node-opus`[m[41m  [m
[32m+[m[32mWith voice support ([opusscript](https://www.npmjs.com/package/opusscript)): `npm install discord.js opusscript`[m
[32m+[m
[32m+[m[32m### Audio engines[m
[32m+[m[32mThe preferred audio engine is node-opus, as it performs significantly better than opusscript. When both are available, discord.js will automatically choose node-opus.[m
[32m+[m[32mUsing opusscript is only recommended for development environments where node-opus is tough to get working.[m
[32m+[m[32mFor production bots, using node-opus should be considered a necessity, especially if they're going to be running on multiple servers.[m
[32m+[m
[32m+[m[32m### Optional packages[m
[32m+[m[32m- [bufferutil](https://www.npmjs.com/package/bufferutil) to greatly speed up the WebSocket when *not* using uws (`npm install bufferutil`)[m
[32m+[m[32m- [erlpack](https://github.com/hammerandchisel/erlpack) for significantly faster WebSocket data (de)serialisation (`npm install hammerandchisel/erlpack`)[m
[32m+[m[32m- One of the following packages can be installed for faster voice packet encryption and decryption:[m
[32m+[m[32m    - [sodium](https://www.npmjs.com/package/sodium) (`npm install sodium`)[m
[32m+[m[32m    - [libsodium.js](https://www.npmjs.com/package/libsodium-wrappers) (`npm install libsodium-wrappers`)[m
[32m+[m[32m- [uws](https://www.npmjs.com/package/@discordjs/uws) for a much faster WebSocket connection (`npm install @discordjs/uws`)[m
[32m+[m
[32m+[m[32m## Example usage[m
[32m+[m[32m```js[m
[32m+[m[32mconst Discord = require('discord.js');[m
[32m+[m[32mconst client = new Discord.Client();[m
[32m+[m
[32m+[m[32mclient.on('ready', () => {[m
[32m+[m[32m  console.log(`Logged in as ${client.user.tag}!`);[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mclient.on('message', msg => {[m
[32m+[m[32m  if (msg.content === 'ping') {[m
[32m+[m[32m    msg.reply('pong');[m
[32m+[m[32m  }[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mclient.login('token');[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## Links[m
[32m+[m[32m* [Website](https://discord.js.org/) ([source](https://github.com/discordjs/website))[m
[32m+[m[32m* [Documentation](https://discord.js.org/#/docs)[m
[32m+[m[32m* [Guide](https://discordjs.guide/) ([source](https://github.com/discordjs/guide))[m
[32m+[m[32m* [Discord.js Discord server](https://discord.gg/bRCvFy9)[m
[32m+[m[32m* [Discord API Discord server](https://discord.gg/discord-api)[m
[32m+[m[32m* [GitHub](https://github.com/discordjs/discord.js)[m
[32m+[m[32m* [NPM](https://www.npmjs.com/package/discord.js)[m
[32m+[m[32m* [Related libraries](https://discordapi.com/unofficial/libs.html)[m
[32m+[m
[32m+[m[32m### Extensions[m
[32m+[m[32m* [RPC](https://www.npmjs.com/package/discord-rpc) ([source](https://github.com/discordjs/RPC))[m
[32m+[m
[32m+[m[32m## Contributing[m
[32m+[m[32mBefore creating an issue, please ensure that it hasn't already been reported/suggested, and double-check the[m
[32m+[m[32m[documentation](https://discord.js.org/#/docs).[m[41m  [m
[32m+[m[32mSee [the contribution guide](https://github.com/discordjs/discord.js/blob/master/.github/CONTRIBUTING.md) if you'd like to submit a PR.[m
[32m+[m
[32m+[m[32m## Help[m
[32m+[m[32mIf you don't understand something in the documentation, you are experiencing problems, or you just need a gentle[m
[32m+[m[32mnudge in the right direction, please don't hesitate to join our official [Discord.js Server](https://discord.gg/bRCvFy9).[m
[1mdiff --git a/node_modules/discord.js/browser.js b/node_modules/discord.js/browser.js[m
[1mnew file mode 100644[m
[1mindex 0000000..9f9341e[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/browser.js[m
[36m@@ -0,0 +1,9 @@[m
[32m+[m[32mconst browser = typeof window !== 'undefined';[m
[32m+[m[32mconst webpack = !!process.env.__DISCORD_WEBPACK__;[m
[32m+[m
[32m+[m[32mconst Discord = require('./');[m
[32m+[m
[32m+[m[32mmodule.exports = Discord;[m
[32m+[m[32mif (browser && webpack) window.Discord = Discord; // eslint-disable-line no-undef[m
[32m+[m[32m// eslint-disable-next-line no-console[m
[32m+[m[32melse if (!browser) console.warn('Warning: Attempting to use browser version of Discord.js in a non-browser environment!');[m
[1mdiff --git a/node_modules/discord.js/package.json b/node_modules/discord.js/package.json[m
[1mnew file mode 100644[m
[1mindex 0000000..90ad3d5[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/package.json[m
[36m@@ -0,0 +1,150 @@[m
[32m+[m[32m{[m
[32m+[m[32m  "_from": "discord.js",[m
[32m+[m[32m  "_id": "discord.js@11.5.1",[m
[32m+[m[32m  "_inBundle": false,[m
[32m+[m[32m  "_integrity": "sha512-tGhV5xaZXE3Z+4uXJb3hYM6gQ1NmnSxp9PClcsSAYFVRzH6AJH74040mO3afPDMWEAlj8XsoPXXTJHTxesqcGw==",[m
[32m+[m[32m  "_location": "/discord.js",[m
[32m+[m[32m  "_phantomChildren": {},[m
[32m+[m[32m  "_requested": {[m
[32m+[m[32m    "type": "tag",[m
[32m+[m[32m    "registry": true,[m
[32m+[m[32m    "raw": "discord.js",[m
[32m+[m[32m    "name": "discord.js",[m
[32m+[m[32m    "escapedName": "discord.js",[m
[32m+[m[32m    "rawSpec": "",[m
[32m+[m[32m    "saveSpec": null,[m
[32m+[m[32m    "fetchSpec": "latest"[m
[32m+[m[32m  },[m
[32m+[m[32m  "_requiredBy": [[m
[32m+[m[32m    "#USER",[m
[32m+[m[32m    "/"[m
[32m+[m[32m  ],[m
[32m+[m[32m  "_resolved": "https://registry.npmjs.org/discord.js/-/discord.js-11.5.1.tgz",[m
[32m+[m[32m  "_shasum": "910fb9f6410328581093e044cafb661783a4d9e8",[m
[32m+[m[32m  "_spec": "discord.js",[m
[32m+[m[32m  "_where": "C:\\Users\\jojo2\\Documents\\Discord Bots\\Discord-Basic-Bot",[m
[32m+[m[32m  "author": {[m
[32m+[m[32m    "name": "Amish Shah",[m
[32m+[m[32m    "email": "amishshah.2k@gmail.com"[m
[32m+[m[32m  },[m
[32m+[m[32m  "browser": {[m
[32m+[m[32m    "ws": false,[m
[32m+[m[32m    "uws": false,[m
[32m+[m[32m    "@discordjs/uws": false,[m
[32m+[m[32m    "erlpack": false,[m
[32m+[m[32m    "prism-media": false,[m
[32m+[m[32m    "opusscript": false,[m
[32m+[m[32m    "node-opus": false,[m
[32m+[m[32m    "tweetnacl": false,[m
[32m+[m[32m    "sodium": false,[m
[32m+[m[32m    "src/sharding/Shard.js": false,[m
[32m+[m[32m    "src/sharding/ShardClientUtil.js": false,[m
[32m+[m[32m    "src/sharding/ShardingManager.js": false,[m
[32m+[m[32m    "src/client/voice/dispatcher/StreamDispatcher.js": false,[m
[32m+[m[32m    "src/client/voice/opus/BaseOpusEngine.js": false,[m
[32m+[m[32m    "src/client/voice/opus/NodeOpusEngine.js": false,[m
[32m+[m[32m    "src/client/voice/opus/OpusEngineList.js": false,[m
[32m+[m[32m    "src/client/voice/opus/OpusScriptEngine.js": false,[m
[32m+[m[32m    "src/client/voice/pcm/ConverterEngine.js": false,[m
[32m+[m[32m    "src/client/voice/pcm/ConverterEngineList.js": false,[m
[32m+[m[32m    "src/client/voice/pcm/FfmpegConverterEngine.js": false,[m
[32m+[m[32m    "src/client/voice/player/AudioPlayer.js": false,[m
[32m+[m[32m    "src/client/voice/receiver/VoiceReadable.js": false,[m
[32m+[m[32m    "src/client/voice/receiver/VoiceReceiver.js": false,[m
[32m+[m[32m    "src/client/voice/util/Secretbox.js": false,[m
[32m+[m[32m    "src/client/voice/util/SecretKey.js": false,[m
[32m+[m[32m    "src/client/voice/util/VolumeInterface.js": false,[m
[32m+[m[32m    "src/client/voice/ClientVoiceManager.js": false,[m
[32m+[m[32m    "src/client/voice/VoiceBroadcast.js": false,[m
[32m+[m[32m    "src/client/voice/VoiceConnection.js": false,[m
[32m+[m[32m    "src/client/voice/VoiceUDPClient.js": false,[m
[32m+[m[32m    "src/client/voice/VoiceWebSocket.js": false[m
[32m+[m[32m  },[m
[32m+[m[32m  "bugs": {[m
[32m+[m[32m    "url": "https://github.com/discordjs/discord.js/issues"[m
[32m+[m[32m  },[m
[32m+[m[32m  "bundleDependencies": false,[m
[32m+[m[32m  "dependencies": {[m
[32m+[m[32m    "long": "^4.0.0",[m
[32m+[m[32m    "prism-media": "^0.0.3",[m
[32m+[m[32m    "snekfetch": "^3.6.4",[m
[32m+[m[32m    "tweetnacl": "^1.0.0",[m
[32m+[m[32m    "ws": "^6.0.0"[m
[32m+[m[32m  },[m
[32m+[m[32m  "deprecated": false,[m
[32m+[m[32m  "description": "A powerful library for interacting with the Discord API",[m
[32m+[m[32m  "devDependencies": {[m
[32m+[m[32m    "@types/node": "^9.4.6",[m
[32m+[m[32m    "discord.js-docgen": "github:discordjs/docgen",[m
[32m+[m[32m    "eslint": "^5.4.0",[m
[32m+[m[32m    "parallel-webpack": "^2.3.0",[m
[32m+[m[32m    "tslint": "^3.15.1",[m
[32m+[m[32m    "tslint-config-typings": "^0.2.4",[m
[32m+[m[32m    "typescript": "^3.0.1",[m
[32m+[m[32m    "uglifyjs-webpack-plugin": "^1.3.0",[m
[32m+[m[32m    "webpack": "^4.17.0"[m
[32m+[m[32m  },[m
[32m+[m[32m  "engines": {[m
[32m+[m[32m    "node": ">=6.0.0"[m
[32m+[m[32m  },[m
[32m+[m[32m  "homepage": "https://github.com/discordjs/discord.js#readme",[m
[32m+[m[32m  "keywords": [[m
[32m+[m[32m    "discord",[m
[32m+[m[32m    "api",[m
[32m+[m[32m    "bot",[m
[32m+[m[32m    "client",[m
[32m+[m[32m    "node",[m
[32m+[m[32m    "discordapp"[m
[32m+[m[32m  ],[m
[32m+[m[32m  "license": "Apache-2.0",[m
[32m+[m[32m  "main": "./src/index",[m
[32m+[m[32m  "name": "discord.js",[m
[32m+[m[32m  "peerDependencies": {[m
[32m+[m[32m    "bufferutil": "^4.0.0",[m
[32m+[m[32m    "erlpack": "discordapp/erlpack",[m
[32m+[m[32m    "libsodium-wrappers": "^0.7.3",[m
[32m+[m[32m    "node-opus": "^0.2.7",[m
[32m+[m[32m    "opusscript": "^0.0.6",[m
[32m+[m[32m    "sodium": "^2.0.3",[m
[32m+[m[32m    "@discordjs/uws": "^10.149.0"[m
[32m+[m[32m  },[m
[32m+[m[32m  "peerDependenciesMeta": {[m
[32m+[m[32m    "bufferutil": {[m
[32m+[m[32m      "optional": true[m
[32m+[m[32m    },[m
[32m+[m[32m    "erlpack": {[m
[32m+[m[32m      "optional": true[m
[32m+[m[32m    },[m
[32m+[m[32m    "node-opus": {[m
[32m+[m[32m      "optional": true[m
[32m+[m[32m    },[m
[32m+[m[32m    "opusscript": {[m
[32m+[m[32m      "optional": true[m
[32m+[m[32m    },[m
[32m+[m[32m    "sodium": {[m
[32m+[m[32m      "optional": true[m
[32m+[m[32m    },[m
[32m+[m[32m    "libsodium-wrappers": {[m
[32m+[m[32m      "optional": true[m
[32m+[m[32m    },[m
[32m+[m[32m    "uws": {[m
[32m+[m[32m      "optional": true[m
[32m+[m[32m    }[m
[32m+[m[32m  },[m
[32m+[m[32m  "repository": {[m
[32m+[m[32m    "type": "git",[m
[32m+[m[32m    "url": "git+https://github.com/discordjs/discord.js.git"[m
[32m+[m[32m  },[m
[32m+[m[32m  "runkitExampleFilename": "./docs/examples/ping.js",[m
[32m+[m[32m  "scripts": {[m
[32m+[m[32m    "docs": "docgen --source src --custom docs/index.yml --output docs/docs.json",[m
[32m+[m[32m    "docs:test": "docgen --source src --custom docs/index.yml",[m
[32m+[m[32m    "lint": "eslint src",[m
[32m+[m[32m    "lint:fix": "eslint --fix src",[m
[32m+[m[32m    "lint:typings": "tslint typings/index.d.ts typings/discord.js-test.ts",[m
[32m+[m[32m    "test": "npm run lint && npm run docs:test",[m
[32m+[m[32m    "webpack": "parallel-webpack"[m
[32m+[m[32m  },[m
[32m+[m[32m  "types": "./typings/index.d.ts",[m
[32m+[m[32m  "version": "11.5.1"[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/discord.js/src/client/Client.js b/node_modules/discord.js/src/client/Client.js[m
[1mnew file mode 100644[m
[1mindex 0000000..5698bc8[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/Client.js[m
[36m@@ -0,0 +1,564 @@[m
[32m+[m[32mconst EventEmitter = require('events');[m
[32m+[m[32mconst Constants = require('../util/Constants');[m
[32m+[m[32mconst Permissions = require('../util/Permissions');[m
[32m+[m[32mconst Util = require('../util/Util');[m
[32m+[m[32mconst RESTManager = require('./rest/RESTManager');[m
[32m+[m[32mconst ClientDataManager = require('./ClientDataManager');[m
[32m+[m[32mconst ClientManager = require('./ClientManager');[m
[32m+[m[32mconst ClientDataResolver = require('./ClientDataResolver');[m
[32m+[m[32mconst ClientVoiceManager = require('./voice/ClientVoiceManager');[m
[32m+[m[32mconst WebSocketManager = require('./websocket/WebSocketManager');[m
[32m+[m[32mconst ActionsManager = require('./actions/ActionsManager');[m
[32m+[m[32mconst Collection = require('../util/Collection');[m
[32m+[m[32mconst Presence = require('../structures/Presence').Presence;[m
[32m+[m[32mconst ShardClientUtil = require('../sharding/ShardClientUtil');[m
[32m+[m[32mconst VoiceBroadcast = require('./voice/VoiceBroadcast');[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * The main hub for interacting with the Discord API, and the starting point for any bot.[m
[32m+[m[32m * @extends {EventEmitter}[m
[32m+[m[32m */[m
[32m+[m[32mclass Client extends EventEmitter {[m
[32m+[m[32m  /**[m
[32m+[m[32m   * @param {ClientOptions} [options] Options for the client[m
[32m+[m[32m   */[m
[32m+[m[32m  constructor(options = {}) {[m
[32m+[m[32m    super();[m
[32m+[m
[32m+[m[32m    // Obtain shard details from environment[m
[32m+[m[32m    if (!options.shardId && 'SHARD_ID' in process.env) options.shardId = Number(process.env.SHARD_ID);[m
[32m+[m[32m    if (!options.shardCount && 'SHARD_COUNT' in process.env) options.shardCount = Number(process.env.SHARD_COUNT);[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The options the client was instantiated with[m
[32m+[m[32m     * @type {ClientOptions}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.options = Util.mergeDefault(Constants.DefaultOptions, options);[m
[32m+[m[32m    this._validateOptions();[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The REST manager of the client[m
[32m+[m[32m     * @type {RESTManager}[m
[32m+[m[32m     * @private[m
[32m+[m[32m     */[m
[32m+[m[32m    this.rest = new RESTManager(this);[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The data manager of the client[m
[32m+[m[32m     * @type {ClientDataManager}[m
[32m+[m[32m     * @private[m
[32m+[m[32m     */[m
[32m+[m[32m    this.dataManager = new ClientDataManager(this);[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The manager of the client[m
[32m+[m[32m     * @type {ClientManager}[m
[32m+[m[32m     * @private[m
[32m+[m[32m     */[m
[32m+[m[32m    this.manager = new ClientManager(this);[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The WebSocket manager of the client[m
[32m+[m[32m     * @type {WebSocketManager}[m
[32m+[m[32m     * @private[m
[32m+[m[32m     */[m
[32m+[m[32m    this.ws = new WebSocketManager(this);[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The data resolver of the client[m
[32m+[m[32m     * @type {ClientDataResolver}[m
[32m+[m[32m     * @private[m
[32m+[m[32m     */[m
[32m+[m[32m    this.resolver = new ClientDataResolver(this);[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The action manager of the client[m
[32m+[m[32m     * @type {ActionsManager}[m
[32m+[m[32m     * @private[m
[32m+[m[32m     */[m
[32m+[m[32m    this.actions = new ActionsManager(this);[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The voice manager of the client (`null` in browsers)[m
[32m+[m[32m     * @type {?ClientVoiceManager}[m
[32m+[m[32m     * @private[m
[32m+[m[32m     */[m
[32m+[m[32m    this.voice = !this.browser ? new ClientVoiceManager(this) : null;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The shard helpers for the client[m
[32m+[m[32m     * (only if the process was spawned as a child, such as from a {@link ShardingManager})[m
[32m+[m[32m     * @type {?ShardClientUtil}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.shard = process.send ? ShardClientUtil.singleton(this) : null;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * All of the {@link User} objects that have been cached at any point, mapped by their IDs[m
[32m+[m[32m     * @type {Collection<Snowflake, User>}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.users = new Collection();[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * All of the guilds the client is currently handling, mapped by their IDs -[m
[32m+[m[32m     * as long as sharding isn't being used, this will be *every* guild the bot is a member of[m
[32m+[m[32m     * @type {Collection<Snowflake, Guild>}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.guilds = new Collection();[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * All of the {@link Channel}s that the client is currently handling, mapped by their IDs -[m
[32m+[m[32m     * as long as sharding isn't being used, this will be *every* channel in *every* guild, and all DM channels[m
[32m+[m[32m     * @type {Collection<Snowflake, Channel>}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.channels = new Collection();[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Presences that have been received for the client user's friends, mapped by user IDs[m
[32m+[m[32m     * <warn>This is only filled when using a user account.</warn>[m
[32m+[m[32m     * @type {Collection<Snowflake, Presence>}[m
[32m+[m[32m     * @deprecated[m
[32m+[m[32m     */[m
[32m+[m[32m    this.presences = new Collection();[m
[32m+[m
[32m+[m[32m    Object.defineProperty(this, 'token', { writable: true });[m
[32m+[m[32m    if (!this.token && 'CLIENT_TOKEN' in process.env) {[m
[32m+[m[32m      /**[m
[32m+[m[32m       * Authorization token for the logged in user/bot[m
[32m+[m[32m       * <warn>This should be kept private at all times.</warn>[m
[32m+[m[32m       * @type {?string}[m
[32m+[m[32m       */[m
[32m+[m[32m      this.token = process.env.CLIENT_TOKEN;[m
[32m+[m[32m    } else {[m
[32m+[m[32m      this.token = null;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * User that the client is logged in as[m
[32m+[m[32m     * @type {?ClientUser}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.user = null;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Time at which the client was last regarded as being in the `READY` state[m
[32m+[m[32m     * (each time the client disconnects and successfully reconnects, this will be overwritten)[m
[32m+[m[32m     * @type {?Date}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.readyAt = null;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Active voice broadcasts that have been created[m
[32m+[m[32m     * @type {VoiceBroadcast[]}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.broadcasts = [];[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Previous heartbeat pings of the websocket (most recent first, limited to three elements)[m
[32m+[m[32m     * @type {number[]}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.pings = [];[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Timeouts set by {@link Client#setTimeout} that are still active[m
[32m+[m[32m     * @type {Set<Timeout>}[m
[32m+[m[32m     * @private[m
[32m+[m[32m     */[m
[32m+[m[32m    this._timeouts = new Set();[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Intervals set by {@link Client#setInterval} that are still active[m
[32m+[m[32m     * @type {Set<Timeout>}[m
[32m+[m[32m     * @private[m
[32m+[m[32m     */[m
[32m+[m[32m    this._intervals = new Set();[m
[32m+[m
[32m+[m[32m    if (this.options.messageSweepInterval > 0) {[m
[32m+[m[32m      this.setInterval(this.sweepMessages.bind(this), this.options.messageSweepInterval * 1000);[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Timestamp of the latest ping's start time[m
[32m+[m[32m   * @type {number}[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  get _pingTimestamp() {[m
[32m+[m[32m    return this.ws.connection ? this.ws.connection.lastPingTimestamp : 0;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Current status of the client's connection to Discord[m
[32m+[m[32m   * @type {Status}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get status() {[m
[32m+[m[32m    return this.ws.connection ? this.ws.connection.status : Constants.Status.IDLE;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * How long it has been since the client last entered the `READY` state in milliseconds[m
[32m+[m[32m   * @type {?number}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get uptime() {[m
[32m+[m[32m    return this.readyAt ? Date.now() - this.readyAt : null;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Average heartbeat ping of the websocket, obtained by averaging the {@link Client#pings} property[m
[32m+[m[32m   * @type {number}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get ping() {[m
[32m+[m[32m    return this.pings.reduce((prev, p) => prev + p, 0) / this.pings.length;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * All active voice connections that have been established, mapped by guild ID[m
[32m+[m[32m   * @type {Collection<Snowflake, VoiceConnection>}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get voiceConnections() {[m
[32m+[m[32m    if (this.browser) return new Collection();[m
[32m+[m[32m    return this.voice.connections;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * All custom emojis that the client has access to, mapped by their IDs[m
[32m+[m[32m   * @type {Collection<Snowflake, Emoji>}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get emojis() {[m
[32m+[m[32m    const emojis = new Collection();[m
[32m+[m[32m    for (const guild of this.guilds.values()) {[m
[32m+[m[32m      for (const emoji of guild.emojis.values()) emojis.set(emoji.id, emoji);[m
[32m+[m[32m    }[m
[32m+[m[32m    return emojis;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Timestamp of the time the client was last `READY` at[m
[32m+[m[32m   * @type {?number}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get readyTimestamp() {[m
[32m+[m[32m    return this.readyAt ? this.readyAt.getTime() : null;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Whether the client is in a browser environment[m
[32m+[m[32m   * @type {boolean}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get browser() {[m
[32m+[m[32m    return typeof window !== 'undefined';[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Creates a voice broadcast.[m
[32m+[m[32m   * @returns {VoiceBroadcast}[m
[32m+[m[32m   */[m
[32m+[m[32m  createVoiceBroadcast() {[m
[32m+[m[32m    const broadcast = new VoiceBroadcast(this);[m
[32m+[m[32m    this.broadcasts.push(broadcast);[m
[32m+[m[32m    return broadcast;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Logs the client in, establishing a websocket connection to Discord.[m
[32m+[m[32m   * <info>Both bot and regular user accounts are supported, but it is highly recommended to use a bot account whenever[m
[32m+[m[32m   * possible. User accounts are subject to harsher ratelimits and other restrictions that don't apply to bot accounts.[m
[32m+[m[32m   * Bot accounts also have access to many features that user accounts cannot utilise. Automating a user account is[m
[32m+[m[32m   * considered a violation of the ToS.</info>[m
[32m+[m[32m   * @param {string} token Token of the account to log in with[m
[32m+[m[32m   * @returns {Promise<string>} Token of the account used[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * client.login('my token')[m
[32m+[m[32m   *  .then(console.log)[m
[32m+[m[32m   *  .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  login(token = this.token) {[m
[32m+[m[32m    return this.rest.methods.login(token);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Logs out, terminates the connection to Discord, and destroys the client.[m
[32m+[m[32m   * @returns {Promise}[m
[32m+[m[32m   */[m
[32m+[m[32m  destroy() {[m
[32m+[m[32m    for (const t of this._timeouts) clearTimeout(t);[m
[32m+[m[32m    for (const i of this._intervals) clearInterval(i);[m
[32m+[m[32m    this._timeouts.clear();[m
[32m+[m[32m    this._intervals.clear();[m
[32m+[m[32m    return this.manager.destroy();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Requests a sync of guild data with Discord.[m
[32m+[m[32m   * <info>This can be done automatically every 30 seconds by enabling {@link ClientOptions#sync}.</info>[m
[32m+[m[32m   * <warn>This is only available when using a user account.</warn>[m
[32m+[m[32m   * @param {Guild[]|Collection<Snowflake, Guild>} [guilds=this.guilds] An array or collection of guilds to sync[m
[32m+[m[32m   * @deprecated[m
[32m+[m[32m   */[m
[32m+[m[32m  syncGuilds(guilds = this.guilds) {[m
[32m+[m[32m    if (this.user.bot) return;[m
[32m+[m[32m    this.ws.send({[m
[32m+[m[32m      op: 12,[m
[32m+[m[32m      d: guilds instanceof Collection ? guilds.keyArray() : guilds.map(g => g.id),[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Obtains a user from Discord, or the user cache if it's already available.[m
[32m+[m[32m   * <warn>This is only available when using a bot account.</warn>[m
[32m+[m[32m   * @param {Snowflake} id ID of the user[m
[32m+[m[32m   * @param {boolean} [cache=true] Whether to cache the new user object if it isn't already[m
[32m+[m[32m   * @returns {Promise<User>}[m
[32m+[m[32m   */[m
[32m+[m[32m  fetchUser(id, cache = true) {[m
[32m+[m[32m    if (this.users.has(id)) return Promise.resolve(this.users.get(id));[m
[32m+[m[32m    return this.rest.methods.getUser(id, cache);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Obtains an invite from Discord.[m
[32m+[m[32m   * @param {InviteResolvable} invite Invite code or URL[m
[32m+[m[32m   * @returns {Promise<Invite>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * client.fetchInvite('https://discord.gg/bRCvFy9')[m
[32m+[m[32m   *   .then(invite => console.log(`Obtained invite with code: ${invite.code}`))[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  fetchInvite(invite) {[m
[32m+[m[32m    const code = this.resolver.resolveInviteCode(invite);[m
[32m+[m[32m    return this.rest.methods.getInvite(code);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Obtains a webhook from Discord.[m
[32m+[m[32m   * @param {Snowflake} id ID of the webhook[m
[32m+[m[32m   * @param {string} [token] Token for the webhook[m
[32m+[m[32m   * @returns {Promise<Webhook>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * client.fetchWebhook('id', 'token')[m
[32m+[m[32m   *   .then(webhook => console.log(`Obtained webhook with name: ${webhook.name}`))[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  fetchWebhook(id, token) {[m
[32m+[m[32m    return this.rest.methods.getWebhook(id, token);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Obtains the available voice regions from Discord.[m
[32m+[m[32m   * @returns {Collection<string, VoiceRegion>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * client.fetchVoiceRegions()[m
[32m+[m[32m   *   .then(regions => console.log(`Available regions are: ${regions.map(region => region.name).join(', ')}`))[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  fetchVoiceRegions() {[m
[32m+[m[32m    return this.rest.methods.fetchVoiceRegions();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sweeps all text-based channels' messages and removes the ones older than the max message lifetime.[m
[32m+[m[32m   * If the message has been edited, the time of the edit is used rather than the time of the original message.[m
[32m+[m[32m   * @param {number} [lifetime=this.options.messageCacheLifetime] Messages that are older than this (in seconds)[m
[32m+[m[32m   * will be removed from the caches. The default is based on {@link ClientOptions#messageCacheLifetime}[m
[32m+[m[32m   * @returns {number} Amount of messages that were removed from the caches,[m
[32m+[m[32m   * or -1 if the message cache lifetime is unlimited[m
[32m+[m[32m   */[m
[32m+[m[32m  sweepMessages(lifetime = this.options.messageCacheLifetime) {[m
[32m+[m[32m    if (typeof lifetime !== 'number' || isNaN(lifetime)) throw new TypeError('The lifetime must be a number.');[m
[32m+[m[32m    if (lifetime <= 0) {[m
[32m+[m[32m      this.emit('debug', 'Didn\'t sweep messages - lifetime is unlimited');[m
[32m+[m[32m      return -1;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    const lifetimeMs = lifetime * 1000;[m
[32m+[m[32m    const now = Date.now();[m
[32m+[m[32m    let channels = 0;[m
[32m+[m[32m    let messages = 0;[m
[32m+[m
[32m+[m[32m    for (const channel of this.channels.values()) {[m
[32m+[m[32m      if (!channel.messages) continue;[m
[32m+[m[32m      channels++;[m
[32m+[m
[32m+[m[32m      messages += channel.messages.sweep([m
[32m+[m[32m        message => now - (message.editedTimestamp || message.createdTimestamp) > lifetimeMs[m
[32m+[m[32m      );[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    this.emit('debug', `Swept ${messages} messages older than ${lifetime} seconds in ${channels} text-based channels`);[m
[32m+[m[32m    return messages;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Obtains the OAuth Application of the bot from Discord.[m
[32m+[m[32m   * <warn>Bots can only fetch their own profile.</warn>[m
[32m+[m[32m   * @param {Snowflake} [id='@me'] ID of application to fetch[m
[32m+[m[32m   * @returns {Promise<OAuth2Application>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * client.fetchApplication()[m
[32m+[m[32m   *   .then(application => console.log(`Obtained application with name: ${application.name}`))[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  fetchApplication(id = '@me') {[m
[32m+[m[32m    if (id !== '@me') process.emitWarning('fetchApplication: use "@me" as an argument', 'DeprecationWarning');[m
[32m+[m[32m    return this.rest.methods.getApplication(id);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Generates a link that can be used to invite the bot to a guild.[m
[32m+[m[32m   * <warn>This is only available when using a bot account.</warn>[m
[32m+[m[32m   * @param {PermissionResolvable} [permissions] Permissions to request[m
[32m+[m[32m   * @returns {Promise<string>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * client.generateInvite(['SEND_MESSAGES', 'MANAGE_GUILD', 'MENTION_EVERYONE'])[m
[32m+[m[32m   *   .then(link => console.log(`Generated bot invite link: ${link}`))[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  generateInvite(permissions) {[m
[32m+[m[32m    permissions = typeof permissions === 'undefined' ? 0 : Permissions.resolve(permissions);[m
[32m+[m[32m    return this.fetchApplication().then(application =>[m
[32m+[m[32m      `https://discordapp.com/oauth2/authorize?client_id=${application.id}&permissions=${permissions}&scope=bot`[m
[32m+[m[32m    );[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets a timeout that will be automatically cancelled if the client is destroyed.[m
[32m+[m[32m   * @param {Function} fn Function to execute[m
[32m+[m[32m   * @param {number} delay Time to wait before executing (in milliseconds)[m
[32m+[m[32m   * @param {...*} args Arguments for the function[m
[32m+[m[32m   * @returns {Timeout}[m
[32m+[m[32m   */[m
[32m+[m[32m  setTimeout(fn, delay, ...args) {[m
[32m+[m[32m    const timeout = setTimeout(() => {[m
[32m+[m[32m      fn(...args);[m
[32m+[m[32m      this._timeouts.delete(timeout);[m
[32m+[m[32m    }, delay);[m
[32m+[m[32m    this._timeouts.add(timeout);[m
[32m+[m[32m    return timeout;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Clears a timeout.[m
[32m+[m[32m   * @param {Timeout} timeout Timeout to cancel[m
[32m+[m[32m   */[m
[32m+[m[32m  clearTimeout(timeout) {[m
[32m+[m[32m    clearTimeout(timeout);[m
[32m+[m[32m    this._timeouts.delete(timeout);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets an interval that will be automatically cancelled if the client is destroyed.[m
[32m+[m[32m   * @param {Function} fn Function to execute[m
[32m+[m[32m   * @param {number} delay Time to wait before executing (in milliseconds)[m
[32m+[m[32m   * @param {...*} args Arguments for the function[m
[32m+[m[32m   * @returns {Timeout}[m
[32m+[m[32m   */[m
[32m+[m[32m  setInterval(fn, delay, ...args) {[m
[32m+[m[32m    const interval = setInterval(fn, delay, ...args);[m
[32m+[m[32m    this._intervals.add(interval);[m
[32m+[m[32m    return interval;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Clears an interval.[m
[32m+[m[32m   * @param {Timeout} interval Interval to cancel[m
[32m+[m[32m   */[m
[32m+[m[32m  clearInterval(interval) {[m
[32m+[m[32m    clearInterval(interval);[m
[32m+[m[32m    this._intervals.delete(interval);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Adds a ping to {@link Client#pings}.[m
[32m+[m[32m   * @param {number} startTime Starting time of the ping[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  _pong(startTime) {[m
[32m+[m[32m    this.pings.unshift(Date.now() - startTime);[m
[32m+[m[32m    if (this.pings.length > 3) this.pings.length = 3;[m
[32m+[m[32m    this.ws.lastHeartbeatAck = true;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Adds/updates a friend's presence in {@link Client#presences}.[m
[32m+[m[32m   * @param {Snowflake} id ID of the user[m
[32m+[m[32m   * @param {Object} presence Raw presence object from Discord[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  _setPresence(id, presence) {[m
[32m+[m[32m    if (this.presences.has(id)) {[m
[32m+[m[32m      this.presences.get(id).update(presence);[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m[32m    this.presences.set(id, new Presence(presence, this));[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Calls {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval} on a script[m
[32m+[m[32m   * with the client as `this`.[m
[32m+[m[32m   * @param {string} script Script to eval[m
[32m+[m[32m   * @returns {*}[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  _eval(script) {[m
[32m+[m[32m    return eval(script);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Validates the client options.[m
[32m+[m[32m   * @param {ClientOptions} [options=this.options] Options to validate[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  _validateOptions(options = this.options) { // eslint-disable-line complexity[m
[32m+[m[32m    if (typeof options.shardCount !== 'number' || isNaN(options.shardCount)) {[m
[32m+[m[32m      throw new TypeError('The shardCount option must be a number.');[m
[32m+[m[32m    }[m
[32m+[m[32m    if (typeof options.shardId !== 'number' || isNaN(options.shardId)) {[m
[32m+[m[32m      throw new TypeError('The shardId option must be a number.');[m
[32m+[m[32m    }[m
[32m+[m[32m    if (options.shardCount < 0) throw new RangeError('The shardCount option must be at least 0.');[m
[32m+[m[32m    if (options.shardId < 0) throw new RangeError('The shardId option must be at least 0.');[m
[32m+[m[32m    if (options.shardId !== 0 && options.shardId >= options.shardCount) {[m
[32m+[m[32m      throw new RangeError('The shardId option must be less than shardCount.');[m
[32m+[m[32m    }[m
[32m+[m[32m    if (typeof options.messageCacheMaxSize !== 'number' || isNaN(options.messageCacheMaxSize)) {[m
[32m+[m[32m      throw new TypeError('The messageCacheMaxSize option must be a number.');[m
[32m+[m[32m    }[m
[32m+[m[32m    if (typeof options.messageCacheLifetime !== 'number' || isNaN(options.messageCacheLifetime)) {[m
[32m+[m[32m      throw new TypeError('The messageCacheLifetime option must be a number.');[m
[32m+[m[32m    }[m
[32m+[m[32m    if (typeof options.messageSweepInterval !== 'number' || isNaN(options.messageSweepInterval)) {[m
[32m+[m[32m      throw new TypeError('The messageSweepInterval option must be a number.');[m
[32m+[m[32m    }[m
[32m+[m[32m    if (typeof options.fetchAllMembers !== 'boolean') {[m
[32m+[m[32m      throw new TypeError('The fetchAllMembers option must be a boolean.');[m
[32m+[m[32m    }[m
[32m+[m[32m    if (typeof options.disableEveryone !== 'boolean') {[m
[32m+[m[32m      throw new TypeError('The disableEveryone option must be a boolean.');[m
[32m+[m[32m    }[m
[32m+[m[32m    if (typeof options.restWsBridgeTimeout !== 'number' || isNaN(options.restWsBridgeTimeout)) {[m
[32m+[m[32m      throw new TypeError('The restWsBridgeTimeout option must be a number.');[m
[32m+[m[32m    }[m
[32m+[m[32m    if (!(options.disabledEvents instanceof Array)) throw new TypeError('The disabledEvents option must be an Array.');[m
[32m+[m[32m    if (typeof options.retryLimit !== 'number' || isNaN(options.retryLimit)) {[m
[32m+[m[32m      throw new TypeError('The retryLimit  options must be a number.');[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = Client;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Emitted for general warnings.[m
[32m+[m[32m * @event Client#warn[m
[32m+[m[32m * @param {string} info The warning[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Emitted for general debugging information.[m
[32m+[m[32m * @event Client#debug[m
[32m+[m[32m * @param {string} info The debug information[m
[32m+[m[32m */[m
[1mdiff --git a/node_modules/discord.js/src/client/ClientDataManager.js b/node_modules/discord.js/src/client/ClientDataManager.js[m
[1mnew file mode 100644[m
[1mindex 0000000..4f0f2d7[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/ClientDataManager.js[m
[36m@@ -0,0 +1,149 @@[m
[32m+[m[32mconst Constants = require('../util/Constants');[m
[32m+[m[32mconst Util = require('../util/Util');[m
[32m+[m[32mconst Guild = require('../structures/Guild');[m
[32m+[m[32mconst User = require('../structures/User');[m
[32m+[m[32mconst Emoji = require('../structures/Emoji');[m
[32m+[m[32mconst GuildChannel = require('../structures/GuildChannel');[m
[32m+[m[32mconst TextChannel = require('../structures/TextChannel');[m
[32m+[m[32mconst VoiceChannel = require('../structures/VoiceChannel');[m
[32m+[m[32mconst CategoryChannel = require('../structures/CategoryChannel');[m
[32m+[m[32mconst NewsChannel = require('../structures/NewsChannel');[m
[32m+[m[32mconst StoreChannel = require('../structures/StoreChannel');[m
[32m+[m[32mconst DMChannel = require('../structures/DMChannel');[m
[32m+[m[32mconst GroupDMChannel = require('../structures/GroupDMChannel');[m
[32m+[m
[32m+[m[32mclass ClientDataManager {[m
[32m+[m[32m  constructor(client) {[m
[32m+[m[32m    this.client = client;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  get pastReady() {[m
[32m+[m[32m    return this.client.ws.connection.status === Constants.Status.READY;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  newGuild(data) {[m
[32m+[m[32m    const already = this.client.guilds.has(data.id);[m
[32m+[m[32m    const guild = new Guild(this.client, data);[m
[32m+[m[32m    this.client.guilds.set(guild.id, guild);[m
[32m+[m[32m    if (this.pastReady && !already) {[m
[32m+[m[32m      /**[m
[32m+[m[32m       * Emitted whenever the client joins a guild.[m
[32m+[m[32m       * @event Client#guildCreate[m
[32m+[m[32m       * @param {Guild} guild The created guild[m
[32m+[m[32m       */[m
[32m+[m[32m      if (this.client.options.fetchAllMembers) {[m
[32m+[m[32m        guild.fetchMembers().then(() => { this.client.emit(Constants.Events.GUILD_CREATE, guild); });[m
[32m+[m[32m      } else {[m
[32m+[m[32m        this.client.emit(Constants.Events.GUILD_CREATE, guild);[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return guild;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  newUser(data, cache = true) {[m
[32m+[m[32m    if (this.client.users.has(data.id)) return this.client.users.get(data.id);[m
[32m+[m[32m    const user = new User(this.client, data);[m
[32m+[m[32m    if (cache) this.client.users.set(user.id, user);[m
[32m+[m[32m    return user;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  newChannel(data, guild) {[m
[32m+[m[32m    const already = this.client.channels.has(data.id);[m
[32m+[m[32m    let channel;[m
[32m+[m[32m    if (data.type === Constants.ChannelTypes.DM) {[m
[32m+[m[32m      channel = new DMChannel(this.client, data);[m
[32m+[m[32m    } else if (data.type === Constants.ChannelTypes.GROUP_DM) {[m
[32m+[m[32m      channel = new GroupDMChannel(this.client, data);[m
[32m+[m[32m    } else {[m
[32m+[m[32m      guild = guild || this.client.guilds.get(data.guild_id);[m
[32m+[m[32m      if (already) {[m
[32m+[m[32m        channel = this.client.channels.get(data.id);[m
[32m+[m[32m      } else if (guild) {[m
[32m+[m[32m        switch (data.type) {[m
[32m+[m[32m          case Constants.ChannelTypes.TEXT:[m
[32m+[m[32m            channel = new TextChannel(guild, data);[m
[32m+[m[32m            break;[m
[32m+[m[32m          case Constants.ChannelTypes.VOICE:[m
[32m+[m[32m            channel = new VoiceChannel(guild, data);[m
[32m+[m[32m            break;[m
[32m+[m[32m          case Constants.ChannelTypes.CATEGORY:[m
[32m+[m[32m            channel = new CategoryChannel(guild, data);[m
[32m+[m[32m            break;[m
[32m+[m[32m          case Constants.ChannelTypes.NEWS:[m
[32m+[m[32m            channel = new NewsChannel(guild, data);[m
[32m+[m[32m            break;[m
[32m+[m[32m          case Constants.ChannelTypes.STORE:[m
[32m+[m[32m            channel = new StoreChannel(guild, data);[m
[32m+[m[32m            break;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        guild.channels.set(channel.id, channel);[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (channel && !already) {[m
[32m+[m[32m      if (this.pastReady) this.client.emit(Constants.Events.CHANNEL_CREATE, channel);[m
[32m+[m[32m      this.client.channels.set(channel.id, channel);[m
[32m+[m[32m      return channel;[m
[32m+[m[32m    } else if (already) {[m
[32m+[m[32m      return channel;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return null;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  newEmoji(data, guild) {[m
[32m+[m[32m    const already = guild.emojis.has(data.id);[m
[32m+[m[32m    if (data && !already) {[m
[32m+[m[32m      let emoji = new Emoji(guild, data);[m
[32m+[m[32m      this.client.emit(Constants.Events.GUILD_EMOJI_CREATE, emoji);[m
[32m+[m[32m      guild.emojis.set(emoji.id, emoji);[m
[32m+[m[32m      return emoji;[m
[32m+[m[32m    } else if (already) {[m
[32m+[m[32m      return guild.emojis.get(data.id);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return null;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  killEmoji(emoji) {[m
[32m+[m[32m    if (!(emoji instanceof Emoji && emoji.guild)) return;[m
[32m+[m[32m    this.client.emit(Constants.Events.GUILD_EMOJI_DELETE, emoji);[m
[32m+[m[32m    emoji.guild.emojis.delete(emoji.id);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  killGuild(guild) {[m
[32m+[m[32m    const already = this.client.guilds.has(guild.id);[m
[32m+[m[32m    this.client.guilds.delete(guild.id);[m
[32m+[m[32m    if (already && this.pastReady) this.client.emit(Constants.Events.GUILD_DELETE, guild);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  killUser(user) {[m
[32m+[m[32m    this.client.users.delete(user.id);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  killChannel(channel) {[m
[32m+[m[32m    this.client.channels.delete(channel.id);[m
[32m+[m[32m    if (channel instanceof GuildChannel) channel.guild.channels.delete(channel.id);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  updateGuild(currentGuild, newData) {[m
[32m+[m[32m    const oldGuild = Util.cloneObject(currentGuild);[m
[32m+[m[32m    currentGuild.setup(newData);[m
[32m+[m[32m    if (this.pastReady) this.client.emit(Constants.Events.GUILD_UPDATE, oldGuild, currentGuild);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  updateChannel(currentChannel, newData) {[m
[32m+[m[32m    currentChannel.setup(newData);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  updateEmoji(currentEmoji, newData) {[m
[32m+[m[32m    const oldEmoji = Util.cloneObject(currentEmoji);[m
[32m+[m[32m    currentEmoji.setup(newData);[m
[32m+[m[32m    this.client.emit(Constants.Events.GUILD_EMOJI_UPDATE, oldEmoji, currentEmoji);[m
[32m+[m[32m    return currentEmoji;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = ClientDataManager;[m
[1mdiff --git a/node_modules/discord.js/src/client/ClientDataResolver.js b/node_modules/discord.js/src/client/ClientDataResolver.js[m
[1mnew file mode 100644[m
[1mindex 0000000..0c289e2[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/ClientDataResolver.js[m
[36m@@ -0,0 +1,376 @@[m
[32m+[m[32mconst path = require('path');[m
[32m+[m[32mconst fs = require('fs');[m
[32m+[m[32mconst snekfetch = require('snekfetch');[m
[32m+[m
[32m+[m[32mconst Constants = require('../util/Constants');[m
[32m+[m[32mconst convertToBuffer = require('../util/Util').convertToBuffer;[m
[32m+[m[32mconst User = require('../structures/User');[m
[32m+[m[32mconst Message = require('../structures/Message');[m
[32m+[m[32mconst Guild = require('../structures/Guild');[m
[32m+[m[32mconst Channel = require('../structures/Channel');[m
[32m+[m[32mconst GuildMember = require('../structures/GuildMember');[m
[32m+[m[32mconst Emoji = require('../structures/Emoji');[m
[32m+[m[32mconst ReactionEmoji = require('../structures/ReactionEmoji');[m
[32m+[m[32mconst Role = require('../structures/Role');[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * The DataResolver identifies different objects and tries to resolve a specific piece of information from them, e.g.[m
[32m+[m[32m * extracting a User from a Message object.[m
[32m+[m[32m * @private[m
[32m+[m[32m */[m
[32m+[m[32mclass ClientDataResolver {[m
[32m+[m[32m  /**[m
[32m+[m[32m   * @param {Client} client The client the resolver is for[m
[32m+[m[32m   */[m
[32m+[m[32m  constructor(client) {[m
[32m+[m[32m    this.client = client;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Data that resolves to give a User object. This can be:[m
[32m+[m[32m   * * A User object[m
[32m+[m[32m   * * A Snowflake[m
[32m+[m[32m   * * A Message object (resolves to the message author)[m
[32m+[m[32m   * * A Guild object (owner of the guild)[m
[32m+[m[32m   * * A GuildMember object[m
[32m+[m[32m   * @typedef {User|Snowflake|Message|Guild|GuildMember} UserResolvable[m
[32m+[m[32m   */[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Resolves a UserResolvable to a User object.[m
[32m+[m[32m   * @param {UserResolvable} user The UserResolvable to identify[m
[32m+[m[32m   * @returns {?User}[m
[32m+[m[32m   */[m
[32m+[m[32m  resolveUser(user) {[m
[32m+[m[32m    if (user instanceof User) return user;[m
[32m+[m[32m    if (typeof user === 'string') return this.client.users.get(user) || null;[m
[32m+[m[32m    if (user instanceof GuildMember) return user.user;[m
[32m+[m[32m    if (user instanceof Message) return user.author;[m
[32m+[m[32m    if (user instanceof Guild) return user.owner;[m
[32m+[m[32m    return null;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Resolves a UserResolvable to a user ID string.[m
[32m+[m[32m   * @param {UserResolvable} user The UserResolvable to identify[m
[32m+[m[32m   * @returns {?Snowflake}[m
[32m+[m[32m   */[m
[32m+[m[32m  resolveUserID(user) {[m
[32m+[m[32m    if (user instanceof User || user instanceof GuildMember) return user.id;[m
[32m+[m[32m    if (typeof user === 'string') return user || null;[m
[32m+[m[32m    if (user instanceof Message) return user.author.id;[m
[32m+[m[32m    if (user instanceof Guild) return user.ownerID;[m
[32m+[m[32m    return null;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Data that resolves to give a Guild object. This can be:[m
[32m+[m[32m   * * A Guild object[m
[32m+[m[32m   * * A Snowflake[m
[32m+[m[32m   * @typedef {Guild|Snowflake} GuildResolvable[m
[32m+[m[32m   */[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Resolves a GuildResolvable to a Guild object.[m
[32m+[m[32m   * @param {GuildResolvable} guild The GuildResolvable to identify[m
[32m+[m[32m   * @returns {?Guild}[m
[32m+[m[32m   */[m
[32m+[m[32m  resolveGuild(guild) {[m
[32m+[m[32m    if (guild instanceof Guild) return guild;[m
[32m+[m[32m    if (typeof guild === 'string') return this.client.guilds.get(guild) || null;[m
[32m+[m[32m    return null;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Data that resolves to give a GuildMember object. This can be:[m
[32m+[m[32m   * * A GuildMember object[m
[32m+[m[32m   * * A User object[m
[32m+[m[32m   * @typedef {GuildMember|User} GuildMemberResolvable[m
[32m+[m[32m   */[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Resolves a GuildMemberResolvable to a GuildMember object.[m
[32m+[m[32m   * @param {GuildResolvable} guild The guild that the member is part of[m
[32m+[m[32m   * @param {UserResolvable} user The user that is part of the guild[m
[32m+[m[32m   * @returns {?GuildMember}[m
[32m+[m[32m   */[m
[32m+[m[32m  resolveGuildMember(guild, user) {[m
[32m+[m[32m    if (user instanceof GuildMember) return user;[m
[32m+[m[32m    guild = this.resolveGuild(guild);[m
[32m+[m[32m    user = this.resolveUser(user);[m
[32m+[m[32m    if (!guild || !user) return null;[m
[32m+[m[32m    return guild.members.get(user.id) || null;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Data that can be resolved to a Role object. This can be:[m
[32m+[m[32m   * * A Role[m
[32m+[m[32m   * * A Snowflake[m
[32m+[m[32m   * @typedef {Role|Snowflake} RoleResolvable[m
[32m+[m[32m   */[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m    * Resolves a RoleResolvable to a Role object.[m
[32m+[m[32m    * @param {GuildResolvable} guild The guild that this role is part of[m
[32m+[m[32m    * @param {RoleResolvable} role The role resolvable to resolve[m
[32m+[m[32m    * @returns {?Role}[m
[32m+[m[32m    */[m
[32m+[m[32m  resolveRole(guild, role) {[m
[32m+[m[32m    if (role instanceof Role) return role;[m
[32m+[m[32m    guild = this.resolveGuild(guild);[m
[32m+[m[32m    if (!guild) return null;[m
[32m+[m[32m    if (typeof role === 'string') return guild.roles.get(role);[m
[32m+[m[32m    return null;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Data that can be resolved to give a Channel object. This can be:[m
[32m+[m[32m   * * A Channel object[m
[32m+[m[32m   * * A Message object (the channel the message was sent in)[m
[32m+[m[32m   * * A Guild object (the #general channel)[m
[32m+[m[32m   * * A Snowflake[m
[32m+[m[32m   * @typedef {Channel|Guild|Message|Snowflake} ChannelResolvable[m
[32m+[m[32m   */[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Resolves a ChannelResolvable to a Channel object.[m
[32m+[m[32m   * @param {ChannelResolvable} channel The channel resolvable to resolve[m
[32m+[m[32m   * @returns {?Channel}[m
[32m+[m[32m   */[m
[32m+[m[32m  resolveChannel(channel) {[m
[32m+[m[32m    if (channel instanceof Channel) return channel;[m
[32m+[m[32m    if (typeof channel === 'string') return this.client.channels.get(channel) || null;[m
[32m+[m[32m    if (channel instanceof Message) return channel.channel;[m
[32m+[m[32m    if (channel instanceof Guild) return channel.channels.get(channel.id) || null;[m
[32m+[m[32m    return null;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Resolves a ChannelResolvable to a channel ID.[m
[32m+[m[32m   * @param {ChannelResolvable} channel The channel resolvable to resolve[m
[32m+[m[32m   * @returns {?Snowflake}[m
[32m+[m[32m   */[m
[32m+[m[32m  resolveChannelID(channel) {[m
[32m+[m[32m    if (channel instanceof Channel) return channel.id;[m
[32m+[m[32m    if (typeof channel === 'string') return channel;[m
[32m+[m[32m    if (channel instanceof Message) return channel.channel.id;[m
[32m+[m[32m    if (channel instanceof Guild) return channel.defaultChannel.id;[m
[32m+[m[32m    return null;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Data that can be resolved to give an invite code. This can be:[m
[32m+[m[32m   * * An invite code[m
[32m+[m[32m   * * An invite URL[m
[32m+[m[32m   * @typedef {string} InviteResolvable[m
[32m+[m[32m   */[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Resolves InviteResolvable to an invite code.[m
[32m+[m[32m   * @param {InviteResolvable} data The invite resolvable to resolve[m
[32m+[m[32m   * @returns {string}[m
[32m+[m[32m   */[m
[32m+[m[32m  resolveInviteCode(data) {[m
[32m+[m[32m    const inviteRegex = /discord(?:app\.com\/invite|\.gg(?:\/invite)?)\/([\w-]{2,255})/i;[m
[32m+[m[32m    const match = inviteRegex.exec(data);[m
[32m+[m[32m    if (match && match[1]) return match[1];[m
[32m+[m[32m    return data;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Data that can be resolved to give a string. This can be:[m
[32m+[m[32m   * * A string[m
[32m+[m[32m   * * An array (joined with a new line delimiter to give a string)[m
[32m+[m[32m   * * Any value[m
[32m+[m[32m   * @typedef {string|Array|*} StringResolvable[m
[32m+[m[32m   */[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Resolves a StringResolvable to a string.[m
[32m+[m[32m   * @param {StringResolvable} data The string resolvable to resolve[m
[32m+[m[32m   * @returns {string}[m
[32m+[m[32m   */[m
[32m+[m[32m  resolveString(data) {[m
[32m+[m[32m    if (typeof data === 'string') return data;[m
[32m+[m[32m    if (data instanceof Array) return data.join('\n');[m
[32m+[m[32m    return String(data);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Resolves a Base64Resolvable, a string, or a BufferResolvable to a Base 64 image.[m
[32m+[m[32m   * @param {BufferResolvable|Base64Resolvable} image The image to be resolved[m
[32m+[m[32m   * @returns {Promise<?string>}[m
[32m+[m[32m   */[m
[32m+[m[32m  resolveImage(image) {[m
[32m+[m[32m    if (!image) return Promise.resolve(null);[m
[32m+[m[32m    if (typeof image === 'string' && image.startsWith('data:')) {[m
[32m+[m[32m      return Promise.resolve(image);[m
[32m+[m[32m    }[m
[32m+[m[32m    return this.resolveFile(image).then(this.resolveBase64);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Data that resolves to give a Base64 string, typically for image uploading. This can be:[m
[32m+[m[32m   * * A Buffer[m
[32m+[m[32m   * * A base64 string[m
[32m+[m[32m   * @typedef {Buffer|string} Base64Resolvable[m
[32m+[m[32m   */[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Resolves a Base64Resolvable to a Base 64 image.[m
[32m+[m[32m   * @param {Base64Resolvable} data The base 64 resolvable you want to resolve[m
[32m+[m[32m   * @returns {?string}[m
[32m+[m[32m   */[m
[32m+[m[32m  resolveBase64(data) {[m
[32m+[m[32m    if (data instanceof Buffer) return `data:image/jpg;base64,${data.toString('base64')}`;[m
[32m+[m[32m    return data;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m    * Data that can be resolved to give a Buffer. This can be:[m
[32m+[m[32m    * * A Buffer[m
[32m+[m[32m    * * The path to a local file[m
[32m+[m[32m    * * A URL[m
[32m+[m[32m    * * A Stream[m
[32m+[m[32m    * @typedef {string|Buffer} BufferResolvable[m
[32m+[m[32m    */[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m    * @external Stream[m
[32m+[m[32m    * @see {@link https://nodejs.org/api/stream.html}[m
[32m+[m[32m    */[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m    * Resolves a BufferResolvable to a Buffer.[m
[32m+[m[32m    * @param {BufferResolvable|Stream} resource The buffer or stream resolvable to resolve[m
[32m+[m[32m    * @returns {Promise<Buffer>}[m
[32m+[m[32m    */[m
[32m+[m[32m  resolveFile(resource) {[m
[32m+[m[32m    if (resource instanceof Buffer) return Promise.resolve(resource);[m
[32m+[m[32m    if (this.client.browser && resource instanceof ArrayBuffer) return Promise.resolve(convertToBuffer(resource));[m
[32m+[m
[32m+[m[32m    if (typeof resource === 'string') {[m
[32m+[m[32m      if (/^https?:\/\//.test(resource)) {[m
[32m+[m[32m        return snekfetch.get(resource).then(res => res.body instanceof Buffer ? res.body : Buffer.from(res.text));[m
[32m+[m[32m      }[m
[32m+[m[32m      return new Promise((resolve, reject) => {[m
[32m+[m[32m        const file = path.resolve(resource);[m
[32m+[m[32m        fs.stat(file, (err, stats) => {[m
[32m+[m[32m          if (err) return reject(err);[m
[32m+[m[32m          if (!stats || !stats.isFile()) return reject(new Error(`The file could not be found: ${file}`));[m
[32m+[m[32m          fs.readFile(file, (err2, data) => {[m
[32m+[m[32m            if (err2) reject(err2);[m
[32m+[m[32m            else resolve(data);[m
[32m+[m[32m          });[m
[32m+[m[32m          return null;[m
[32m+[m[32m        });[m
[32m+[m[32m      });[m
[32m+[m[32m    } else if (resource && resource.pipe && typeof resource.pipe === 'function') {[m
[32m+[m[32m      return new Promise((resolve, reject) => {[m
[32m+[m[32m        const buffers = [];[m
[32m+[m[32m        resource.once('error', reject);[m
[32m+[m[32m        resource.on('data', data => buffers.push(data));[m
[32m+[m[32m        resource.once('end', () => resolve(Buffer.concat(buffers)));[m
[32m+[m[32m      });[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return Promise.reject(new TypeError('The resource must be a string or Buffer.'));[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Data that can be resolved to give an emoji identifier. This can be:[m
[32m+[m[32m   * * The unicode representation of an emoji[m
[32m+[m[32m   * * A custom emoji ID[m
[32m+[m[32m   * * An Emoji object[m
[32m+[m[32m   * * A ReactionEmoji object[m
[32m+[m[32m   * @typedef {string|Emoji|ReactionEmoji} EmojiIdentifierResolvable[m
[32m+[m[32m   */[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Resolves an EmojiResolvable to an emoji identifier.[m
[32m+[m[32m   * @param {EmojiIdentifierResolvable} emoji The emoji resolvable to resolve[m
[32m+[m[32m   * @returns {?string}[m
[32m+[m[32m   */[m
[32m+[m[32m  resolveEmojiIdentifier(emoji) {[m
[32m+[m[32m    if (emoji instanceof Emoji || emoji instanceof ReactionEmoji) return emoji.identifier;[m
[32m+[m[32m    if (typeof emoji === 'string') {[m
[32m+[m[32m      if (this.client.emojis.has(emoji)) return this.client.emojis.get(emoji).identifier;[m
[32m+[m[32m      else if (!emoji.includes('%')) return encodeURIComponent(emoji);[m
[32m+[m[32m      else return emoji;[m
[32m+[m[32m    }[m
[32m+[m[32m    return null;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Can be a Hex Literal, Hex String, Number, RGB Array, or one of the following[m
[32m+[m[32m   * ```[m
[32m+[m[32m   * [[m
[32m+[m[32m   *   'DEFAULT',[m
[32m+[m[32m   *   'WHITE',[m
[32m+[m[32m   *   'AQUA',[m
[32m+[m[32m   *   'GREEN',[m
[32m+[m[32m   *   'BLUE',[m
[32m+[m[32m   *   'PURPLE',[m
[32m+[m[32m   *   'LUMINOUS_VIVID_PINK',[m
[32m+[m[32m   *   'GOLD',[m
[32m+[m[32m   *   'ORANGE',[m
[32m+[m[32m   *   'RED',[m
[32m+[m[32m   *   'GREY',[m
[32m+[m[32m   *   'DARKER_GREY',[m
[32m+[m[32m   *   'NAVY',[m
[32m+[m[32m   *   'DARK_AQUA',[m
[32m+[m[32m   *   'DARK_GREEN',[m
[32m+[m[32m   *   'DARK_BLUE',[m
[32m+[m[32m   *   'DARK_PURPLE',[m
[32m+[m[32m   *   'DARK_VIVID_PINK',[m
[32m+[m[32m   *   'DARK_GOLD',[m
[32m+[m[32m   *   'DARK_ORANGE',[m
[32m+[m[32m   *   'DARK_RED',[m
[32m+[m[32m   *   'DARK_GREY',[m
[32m+[m[32m   *   'LIGHT_GREY',[m
[32m+[m[32m   *   'DARK_NAVY',[m
[32m+[m[32m   *   'RANDOM',[m
[32m+[m[32m   * ][m
[32m+[m[32m   * ```[m
[32m+[m[32m   * or something like[m
[32m+[m[32m   * ```[m
[32m+[m[32m   * [255, 0, 255][m
[32m+[m[32m   * ```[m
[32m+[m[32m   * for purple[m
[32m+[m[32m   * @typedef {string|number|Array} ColorResolvable[m
[32m+[m[32m   */[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Resolves a ColorResolvable into a color number.[m
[32m+[m[32m   * @param {ColorResolvable} color Color to resolve[m
[32m+[m[32m   * @returns {number} A color[m
[32m+[m[32m   */[m
[32m+[m[32m  static resolveColor(color) {[m
[32m+[m[32m    if (typeof color === 'string') {[m
[32m+[m[32m      if (color === 'RANDOM') return Math.floor(Math.random() * (0xFFFFFF + 1));[m
[32m+[m[32m      if (color === 'DEFAULT') return 0;[m
[32m+[m[32m      color = Constants.Colors[color] || parseInt(color.replace('#', ''), 16);[m
[32m+[m[32m    } else if (color instanceof Array) {[m
[32m+[m[32m      color = (color[0] << 16) + (color[1] << 8) + color[2];[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (color < 0 || color > 0xFFFFFF) {[m
[32m+[m[32m      throw new RangeError('Color must be within the range 0 - 16777215 (0xFFFFFF).');[m
[32m+[m[32m    } else if (color && isNaN(color)) {[m
[32m+[m[32m      throw new TypeError('Unable to convert color to a number.');[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return color;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * @param {ColorResolvable} color Color to resolve[m
[32m+[m[32m   * @returns {number} A color[m
[32m+[m[32m   */[m
[32m+[m[32m  resolveColor(color) {[m
[32m+[m[32m    return this.constructor.resolveColor(color);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = ClientDataResolver;[m
[1mdiff --git a/node_modules/discord.js/src/client/ClientManager.js b/node_modules/discord.js/src/client/ClientManager.js[m
[1mnew file mode 100644[m
[1mindex 0000000..0f2480c[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/ClientManager.js[m
[36m@@ -0,0 +1,74 @@[m
[32m+[m[32mconst Constants = require('../util/Constants');[m
[32m+[m[32mconst WebSocketConnection = require('./websocket/WebSocketConnection');[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Manages the state and background tasks of the client.[m
[32m+[m[32m * @private[m
[32m+[m[32m */[m
[32m+[m[32mclass ClientManager {[m
[32m+[m[32m  constructor(client) {[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The client that instantiated this Manager[m
[32m+[m[32m     * @type {Client}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.client = client;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The heartbeat interval[m
[32m+[m[32m     * @type {?number}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.heartbeatInterval = null;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The status of the client[m
[32m+[m[32m   * @type {number}[m
[32m+[m[32m   */[m
[32m+[m[32m  get status() {[m
[32m+[m[32m    return this.connection ? this.connection.status : Constants.Status.IDLE;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Connects the client to the WebSocket.[m
[32m+[m[32m   * @param {string} token The authorization token[m
[32m+[m[32m   * @param {Function} resolve Function to run when connection is successful[m
[32m+[m[32m   * @param {Function} reject Function to run when connection fails[m
[32m+[m[32m   */[m
[32m+[m[32m  connectToWebSocket(token, resolve, reject) {[m
[32m+[m[32m    this.client.emit(Constants.Events.DEBUG, `Authenticated using token ${token}`);[m
[32m+[m[32m    this.client.token = token;[m
[32m+[m[32m    const timeout = this.client.setTimeout(() => reject(new Error(Constants.Errors.TOOK_TOO_LONG)), 1000 * 300);[m
[32m+[m[32m    this.client.rest.methods.getGateway().then(res => {[m
[32m+[m[32m      const protocolVersion = Constants.DefaultOptions.ws.version;[m
[32m+[m[32m      const gateway = `${res.url}/?v=${protocolVersion}&encoding=${WebSocketConnection.ENCODING}`;[m
[32m+[m[32m      this.client.emit(Constants.Events.DEBUG, `Using gateway ${gateway}`);[m
[32m+[m[32m      this.client.ws.connect(gateway);[m
[32m+[m[32m      this.client.ws.connection.once('error', reject);[m
[32m+[m[32m      this.client.ws.connection.once('close', event => {[m
[32m+[m[32m        if (event.code === 4004) reject(new Error(Constants.Errors.BAD_LOGIN));[m
[32m+[m[32m        if (event.code === 4010) reject(new Error(Constants.Errors.INVALID_SHARD));[m
[32m+[m[32m        if (event.code === 4011) reject(new Error(Constants.Errors.SHARDING_REQUIRED));[m
[32m+[m[32m      });[m
[32m+[m[32m      this.client.once(Constants.Events.READY, () => {[m
[32m+[m[32m        resolve(token);[m
[32m+[m[32m        this.client.clearTimeout(timeout);[m
[32m+[m[32m      });[m
[32m+[m[32m    }, reject);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  destroy() {[m
[32m+[m[32m    this.client.ws.destroy();[m
[32m+[m[32m    this.client.rest.destroy();[m
[32m+[m[32m    if (!this.client.user) return Promise.resolve();[m
[32m+[m[32m    if (this.client.user.bot) {[m
[32m+[m[32m      this.client.token = null;[m
[32m+[m[32m      return Promise.resolve();[m
[32m+[m[32m    } else {[m
[32m+[m[32m      return this.client.rest.methods.logout().then(() => {[m
[32m+[m[32m        this.client.token = null;[m
[32m+[m[32m      });[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = ClientManager;[m
[1mdiff --git a/node_modules/discord.js/src/client/WebhookClient.js b/node_modules/discord.js/src/client/WebhookClient.js[m
[1mnew file mode 100644[m
[1mindex 0000000..99291b5[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/WebhookClient.js[m
[36m@@ -0,0 +1,118 @@[m
[32m+[m[32mconst Webhook = require('../structures/Webhook');[m
[32m+[m[32mconst RESTManager = require('./rest/RESTManager');[m
[32m+[m[32mconst ClientDataResolver = require('./ClientDataResolver');[m
[32m+[m[32mconst Constants = require('../util/Constants');[m
[32m+[m[32mconst Util = require('../util/Util');[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * The webhook client.[m
[32m+[m[32m * @extends {Webhook}[m
[32m+[m[32m */[m
[32m+[m[32mclass WebhookClient extends Webhook {[m
[32m+[m[32m  /**[m
[32m+[m[32m   * @param {Snowflake} id ID of the webhook[m
[32m+[m[32m   * @param {string} token Token of the webhook[m
[32m+[m[32m   * @param {ClientOptions} [options] Options for the client[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Create a new webhook and send a message[m
[32m+[m[32m   * const hook = new Discord.WebhookClient('1234', 'abcdef');[m
[32m+[m[32m   * hook.sendMessage('This will send a message').catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  constructor(id, token, options) {[m
[32m+[m[32m    super(null, id, token);[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The options the client was instantiated with[m
[32m+[m[32m     * @type {ClientOptions}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.options = Util.mergeDefault(Constants.DefaultOptions, options);[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The REST manager of the client[m
[32m+[m[32m     * @type {RESTManager}[m
[32m+[m[32m     * @private[m
[32m+[m[32m     */[m
[32m+[m[32m    this.rest = new RESTManager(this);[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The data resolver of the client[m
[32m+[m[32m     * @type {ClientDataResolver}[m
[32m+[m[32m     * @private[m
[32m+[m[32m     */[m
[32m+[m[32m    this.resolver = new ClientDataResolver(this);[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Timeouts set by {@link WebhookClient#setTimeout} that are still active[m
[32m+[m[32m     * @type {Set<Timeout>}[m
[32m+[m[32m     * @private[m
[32m+[m[32m     */[m
[32m+[m[32m    this._timeouts = new Set();[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Intervals set by {@link WebhookClient#setInterval} that are still active[m
[32m+[m[32m     * @type {Set<Timeout>}[m
[32m+[m[32m     * @private[m
[32m+[m[32m     */[m
[32m+[m[32m    this._intervals = new Set();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets a timeout that will be automatically cancelled if the client is destroyed.[m
[32m+[m[32m   * @param {Function} fn Function to execute[m
[32m+[m[32m   * @param {number} delay Time to wait before executing (in milliseconds)[m
[32m+[m[32m   * @param {...*} args Arguments for the function[m
[32m+[m[32m   * @returns {Timeout}[m
[32m+[m[32m   */[m
[32m+[m[32m  setTimeout(fn, delay, ...args) {[m
[32m+[m[32m    const timeout = setTimeout(() => {[m
[32m+[m[32m      fn(...args);[m
[32m+[m[32m      this._timeouts.delete(timeout);[m
[32m+[m[32m    }, delay);[m
[32m+[m[32m    this._timeouts.add(timeout);[m
[32m+[m[32m    return timeout;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Clears a timeout.[m
[32m+[m[32m   * @param {Timeout} timeout Timeout to cancel[m
[32m+[m[32m   */[m
[32m+[m[32m  clearTimeout(timeout) {[m
[32m+[m[32m    clearTimeout(timeout);[m
[32m+[m[32m    this._timeouts.delete(timeout);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets an interval that will be automatically cancelled if the client is destroyed.[m
[32m+[m[32m   * @param {Function} fn Function to execute[m
[32m+[m[32m   * @param {number} delay Time to wait before executing (in milliseconds)[m
[32m+[m[32m   * @param {...*} args Arguments for the function[m
[32m+[m[32m   * @returns {Timeout}[m
[32m+[m[32m   */[m
[32m+[m[32m  setInterval(fn, delay, ...args) {[m
[32m+[m[32m    const interval = setInterval(fn, delay, ...args);[m
[32m+[m[32m    this._intervals.add(interval);[m
[32m+[m[32m    return interval;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Clears an interval.[m
[32m+[m[32m   * @param {Timeout} interval Interval to cancel[m
[32m+[m[32m   */[m
[32m+[m[32m  clearInterval(interval) {[m
[32m+[m[32m    clearInterval(interval);[m
[32m+[m[32m    this._intervals.delete(interval);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Destroys the client.[m
[32m+[m[32m   */[m
[32m+[m[32m  destroy() {[m
[32m+[m[32m    for (const t of this._timeouts) clearTimeout(t);[m
[32m+[m[32m    for (const i of this._intervals) clearInterval(i);[m
[32m+[m[32m    this._timeouts.clear();[m
[32m+[m[32m    this._intervals.clear();[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = WebhookClient;[m
[1mdiff --git a/node_modules/discord.js/src/client/actions/Action.js b/node_modules/discord.js/src/client/actions/Action.js[m
[1mnew file mode 100644[m
[1mindex 0000000..8fdadc9[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/actions/Action.js[m
[36m@@ -0,0 +1,23 @@[m
[32m+[m[32m/*[m
[32m+[m
[32m+[m[32mABOUT ACTIONS[m
[32m+[m
[32m+[m[32mActions are similar to WebSocket Packet Handlers, but since introducing[m
[32m+[m[32mthe REST API methods, in order to prevent rewriting code to handle data,[m
[32m+[m[32m"actions" have been introduced. They're basically what Packet Handlers[m
[32m+[m[32mused to be but they're strictly for manipulating data and making sure[m
[32m+[m[32mthat WebSocket events don't clash with REST methods.[m
[32m+[m
[32m+[m[32m*/[m
[32m+[m
[32m+[m[32mclass GenericAction {[m
[32m+[m[32m  constructor(client) {[m
[32m+[m[32m    this.client = client;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  handle(data) {[m
[32m+[m[32m    return data;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = GenericAction;[m
[1mdiff --git a/node_modules/discord.js/src/client/actions/ActionsManager.js b/node_modules/discord.js/src/client/actions/ActionsManager.js[m
[1mnew file mode 100644[m
[1mindex 0000000..8341e74[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/actions/ActionsManager.js[m
[36m@@ -0,0 +1,40 @@[m
[32m+[m[32mclass ActionsManager {[m
[32m+[m[32m  constructor(client) {[m
[32m+[m[32m    this.client = client;[m
[32m+[m
[32m+[m[32m    this.register(require('./MessageCreate'));[m
[32m+[m[32m    this.register(require('./MessageDelete'));[m
[32m+[m[32m    this.register(require('./MessageDeleteBulk'));[m
[32m+[m[32m    this.register(require('./MessageUpdate'));[m
[32m+[m[32m    this.register(require('./MessageReactionAdd'));[m
[32m+[m[32m    this.register(require('./MessageReactionRemove'));[m
[32m+[m[32m    this.register(require('./MessageReactionRemoveAll'));[m
[32m+[m[32m    this.register(require('./ChannelCreate'));[m
[32m+[m[32m    this.register(require('./ChannelDelete'));[m
[32m+[m[32m    this.register(require('./ChannelUpdate'));[m
[32m+[m[32m    this.register(require('./GuildDelete'));[m
[32m+[m[32m    this.register(require('./GuildUpdate'));[m
[32m+[m[32m    this.register(require('./GuildMemberGet'));[m
[32m+[m[32m    this.register(require('./GuildMemberRemove'));[m
[32m+[m[32m    this.register(require('./GuildBanRemove'));[m
[32m+[m[32m    this.register(require('./GuildRoleCreate'));[m
[32m+[m[32m    this.register(require('./GuildRoleDelete'));[m
[32m+[m[32m    this.register(require('./GuildRoleUpdate'));[m
[32m+[m[32m    this.register(require('./UserGet'));[m
[32m+[m[32m    this.register(require('./UserUpdate'));[m
[32m+[m[32m    this.register(require('./UserNoteUpdate'));[m
[32m+[m[32m    this.register(require('./GuildSync'));[m
[32m+[m[32m    this.register(require('./GuildEmojiCreate'));[m
[32m+[m[32m    this.register(require('./GuildEmojiDelete'));[m
[32m+[m[32m    this.register(require('./GuildEmojiUpdate'));[m
[32m+[m[32m    this.register(require('./GuildEmojisUpdate'));[m
[32m+[m[32m    this.register(require('./GuildRolesPositionUpdate'));[m
[32m+[m[32m    this.register(require('./GuildChannelsPositionUpdate'));[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  register(Action) {[m
[32m+[m[32m    this[Action.name.replace(/Action$/, '')] = new Action(this.client);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = ActionsManager;[m
[1mdiff --git a/node_modules/discord.js/src/client/actions/ChannelCreate.js b/node_modules/discord.js/src/client/actions/ChannelCreate.js[m
[1mnew file mode 100644[m
[1mindex 0000000..83b1aa0[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/actions/ChannelCreate.js[m
[36m@@ -0,0 +1,11 @@[m
[32m+[m[32mconst Action = require('./Action');[m
[32m+[m
[32m+[m[32mclass ChannelCreateAction extends Action {[m
[32m+[m[32m  handle(data) {[m
[32m+[m[32m    const client = this.client;[m
[32m+[m[32m    const channel = client.dataManager.newChannel(data);[m
[32m+[m[32m    return { channel };[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = ChannelCreateAction;[m
[1mdiff --git a/node_modules/discord.js/src/client/actions/ChannelDelete.js b/node_modules/discord.js/src/client/actions/ChannelDelete.js[m
[1mnew file mode 100644[m
[1mindex 0000000..e4e4684[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/actions/ChannelDelete.js[m
[36m@@ -0,0 +1,30 @@[m
[32m+[m[32mconst Action = require('./Action');[m
[32m+[m
[32m+[m[32mclass ChannelDeleteAction extends Action {[m
[32m+[m[32m  constructor(client) {[m
[32m+[m[32m    super(client);[m
[32m+[m[32m    this.deleted = new Map();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  handle(data) {[m
[32m+[m[32m    const client = this.client;[m
[32m+[m
[32m+[m[32m    let channel = client.channels.get(data.id);[m
[32m+[m[32m    if (channel) {[m
[32m+[m[32m      client.dataManager.killChannel(channel);[m
[32m+[m[32m      this.deleted.set(channel.id, channel);[m
[32m+[m[32m      this.scheduleForDeletion(channel.id);[m
[32m+[m[32m    } else {[m
[32m+[m[32m      channel = this.deleted.get(data.id) || null;[m
[32m+[m[32m    }[m
[32m+[m[32m    if (channel) channel.deleted = true;[m
[32m+[m
[32m+[m[32m    return { channel };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  scheduleForDeletion(id) {[m
[32m+[m[32m    this.client.setTimeout(() => this.deleted.delete(id), this.client.options.restWsBridgeTimeout);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = ChannelDeleteAction;[m
[1mdiff --git a/node_modules/discord.js/src/client/actions/ChannelUpdate.js b/node_modules/discord.js/src/client/actions/ChannelUpdate.js[m
[1mnew file mode 100644[m
[1mindex 0000000..ba1c4ef[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/actions/ChannelUpdate.js[m
[36m@@ -0,0 +1,74 @@[m
[32m+[m[32mconst Action = require('./Action');[m
[32m+[m[32mconst TextChannel = require('../../structures/TextChannel');[m
[32m+[m[32mconst VoiceChannel = require('../../structures/VoiceChannel');[m
[32m+[m[32mconst CategoryChannel = require('../../structures/CategoryChannel');[m
[32m+[m[32mconst NewsChannel = require('../../structures/NewsChannel');[m
[32m+[m[32mconst StoreChannel = require('../../structures/StoreChannel');[m
[32m+[m[32mconst Constants = require('../../util/Constants');[m
[32m+[m[32mconst ChannelTypes = Constants.ChannelTypes;[m
[32m+[m[32mconst Util = require('../../util/Util');[m
[32m+[m
[32m+[m[32mclass ChannelUpdateAction extends Action {[m
[32m+[m[32m  handle(data) {[m
[32m+[m[32m    const client = this.client;[m
[32m+[m
[32m+[m[32m    let channel = client.channels.get(data.id);[m
[32m+[m[32m    if (channel) {[m
[32m+[m[32m      const oldChannel = Util.cloneObject(channel);[m
[32m+[m
[32m+[m[32m      // If the channel is changing types, we need to follow a different process[m
[32m+[m[32m      if (ChannelTypes[channel.type.toUpperCase()] !== data.type) {[m
[32m+[m[32m        // Determine which channel class we're changing to[m
[32m+[m[32m        let channelClass;[m
[32m+[m[32m        switch (data.type) {[m
[32m+[m[32m          case ChannelTypes.TEXT:[m
[32m+[m[32m            channelClass = TextChannel;[m
[32m+[m[32m            break;[m
[32m+[m[32m          case ChannelTypes.VOICE:[m
[32m+[m[32m            channelClass = VoiceChannel;[m
[32m+[m[32m            break;[m
[32m+[m[32m          case ChannelTypes.CATEGORY:[m
[32m+[m[32m            channelClass = CategoryChannel;[m
[32m+[m[32m            break;[m
[32m+[m[32m          case ChannelTypes.NEWS:[m
[32m+[m[32m            channelClass = NewsChannel;[m
[32m+[m[32m            break;[m
[32m+[m[32m          case ChannelTypes.STORE:[m
[32m+[m[32m            channelClass = StoreChannel;[m
[32m+[m[32m            break;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        // Create the new channel instance and copy over cached data[m
[32m+[m[32m        const newChannel = new channelClass(channel.guild, data);[m
[32m+[m[32m        if (channel.messages && newChannel.messages) {[m
[32m+[m[32m          for (const [id, message] of channel.messages) newChannel.messages.set(id, message);[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        channel = newChannel;[m
[32m+[m[32m        this.client.channels.set(channel.id, channel);[m
[32m+[m[32m      } else {[m
[32m+[m[32m        channel.setup(data);[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      client.emit(Constants.Events.CHANNEL_UPDATE, oldChannel, channel);[m
[32m+[m[32m      return {[m
[32m+[m[32m        old: oldChannel,[m
[32m+[m[32m        updated: channel,[m
[32m+[m[32m      };[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return {[m
[32m+[m[32m      old: null,[m
[32m+[m[32m      updated: null,[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Emitted whenever a channel is updated - e.g. name change, topic change.[m
[32m+[m[32m * @event Client#channelUpdate[m
[32m+[m[32m * @param {Channel} oldChannel The channel before the update[m
[32m+[m[32m * @param {Channel} newChannel The channel after the update[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mmodule.exports = ChannelUpdateAction;[m
[1mdiff --git a/node_modules/discord.js/src/client/actions/GuildBanRemove.js b/node_modules/discord.js/src/client/actions/GuildBanRemove.js[m
[1mnew file mode 100644[m
[1mindex 0000000..0276a52[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/actions/GuildBanRemove.js[m
[36m@@ -0,0 +1,13 @@[m
[32m+[m[32mconst Action = require('./Action');[m
[32m+[m[32mconst Constants = require('../../util/Constants');[m
[32m+[m
[32m+[m[32mclass GuildBanRemove extends Action {[m
[32m+[m[32m  handle(data) {[m
[32m+[m[32m    const client = this.client;[m
[32m+[m[32m    const guild = client.guilds.get(data.guild_id);[m
[32m+[m[32m    const user = client.dataManager.newUser(data.user);[m
[32m+[m[32m    if (guild && user) client.emit(Constants.Events.GUILD_BAN_REMOVE, guild, user);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = GuildBanRemove;[m
[1mdiff --git a/node_modules/discord.js/src/client/actions/GuildChannelsPositionUpdate.js b/node_modules/discord.js/src/client/actions/GuildChannelsPositionUpdate.js[m
[1mnew file mode 100644[m
[1mindex 0000000..ea184ef[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/actions/GuildChannelsPositionUpdate.js[m
[36m@@ -0,0 +1,19 @@[m
[32m+[m[32mconst Action = require('./Action');[m
[32m+[m
[32m+[m[32mclass GuildChannelsPositionUpdate extends Action {[m
[32m+[m[32m  handle(data) {[m
[32m+[m[32m    const client = this.client;[m
[32m+[m
[32m+[m[32m    const guild = client.guilds.get(data.guild_id);[m
[32m+[m[32m    if (guild) {[m
[32m+[m[32m      for (const partialChannel of data.channels) {[m
[32m+[m[32m        const channel = guild.channels.get(partialChannel.id);[m
[32m+[m[32m        if (channel) channel.position = partialChannel.position;[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return { guild };[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = GuildChannelsPositionUpdate;[m
[1mdiff --git a/node_modules/discord.js/src/client/actions/GuildDelete.js b/node_modules/discord.js/src/client/actions/GuildDelete.js[m
[1mnew file mode 100644[m
[1mindex 0000000..8222323[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/actions/GuildDelete.js[m
[36m@@ -0,0 +1,57 @@[m
[32m+[m[32mconst Action = require('./Action');[m
[32m+[m[32mconst Constants = require('../../util/Constants');[m
[32m+[m
[32m+[m[32mclass GuildDeleteAction extends Action {[m
[32m+[m[32m  constructor(client) {[m
[32m+[m[32m    super(client);[m
[32m+[m[32m    this.deleted = new Map();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  handle(data) {[m
[32m+[m[32m    const client = this.client;[m
[32m+[m
[32m+[m[32m    let guild = client.guilds.get(data.id);[m
[32m+[m[32m    if (guild) {[m
[32m+[m[32m      for (const channel of guild.channels.values()) {[m
[32m+[m[32m        if (channel.type === 'text') channel.stopTyping(true);[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      if (guild.available && data.unavailable) {[m
[32m+[m[32m        // Guild is unavailable[m
[32m+[m[32m        guild.available = false;[m
[32m+[m[32m        client.emit(Constants.Events.GUILD_UNAVAILABLE, guild);[m
[32m+[m
[32m+[m[32m        // Stops the GuildDelete packet thinking a guild was actually deleted,[m
[32m+[m[32m        // handles emitting of event itself[m
[32m+[m[32m        return {[m
[32m+[m[32m          guild: null,[m
[32m+[m[32m        };[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      for (const channel of guild.channels.values()) this.client.channels.delete(channel.id);[m
[32m+[m[32m      if (guild.voiceConnection) guild.voiceConnection.disconnect();[m
[32m+[m
[32m+[m[32m      // Delete guild[m
[32m+[m[32m      client.guilds.delete(guild.id);[m
[32m+[m[32m      this.deleted.set(guild.id, guild);[m
[32m+[m[32m      this.scheduleForDeletion(guild.id);[m
[32m+[m[32m    } else {[m
[32m+[m[32m      guild = this.deleted.get(data.id) || null;[m
[32m+[m[32m    }[m
[32m+[m[32m    if (guild) guild.deleted = true;[m
[32m+[m
[32m+[m[32m    return { guild };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  scheduleForDeletion(id) {[m
[32m+[m[32m    this.client.setTimeout(() => this.deleted.delete(id), this.client.options.restWsBridgeTimeout);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Emitted whenever a guild becomes unavailable, likely due to a server outage.[m
[32m+[m[32m * @event Client#guildUnavailable[m
[32m+[m[32m * @param {Guild} guild The guild that has become unavailable[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mmodule.exports = GuildDeleteAction;[m
[1mdiff --git a/node_modules/discord.js/src/client/actions/GuildEmojiCreate.js b/node_modules/discord.js/src/client/actions/GuildEmojiCreate.js[m
[1mnew file mode 100644[m
[1mindex 0000000..79f55ba[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/actions/GuildEmojiCreate.js[m
[36m@@ -0,0 +1,17 @@[m
[32m+[m[32mconst Action = require('./Action');[m
[32m+[m
[32m+[m[32mclass GuildEmojiCreateAction extends Action {[m
[32m+[m[32m  handle(guild, createdEmoji) {[m
[32m+[m[32m    const client = this.client;[m
[32m+[m[32m    const emoji = client.dataManager.newEmoji(createdEmoji, guild);[m
[32m+[m[32m    return { emoji };[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Emitted whenever a custom emoji is created in a guild.[m
[32m+[m[32m * @event Client#emojiCreate[m
[32m+[m[32m * @param {Emoji} emoji The emoji that was created[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mmodule.exports = GuildEmojiCreateAction;[m
[1mdiff --git a/node_modules/discord.js/src/client/actions/GuildEmojiDelete.js b/node_modules/discord.js/src/client/actions/GuildEmojiDelete.js[m
[1mnew file mode 100644[m
[1mindex 0000000..044679c[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/actions/GuildEmojiDelete.js[m
[36m@@ -0,0 +1,18 @@[m
[32m+[m[32mconst Action = require('./Action');[m
[32m+[m
[32m+[m[32mclass GuildEmojiDeleteAction extends Action {[m
[32m+[m[32m  handle(emoji) {[m
[32m+[m[32m    const client = this.client;[m
[32m+[m[32m    client.dataManager.killEmoji(emoji);[m
[32m+[m[32m    emoji.deleted = true;[m
[32m+[m[32m    return { emoji };[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Emitted whenever a custom guild emoji is deleted.[m
[32m+[m[32m * @event Client#emojiDelete[m
[32m+[m[32m * @param {Emoji} emoji The emoji that was deleted[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mmodule.exports = GuildEmojiDeleteAction;[m
[1mdiff --git a/node_modules/discord.js/src/client/actions/GuildEmojiUpdate.js b/node_modules/discord.js/src/client/actions/GuildEmojiUpdate.js[m
[1mnew file mode 100644[m
[1mindex 0000000..ff6ae65[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/actions/GuildEmojiUpdate.js[m
[36m@@ -0,0 +1,17 @@[m
[32m+[m[32mconst Action = require('./Action');[m
[32m+[m
[32m+[m[32mclass GuildEmojiUpdateAction extends Action {[m
[32m+[m[32m  handle(oldEmoji, newEmoji) {[m
[32m+[m[32m    const emoji = this.client.dataManager.updateEmoji(oldEmoji, newEmoji);[m
[32m+[m[32m    return { emoji };[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Emitted whenever a custom guild emoji is updated.[m
[32m+[m[32m * @event Client#emojiUpdate[m
[32m+[m[32m * @param {Emoji} oldEmoji The old emoji[m
[32m+[m[32m * @param {Emoji} newEmoji The new emoji[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mmodule.exports = GuildEmojiUpdateAction;[m
[1mdiff --git a/node_modules/discord.js/src/client/actions/GuildEmojisUpdate.js b/node_modules/discord.js/src/client/actions/GuildEmojisUpdate.js[m
[1mnew file mode 100644[m
[1mindex 0000000..8656a34[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/actions/GuildEmojisUpdate.js[m
[36m@@ -0,0 +1,38 @@[m
[32m+[m[32mconst Action = require('./Action');[m
[32m+[m
[32m+[m[32mfunction mappify(iterable) {[m
[32m+[m[32m  const map = new Map();[m
[32m+[m[32m  for (const x of iterable) map.set(...x);[m
[32m+[m[32m  return map;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mclass GuildEmojisUpdateAction extends Action {[m
[32m+[m[32m  handle(data) {[m
[32m+[m[32m    const guild = this.client.guilds.get(data.guild_id);[m
[32m+[m[32m    if (!guild || !guild.emojis) return;[m
[32m+[m
[32m+[m[32m    const deletions = mappify(guild.emojis.entries());[m
[32m+[m
[32m+[m[32m    for (const emoji of data.emojis) {[m
[32m+[m[32m      // Determine type of emoji event[m
[32m+[m[32m      const cachedEmoji = guild.emojis.get(emoji.id);[m
[32m+[m[32m      if (cachedEmoji) {[m
[32m+[m[32m        deletions.delete(emoji.id);[m
[32m+[m[32m        if (!cachedEmoji.equals(emoji, true)) {[m
[32m+[m[32m          // Emoji updated[m
[32m+[m[32m          this.client.actions.GuildEmojiUpdate.handle(cachedEmoji, emoji);[m
[32m+[m[32m        }[m
[32m+[m[32m      } else {[m
[32m+[m[32m        // Emoji added[m
[32m+[m[32m        this.client.actions.GuildEmojiCreate.handle(guild, emoji);[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    for (const emoji of deletions.values()) {[m
[32m+[m[32m      // Emoji deleted[m
[32m+[m[32m      this.client.actions.GuildEmojiDelete.handle(emoji);[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = GuildEmojisUpdateAction;[m
[1mdiff --git a/node_modules/discord.js/src/client/actions/GuildMemberGet.js b/node_modules/discord.js/src/client/actions/GuildMemberGet.js[m
[1mnew file mode 100644[m
[1mindex 0000000..ecb7a8f[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/actions/GuildMemberGet.js[m
[36m@@ -0,0 +1,10 @@[m
[32m+[m[32mconst Action = require('./Action');[m
[32m+[m
[32m+[m[32mclass GuildMemberGetAction extends Action {[m
[32m+[m[32m  handle(guild, data) {[m
[32m+[m[32m    const member = guild._addMember(data, false);[m
[32m+[m[32m    return { member };[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = GuildMemberGetAction;[m
[1mdiff --git a/node_modules/discord.js/src/client/actions/GuildMemberRemove.js b/node_modules/discord.js/src/client/actions/GuildMemberRemove.js[m
[1mnew file mode 100644[m
[1mindex 0000000..6682b63[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/actions/GuildMemberRemove.js[m
[36m@@ -0,0 +1,41 @@[m
[32m+[m[32mconst Action = require('./Action');[m
[32m+[m[32mconst Constants = require('../../util/Constants');[m
[32m+[m
[32m+[m[32mclass GuildMemberRemoveAction extends Action {[m
[32m+[m[32m  constructor(client) {[m
[32m+[m[32m    super(client);[m
[32m+[m[32m    this.deleted = new Map();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  handle(data) {[m
[32m+[m[32m    const client = this.client;[m
[32m+[m[32m    const guild = client.guilds.get(data.guild_id);[m
[32m+[m[32m    let member = null;[m
[32m+[m[32m    if (guild) {[m
[32m+[m[32m      member = guild.members.get(data.user.id);[m
[32m+[m[32m      guild.memberCount--;[m
[32m+[m[32m      if (member) {[m
[32m+[m[32m        guild._removeMember(member);[m
[32m+[m[32m        this.deleted.set(guild.id + data.user.id, member);[m
[32m+[m[32m        if (client.status === Constants.Status.READY) client.emit(Constants.Events.GUILD_MEMBER_REMOVE, member);[m
[32m+[m[32m        this.scheduleForDeletion(guild.id, data.user.id);[m
[32m+[m[32m      } else {[m
[32m+[m[32m        member = this.deleted.get(guild.id + data.user.id) || null;[m
[32m+[m[32m      }[m
[32m+[m[32m      if (member) member.deleted = true;[m
[32m+[m[32m    }[m
[32m+[m[32m    return { guild, member };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  scheduleForDeletion(guildID, userID) {[m
[32m+[m[32m    this.client.setTimeout(() => this.deleted.delete(guildID + userID), this.client.options.restWsBridgeTimeout);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Emitted whenever a member leaves a guild, or is kicked.[m
[32m+[m[32m * @event Client#guildMemberRemove[m
[32m+[m[32m * @param {GuildMember} member The member that has left/been kicked from the guild[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mmodule.exports = GuildMemberRemoveAction;[m
[1mdiff --git a/node_modules/discord.js/src/client/actions/GuildRoleCreate.js b/node_modules/discord.js/src/client/actions/GuildRoleCreate.js[m
[1mnew file mode 100644[m
[1mindex 0000000..b4f320f[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/actions/GuildRoleCreate.js[m
[36m@@ -0,0 +1,26 @@[m
[32m+[m[32mconst Action = require('./Action');[m
[32m+[m[32mconst Constants = require('../../util/Constants');[m
[32m+[m[32mconst Role = require('../../structures/Role');[m
[32m+[m
[32m+[m[32mclass GuildRoleCreate extends Action {[m
[32m+[m[32m  handle(data) {[m
[32m+[m[32m    const client = this.client;[m
[32m+[m[32m    const guild = client.guilds.get(data.guild_id);[m
[32m+[m[32m    let role;[m
[32m+[m[32m    if (guild) {[m
[32m+[m[32m      const already = guild.roles.has(data.role.id);[m
[32m+[m[32m      role = new Role(guild, data.role);[m
[32m+[m[32m      guild.roles.set(role.id, role);[m
[32m+[m[32m      if (!already) client.emit(Constants.Events.GUILD_ROLE_CREATE, role);[m
[32m+[m[32m    }[m
[32m+[m[32m    return { role };[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Emitted whenever a role is created.[m
[32m+[m[32m * @event Client#roleCreate[m
[32m+[m[32m * @param {Role} role The role that was created[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mmodule.exports = GuildRoleCreate;[m
[1mdiff --git a/node_modules/discord.js/src/client/actions/GuildRoleDelete.js b/node_modules/discord.js/src/client/actions/GuildRoleDelete.js[m
[1mnew file mode 100644[m
[1mindex 0000000..deafc85[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/actions/GuildRoleDelete.js[m
[36m@@ -0,0 +1,42 @@[m
[32m+[m[32mconst Action = require('./Action');[m
[32m+[m[32mconst Constants = require('../../util/Constants');[m
[32m+[m
[32m+[m[32mclass GuildRoleDeleteAction extends Action {[m
[32m+[m[32m  constructor(client) {[m
[32m+[m[32m    super(client);[m
[32m+[m[32m    this.deleted = new Map();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  handle(data) {[m
[32m+[m[32m    const client = this.client;[m
[32m+[m[32m    const guild = client.guilds.get(data.guild_id);[m
[32m+[m[32m    let role;[m
[32m+[m
[32m+[m[32m    if (guild) {[m
[32m+[m[32m      role = guild.roles.get(data.role_id);[m
[32m+[m[32m      if (role) {[m
[32m+[m[32m        guild.roles.delete(data.role_id);[m
[32m+[m[32m        this.deleted.set(guild.id + data.role_id, role);[m
[32m+[m[32m        this.scheduleForDeletion(guild.id, data.role_id);[m
[32m+[m[32m        client.emit(Constants.Events.GUILD_ROLE_DELETE, role);[m
[32m+[m[32m      } else {[m
[32m+[m[32m        role = this.deleted.get(guild.id + data.role_id) || null;[m
[32m+[m[32m      }[m
[32m+[m[32m      if (role) role.deleted = true;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return { role };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  scheduleForDeletion(guildID, roleID) {[m
[32m+[m[32m    this.client.setTimeout(() => this.deleted.delete(guildID + roleID), this.client.options.restWsBridgeTimeout);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Emitted whenever a guild role is deleted.[m
[32m+[m[32m * @event Client#roleDelete[m
[32m+[m[32m * @param {Role} role The role that was deleted[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mmodule.exports = GuildRoleDeleteAction;[m
[1mdiff --git a/node_modules/discord.js/src/client/actions/GuildRoleUpdate.js b/node_modules/discord.js/src/client/actions/GuildRoleUpdate.js[m
[1mnew file mode 100644[m
[1mindex 0000000..7d127ab[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/actions/GuildRoleUpdate.js[m
[36m@@ -0,0 +1,41 @@[m
[32m+[m[32mconst Action = require('./Action');[m
[32m+[m[32mconst Constants = require('../../util/Constants');[m
[32m+[m[32mconst Util = require('../../util/Util');[m
[32m+[m
[32m+[m[32mclass GuildRoleUpdateAction extends Action {[m
[32m+[m[32m  handle(data) {[m
[32m+[m[32m    const client = this.client;[m
[32m+[m[32m    const guild = client.guilds.get(data.guild_id);[m
[32m+[m
[32m+[m[32m    if (guild) {[m
[32m+[m[32m      const roleData = data.role;[m
[32m+[m[32m      let oldRole = null;[m
[32m+[m
[32m+[m[32m      const role = guild.roles.get(roleData.id);[m
[32m+[m[32m      if (role) {[m
[32m+[m[32m        oldRole = Util.cloneObject(role);[m
[32m+[m[32m        role.setup(data.role);[m
[32m+[m[32m        client.emit(Constants.Events.GUILD_ROLE_UPDATE, oldRole, role);[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      return {[m
[32m+[m[32m        old: oldRole,[m
[32m+[m[32m        updated: role,[m
[32m+[m[32m      };[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return {[m
[32m+[m[32m      old: null,[m
[32m+[m[32m      updated: null,[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Emitted whenever a guild role is updated.[m
[32m+[m[32m * @event Client#roleUpdate[m
[32m+[m[32m * @param {Role} oldRole The role before the update[m
[32m+[m[32m * @param {Role} newRole The role after the update[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mmodule.exports = GuildRoleUpdateAction;[m
[1mdiff --git a/node_modules/discord.js/src/client/actions/GuildRolesPositionUpdate.js b/node_modules/discord.js/src/client/actions/GuildRolesPositionUpdate.js[m
[1mnew file mode 100644[m
[1mindex 0000000..9094965[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/actions/GuildRolesPositionUpdate.js[m
[36m@@ -0,0 +1,19 @@[m
[32m+[m[32mconst Action = require('./Action');[m
[32m+[m
[32m+[m[32mclass GuildRolesPositionUpdate extends Action {[m
[32m+[m[32m  handle(data) {[m
[32m+[m[32m    const client = this.client;[m
[32m+[m
[32m+[m[32m    const guild = client.guilds.get(data.guild_id);[m
[32m+[m[32m    if (guild) {[m
[32m+[m[32m      for (const partialRole of data.roles) {[m
[32m+[m[32m        const role = guild.roles.get(partialRole.id);[m
[32m+[m[32m        if (role) role.position = partialRole.position;[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return { guild };[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = GuildRolesPositionUpdate;[m
[1mdiff --git a/node_modules/discord.js/src/client/actions/GuildSync.js b/node_modules/discord.js/src/client/actions/GuildSync.js[m
[1mnew file mode 100644[m
[1mindex 0000000..3d3a47b[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/actions/GuildSync.js[m
[36m@@ -0,0 +1,29 @@[m
[32m+[m[32mconst Action = require('./Action');[m
[32m+[m
[32m+[m[32mclass GuildSync extends Action {[m
[32m+[m[32m  handle(data) {[m
[32m+[m[32m    const client = this.client;[m
[32m+[m
[32m+[m[32m    const guild = client.guilds.get(data.id);[m
[32m+[m[32m    if (guild) {[m
[32m+[m[32m      if (data.presences) {[m
[32m+[m[32m        for (const presence of data.presences) guild._setPresence(presence.user.id, presence);[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      if (data.members) {[m
[32m+[m[32m        for (const syncMember of data.members) {[m
[32m+[m[32m          const member = guild.members.get(syncMember.user.id);[m
[32m+[m[32m          if (member) {[m
[32m+[m[32m            guild._updateMember(member, syncMember);[m
[32m+[m[32m          } else {[m
[32m+[m[32m            guild._addMember(syncMember, false);[m
[32m+[m[32m          }[m
[32m+[m[32m        }[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      if ('large' in data) guild.large = data.large;[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = GuildSync;[m
[1mdiff --git a/node_modules/discord.js/src/client/actions/GuildUpdate.js b/node_modules/discord.js/src/client/actions/GuildUpdate.js[m
[1mnew file mode 100644[m
[1mindex 0000000..6806d1c[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/actions/GuildUpdate.js[m
[36m@@ -0,0 +1,34 @@[m
[32m+[m[32mconst Action = require('./Action');[m
[32m+[m[32mconst Constants = require('../../util/Constants');[m
[32m+[m[32mconst Util = require('../../util/Util');[m
[32m+[m
[32m+[m[32mclass GuildUpdateAction extends Action {[m
[32m+[m[32m  handle(data) {[m
[32m+[m[32m    const client = this.client;[m
[32m+[m
[32m+[m[32m    const guild = client.guilds.get(data.id);[m
[32m+[m[32m    if (guild) {[m
[32m+[m[32m      const oldGuild = Util.cloneObject(guild);[m
[32m+[m[32m      guild.setup(data);[m
[32m+[m[32m      client.emit(Constants.Events.GUILD_UPDATE, oldGuild, guild);[m
[32m+[m[32m      return {[m
[32m+[m[32m        old: oldGuild,[m
[32m+[m[32m        updated: guild,[m
[32m+[m[32m      };[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return {[m
[32m+[m[32m      old: null,[m
[32m+[m[32m      updated: null,[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Emitted whenever a guild is updated - e.g. name change.[m
[32m+[m[32m * @event Client#guildUpdate[m
[32m+[m[32m * @param {Guild} oldGuild The guild before the update[m
[32m+[m[32m * @param {Guild} newGuild The guild after the update[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mmodule.exports = GuildUpdateAction;[m
[1mdiff --git a/node_modules/discord.js/src/client/actions/MessageCreate.js b/node_modules/discord.js/src/client/actions/MessageCreate.js[m
[1mnew file mode 100644[m
[1mindex 0000000..532f80c[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/actions/MessageCreate.js[m
[36m@@ -0,0 +1,53 @@[m
[32m+[m[32mconst Action = require('./Action');[m
[32m+[m[32mconst Message = require('../../structures/Message');[m
[32m+[m
[32m+[m[32mclass MessageCreateAction extends Action {[m
[32m+[m[32m  handle(data) {[m
[32m+[m[32m    const client = this.client;[m
[32m+[m
[32m+[m[32m    const channel = client.channels.get((data instanceof Array ? data[0] : data).channel_id);[m
[32m+[m[32m    const user = client.users.get((data instanceof Array ? data[0] : data).author.id);[m
[32m+[m[32m    if (channel) {[m
[32m+[m[32m      const member = channel.guild ? channel.guild.member(user) : null;[m
[32m+[m[32m      if (data instanceof Array) {[m
[32m+[m[32m        const messages = new Array(data.length);[m
[32m+[m[32m        for (let i = 0; i < data.length; i++) {[m
[32m+[m[32m          messages[i] = channel._cacheMessage(new Message(channel, data[i], client));[m
[32m+[m[32m        }[m
[32m+[m[32m        const lastMessage = messages[messages.length - 1];[m
[32m+[m[32m        channel.lastMessageID = lastMessage.id;[m
[32m+[m[32m        if (user) {[m
[32m+[m[32m          user.lastMessageID = lastMessage.id;[m
[32m+[m[32m          user.lastMessage = lastMessage;[m
[32m+[m[32m        }[m
[32m+[m[32m        if (member) {[m
[32m+[m[32m          member.lastMessageID = lastMessage.id;[m
[32m+[m[32m          member.lastMessage = lastMessage;[m
[32m+[m[32m        }[m
[32m+[m[32m        return {[m
[32m+[m[32m          messages,[m
[32m+[m[32m        };[m
[32m+[m[32m      } else {[m
[32m+[m[32m        const message = channel._cacheMessage(new Message(channel, data, client));[m
[32m+[m[32m        channel.lastMessageID = data.id;[m
[32m+[m[32m        if (user) {[m
[32m+[m[32m          user.lastMessageID = data.id;[m
[32m+[m[32m          user.lastMessage = message;[m
[32m+[m[32m        }[m
[32m+[m[32m        if (member) {[m
[32m+[m[32m          member.lastMessageID = data.id;[m
[32m+[m[32m          member.lastMessage = message;[m
[32m+[m[32m        }[m
[32m+[m[32m        return {[m
[32m+[m[32m          message,[m
[32m+[m[32m        };[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return {[m
[32m+[m[32m      message: null,[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = MessageCreateAction;[m
[1mdiff --git a/node_modules/discord.js/src/client/actions/MessageDelete.js b/node_modules/discord.js/src/client/actions/MessageDelete.js[m
[1mnew file mode 100644[m
[1mindex 0000000..9dc0828[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/actions/MessageDelete.js[m
[36m@@ -0,0 +1,35 @@[m
[32m+[m[32mconst Action = require('./Action');[m
[32m+[m
[32m+[m[32mclass MessageDeleteAction extends Action {[m
[32m+[m[32m  constructor(client) {[m
[32m+[m[32m    super(client);[m
[32m+[m[32m    this.deleted = new Map();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  handle(data) {[m
[32m+[m[32m    const client = this.client;[m
[32m+[m[32m    const channel = client.channels.get(data.channel_id);[m
[32m+[m[32m    let message;[m
[32m+[m
[32m+[m[32m    if (channel) {[m
[32m+[m[32m      message = channel.messages.get(data.id);[m
[32m+[m[32m      if (message) {[m
[32m+[m[32m        channel.messages.delete(message.id);[m
[32m+[m[32m        this.deleted.set(channel.id + message.id, message);[m
[32m+[m[32m        this.scheduleForDeletion(channel.id, message.id);[m
[32m+[m[32m      } else {[m
[32m+[m[32m        message = this.deleted.get(channel.id + data.id) || null;[m
[32m+[m[32m      }[m
[32m+[m[32m      if (message) message.deleted = true;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return { message };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  scheduleForDeletion(channelID, messageID) {[m
[32m+[m[32m    this.client.setTimeout(() => this.deleted.delete(channelID + messageID),[m
[32m+[m[32m      this.client.options.restWsBridgeTimeout);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = MessageDeleteAction;[m
[1mdiff --git a/node_modules/discord.js/src/client/actions/MessageDeleteBulk.js b/node_modules/discord.js/src/client/actions/MessageDeleteBulk.js[m
[1mnew file mode 100644[m
[1mindex 0000000..7ee2455[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/actions/MessageDeleteBulk.js[m
[36m@@ -0,0 +1,26 @@[m
[32m+[m[32mconst Action = require('./Action');[m
[32m+[m[32mconst Collection = require('../../util/Collection');[m
[32m+[m[32mconst Constants = require('../../util/Constants');[m
[32m+[m
[32m+[m[32mclass MessageDeleteBulkAction extends Action {[m
[32m+[m[32m  handle(data) {[m
[32m+[m[32m    const messages = new Collection();[m
[32m+[m[32m    const channel = this.client.channels.get(data.channel_id);[m
[32m+[m
[32m+[m[32m    if (channel) {[m
[32m+[m[32m      for (const id of data.ids) {[m
[32m+[m[32m        const message = channel.messages.get(id);[m
[32m+[m[32m        if (message) {[m
[32m+[m[32m          message.deleted = true;[m
[32m+[m[32m          messages.set(message.id, message);[m
[32m+[m[32m          channel.messages.delete(id);[m
[32m+[m[32m        }[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (messages.size > 0) this.client.emit(Constants.Events.MESSAGE_BULK_DELETE, messages);[m
[32m+[m[32m    return { messages };[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = MessageDeleteBulkAction;[m
[1mdiff --git a/node_modules/discord.js/src/client/actions/MessageReactionAdd.js b/node_modules/discord.js/src/client/actions/MessageReactionAdd.js[m
[1mnew file mode 100644[m
[1mindex 0000000..d962953[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/actions/MessageReactionAdd.js[m
[36m@@ -0,0 +1,37 @@[m
[32m+[m[32mconst Action = require('./Action');[m
[32m+[m[32mconst Constants = require('../../util/Constants');[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m{ user_id: 'id',[m
[32m+[m[32m     message_id: 'id',[m
[32m+[m[32m     emoji: { name: '�', id: null },[m
[32m+[m[32m     channel_id: 'id' } }[m
[32m+[m[32m*/[m
[32m+[m
[32m+[m[32mclass MessageReactionAdd extends Action {[m
[32m+[m[32m  handle(data) {[m
[32m+[m[32m    const user = this.client.users.get(data.user_id);[m
[32m+[m[32m    if (!user) return false;[m
[32m+[m[32m    // Verify channel[m
[32m+[m[32m    const channel = this.client.channels.get(data.channel_id);[m
[32m+[m[32m    if (!channel || channel.type === 'voice') return false;[m
[32m+[m[32m    // Verify message[m
[32m+[m[32m    const message = channel.messages.get(data.message_id);[m
[32m+[m[32m    if (!message) return false;[m
[32m+[m[32m    if (!data.emoji) return false;[m
[32m+[m[32m    // Verify reaction[m
[32m+[m[32m    const reaction = message._addReaction(data.emoji, user);[m
[32m+[m[32m    if (reaction) this.client.emit(Constants.Events.MESSAGE_REACTION_ADD, reaction, user);[m
[32m+[m
[32m+[m[32m    return { message, reaction, user };[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Emitted whenever a reaction is added to a cached message.[m
[32m+[m[32m * @event Client#messageReactionAdd[m
[32m+[m[32m * @param {MessageReaction} messageReaction The reaction object[m
[32m+[m[32m * @param {User} user The user that applied the emoji or reaction emoji[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mmodule.exports = MessageReactionAdd;[m
[1mdiff --git a/node_modules/discord.js/src/client/actions/MessageReactionRemove.js b/node_modules/discord.js/src/client/actions/MessageReactionRemove.js[m
[1mnew file mode 100644[m
[1mindex 0000000..2403c3b[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/actions/MessageReactionRemove.js[m
[36m@@ -0,0 +1,37 @@[m
[32m+[m[32mconst Action = require('./Action');[m
[32m+[m[32mconst Constants = require('../../util/Constants');[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m{ user_id: 'id',[m
[32m+[m[32m     message_id: 'id',[m
[32m+[m[32m     emoji: { name: '�', id: null },[m
[32m+[m[32m     channel_id: 'id' } }[m
[32m+[m[32m*/[m
[32m+[m
[32m+[m[32mclass MessageReactionRemove extends Action {[m
[32m+[m[32m  handle(data) {[m
[32m+[m[32m    const user = this.client.users.get(data.user_id);[m
[32m+[m[32m    if (!user) return false;[m
[32m+[m[32m    // Verify channel[m
[32m+[m[32m    const channel = this.client.channels.get(data.channel_id);[m
[32m+[m[32m    if (!channel || channel.type === 'voice') return false;[m
[32m+[m[32m    // Verify message[m
[32m+[m[32m    const message = channel.messages.get(data.message_id);[m
[32m+[m[32m    if (!message) return false;[m
[32m+[m[32m    if (!data.emoji) return false;[m
[32m+[m[32m    // Verify reaction[m
[32m+[m[32m    const reaction = message._removeReaction(data.emoji, user);[m
[32m+[m[32m    if (reaction) this.client.emit(Constants.Events.MESSAGE_REACTION_REMOVE, reaction, user);[m
[32m+[m
[32m+[m[32m    return { message, reaction, user };[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Emitted whenever a reaction is removed from a cached message.[m
[32m+[m[32m * @event Client#messageReactionRemove[m
[32m+[m[32m * @param {MessageReaction} messageReaction The reaction object[m
[32m+[m[32m * @param {User} user The user whose emoji or reaction emoji was removed[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mmodule.exports = MessageReactionRemove;[m
[1mdiff --git a/node_modules/discord.js/src/client/actions/MessageReactionRemoveAll.js b/node_modules/discord.js/src/client/actions/MessageReactionRemoveAll.js[m
[1mnew file mode 100644[m
[1mindex 0000000..e365646[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/actions/MessageReactionRemoveAll.js[m
[36m@@ -0,0 +1,25 @@[m
[32m+[m[32mconst Action = require('./Action');[m
[32m+[m[32mconst Constants = require('../../util/Constants');[m
[32m+[m
[32m+[m[32mclass MessageReactionRemoveAll extends Action {[m
[32m+[m[32m  handle(data) {[m
[32m+[m[32m    const channel = this.client.channels.get(data.channel_id);[m
[32m+[m[32m    if (!channel || channel.type === 'voice') return false;[m
[32m+[m
[32m+[m[32m    const message = channel.messages.get(data.message_id);[m
[32m+[m[32m    if (!message) return false;[m
[32m+[m
[32m+[m[32m    message._clearReactions();[m
[32m+[m[32m    this.client.emit(Constants.Events.MESSAGE_REACTION_REMOVE_ALL, message);[m
[32m+[m
[32m+[m[32m    return { message };[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Emitted whenever all reactions are removed from a cached message.[m
[32m+[m[32m * @event Client#messageReactionRemoveAll[m
[32m+[m[32m * @param {Message} message The message the reactions were removed from[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mmodule.exports = MessageReactionRemoveAll;[m
[1mdiff --git a/node_modules/discord.js/src/client/actions/MessageUpdate.js b/node_modules/discord.js/src/client/actions/MessageUpdate.js[m
[1mnew file mode 100644[m
[1mindex 0000000..4e0392d[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/actions/MessageUpdate.js[m
[36m@@ -0,0 +1,40 @@[m
[32m+[m[32mconst Action = require('./Action');[m
[32m+[m[32mconst Constants = require('../../util/Constants');[m
[32m+[m
[32m+[m[32mclass MessageUpdateAction extends Action {[m
[32m+[m[32m  handle(data) {[m
[32m+[m[32m    const client = this.client;[m
[32m+[m
[32m+[m[32m    const channel = client.channels.get(data.channel_id);[m
[32m+[m[32m    if (channel) {[m
[32m+[m[32m      const message = channel.messages.get(data.id);[m
[32m+[m[32m      if (message) {[m
[32m+[m[32m        message.patch(data);[m
[32m+[m[32m        client.emit(Constants.Events.MESSAGE_UPDATE, message._edits[0], message);[m
[32m+[m[32m        return {[m
[32m+[m[32m          old: message._edits[0],[m
[32m+[m[32m          updated: message,[m
[32m+[m[32m        };[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      return {[m
[32m+[m[32m        old: message,[m
[32m+[m[32m        updated: message,[m
[32m+[m[32m      };[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return {[m
[32m+[m[32m      old: null,[m
[32m+[m[32m      updated: null,[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Emitted whenever a message is updated - e.g. embed or content change.[m
[32m+[m[32m * @event Client#messageUpdate[m
[32m+[m[32m * @param {Message} oldMessage The message before the update[m
[32m+[m[32m * @param {Message} newMessage The message after the update[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mmodule.exports = MessageUpdateAction;[m
[1mdiff --git a/node_modules/discord.js/src/client/actions/UserGet.js b/node_modules/discord.js/src/client/actions/UserGet.js[m
[1mnew file mode 100644[m
[1mindex 0000000..0ee85ae[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/actions/UserGet.js[m
[36m@@ -0,0 +1,11 @@[m
[32m+[m[32mconst Action = require('./Action');[m
[32m+[m
[32m+[m[32mclass UserGetAction extends Action {[m
[32m+[m[32m  handle(data) {[m
[32m+[m[32m    const client = this.client;[m
[32m+[m[32m    const user = client.dataManager.newUser(data);[m
[32m+[m[32m    return { user };[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = UserGetAction;[m
[1mdiff --git a/node_modules/discord.js/src/client/actions/UserNoteUpdate.js b/node_modules/discord.js/src/client/actions/UserNoteUpdate.js[m
[1mnew file mode 100644[m
[1mindex 0000000..4c2cc21[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/actions/UserNoteUpdate.js[m
[36m@@ -0,0 +1,30 @@[m
[32m+[m[32mconst Action = require('./Action');[m
[32m+[m[32mconst Constants = require('../../util/Constants');[m
[32m+[m
[32m+[m[32mclass UserNoteUpdateAction extends Action {[m
[32m+[m[32m  handle(data) {[m
[32m+[m[32m    const client = this.client;[m
[32m+[m
[32m+[m[32m    const oldNote = client.user.notes.get(data.id);[m
[32m+[m[32m    const note = data.note.length ? data.note : null;[m
[32m+[m
[32m+[m[32m    client.user.notes.set(data.id, note);[m
[32m+[m
[32m+[m[32m    client.emit(Constants.Events.USER_NOTE_UPDATE, data.id, oldNote, note);[m
[32m+[m
[32m+[m[32m    return {[m
[32m+[m[32m      old: oldNote,[m
[32m+[m[32m      updated: note,[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Emitted whenever a note is updated.[m
[32m+[m[32m * @event Client#userNoteUpdate[m
[32m+[m[32m * @param {User} user The user the note belongs to[m
[32m+[m[32m * @param {string} oldNote The note content before the update[m
[32m+[m[32m * @param {string} newNote The note content after the update[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mmodule.exports = UserNoteUpdateAction;[m
[1mdiff --git a/node_modules/discord.js/src/client/actions/UserUpdate.js b/node_modules/discord.js/src/client/actions/UserUpdate.js[m
[1mnew file mode 100644[m
[1mindex 0000000..6b917d1[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/actions/UserUpdate.js[m
[36m@@ -0,0 +1,33 @@[m
[32m+[m[32mconst Action = require('./Action');[m
[32m+[m[32mconst Constants = require('../../util/Constants');[m
[32m+[m[32mconst Util = require('../../util/Util');[m
[32m+[m
[32m+[m[32mclass UserUpdateAction extends Action {[m
[32m+[m[32m  handle(data) {[m
[32m+[m[32m    const client = this.client;[m
[32m+[m
[32m+[m[32m    if (client.user) {[m
[32m+[m[32m      if (client.user.equals(data)) {[m
[32m+[m[32m        return {[m
[32m+[m[32m          old: client.user,[m
[32m+[m[32m          updated: client.user,[m
[32m+[m[32m        };[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      const oldUser = Util.cloneObject(client.user);[m
[32m+[m[32m      client.user.patch(data);[m
[32m+[m[32m      client.emit(Constants.Events.USER_UPDATE, oldUser, client.user);[m
[32m+[m[32m      return {[m
[32m+[m[32m        old: oldUser,[m
[32m+[m[32m        updated: client.user,[m
[32m+[m[32m      };[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return {[m
[32m+[m[32m      old: null,[m
[32m+[m[32m      updated: null,[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = UserUpdateAction;[m
[1mdiff --git a/node_modules/discord.js/src/client/rest/APIRequest.js b/node_modules/discord.js/src/client/rest/APIRequest.js[m
[1mnew file mode 100644[m
[1mindex 0000000..3492fa7[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/rest/APIRequest.js[m
[36m@@ -0,0 +1,52 @@[m
[32m+[m[32mconst snekfetch = require('snekfetch');[m
[32m+[m[32mconst Constants = require('../../util/Constants');[m
[32m+[m
[32m+[m[32mclass APIRequest {[m
[32m+[m[32m  constructor(rest, method, path, auth, data, files, reason) {[m
[32m+[m[32m    this.rest = rest;[m
[32m+[m[32m    this.client = rest.client;[m
[32m+[m[32m    this.method = method;[m
[32m+[m[32m    this.path = path.toString();[m
[32m+[m[32m    this.auth = auth;[m
[32m+[m[32m    this.data = data;[m
[32m+[m[32m    this.files = files;[m
[32m+[m[32m    this.route = this.getRoute(this.path);[m
[32m+[m[32m    this.reason = reason;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  getRoute(url) {[m
[32m+[m[32m    let route = url.split('?')[0];[m
[32m+[m[32m    if (route.includes('/channels/') || route.includes('/guilds/')) {[m
[32m+[m[32m      const startInd = route.includes('/channels/') ? route.indexOf('/channels/') : route.indexOf('/guilds/');[m
[32m+[m[32m      const majorID = route.substring(startInd).split('/')[2];[m
[32m+[m[32m      route = route.replace(/(\d{8,})/g, ':id').replace(':id', majorID);[m
[32m+[m[32m    }[m
[32m+[m[32m    return route;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  getAuth() {[m
[32m+[m[32m    if (this.client.token && this.client.user && this.client.user.bot) {[m
[32m+[m[32m      return `Bot ${this.client.token}`;[m
[32m+[m[32m    } else if (this.client.token) {[m
[32m+[m[32m      return this.client.token;[m
[32m+[m[32m    }[m
[32m+[m[32m    throw new Error(Constants.Errors.NO_TOKEN);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  gen() {[m
[32m+[m[32m    const API = `${this.client.options.http.host}/api/v${this.client.options.http.version}`;[m
[32m+[m[32m    const request = snekfetch[this.method](`${API}${this.path}`);[m
[32m+[m[32m    if (this.auth) request.set('Authorization', this.getAuth());[m
[32m+[m[32m    if (this.reason) request.set('X-Audit-Log-Reason', encodeURIComponent(this.reason));[m
[32m+[m[32m    if (!this.rest.client.browser) request.set('User-Agent', this.rest.userAgentManager.userAgent);[m
[32m+[m[32m    if (this.files) {[m
[32m+[m[32m      for (const file of this.files) if (file && file.file) request.attach(file.name, file.file, file.name);[m
[32m+[m[32m      if (typeof this.data !== 'undefined') request.attach('payload_json', JSON.stringify(this.data));[m
[32m+[m[32m    } else if (this.data) {[m
[32m+[m[32m      request.send(this.data);[m
[32m+[m[32m    }[m
[32m+[m[32m    return request;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = APIRequest;[m
[1mdiff --git a/node_modules/discord.js/src/client/rest/DiscordAPIError.js b/node_modules/discord.js/src/client/rest/DiscordAPIError.js[m
[1mnew file mode 100644[m
[1mindex 0000000..f5f8336[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/rest/DiscordAPIError.js[m
[36m@@ -0,0 +1,60 @@[m
[32m+[m[32m/**[m
[32m+[m[32m * Represents an error from the Discord API.[m
[32m+[m[32m * @extends Error[m
[32m+[m[32m */[m
[32m+[m[32mclass DiscordAPIError extends Error {[m
[32m+[m[32m  constructor(path, error, method) {[m
[32m+[m[32m    super();[m
[32m+[m[32m    const flattened = this.constructor.flattenErrors(error.errors || error).join('\n');[m
[32m+[m[32m    this.name = 'DiscordAPIError';[m
[32m+[m[32m    this.message = error.message && flattened ? `${error.message}\n${flattened}` : error.message || flattened;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The path of the request relative to the HTTP endpoint[m
[32m+[m[32m     * @type {string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.path = path;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * HTTP error code returned by Discord[m
[32m+[m[32m     * @type {number}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.code = error.code;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The HTTP method used for the request[m
[32m+[m[32m     * @type {string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.method = method;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Flattens an errors object returned from the API into an array.[m
[32m+[m[32m   * @param {Object} obj Discord errors object[m
[32m+[m[32m   * @param {string} [key] Used internally to determine key names of nested fields[m
[32m+[m[32m   * @returns {string[]}[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  static flattenErrors(obj, key = '') {[m
[32m+[m[32m    let messages = [];[m
[32m+[m
[32m+[m[32m    for (const k of Object.keys(obj)) {[m
[32m+[m[32m      if (k === 'message') continue;[m
[32m+[m[32m      const newKey = key ? isNaN(k) ? `${key}.${k}` : `${key}[${k}]` : k;[m
[32m+[m
[32m+[m[32m      if (obj[k]._errors) {[m
[32m+[m[32m        messages.push(`${newKey}: ${obj[k]._errors.map(e => e.message).join(' ')}`);[m
[32m+[m[32m      } else if (obj[k].code || obj[k].message) {[m
[32m+[m[32m        messages.push(`${obj[k].code ? `${obj[k].code}: ` : ''}: ${obj[k].message}`.trim());[m
[32m+[m[32m      } else if (typeof obj[k] === 'string') {[m
[32m+[m[32m        messages.push(obj[k]);[m
[32m+[m[32m      } else {[m
[32m+[m[32m        messages = messages.concat(this.flattenErrors(obj[k], newKey));[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return messages;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = DiscordAPIError;[m
[1mdiff --git a/node_modules/discord.js/src/client/rest/RESTManager.js b/node_modules/discord.js/src/client/rest/RESTManager.js[m
[1mnew file mode 100644[m
[1mindex 0000000..ee64712[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/rest/RESTManager.js[m
[36m@@ -0,0 +1,58 @@[m
[32m+[m[32mconst UserAgentManager = require('./UserAgentManager');[m
[32m+[m[32mconst RESTMethods = require('./RESTMethods');[m
[32m+[m[32mconst SequentialRequestHandler = require('./RequestHandlers/Sequential');[m
[32m+[m[32mconst BurstRequestHandler = require('./RequestHandlers/Burst');[m
[32m+[m[32mconst APIRequest = require('./APIRequest');[m
[32m+[m[32mconst Constants = require('../../util/Constants');[m
[32m+[m
[32m+[m[32mclass RESTManager {[m
[32m+[m[32m  constructor(client) {[m
[32m+[m[32m    this.client = client;[m
[32m+[m[32m    this.handlers = {};[m
[32m+[m[32m    this.userAgentManager = new UserAgentManager(this);[m
[32m+[m[32m    this.methods = new RESTMethods(this);[m
[32m+[m[32m    this.rateLimitedEndpoints = {};[m
[32m+[m[32m    this.globallyRateLimited = false;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  destroy() {[m
[32m+[m[32m    for (const handlerKey of Object.keys(this.handlers)) {[m
[32m+[m[32m      const handler = this.handlers[handlerKey];[m
[32m+[m[32m      if (handler.destroy) handler.destroy();[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  push(handler, apiRequest) {[m
[32m+[m[32m    return new Promise((resolve, reject) => {[m
[32m+[m[32m      handler.push({[m
[32m+[m[32m        request: apiRequest,[m
[32m+[m[32m        resolve,[m
[32m+[m[32m        reject,[m
[32m+[m[32m        retries: 0,[m
[32m+[m[32m      });[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  getRequestHandler() {[m
[32m+[m[32m    switch (this.client.options.apiRequestMethod) {[m
[32m+[m[32m      case 'sequential':[m
[32m+[m[32m        return SequentialRequestHandler;[m
[32m+[m[32m      case 'burst':[m
[32m+[m[32m        return BurstRequestHandler;[m
[32m+[m[32m      default:[m
[32m+[m[32m        throw new Error(Constants.Errors.INVALID_RATE_LIMIT_METHOD);[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  makeRequest(method, url, auth, data, file, reason) {[m
[32m+[m[32m    const apiRequest = new APIRequest(this, method, url, auth, data, file, reason);[m
[32m+[m[32m    if (!this.handlers[apiRequest.route]) {[m
[32m+[m[32m      const RequestHandlerType = this.getRequestHandler();[m
[32m+[m[32m      this.handlers[apiRequest.route] = new RequestHandlerType(this, apiRequest.route);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return this.push(this.handlers[apiRequest.route], apiRequest);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = RESTManager;[m
[1mdiff --git a/node_modules/discord.js/src/client/rest/RESTMethods.js b/node_modules/discord.js/src/client/rest/RESTMethods.js[m
[1mnew file mode 100644[m
[1mindex 0000000..36bc371[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/rest/RESTMethods.js[m
[36m@@ -0,0 +1,1006 @@[m
[32m+[m[32mconst querystring = require('querystring');[m
[32m+[m[32mconst long = require('long');[m
[32m+[m[32mconst Permissions = require('../../util/Permissions');[m
[32m+[m[32mconst Constants = require('../../util/Constants');[m
[32m+[m[32mconst Endpoints = Constants.Endpoints;[m
[32m+[m[32mconst Collection = require('../../util/Collection');[m
[32m+[m[32mconst Util = require('../../util/Util');[m
[32m+[m[32mconst resolvePermissions = require('../../structures/shared/resolvePermissions');[m
[32m+[m
[32m+[m[32mconst RichEmbed = require('../../structures/RichEmbed');[m
[32m+[m[32mconst User = require('../../structures/User');[m
[32m+[m[32mconst GuildMember = require('../../structures/GuildMember');[m
[32m+[m[32mconst Message = require('../../structures/Message');[m
[32m+[m[32mconst Role = require('../../structures/Role');[m
[32m+[m[32mconst Invite = require('../../structures/Invite');[m
[32m+[m[32mconst Webhook = require('../../structures/Webhook');[m
[32m+[m[32mconst UserProfile = require('../../structures/UserProfile');[m
[32m+[m[32mconst OAuth2Application = require('../../structures/OAuth2Application');[m
[32m+[m[32mconst Channel = require('../../structures/Channel');[m
[32m+[m[32mconst GroupDMChannel = require('../../structures/GroupDMChannel');[m
[32m+[m[32mconst Guild = require('../../structures/Guild');[m
[32m+[m[32mconst VoiceRegion = require('../../structures/VoiceRegion');[m
[32m+[m[32mconst GuildAuditLogs = require('../../structures/GuildAuditLogs');[m
[32m+[m
[32m+[m[32mclass RESTMethods {[m
[32m+[m[32m  constructor(restManager) {[m
[32m+[m[32m    this.rest = restManager;[m
[32m+[m[32m    this.client = restManager.client;[m
[32m+[m[32m    this._ackToken = null;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  login(token = this.client.token) {[m
[32m+[m[32m    return new Promise((resolve, reject) => {[m
[32m+[m[32m      if (!token || typeof token !== 'string') throw new Error(Constants.Errors.INVALID_TOKEN);[m
[32m+[m[32m      token = token.replace(/^Bot\s*/i, '');[m
[32m+[m[32m      this.client.manager.connectToWebSocket(token, resolve, reject);[m
[32m+[m[32m    }).catch(e => {[m
[32m+[m[32m      this.client.destroy();[m
[32m+[m[32m      return Promise.reject(e);[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  logout() {[m
[32m+[m[32m    return this.rest.makeRequest('post', Endpoints.logout, true, {});[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  getGateway(bot = false) {[m
[32m+[m[32m    return this.rest.makeRequest('get', bot ? Endpoints.gateway.bot : Endpoints.gateway, true);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  fetchVoiceRegions(guildID) {[m
[32m+[m[32m    let endpoint;[m
[32m+[m[32m    if (guildID) endpoint = Endpoints.Guild(guildID).voiceRegions;[m
[32m+[m[32m    else endpoint = Endpoints.voiceRegions;[m
[32m+[m[32m    return this.rest.makeRequest('get', endpoint, true).then(res => {[m
[32m+[m[32m      const regions = new Collection();[m
[32m+[m[32m      for (const region of res) regions.set(region.id, new VoiceRegion(region));[m
[32m+[m[32m      return regions;[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  fetchEmbed(guildID) {[m
[32m+[m[32m    return this.rest.makeRequest('get', Endpoints.Guild(guildID).embed, true).then(data => ({[m
[32m+[m[32m      enabled: data.enabled,[m
[32m+[m[32m      channel: data.channel_id ? this.client.channels.get(data.channel_id) : null,[m
[32m+[m[32m    }));[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  sendMessage(channel, content, { tts, nonce, embed, disableEveryone, split, code, reply } = {}, files = null) {[m
[32m+[m[32m    return new Promise((resolve, reject) => { // eslint-disable-line complexity[m
[32m+[m[32m      if (typeof content !== 'undefined') content = this.client.resolver.resolveString(content);[m
[32m+[m
[32m+[m[32m      // The nonce has to be a uint64 :<[m
[32m+[m[32m      if (typeof nonce !== 'undefined') {[m
[32m+[m[32m        nonce = parseInt(nonce);[m
[32m+[m[32m        if (isNaN(nonce) || nonce < 0) throw new RangeError('Message nonce must fit in an unsigned 64-bit integer.');[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      if (content) {[m
[32m+[m[32m        if (split && typeof split !== 'object') split = {};[m
[32m+[m
[32m+[m[32m        // Wrap everything in a code block[m
[32m+[m[32m        if (typeof code !== 'undefined' && (typeof code !== 'boolean' || code === true)) {[m
[32m+[m[32m          content = Util.escapeMarkdown(this.client.resolver.resolveString(content), true);[m
[32m+[m[32m          content = `\`\`\`${typeof code !== 'boolean' ? code || '' : ''}\n${content}\n\`\`\``;[m
[32m+[m[32m          if (split) {[m
[32m+[m[32m            split.prepend = `\`\`\`${typeof code !== 'boolean' ? code || '' : ''}\n`;[m
[32m+[m[32m            split.append = '\n```';[m
[32m+[m[32m          }[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        // Add zero-width spaces to @everyone/@here[m
[32m+[m[32m        if (disableEveryone || (typeof disableEveryone === 'undefined' && this.client.options.disableEveryone)) {[m
[32m+[m[32m          content = content.replace(/@(everyone|here)/g, '@\u200b$1');[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        // Add the reply prefix[m
[32m+[m[32m        if (reply && !(channel instanceof User || channel instanceof GuildMember) && channel.type !== 'dm') {[m
[32m+[m[32m          const id = this.client.resolver.resolveUserID(reply);[m
[32m+[m[32m          const mention = `<@${reply instanceof GuildMember && reply.nickname ? '!' : ''}${id}>`;[m
[32m+[m[32m          content = `${mention}${content ? `, ${content}` : ''}`;[m
[32m+[m[32m          if (split) split.prepend = `${mention}, ${split.prepend || ''}`;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        // Split the content[m
[32m+[m[32m        if (split) content = Util.splitMessage(content, split);[m
[32m+[m[32m      } else if (reply && !(channel instanceof User || channel instanceof GuildMember) && channel.type !== 'dm') {[m
[32m+[m[32m        const id = this.client.resolver.resolveUserID(reply);[m
[32m+[m[32m        content = `<@${reply instanceof GuildMember && reply.nickname ? '!' : ''}${id}>`;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      const send = chan => {[m
[32m+[m[32m        if (content instanceof Array) {[m
[32m+[m[32m          const messages = [];[m
[32m+[m[32m          (function sendChunk(list, index) {[m
[32m+[m[32m            const options = index === list.length - 1 ? { tts, embed, files } : { tts };[m
[32m+[m[32m            chan.send(list[index], options).then(message => {[m
[32m+[m[32m              messages.push(message);[m
[32m+[m[32m              if (index >= list.length - 1) return resolve(messages);[m
[32m+[m[32m              return sendChunk(list, ++index);[m
[32m+[m[32m            }).catch(reject);[m
[32m+[m[32m          }(content, 0));[m
[32m+[m[32m        } else {[m
[32m+[m[32m          this.rest.makeRequest('post', Endpoints.Channel(chan).messages, true, {[m
[32m+[m[32m            content, tts, nonce, embed,[m
[32m+[m[32m          }, files).then(data => resolve(this.client.actions.MessageCreate.handle(data).message), reject);[m
[32m+[m[32m        }[m
[32m+[m[32m      };[m
[32m+[m
[32m+[m[32m      if (channel instanceof User || channel instanceof GuildMember) this.createDM(channel).then(send, reject);[m
[32m+[m[32m      else send(channel);[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  updateMessage(message, content, { embed, code, reply } = {}) {[m
[32m+[m[32m    if (typeof content !== 'undefined') content = this.client.resolver.resolveString(content);[m
[32m+[m
[32m+[m[32m    // Wrap everything in a code block[m
[32m+[m[32m    if (typeof code !== 'undefined' && (typeof code !== 'boolean' || code === true)) {[m
[32m+[m[32m      content = Util.escapeMarkdown(this.client.resolver.resolveString(content), true);[m
[32m+[m[32m      content = `\`\`\`${typeof code !== 'boolean' ? code || '' : ''}\n${content}\n\`\`\``;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // Add the reply prefix[m
[32m+[m[32m    if (reply && message.channel.type !== 'dm') {[m
[32m+[m[32m      const id = this.client.resolver.resolveUserID(reply);[m
[32m+[m[32m      const mention = `<@${reply instanceof GuildMember && reply.nickname ? '!' : ''}${id}>`;[m
[32m+[m[32m      content = `${mention}${content ? `, ${content}` : ''}`;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (embed instanceof RichEmbed) embed = embed._apiTransform();[m
[32m+[m
[32m+[m[32m    return this.rest.makeRequest('patch', Endpoints.Message(message), true, {[m
[32m+[m[32m      content, embed,[m
[32m+[m[32m    }).then(data => this.client.actions.MessageUpdate.handle(data).updated);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  deleteMessage(message) {[m
[32m+[m[32m    return this.rest.makeRequest('delete', Endpoints.Message(message), true)[m
[32m+[m[32m      .then(() =>[m
[32m+[m[32m        this.client.actions.MessageDelete.handle({[m
[32m+[m[32m          id: message.id,[m
[32m+[m[32m          channel_id: message.channel.id,[m
[32m+[m[32m        }).message[m
[32m+[m[32m      );[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  ackMessage(message) {[m
[32m+[m[32m    return this.rest.makeRequest('post', Endpoints.Message(message).ack, true, { token: this._ackToken }).then(res => {[m
[32m+[m[32m      if (res.token) this._ackToken = res.token;[m
[32m+[m[32m      return message;[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  ackTextChannel(channel) {[m
[32m+[m[32m    return this.rest.makeRequest('post', Endpoints.Channel(channel).Message(channel.lastMessageID).ack, true, {[m
[32m+[m[32m      token: this._ackToken,[m
[32m+[m[32m    }).then(res => {[m
[32m+[m[32m      if (res.token) this._ackToken = res.token;[m
[32m+[m[32m      return channel;[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  ackGuild(guild) {[m
[32m+[m[32m    return this.rest.makeRequest('post', Endpoints.Guild(guild).ack, true).then(() => guild);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  bulkDeleteMessages(channel, messages) {[m
[32m+[m[32m    return this.rest.makeRequest('post', Endpoints.Channel(channel).messages.bulkDelete, true, {[m
[32m+[m[32m      messages: messages,[m
[32m+[m[32m    }).then(() =>[m
[32m+[m[32m      this.client.actions.MessageDeleteBulk.handle({[m
[32m+[m[32m        channel_id: channel.id,[m
[32m+[m[32m        ids: messages,[m
[32m+[m[32m      }).messages[m
[32m+[m[32m    );[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  search(target, options) {[m
[32m+[m[32m    if (typeof options === 'string') options = { content: options };[m
[32m+[m[32m    if (options.before) {[m
[32m+[m[32m      if (!(options.before instanceof Date)) options.before = new Date(options.before);[m
[32m+[m[32m      options.maxID = long.fromNumber(options.before.getTime() - 14200704e5).shiftLeft(22).toString();[m
[32m+[m[32m    }[m
[32m+[m[32m    if (options.after) {[m
[32m+[m[32m      if (!(options.after instanceof Date)) options.after = new Date(options.after);[m
[32m+[m[32m      options.minID = long.fromNumber(options.after.getTime() - 14200704e5).shiftLeft(22).toString();[m
[32m+[m[32m    }[m
[32m+[m[32m    if (options.during) {[m
[32m+[m[32m      if (!(options.during instanceof Date)) options.during = new Date(options.during);[m
[32m+[m[32m      const t = options.during.getTime() - 14200704e5;[m
[32m+[m[32m      options.minID = long.fromNumber(t).shiftLeft(22).toString();[m
[32m+[m[32m      options.maxID = long.fromNumber(t + 86400000).shiftLeft(22).toString();[m
[32m+[m[32m    }[m
[32m+[m[32m    if (options.channel) options.channel = this.client.resolver.resolveChannelID(options.channel);[m
[32m+[m[32m    if (options.author) options.author = this.client.resolver.resolveUserID(options.author);[m
[32m+[m[32m    if (options.mentions) options.mentions = this.client.resolver.resolveUserID(options.options.mentions);[m
[32m+[m[32m    options = {[m
[32m+[m[32m      content: options.content,[m
[32m+[m[32m      max_id: options.maxID,[m
[32m+[m[32m      min_id: options.minID,[m
[32m+[m[32m      has: options.has,[m
[32m+[m[32m      channel_id: options.channel,[m
[32m+[m[32m      author_id: options.author,[m
[32m+[m[32m      author_type: options.authorType,[m
[32m+[m[32m      context_size: options.contextSize,[m
[32m+[m[32m      sort_by: options.sortBy,[m
[32m+[m[32m      sort_order: options.sortOrder,[m
[32m+[m[32m      limit: options.limit,[m
[32m+[m[32m      offset: options.offset,[m
[32m+[m[32m      mentions: options.mentions,[m
[32m+[m[32m      mentions_everyone: options.mentionsEveryone,[m
[32m+[m[32m      link_hostname: options.linkHostname,[m
[32m+[m[32m      embed_provider: options.embedProvider,[m
[32m+[m[32m      embed_type: options.embedType,[m
[32m+[m[32m      attachment_filename: options.attachmentFilename,[m
[32m+[m[32m      attachment_extension: options.attachmentExtension,[m
[32m+[m[32m      include_nsfw: options.nsfw,[m
[32m+[m[32m    };[m
[32m+[m
[32m+[m[32m    for (const key in options) if (options[key] === undefined) delete options[key];[m
[32m+[m[32m    const queryString = (querystring.stringify(options).match(/[^=&?]+=[^=&?]+/g) || []).join('&');[m
[32m+[m
[32m+[m[32m    let endpoint;[m
[32m+[m[32m    if (target instanceof Channel) {[m
[32m+[m[32m      endpoint = Endpoints.Channel(target).search;[m
[32m+[m[32m    } else if (target instanceof Guild) {[m
[32m+[m[32m      endpoint = Endpoints.Guild(target).search;[m
[32m+[m[32m    } else {[m
[32m+[m[32m      throw new TypeError('Target must be a TextChannel, DMChannel, GroupDMChannel, or Guild.');[m
[32m+[m[32m    }[m
[32m+[m[32m    return this.rest.makeRequest('get', `${endpoint}?${queryString}`, true).then(body => {[m
[32m+[m[32m      const messages = body.messages.map(x =>[m
[32m+[m[32m        x.map(m => new Message(this.client.channels.get(m.channel_id), m, this.client))[m
[32m+[m[32m      );[m
[32m+[m[32m      return {[m
[32m+[m[32m        totalResults: body.total_results,[m
[32m+[m[32m        messages,[m
[32m+[m[32m      };[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  createChannel(guild, name, options) {[m
[32m+[m[32m    const {[m
[32m+[m[32m      type,[m
[32m+[m[32m      topic,[m
[32m+[m[32m      nsfw,[m
[32m+[m[32m      bitrate,[m
[32m+[m[32m      userLimit,[m
[32m+[m[32m      parent,[m
[32m+[m[32m      permissionOverwrites,[m
[32m+[m[32m      position,[m
[32m+[m[32m      rateLimitPerUser,[m
[32m+[m[32m      reason,[m
[32m+[m[32m    } = options;[m
[32m+[m[32m    return this.rest.makeRequest('post', Endpoints.Guild(guild).channels, true, {[m
[32m+[m[32m      name,[m
[32m+[m[32m      topic,[m
[32m+[m[32m      type: type ? Constants.ChannelTypes[type.toUpperCase()] : 'text',[m
[32m+[m[32m      nsfw,[m
[32m+[m[32m      bitrate,[m
[32m+[m[32m      user_limit: userLimit,[m
[32m+[m[32m      parent_id: parent instanceof Channel ? parent.id : parent,[m
[32m+[m[32m      permission_overwrites: resolvePermissions.call(this, permissionOverwrites, guild),[m
[32m+[m[32m      position,[m
[32m+[m[32m      rate_limit_per_user: rateLimitPerUser,[m
[32m+[m[32m    },[m
[32m+[m[32m    undefined,[m
[32m+[m[32m    reason).then(data => this.client.actions.ChannelCreate.handle(data).channel);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  createDM(recipient) {[m
[32m+[m[32m    const dmChannel = this.getExistingDM(recipient);[m
[32m+[m[32m    if (dmChannel) return Promise.resolve(dmChannel);[m
[32m+[m[32m    return this.rest.makeRequest('post', Endpoints.User(this.client.user).channels, true, {[m
[32m+[m[32m      recipient_id: recipient.id,[m
[32m+[m[32m    }).then(data => this.client.actions.ChannelCreate.handle(data).channel);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  createGroupDM(options) {[m
[32m+[m[32m    const data = this.client.user.bot ?[m
[32m+[m[32m      { access_tokens: options.accessTokens, nicks: options.nicks } :[m
[32m+[m[32m      { recipients: options.recipients };[m
[32m+[m[32m    return this.rest.makeRequest('post', Endpoints.User('@me').channels, true, data)[m
[32m+[m[32m      .then(res => new GroupDMChannel(this.client, res));[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  addUserToGroupDM(channel, options) {[m
[32m+[m[32m    const data = this.client.user.bot ?[m
[32m+[m[32m      { nick: options.nick, access_token: options.accessToken } :[m
[32m+[m[32m      { recipient: options.id };[m
[32m+[m[32m    return this.rest.makeRequest('put', Endpoints.Channel(channel).Recipient(options.id), true, data)[m
[32m+[m[32m      .then(() => channel);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  removeUserFromGroupDM(channel, userId) {[m
[32m+[m[32m    return this.rest.makeRequest('delete', Endpoints.Channel(channel).Recipient(userId), true)[m
[32m+[m[32m      .then(() => channel);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  updateGroupDMChannel(channel, _data) {[m
[32m+[m[32m    const data = {};[m
[32m+[m[32m    data.name = _data.name;[m
[32m+[m[32m    data.icon = _data.icon;[m
[32m+[m[32m    return this.rest.makeRequest('patch', Endpoints.Channel(channel), true, data).then(() => channel);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  getExistingDM(recipient) {[m
[32m+[m[32m    return this.client.channels.find(channel =>[m
[32m+[m[32m      channel.recipient && channel.recipient.id === recipient.id[m
[32m+[m[32m    );[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  deleteChannel(channel, reason) {[m
[32m+[m[32m    if (channel instanceof User || channel instanceof GuildMember) channel = this.getExistingDM(channel);[m
[32m+[m[32m    if (!channel) return Promise.reject(new Error('No channel to delete.'));[m
[32m+[m[32m    return this.rest.makeRequest('delete', Endpoints.Channel(channel), true, undefined, undefined, reason)[m
[32m+[m[32m      .then(data => {[m
[32m+[m[32m        data.id = channel.id;[m
[32m+[m[32m        return this.client.actions.ChannelDelete.handle(data).channel;[m
[32m+[m[32m      });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  updateChannel(channel, _data, reason) {[m
[32m+[m[32m    const data = {};[m
[32m+[m[32m    data.name = (_data.name || channel.name).trim();[m
[32m+[m[32m    data.topic = typeof _data.topic === 'undefined' ? channel.topic : _data.topic;[m
[32m+[m[32m    data.nsfw = typeof _data.nsfw === 'undefined' ? channel.nsfw : _data.nsfw;[m
[32m+[m[32m    data.position = _data.position || channel.position;[m
[32m+[m[32m    data.bitrate = _data.bitrate || (channel.bitrate ? channel.bitrate * 1000 : undefined);[m
[32m+[m[32m    data.user_limit = typeof _data.userLimit !== 'undefined' ? _data.userLimit : channel.userLimit;[m
[32m+[m[32m    data.parent_id = _data.parent instanceof Channel ? _data.parent.id : _data.parent;[m
[32m+[m[32m    data.permission_overwrites = _data.permissionOverwrites ?[m
[32m+[m[32m      resolvePermissions.call(this, _data.permissionOverwrites, channel.guild) : undefined;[m
[32m+[m[32m    data.rate_limit_per_user = typeof _data.rateLimitPerUser !== 'undefined' ?[m
[32m+[m[32m      _data.rateLimitPerUser : channel.rateLimitPerUser;[m
[32m+[m[32m    return this.rest.makeRequest('patch', Endpoints.Channel(channel), true, data, undefined, reason).then(newData =>[m
[32m+[m[32m      this.client.actions.ChannelUpdate.handle(newData).updated[m
[32m+[m[32m    );[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  leaveGuild(guild) {[m
[32m+[m[32m    if (guild.ownerID === this.client.user.id) return Promise.reject(new Error('Guild is owned by the client.'));[m
[32m+[m[32m    return this.rest.makeRequest('delete', Endpoints.User('@me').Guild(guild.id), true).then(() =>[m
[32m+[m[32m      this.client.actions.GuildDelete.handle({ id: guild.id }).guild[m
[32m+[m[32m    );[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  createGuild(options) {[m
[32m+[m[32m    options.icon = this.client.resolver.resolveBase64(options.icon) || null;[m
[32m+[m[32m    options.region = options.region || 'us-central';[m
[32m+[m[32m    return new Promise((resolve, reject) => {[m
[32m+[m[32m      this.rest.makeRequest('post', Endpoints.guilds, true, options).then(data => {[m
[32m+[m[32m        if (this.client.guilds.has(data.id)) return resolve(this.client.guilds.get(data.id));[m
[32m+[m
[32m+[m[32m        const handleGuild = guild => {[m
[32m+[m[32m          if (guild.id === data.id) {[m
[32m+[m[32m            this.client.removeListener(Constants.Events.GUILD_CREATE, handleGuild);[m
[32m+[m[32m            this.client.clearTimeout(timeout);[m
[32m+[m[32m            resolve(guild);[m
[32m+[m[32m          }[m
[32m+[m[32m        };[m
[32m+[m[32m        this.client.on(Constants.Events.GUILD_CREATE, handleGuild);[m
[32m+[m
[32m+[m[32m        const timeout = this.client.setTimeout(() => {[m
[32m+[m[32m          this.client.removeListener(Constants.Events.GUILD_CREATE, handleGuild);[m
[32m+[m[32m          reject(new Error('Took too long to receive guild data.'));[m
[32m+[m[32m        }, 10000);[m
[32m+[m[32m        return undefined;[m
[32m+[m[32m      }, reject);[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  // Untested but probably will work[m
[32m+[m[32m  deleteGuild(guild) {[m
[32m+[m[32m    return this.rest.makeRequest('delete', Endpoints.Guild(guild), true).then(() =>[m
[32m+[m[32m      this.client.actions.GuildDelete.handle({ id: guild.id }).guild[m
[32m+[m[32m    );[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  getUser(userID, cache) {[m
[32m+[m[32m    return this.rest.makeRequest('get', Endpoints.User(userID), true).then(data => {[m
[32m+[m[32m      if (cache) return this.client.actions.UserGet.handle(data).user;[m
[32m+[m[32m      else return new User(this.client, data);[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  updateCurrentUser(_data, password) {[m
[32m+[m[32m    const user = this.client.user;[m
[32m+[m[32m    const data = {};[m
[32m+[m[32m    data.username = _data.username || user.username;[m
[32m+[m[32m    data.avatar = typeof _data.avatar === 'undefined' ? user.avatar : this.client.resolver.resolveBase64(_data.avatar);[m
[32m+[m[32m    if (!user.bot) {[m
[32m+[m[32m      data.email = _data.email || user.email;[m
[32m+[m[32m      data.password = password;[m
[32m+[m[32m      if (_data.new_password) data.new_password = _data.newPassword;[m
[32m+[m[32m    }[m
[32m+[m[32m    return this.rest.makeRequest('patch', Endpoints.User('@me'), true, data).then(newData =>[m
[32m+[m[32m      this.client.actions.UserUpdate.handle(newData).updated[m
[32m+[m[32m    );[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  updateGuild(guild, data, reason) {[m
[32m+[m[32m    return this.rest.makeRequest('patch', Endpoints.Guild(guild), true, data, undefined, reason).then(newData =>[m
[32m+[m[32m      this.client.actions.GuildUpdate.handle(newData).updated[m
[32m+[m[32m    );[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  kickGuildMember(guild, member, reason) {[m
[32m+[m[32m    return this.rest.makeRequest([m
[32m+[m[32m      'delete', Endpoints.Guild(guild).Member(member), true,[m
[32m+[m[32m      undefined, undefined, reason)[m
[32m+[m[32m      .then(() => member);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  createGuildRole(guild, data, reason) {[m
[32m+[m[32m    if (data.color) data.color = this.client.resolver.resolveColor(data.color);[m
[32m+[m[32m    if (data.permissions) data.permissions = Permissions.resolve(data.permissions);[m
[32m+[m[32m    return this.rest.makeRequest('post', Endpoints.Guild(guild).roles, true, data, undefined, reason).then(r => {[m
[32m+[m[32m      const { role } = this.client.actions.GuildRoleCreate.handle({[m
[32m+[m[32m        guild_id: guild.id,[m
[32m+[m[32m        role: r,[m
[32m+[m[32m      });[m
[32m+[m[32m      if (data.position) return role.setPosition(data.position, reason);[m
[32m+[m[32m      return role;[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  deleteGuildRole(role, reason) {[m
[32m+[m[32m    return this.rest.makeRequest([m
[32m+[m[32m      'delete', Endpoints.Guild(role.guild).Role(role.id), true,[m
[32m+[m[32m      undefined, undefined, reason)[m
[32m+[m[32m      .then(() =>[m
[32m+[m[32m        this.client.actions.GuildRoleDelete.handle({[m
[32m+[m[32m          guild_id: role.guild.id,[m
[32m+[m[32m          role_id: role.id,[m
[32m+[m[32m        }).role[m
[32m+[m[32m      );[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  setChannelOverwrite(channel, payload) {[m
[32m+[m[32m    return this.rest.makeRequest('put', `${Endpoints.Channel(channel).permissions}/${payload.id}`, true, payload);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  deletePermissionOverwrites(overwrite, reason) {[m
[32m+[m[32m    return this.rest.makeRequest([m
[32m+[m[32m      'delete', `${Endpoints.Channel(overwrite.channel).permissions}/${overwrite.id}`,[m
[32m+[m[32m      true, undefined, undefined, reason[m
[32m+[m[32m    ).then(() => overwrite);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  getChannelMessages(channel, payload = {}) {[m
[32m+[m[32m    const params = [];[m
[32m+[m[32m    if (payload.limit) params.push(`limit=${payload.limit}`);[m
[32m+[m[32m    if (payload.around) params.push(`around=${payload.around}`);[m
[32m+[m[32m    else if (payload.before) params.push(`before=${payload.before}`);[m
[32m+[m[32m    else if (payload.after) params.push(`after=${payload.after}`);[m
[32m+[m
[32m+[m[32m    let endpoint = Endpoints.Channel(channel).messages;[m
[32m+[m[32m    if (params.length > 0) endpoint += `?${params.join('&')}`;[m
[32m+[m[32m    return this.rest.makeRequest('get', endpoint, true);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  getChannelMessage(channel, messageID) {[m
[32m+[m[32m    const msg = channel.messages.get(messageID);[m
[32m+[m[32m    if (msg) return Promise.resolve(msg);[m
[32m+[m[32m    return this.rest.makeRequest('get', Endpoints.Channel(channel).Message(messageID), true);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  putGuildMember(guild, userID, options) {[m
[32m+[m[32m    options.access_token = options.accessToken;[m
[32m+[m[32m    if (options.roles) {[m
[32m+[m[32m      const roles = options.roles;[m
[32m+[m[32m      if (roles instanceof Collection || (roles instanceof Array && roles[0] instanceof Role)) {[m
[32m+[m[32m        options.roles = roles.map(role => role.id);[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m    return this.rest.makeRequest('put', Endpoints.Guild(guild).Member(userID), true, options)[m
[32m+[m[32m      .then(data => this.client.actions.GuildMemberGet.handle(guild, data).member);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  getGuildMember(guild, user, cache) {[m
[32m+[m[32m    return this.rest.makeRequest('get', Endpoints.Guild(guild).Member(user.id), true).then(data => {[m
[32m+[m[32m      if (cache) return this.client.actions.GuildMemberGet.handle(guild, data).member;[m
[32m+[m[32m      else return new GuildMember(guild, data);[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  updateGuildMember(member, data, reason) {[m
[32m+[m[32m    if (data.channel) {[m
[32m+[m[32m      const channel = this.client.resolver.resolveChannel(data.channel);[m
[32m+[m[32m      if (!channel || channel.guild.id !== member.guild.id || channel.type !== 'voice') {[m
[32m+[m[32m        return Promise.reject(new Error('Could not resolve channel to a guild voice channel.'));[m
[32m+[m[32m      }[m
[32m+[m[32m      data.channel_id = channel.id;[m
[32m+[m[32m      data.channel = undefined;[m
[32m+[m[32m    } else if (data.channel === null) {[m
[32m+[m[32m      data.channel_id = null;[m
[32m+[m[32m      data.channel = undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    if (data.roles) data.roles = data.roles.map(role => role instanceof Role ? role.id : role);[m
[32m+[m
[32m+[m[32m    let endpoint = Endpoints.Member(member);[m
[32m+[m[32m    // Fix your endpoints, discord ;-;[m
[32m+[m[32m    if (member.id === this.client.user.id) {[m
[32m+[m[32m      const keys = Object.keys(data);[m
[32m+[m[32m      if (keys.length === 1 && keys[0] === 'nick') {[m
[32m+[m[32m        endpoint = Endpoints.Member(member).nickname;[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return this.rest.makeRequest('patch', endpoint, true, data, undefined, reason).then(newData =>[m
[32m+[m[32m      member.guild._updateMember(member, newData).mem[m
[32m+[m[32m    );[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  addMemberRole(member, role, reason) {[m
[32m+[m[32m    return new Promise((resolve, reject) => {[m
[32m+[m[32m      if (member._roles.includes(role.id)) return resolve(member);[m
[32m+[m
[32m+[m[32m      const listener = (oldMember, newMember) => {[m
[32m+[m[32m        if (newMember.id === member.id && !oldMember._roles.includes(role.id) && newMember._roles.includes(role.id)) {[m
[32m+[m[32m          this.client.removeListener(Constants.Events.GUILD_MEMBER_UPDATE, listener);[m
[32m+[m[32m          resolve(newMember);[m
[32m+[m[32m        }[m
[32m+[m[32m      };[m
[32m+[m
[32m+[m[32m      this.client.on(Constants.Events.GUILD_MEMBER_UPDATE, listener);[m
[32m+[m[32m      const timeout = this.client.setTimeout(() => {[m
[32m+[m[32m        this.client.removeListener(Constants.Events.GUILD_MEMBER_UPDATE, listener);[m
[32m+[m[32m        reject(new Error('Adding the role timed out.'));[m
[32m+[m[32m      }, 10e3);[m
[32m+[m
[32m+[m[32m      return this.rest.makeRequest('put', Endpoints.Member(member).Role(role.id), true, undefined, undefined, reason)[m
[32m+[m[32m        .catch(err => {[m
[32m+[m[32m          this.client.removeListener(Constants.Events.GUILD_MEMBER_UPDATE, listener);[m
[32m+[m[32m          this.client.clearTimeout(timeout);[m
[32m+[m[32m          reject(err);[m
[32m+[m[32m        });[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  removeMemberRole(member, role, reason) {[m
[32m+[m[32m    return new Promise((resolve, reject) => {[m
[32m+[m[32m      if (!member._roles.includes(role.id)) return resolve(member);[m
[32m+[m
[32m+[m[32m      const listener = (oldMember, newMember) => {[m
[32m+[m[32m        if (newMember.id === member.id && oldMember._roles.includes(role.id) && !newMember._roles.includes(role.id)) {[m
[32m+[m[32m          this.client.removeListener(Constants.Events.GUILD_MEMBER_UPDATE, listener);[m
[32m+[m[32m          resolve(newMember);[m
[32m+[m[32m        }[m
[32m+[m[32m      };[m
[32m+[m
[32m+[m[32m      this.client.on(Constants.Events.GUILD_MEMBER_UPDATE, listener);[m
[32m+[m[32m      const timeout = this.client.setTimeout(() => {[m
[32m+[m[32m        this.client.removeListener(Constants.Events.GUILD_MEMBER_UPDATE, listener);[m
[32m+[m[32m        reject(new Error('Removing the role timed out.'));[m
[32m+[m[32m      }, 10e3);[m
[32m+[m
[32m+[m[32m      return this.rest.makeRequest('delete', Endpoints.Member(member).Role(role.id), true, undefined, undefined, reason)[m
[32m+[m[32m        .catch(err => {[m
[32m+[m[32m          this.client.removeListener(Constants.Events.GUILD_MEMBER_UPDATE, listener);[m
[32m+[m[32m          this.client.clearTimeout(timeout);[m
[32m+[m[32m          reject(err);[m
[32m+[m[32m        });[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  sendTyping(channelID) {[m
[32m+[m[32m    return this.rest.makeRequest('post', Endpoints.Channel(channelID).typing, true);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  banGuildMember(guild, member, options) {[m
[32m+[m[32m    const id = this.client.resolver.resolveUserID(member);[m
[32m+[m[32m    if (!id) return Promise.reject(new Error('Couldn\'t resolve the user ID to ban.'));[m
[32m+[m
[32m+[m[32m    const url = `${Endpoints.Guild(guild).bans}/${id}?${querystring.stringify(options)}`;[m
[32m+[m[32m    return this.rest.makeRequest('put', url, true).then(() => {[m
[32m+[m[32m      if (member instanceof GuildMember) return member;[m
[32m+[m[32m      const user = this.client.resolver.resolveUser(id);[m
[32m+[m[32m      if (user) {[m
[32m+[m[32m        member = this.client.resolver.resolveGuildMember(guild, user);[m
[32m+[m[32m        return member || user;[m
[32m+[m[32m      }[m
[32m+[m[32m      return id;[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  unbanGuildMember(guild, member, reason) {[m
[32m+[m[32m    return new Promise((resolve, reject) => {[m
[32m+[m[32m      const id = this.client.resolver.resolveUserID(member);[m
[32m+[m[32m      if (!id) throw new Error('Couldn\'t resolve the user ID to unban.');[m
[32m+[m
[32m+[m[32m      const listener = (eGuild, eUser) => {[m
[32m+[m[32m        if (eGuild.id === guild.id && eUser.id === id) {[m
[32m+[m[32m          this.client.removeListener(Constants.Events.GUILD_BAN_REMOVE, listener);[m
[32m+[m[32m          this.client.clearTimeout(timeout);[m
[32m+[m[32m          resolve(eUser);[m
[32m+[m[32m        }[m
[32m+[m[32m      };[m
[32m+[m[32m      this.client.on(Constants.Events.GUILD_BAN_REMOVE, listener);[m
[32m+[m
[32m+[m[32m      const timeout = this.client.setTimeout(() => {[m
[32m+[m[32m        this.client.removeListener(Constants.Events.GUILD_BAN_REMOVE, listener);[m
[32m+[m[32m        reject(new Error('Took too long to receive the ban remove event.'));[m
[32m+[m[32m      }, 10000);[m
[32m+[m
[32m+[m[32m      this.rest.makeRequest('delete', `${Endpoints.Guild(guild).bans}/${id}`, true, undefined, undefined, reason)[m
[32m+[m[32m        .catch(err => {[m
[32m+[m[32m          this.client.removeListener(Constants.Events.GUILD_BAN_REMOVE, listener);[m
[32m+[m[32m          this.client.clearTimeout(timeout);[m
[32m+[m[32m          reject(err);[m
[32m+[m[32m        });[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  getGuildBan(guild, user) {[m
[32m+[m[32m    const id = this.client.resolver.resolveUserID(user);[m
[32m+[m[32m    return this.rest.makeRequest('get', `${Endpoints.Guild(guild).bans}/${id}`, true).then(ban => ({[m
[32m+[m[32m      reason: ban.reason,[m
[32m+[m[32m      user: this.client.dataManager.newUser(ban.user),[m
[32m+[m[32m    }));[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  getGuildBans(guild) {[m
[32m+[m[32m    return this.rest.makeRequest('get', Endpoints.Guild(guild).bans, true).then(bans =>[m
[32m+[m[32m      bans.reduce((collection, ban) => {[m
[32m+[m[32m        collection.set(ban.user.id, {[m
[32m+[m[32m          reason: ban.reason,[m
[32m+[m[32m          user: this.client.dataManager.newUser(ban.user),[m
[32m+[m[32m        });[m
[32m+[m[32m        return collection;[m
[32m+[m[32m      }, new Collection())[m
[32m+[m[32m    );[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  updateGuildRole(role, _data, reason) {[m
[32m+[m[32m    const data = {};[m
[32m+[m[32m    data.name = _data.name || role.name;[m
[32m+[m[32m    data.position = typeof _data.position !== 'undefined' ? _data.position : role.position;[m
[32m+[m[32m    data.color = _data.color === null ? null : this.client.resolver.resolveColor(_data.color || role.color);[m
[32m+[m[32m    data.hoist = typeof _data.hoist !== 'undefined' ? _data.hoist : role.hoist;[m
[32m+[m[32m    data.mentionable = typeof _data.mentionable !== 'undefined' ? _data.mentionable : role.mentionable;[m
[32m+[m
[32m+[m[32m    if (typeof _data.permissions !== 'undefined') data.permissions = Permissions.resolve(_data.permissions);[m
[32m+[m[32m    else data.permissions = role.permissions;[m
[32m+[m
[32m+[m[32m    return this.rest.makeRequest('patch', Endpoints.Guild(role.guild).Role(role.id), true, data, undefined, reason)[m
[32m+[m[32m      .then(_role =>[m
[32m+[m[32m        this.client.actions.GuildRoleUpdate.handle({[m
[32m+[m[32m          role: _role,[m
[32m+[m[32m          guild_id: role.guild.id,[m
[32m+[m[32m        }).updated[m
[32m+[m[32m      );[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  pinMessage(message) {[m
[32m+[m[32m    return this.rest.makeRequest('put', Endpoints.Channel(message.channel).Pin(message.id), true)[m
[32m+[m[32m      .then(() => message);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  unpinMessage(message) {[m
[32m+[m[32m    return this.rest.makeRequest('delete', Endpoints.Channel(message.channel).Pin(message.id), true)[m
[32m+[m[32m      .then(() => message);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  getChannelPinnedMessages(channel) {[m
[32m+[m[32m    return this.rest.makeRequest('get', Endpoints.Channel(channel).pins, true);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  createChannelInvite(channel, options, reason) {[m
[32m+[m[32m    const payload = {};[m
[32m+[m[32m    payload.temporary = options.temporary;[m
[32m+[m[32m    payload.max_age = options.maxAge;[m
[32m+[m[32m    payload.max_uses = options.maxUses;[m
[32m+[m[32m    payload.unique = options.unique;[m
[32m+[m[32m    return this.rest.makeRequest('post', Endpoints.Channel(channel).invites, true, payload, undefined, reason)[m
[32m+[m[32m      .then(invite => new Invite(this.client, invite));[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  deleteInvite(invite, reason) {[m
[32m+[m[32m    return this.rest.makeRequest('delete', Endpoints.Invite(invite.code), true, undefined, undefined, reason)[m
[32m+[m[32m      .then(() => invite);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  getInvite(code) {[m
[32m+[m[32m    return this.rest.makeRequest('get', Endpoints.Invite(code), true).then(invite =>[m
[32m+[m[32m      new Invite(this.client, invite)[m
[32m+[m[32m    );[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  getGuildInvites(guild) {[m
[32m+[m[32m    return this.rest.makeRequest('get', Endpoints.Guild(guild).invites, true).then(inviteItems => {[m
[32m+[m[32m      const invites = new Collection();[m
[32m+[m[32m      for (const inviteItem of inviteItems) {[m
[32m+[m[32m        const invite = new Invite(this.client, inviteItem);[m
[32m+[m[32m        invites.set(invite.code, invite);[m
[32m+[m[32m      }[m
[32m+[m[32m      return invites;[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  getGuildVanityCode(guild) {[m
[32m+[m[32m    return this.rest.makeRequest('get', Endpoints.Guild(guild).vanityURL, true)[m
[32m+[m[32m      .then(res => res.code);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  pruneGuildMembers(guild, days, dry, reason) {[m
[32m+[m[32m    return this.rest.makeRequest(dry ?[m
[32m+[m[32m      'get' :[m
[32m+[m[32m      'post',[m
[32m+[m[32m    `${Endpoints.Guild(guild).prune}?days=${days}`, true, undefined, undefined, reason)[m
[32m+[m[32m      .then(data => data.pruned);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  createEmoji(guild, image, name, roles, reason) {[m
[32m+[m[32m    const data = { image, name };[m
[32m+[m[32m    if (roles) data.roles = roles.map(r => r.id ? r.id : r);[m
[32m+[m[32m    return this.rest.makeRequest('post', Endpoints.Guild(guild).emojis, true, data, undefined, reason)[m
[32m+[m[32m      .then(emoji => this.client.actions.GuildEmojiCreate.handle(guild, emoji).emoji);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  updateEmoji(emoji, _data, reason) {[m
[32m+[m[32m    const data = {};[m
[32m+[m[32m    if (_data.name) data.name = _data.name;[m
[32m+[m[32m    if (_data.roles) data.roles = _data.roles.map(r => r.id ? r.id : r);[m
[32m+[m[32m    return this.rest.makeRequest('patch', Endpoints.Guild(emoji.guild).Emoji(emoji.id), true, data, undefined, reason)[m
[32m+[m[32m      .then(newEmoji => this.client.actions.GuildEmojiUpdate.handle(emoji, newEmoji).emoji);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  deleteEmoji(emoji, reason) {[m
[32m+[m[32m    return this.rest.makeRequest('delete', Endpoints.Guild(emoji.guild).Emoji(emoji.id), true, undefined, reason)[m
[32m+[m[32m      .then(() => this.client.actions.GuildEmojiDelete.handle(emoji).data);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  getGuildAuditLogs(guild, options = {}) {[m
[32m+[m[32m    if (options.before && options.before instanceof GuildAuditLogs.Entry) options.before = options.before.id;[m
[32m+[m[32m    if (options.after && options.after instanceof GuildAuditLogs.Entry) options.after = options.after.id;[m
[32m+[m[32m    if (typeof options.type === 'string') options.type = GuildAuditLogs.Actions[options.type];[m
[32m+[m
[32m+[m[32m    const queryString = (querystring.stringify({[m
[32m+[m[32m      before: options.before,[m
[32m+[m[32m      after: options.after,[m
[32m+[m[32m      limit: options.limit,[m
[32m+[m[32m      user_id: this.client.resolver.resolveUserID(options.user),[m
[32m+[m[32m      action_type: options.type,[m
[32m+[m[32m    }).match(/[^=&?]+=[^=&?]+/g) || []).join('&');[m
[32m+[m
[32m+[m[32m    return this.rest.makeRequest('get', `${Endpoints.Guild(guild).auditLogs}?${queryString}`, true)[m
[32m+[m[32m      .then(data => GuildAuditLogs.build(guild, data));[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  getWebhook(id, token) {[m
[32m+[m[32m    return this.rest.makeRequest('get', Endpoints.Webhook(id, token), !token).then(data =>[m
[32m+[m[32m      new Webhook(this.client, data)[m
[32m+[m[32m    );[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  getGuildWebhooks(guild) {[m
[32m+[m[32m    return this.rest.makeRequest('get', Endpoints.Guild(guild).webhooks, true).then(data => {[m
[32m+[m[32m      const hooks = new Collection();[m
[32m+[m[32m      for (const hook of data) hooks.set(hook.id, new Webhook(this.client, hook));[m
[32m+[m[32m      return hooks;[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  getChannelWebhooks(channel) {[m
[32m+[m[32m    return this.rest.makeRequest('get', Endpoints.Channel(channel).webhooks, true).then(data => {[m
[32m+[m[32m      const hooks = new Collection();[m
[32m+[m[32m      for (const hook of data) hooks.set(hook.id, new Webhook(this.client, hook));[m
[32m+[m[32m      return hooks;[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  createWebhook(channel, name, avatar, reason) {[m
[32m+[m[32m    return this.rest.makeRequest('post', Endpoints.Channel(channel).webhooks, true, { name, avatar }, undefined, reason)[m
[32m+[m[32m      .then(data => new Webhook(this.client, data));[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  editWebhook(webhook, name, avatar) {[m
[32m+[m[32m    return this.rest.makeRequest('patch', Endpoints.Webhook(webhook.id, webhook.token), false, {[m
[32m+[m[32m      name,[m
[32m+[m[32m      avatar,[m
[32m+[m[32m    }).then(data => {[m
[32m+[m[32m      webhook.name = data.name;[m
[32m+[m[32m      webhook.avatar = data.avatar;[m
[32m+[m[32m      return webhook;[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  deleteWebhook(webhook, reason) {[m
[32m+[m[32m    return this.rest.makeRequest([m
[32m+[m[32m      'delete', Endpoints.Webhook(webhook.id, webhook.token),[m
[32m+[m[32m      false, undefined, undefined, reason);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  sendWebhookMessage(webhook, content, { avatarURL, tts, embeds, username } = {}, files = null) {[m
[32m+[m[32m    return new Promise((resolve, reject) => {[m
[32m+[m[32m      username = username || webhook.name;[m
[32m+[m
[32m+[m[32m      if (content instanceof Array) {[m
[32m+[m[32m        const messages = [];[m
[32m+[m[32m        (function sendChunk(list, index) {[m
[32m+[m[32m          const options = index === list.length - 1 ? { tts, embeds, files } : { tts };[m
[32m+[m[32m          webhook.send(list[index], options).then(message => {[m
[32m+[m[32m            messages.push(message);[m
[32m+[m[32m            if (index >= list.length - 1) return resolve(messages);[m
[32m+[m[32m            return sendChunk(list, ++index);[m
[32m+[m[32m          }).catch(reject);[m
[32m+[m[32m        }(content, 0));[m
[32m+[m[32m      } else {[m
[32m+[m[32m        this.rest.makeRequest('post', `${Endpoints.Webhook(webhook.id, webhook.token)}?wait=true`, false, {[m
[32m+[m[32m          username,[m
[32m+[m[32m          avatar_url: avatarURL,[m
[32m+[m[32m          content,[m
[32m+[m[32m          tts,[m
[32m+[m[32m          embeds,[m
[32m+[m[32m        }, files).then(data => {[m
[32m+[m[32m          if (!this.client.channels) resolve(data);[m
[32m+[m[32m          else resolve(this.client.actions.MessageCreate.handle(data).message);[m
[32m+[m[32m        }, reject);[m
[32m+[m[32m      }[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  sendSlackWebhookMessage(webhook, body) {[m
[32m+[m[32m    return this.rest.makeRequest([m
[32m+[m[32m      'post', `${Endpoints.Webhook(webhook.id, webhook.token)}/slack?wait=true`, false, body[m
[32m+[m[32m    );[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  fetchUserProfile(user) {[m
[32m+[m[32m    return this.rest.makeRequest('get', Endpoints.User(user).profile, true).then(data =>[m
[32m+[m[32m      new UserProfile(user, data)[m
[32m+[m[32m    );[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  fetchMentions(options) {[m
[32m+[m[32m    if (options.guild instanceof Guild) options.guild = options.guild.id;[m
[32m+[m[32m    Util.mergeDefault({ limit: 25, roles: true, everyone: true, guild: null }, options);[m
[32m+[m
[32m+[m[32m    return this.rest.makeRequest([m
[32m+[m[32m      'get', Endpoints.User('@me').Mentions(options.limit, options.roles, options.everyone, options.guild), true[m
[32m+[m[32m    ).then(data => data.map(m => new Message(this.client.channels.get(m.channel_id), m, this.client)));[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  addFriend(user) {[m
[32m+[m[32m    return this.rest.makeRequest('post', Endpoints.User('@me'), true, {[m
[32m+[m[32m      username: user.username,[m
[32m+[m[32m      discriminator: user.discriminator,[m
[32m+[m[32m    }).then(() => user);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  removeFriend(user) {[m
[32m+[m[32m    return this.rest.makeRequest('delete', Endpoints.User('@me').Relationship(user.id), true)[m
[32m+[m[32m      .then(() => user);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  blockUser(user) {[m
[32m+[m[32m    return this.rest.makeRequest('put', Endpoints.User('@me').Relationship(user.id), true, { type: 2 })[m
[32m+[m[32m      .then(() => user);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  unblockUser(user) {[m
[32m+[m[32m    return this.rest.makeRequest('delete', Endpoints.User('@me').Relationship(user.id), true)[m
[32m+[m[32m      .then(() => user);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  updateChannelPositions(guildID, channels) {[m
[32m+[m[32m    const data = new Array(channels.length);[m
[32m+[m[32m    for (let i = 0; i < channels.length; i++) {[m
[32m+[m[32m      data[i] = {[m
[32m+[m[32m        id: this.client.resolver.resolveChannelID(channels[i].channel),[m
[32m+[m[32m        position: channels[i].position,[m
[32m+[m[32m      };[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return this.rest.makeRequest('patch', Endpoints.Guild(guildID).channels, true, data).then(() =>[m
[32m+[m[32m      this.client.actions.GuildChannelsPositionUpdate.handle({[m
[32m+[m[32m        guild_id: guildID,[m
[32m+[m[32m        channels,[m
[32m+[m[32m      }).guild[m
[32m+[m[32m    );[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  updateEmbed(guildID, embed, reason) {[m
[32m+[m[32m    return this.rest.makeRequest('patch', Endpoints.Guild(guildID).embed, true, {[m
[32m+[m[32m      enabled: embed.enabled,[m
[32m+[m[32m      channel_id: this.client.resolver.resolveChannelID(embed.channel),[m
[32m+[m[32m    }, undefined, reason);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  setRolePositions(guildID, roles) {[m
[32m+[m[32m    return this.rest.makeRequest('patch', Endpoints.Guild(guildID).roles, true, roles).then(() =>[m
[32m+[m[32m      this.client.actions.GuildRolesPositionUpdate.handle({[m
[32m+[m[32m        guild_id: guildID,[m
[32m+[m[32m        roles,[m
[32m+[m[32m      }).guild[m
[32m+[m[32m    );[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  setChannelPositions(guildID, channels) {[m
[32m+[m[32m    return this.rest.makeRequest('patch', Endpoints.Guild(guildID).channels, true, channels).then(() =>[m
[32m+[m[32m      this.client.actions.GuildChannelsPositionUpdate.handle({[m
[32m+[m[32m        guild_id: guildID,[m
[32m+[m[32m        channels,[m
[32m+[m[32m      }).guild[m
[32m+[m[32m    );[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  addMessageReaction(message, emoji) {[m
[32m+[m[32m    return this.rest.makeRequest([m
[32m+[m[32m      'put', Endpoints.Message(message).Reaction(emoji).User('@me'), true[m
[32m+[m[32m    ).then(() =>[m
[32m+[m[32m      message._addReaction(Util.parseEmoji(emoji), message.client.user)[m
[32m+[m[32m    );[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  removeMessageReaction(message, emoji, userID) {[m
[32m+[m[32m    const endpoint = Endpoints.Message(message).Reaction(emoji).User(userID === this.client.user.id ? '@me' : userID);[m
[32m+[m[32m    return this.rest.makeRequest('delete', endpoint, true).then(() =>[m
[32m+[m[32m      this.client.actions.MessageReactionRemove.handle({[m
[32m+[m[32m        user_id: userID,[m
[32m+[m[32m        message_id: message.id,[m
[32m+[m[32m        emoji: Util.parseEmoji(emoji),[m
[32m+[m[32m        channel_id: message.channel.id,[m
[32m+[m[32m      }).reaction[m
[32m+[m[32m    );[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  removeMessageReactions(message) {[m
[32m+[m[32m    return this.rest.makeRequest('delete', Endpoints.Message(message).reactions, true)[m
[32m+[m[32m      .then(() => message);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  getMessageReactionUsers(message, emoji, options) {[m
[32m+[m[32m    const queryString = (querystring.stringify(options).match(/[^=&?]+=[^=&?]+/g) || []).join('&');[m
[32m+[m
[32m+[m[32m    return this.rest.makeRequest('get', `${Endpoints.Message(message).Reaction(emoji)}?${queryString}`, true);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  getApplication(id) {[m
[32m+[m[32m    return this.rest.makeRequest('get', Endpoints.OAUTH2.Application(id), true).then(app =>[m
[32m+[m[32m      new OAuth2Application(this.client, app)[m
[32m+[m[32m    );[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  resetApplication(id) {[m
[32m+[m[32m    return this.rest.makeRequest('post', Endpoints.OAUTH2.Application(id).resetToken, true)[m
[32m+[m[32m      .then(() => this.rest.makeRequest('post', Endpoints.OAUTH2.Application(id).resetSecret, true))[m
[32m+[m[32m      .then(app => new OAuth2Application(this.client, app));[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  setNote(user, note) {[m
[32m+[m[32m    return this.rest.makeRequest('put', Endpoints.User(user).note, true, { note }).then(() => user);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  acceptInvite(code) {[m
[32m+[m[32m    if (code.id) code = code.id;[m
[32m+[m[32m    return new Promise((resolve, reject) =>[m
[32m+[m[32m      this.rest.makeRequest('post', Endpoints.Invite(code), true).then(res => {[m
[32m+[m[32m        const handler = guild => {[m
[32m+[m[32m          if (guild.id === res.id) {[m
[32m+[m[32m            resolve(guild);[m
[32m+[m[32m            this.client.removeListener(Constants.Events.GUILD_CREATE, handler);[m
[32m+[m[32m          }[m
[32m+[m[32m        };[m
[32m+[m[32m        this.client.on(Constants.Events.GUILD_CREATE, handler);[m
[32m+[m[32m        this.client.setTimeout(() => {[m
[32m+[m[32m          this.client.removeListener(Constants.Events.GUILD_CREATE, handler);[m
[32m+[m[32m          reject(new Error('Accepting invite timed out'));[m
[32m+[m[32m        }, 120e3);[m
[32m+[m[32m      })[m
[32m+[m[32m    );[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  patchUserSettings(data) {[m
[32m+[m[32m    return this.rest.makeRequest('patch', Constants.Endpoints.User('@me').settings, true, data);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  patchClientUserGuildSettings(guildID, data) {[m
[32m+[m[32m    return this.rest.makeRequest('patch', Constants.Endpoints.User('@me').Guild(guildID).settings, true, data);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = RESTMethods;[m
[1mdiff --git a/node_modules/discord.js/src/client/rest/RequestHandlers/Burst.js b/node_modules/discord.js/src/client/rest/RequestHandlers/Burst.js[m
[1mnew file mode 100644[m
[1mindex 0000000..eceee65[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/rest/RequestHandlers/Burst.js[m
[36m@@ -0,0 +1,90 @@[m
[32m+[m[32mconst RequestHandler = require('./RequestHandler');[m
[32m+[m[32mconst DiscordAPIError = require('../DiscordAPIError');[m
[32m+[m[32mconst { Events: { RATE_LIMIT } } = require('../../../util/Constants');[m
[32m+[m
[32m+[m[32mclass BurstRequestHandler extends RequestHandler {[m
[32m+[m[32m  constructor(restManager, endpoint) {[m
[32m+[m[32m    super(restManager, endpoint);[m
[32m+[m
[32m+[m[32m    this.client = restManager.client;[m
[32m+[m
[32m+[m[32m    this.limit = Infinity;[m
[32m+[m[32m    this.resetTime = null;[m
[32m+[m[32m    this.remaining = 1;[m
[32m+[m[32m    this.timeDifference = 0;[m
[32m+[m
[32m+[m[32m    this.resetTimeout = null;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  push(request) {[m
[32m+[m[32m    super.push(request);[m
[32m+[m[32m    this.handle();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  execute(item) {[m
[32m+[m[32m    if (!item) return;[m
[32m+[m[32m    item.request.gen().end((err, res) => {[m
[32m+[m[32m      if (res && res.headers) {[m
[32m+[m[32m        this.limit = Number(res.headers['x-ratelimit-limit']);[m
[32m+[m[32m        this.resetTime = Number(res.headers['x-ratelimit-reset']) * 1000;[m
[32m+[m[32m        this.remaining = Number(res.headers['x-ratelimit-remaining']);[m
[32m+[m[32m        this.timeDifference = Date.now() - new Date(res.headers.date).getTime();[m
[32m+[m[32m      }[m
[32m+[m[32m      if (err) {[m
[32m+[m[32m        if (err.status === 429) {[m
[32m+[m[32m          this.queue.unshift(item);[m
[32m+[m[32m          if (res.headers['x-ratelimit-global']) this.globalLimit = true;[m
[32m+[m[32m          if (this.resetTimeout) return;[m
[32m+[m[32m          this.resetTimeout = this.client.setTimeout(() => {[m
[32m+[m[32m            this.remaining = this.limit;[m
[32m+[m[32m            this.globalLimit = false;[m
[32m+[m[32m            this.handle();[m
[32m+[m[32m            this.resetTimeout = null;[m
[32m+[m[32m          }, Number(res.headers['retry-after']) + this.client.options.restTimeOffset);[m
[32m+[m[32m        } else if (err.status >= 500 && err.status < 600) {[m
[32m+[m[32m          if (item.retries === this.client.options.retryLimit) {[m
[32m+[m[32m            item.reject(err);[m
[32m+[m[32m            this.handle();[m
[32m+[m[32m          } else {[m
[32m+[m[32m            item.retries++;[m
[32m+[m[32m            this.queue.unshift(item);[m
[32m+[m[32m            this.resetTimeout = this.client.setTimeout(() => {[m
[32m+[m[32m              this.handle();[m
[32m+[m[32m              this.resetTimeout = null;[m
[32m+[m[32m            }, 1e3 + this.client.options.restTimeOffset);[m
[32m+[m[32m          }[m
[32m+[m[32m        } else {[m
[32m+[m[32m          item.reject(err.status >= 400 && err.status < 500 ?[m
[32m+[m[32m            new DiscordAPIError(res.request.path, res.body, res.request.method) : err);[m
[32m+[m[32m          this.handle();[m
[32m+[m[32m        }[m
[32m+[m[32m      } else {[m
[32m+[m[32m        if (this.remaining === 0) {[m
[32m+[m[32m          if (this.client.listenerCount(RATE_LIMIT)) {[m
[32m+[m[32m            this.client.emit(RATE_LIMIT, {[m
[32m+[m[32m              limit: this.limit,[m
[32m+[m[32m              timeDifference: this.timeDifference,[m
[32m+[m[32m              path: item.request.path,[m
[32m+[m[32m              method: item.request.method,[m
[32m+[m[32m            });[m
[32m+[m[32m          }[m
[32m+[m[32m        }[m
[32m+[m[32m        this.globalLimit = false;[m
[32m+[m[32m        const data = res && res.body ? res.body : {};[m
[32m+[m[32m        item.resolve(data);[m
[32m+[m[32m        this.handle();[m
[32m+[m[32m      }[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  handle() {[m
[32m+[m[32m    super.handle();[m
[32m+[m[32m    if (this.queue.length === 0) return;[m
[32m+[m[32m    if ((this.remaining <= 0 || this.globalLimit) && Date.now() - this.timeDifference < this.resetTime) return;[m
[32m+[m[32m    this.execute(this.queue.shift());[m
[32m+[m[32m    this.remaining--;[m
[32m+[m[32m    this.handle();[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = BurstRequestHandler;[m
[1mdiff --git a/node_modules/discord.js/src/client/rest/RequestHandlers/RequestHandler.js b/node_modules/discord.js/src/client/rest/RequestHandlers/RequestHandler.js[m
[1mnew file mode 100644[m
[1mindex 0000000..c5bad20[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/rest/RequestHandlers/RequestHandler.js[m
[36m@@ -0,0 +1,54 @@[m
[32m+[m[32m/**[m
[32m+[m[32m * A base class for different types of rate limiting handlers for the REST API.[m
[32m+[m[32m * @private[m
[32m+[m[32m */[m
[32m+[m[32mclass RequestHandler {[m
[32m+[m[32m  /**[m
[32m+[m[32m   * @param {RESTManager} restManager The REST manager to use[m
[32m+[m[32m   */[m
[32m+[m[32m  constructor(restManager) {[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The RESTManager that instantiated this RequestHandler[m
[32m+[m[32m     * @type {RESTManager}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.restManager = restManager;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * A list of requests that have yet to be processed[m
[32m+[m[32m     * @type {APIRequest[]}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.queue = [];[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Whether or not the client is being rate limited on every endpoint[m
[32m+[m[32m   * @type {boolean}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get globalLimit() {[m
[32m+[m[32m    return this.restManager.globallyRateLimited;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  set globalLimit(value) {[m
[32m+[m[32m    this.restManager.globallyRateLimited = value;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Push a new API request into this bucket.[m
[32m+[m[32m   * @param {APIRequest} request The new request to push into the queue[m
[32m+[m[32m   */[m
[32m+[m[32m  push(request) {[m
[32m+[m[32m    this.queue.push(request);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Attempts to get this RequestHandler to process its current queue.[m
[32m+[m[32m   */[m
[32m+[m[32m  handle() {} // eslint-disable-line no-empty-function[m
[32m+[m
[32m+[m[32m  destroy() {[m
[32m+[m[32m    this.queue = [];[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = RequestHandler;[m
[1mdiff --git a/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js b/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js[m
[1mnew file mode 100644[m
[1mindex 0000000..9d25bdb[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js[m
[36m@@ -0,0 +1,132 @@[m
[32m+[m[32mconst RequestHandler = require('./RequestHandler');[m
[32m+[m[32mconst DiscordAPIError = require('../DiscordAPIError');[m
[32m+[m[32mconst { Events: { RATE_LIMIT } } = require('../../../util/Constants');[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Handles API Requests sequentially, i.e. we wait until the current request is finished before moving onto[m
[32m+[m[32m * the next. This plays a _lot_ nicer in terms of avoiding 429's when there is more than one session of the account,[m
[32m+[m[32m * but it can be slower.[m
[32m+[m[32m * @extends {RequestHandler}[m
[32m+[m[32m * @private[m
[32m+[m[32m */[m
[32m+[m[32mclass SequentialRequestHandler extends RequestHandler {[m
[32m+[m[32m  /**[m
[32m+[m[32m   * @param {RESTManager} restManager The REST manager to use[m
[32m+[m[32m   * @param {string} endpoint The endpoint to handle[m
[32m+[m[32m   */[m
[32m+[m[32m  constructor(restManager, endpoint) {[m
[32m+[m[32m    super(restManager, endpoint);[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The client that instantiated this handler[m
[32m+[m[32m     * @type {Client}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.client = restManager.client;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The endpoint that this handler is handling[m
[32m+[m[32m     * @type {string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.endpoint = endpoint;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The time difference between Discord's Dates and the local computer's Dates. A positive number means the local[m
[32m+[m[32m     * computer's time is ahead of Discord's[m
[32m+[m[32m     * @type {number}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.timeDifference = 0;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Whether the queue is being processed or not[m
[32m+[m[32m     * @type {boolean}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.busy = false;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  push(request) {[m
[32m+[m[32m    super.push(request);[m
[32m+[m[32m    this.handle();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Performs a request then resolves a promise to indicate its readiness for a new request.[m
[32m+[m[32m   * @param {APIRequest} item The item to execute[m
[32m+[m[32m   * @returns {Promise<?Object|Error>}[m
[32m+[m[32m   */[m
[32m+[m[32m  execute(item) {[m
[32m+[m[32m    this.busy = true;[m
[32m+[m[32m    return new Promise(resolve => {[m
[32m+[m[32m      item.request.gen().end((err, res) => {[m
[32m+[m[32m        if (res && res.headers) {[m
[32m+[m[32m          this.requestLimit = Number(res.headers['x-ratelimit-limit']);[m
[32m+[m[32m          this.requestResetTime = Number(res.headers['x-ratelimit-reset']) * 1000;[m
[32m+[m[32m          this.requestRemaining = Number(res.headers['x-ratelimit-remaining']);[m
[32m+[m[32m          this.timeDifference = Date.now() - new Date(res.headers.date).getTime();[m
[32m+[m[32m        }[m
[32m+[m[32m        if (err) {[m
[32m+[m[32m          if (err.status === 429) {[m
[32m+[m[32m            this.queue.unshift(item);[m
[32m+[m[32m            this.client.setTimeout(() => {[m
[32m+[m[32m              this.globalLimit = false;[m
[32m+[m[32m              resolve();[m
[32m+[m[32m            }, Number(res.headers['retry-after']) + this.client.options.restTimeOffset);[m
[32m+[m[32m            if (res.headers['x-ratelimit-global']) this.globalLimit = true;[m
[32m+[m[32m          } else if (err.status >= 500 && err.status < 600) {[m
[32m+[m[32m            if (item.retries === this.client.options.retryLimit) {[m
[32m+[m[32m              item.reject(err);[m
[32m+[m[32m              resolve();[m
[32m+[m[32m            } else {[m
[32m+[m[32m              item.retries++;[m
[32m+[m[32m              this.queue.unshift(item);[m
[32m+[m[32m              this.client.setTimeout(resolve, 1e3 + this.client.options.restTimeOffset);[m
[32m+[m[32m            }[m
[32m+[m[32m          } else {[m
[32m+[m[32m            item.reject(err.status >= 400 && err.status < 500 ?[m
[32m+[m[32m              new DiscordAPIError(res.request.path, res.body, res.request.method) : err);[m
[32m+[m[32m            resolve(err);[m
[32m+[m[32m          }[m
[32m+[m[32m        } else {[m
[32m+[m[32m          this.globalLimit = false;[m
[32m+[m[32m          const data = res && res.body ? res.body : {};[m
[32m+[m[32m          item.resolve(data);[m
[32m+[m[32m          if (this.requestRemaining === 0) {[m
[32m+[m[32m            if (this.client.listenerCount(RATE_LIMIT)) {[m
[32m+[m[32m              /**[m
[32m+[m[32m               * Emitted when the client hits a rate limit while making a request[m
[32m+[m[32m               * @event Client#rateLimit[m
[32m+[m[32m               * @param {Object} rateLimitInfo Object containing the rate limit info[m
[32m+[m[32m               * @param {number} rateLimitInfo.limit Number of requests that can be made to this endpoint[m
[32m+[m[32m               * @param {number} rateLimitInfo.timeDifference Delta-T in ms between your system and Discord servers[m
[32m+[m[32m               * @param {string} rateLimitInfo.path Path used for request that triggered this event[m
[32m+[m[32m               * @param {string} rateLimitInfo.method HTTP method used for request that triggered this event[m
[32m+[m[32m               */[m
[32m+[m[32m              this.client.emit(RATE_LIMIT, {[m
[32m+[m[32m                limit: this.requestLimit,[m
[32m+[m[32m                timeDifference: this.timeDifference,[m
[32m+[m[32m                path: item.request.path,[m
[32m+[m[32m                method: item.request.method,[m
[32m+[m[32m              });[m
[32m+[m[32m            }[m
[32m+[m[32m            this.client.setTimeout([m
[32m+[m[32m              () => resolve(data),[m
[32m+[m[32m              this.requestResetTime - Date.now() + this.timeDifference + this.client.options.restTimeOffset[m
[32m+[m[32m            );[m
[32m+[m[32m          } else {[m
[32m+[m[32m            resolve(data);[m
[32m+[m[32m          }[m
[32m+[m[32m        }[m
[32m+[m[32m      });[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  handle() {[m
[32m+[m[32m    super.handle();[m
[32m+[m[32m    if (this.busy || this.remaining === 0 || this.queue.length === 0 || this.globalLimit) return;[m
[32m+[m[32m    this.execute(this.queue.shift()).then(() => {[m
[32m+[m[32m      this.busy = false;[m
[32m+[m[32m      this.handle();[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = SequentialRequestHandler;[m
[1mdiff --git a/node_modules/discord.js/src/client/rest/UserAgentManager.js b/node_modules/discord.js/src/client/rest/UserAgentManager.js[m
[1mnew file mode 100644[m
[1mindex 0000000..13e5528[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/rest/UserAgentManager.js[m
[36m@@ -0,0 +1,25 @@[m
[32m+[m[32mconst Constants = require('../../util/Constants');[m
[32m+[m
[32m+[m[32mclass UserAgentManager {[m
[32m+[m[32m  constructor() {[m
[32m+[m[32m    this.build(this.constructor.DEFAULT);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  set({ url, version } = {}) {[m
[32m+[m[32m    this.build({[m
[32m+[m[32m      url: url || this.constructor.DFEAULT.url,[m
[32m+[m[32m      version: version || this.constructor.DEFAULT.version,[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  build(ua) {[m
[32m+[m[32m    this.userAgent = `DiscordBot (${ua.url}, ${ua.version}) Node.js/${process.version}`;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mUserAgentManager.DEFAULT = {[m
[32m+[m[32m  url: Constants.Package.homepage.split('#')[0],[m
[32m+[m[32m  version: Constants.Package.version,[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mmodule.exports = UserAgentManager;[m
[1mdiff --git a/node_modules/discord.js/src/client/voice/ClientVoiceManager.js b/node_modules/discord.js/src/client/voice/ClientVoiceManager.js[m
[1mnew file mode 100644[m
[1mindex 0000000..a6a95ee[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/voice/ClientVoiceManager.js[m
[36m@@ -0,0 +1,81 @@[m
[32m+[m[32mconst Collection = require('../../util/Collection');[m
[32m+[m[32mconst VoiceConnection = require('./VoiceConnection');[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Manages all the voice stuff for the client.[m
[32m+[m[32m * @private[m
[32m+[m[32m */[m
[32m+[m[32mclass ClientVoiceManager {[m
[32m+[m[32m  constructor(client) {[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The client that instantiated this voice manager[m
[32m+[m[32m     * @type {Client}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.client = client;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * A collection mapping connection IDs to the Connection objects[m
[32m+[m[32m     * @type {Collection<Snowflake, VoiceConnection>}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.connections = new Collection();[m
[32m+[m
[32m+[m[32m    this.client.on('self.voiceServer', this.onVoiceServer.bind(this));[m
[32m+[m[32m    this.client.on('self.voiceStateUpdate', this.onVoiceStateUpdate.bind(this));[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  onVoiceServer({ guild_id, token, endpoint }) {[m
[32m+[m[32m    const connection = this.connections.get(guild_id);[m
[32m+[m[32m    if (connection) connection.setTokenAndEndpoint(token, endpoint);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  onVoiceStateUpdate({ guild_id, session_id, channel_id }) {[m
[32m+[m[32m    const connection = this.connections.get(guild_id);[m
[32m+[m[32m    if (connection) {[m
[32m+[m[32m      connection.channel = this.client.channels.get(channel_id);[m
[32m+[m[32m      connection.setSessionID(session_id);[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets up a request to join a voice channel.[m
[32m+[m[32m   * @param {VoiceChannel} channel The voice channel to join[m
[32m+[m[32m   * @returns {Promise<VoiceConnection>}[m
[32m+[m[32m   */[m
[32m+[m[32m  joinChannel(channel) {[m
[32m+[m[32m    return new Promise((resolve, reject) => {[m
[32m+[m[32m      if (!channel.joinable) {[m
[32m+[m[32m        if (channel.full) {[m
[32m+[m[32m          throw new Error('You do not have permission to join this voice channel; it is full.');[m
[32m+[m[32m        } else {[m
[32m+[m[32m          throw new Error('You do not have permission to join this voice channel.');[m
[32m+[m[32m        }[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      let connection = this.connections.get(channel.guild.id);[m
[32m+[m
[32m+[m[32m      if (connection) {[m
[32m+[m[32m        if (connection.channel.id !== channel.id) {[m
[32m+[m[32m          this.connections.get(channel.guild.id).updateChannel(channel);[m
[32m+[m[32m        }[m
[32m+[m[32m        resolve(connection);[m
[32m+[m[32m        return;[m
[32m+[m[32m      } else {[m
[32m+[m[32m        connection = new VoiceConnection(this, channel);[m
[32m+[m[32m        this.connections.set(channel.guild.id, connection);[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      connection.once('failed', reason => {[m
[32m+[m[32m        this.connections.delete(channel.guild.id);[m
[32m+[m[32m        reject(reason);[m
[32m+[m[32m      });[m
[32m+[m
[32m+[m[32m      connection.once('authenticated', () => {[m
[32m+[m[32m        connection.once('ready', () => resolve(connection));[m
[32m+[m[32m        connection.once('error', reject);[m
[32m+[m[32m        connection.once('disconnect', () => this.connections.delete(channel.guild.id));[m
[32m+[m[32m      });[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = ClientVoiceManager;[m
[1mdiff --git a/node_modules/discord.js/src/client/voice/VoiceBroadcast.js b/node_modules/discord.js/src/client/voice/VoiceBroadcast.js[m
[1mnew file mode 100644[m
[1mindex 0000000..3a78d87[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/voice/VoiceBroadcast.js[m
[36m@@ -0,0 +1,366 @@[m
[32m+[m[32mconst VolumeInterface = require('./util/VolumeInterface');[m
[32m+[m[32mconst Prism = require('prism-media');[m
[32m+[m[32mconst OpusEncoders = require('./opus/OpusEngineList');[m
[32m+[m[32mconst Collection = require('../../util/Collection');[m
[32m+[m
[32m+[m[32mconst ffmpegArguments = [[m
[32m+[m[32m  '-analyzeduration', '0',[m
[32m+[m[32m  '-loglevel', '0',[m
[32m+[m[32m  '-f', 's16le',[m
[32m+[m[32m  '-ar', '48000',[m
[32m+[m[32m  '-ac', '2',[m
[32m+[m[32m];[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * A voice broadcast can be played across multiple voice connections for improved shared-stream efficiency.[m
[32m+[m[32m *[m
[32m+[m[32m * Example usage:[m
[32m+[m[32m * ```js[m
[32m+[m[32m * const broadcast = client.createVoiceBroadcast();[m
[32m+[m[32m * broadcast.playFile('./music.mp3');[m
[32m+[m[32m * // Play "music.mp3" in all voice connections that the client is in[m
[32m+[m[32m * for (const connection of client.voiceConnections.values()) {[m
[32m+[m[32m *   connection.playBroadcast(broadcast);[m
[32m+[m[32m * }[m
[32m+[m[32m * ```[m
[32m+[m[32m * @implements {VolumeInterface}[m
[32m+[m[32m */[m
[32m+[m[32mclass VoiceBroadcast extends VolumeInterface {[m
[32m+[m[32m  constructor(client) {[m
[32m+[m[32m    super();[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The client that created the broadcast[m
[32m+[m[32m     * @type {Client}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.client = client;[m
[32m+[m[32m    this._dispatchers = new Collection();[m
[32m+[m[32m    this._encoders = new Collection();[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The audio transcoder that this broadcast uses[m
[32m+[m[32m     * @type {Prism}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.prism = new Prism();[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The current audio transcoder that is being used[m
[32m+[m[32m     * @type {Object}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.currentTranscoder = null;[m
[32m+[m[32m    this.tickInterval = null;[m
[32m+[m[32m    this._volume = 1;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * An array of subscribed dispatchers[m
[32m+[m[32m   * @type {StreamDispatcher[]}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get dispatchers() {[m
[32m+[m[32m    let d = [];[m
[32m+[m[32m    for (const container of this._dispatchers.values()) {[m
[32m+[m[32m      d = d.concat(Array.from(container.values()));[m
[32m+[m[32m    }[m
[32m+[m[32m    return d;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  get _playableStream() {[m
[32m+[m[32m    const currentTranscoder = this.currentTranscoder;[m
[32m+[m[32m    if (!currentTranscoder) return null;[m
[32m+[m[32m    const transcoder = currentTranscoder.transcoder;[m
[32m+[m[32m    const options = currentTranscoder.options;[m
[32m+[m[32m    return (transcoder && transcoder.output) || options.stream;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  unregisterDispatcher(dispatcher, old) {[m
[32m+[m[32m    const volume = old || dispatcher.volume;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Emitted whenever a stream dispatcher unsubscribes from the broadcast.[m
[32m+[m[32m     * @event VoiceBroadcast#unsubscribe[m
[32m+[m[32m     * @param {StreamDispatcher} dispatcher The unsubscribed dispatcher[m
[32m+[m[32m     */[m
[32m+[m[32m    this.emit('unsubscribe', dispatcher);[m
[32m+[m[32m    for (const container of this._dispatchers.values()) {[m
[32m+[m[32m      container.delete(dispatcher);[m
[32m+[m
[32m+[m[32m      if (!container.size) {[m
[32m+[m[32m        this._encoders.get(volume).destroy();[m
[32m+[m[32m        this._dispatchers.delete(volume);[m
[32m+[m[32m        this._encoders.delete(volume);[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  registerDispatcher(dispatcher) {[m
[32m+[m[32m    if (!this._dispatchers.has(dispatcher.volume)) {[m
[32m+[m[32m      this._dispatchers.set(dispatcher.volume, new Set());[m
[32m+[m[32m      this._encoders.set(dispatcher.volume, OpusEncoders.fetch());[m
[32m+[m[32m    }[m
[32m+[m[32m    const container = this._dispatchers.get(dispatcher.volume);[m
[32m+[m[32m    if (!container.has(dispatcher)) {[m
[32m+[m[32m      container.add(dispatcher);[m
[32m+[m[32m      dispatcher.once('end', () => this.unregisterDispatcher(dispatcher));[m
[32m+[m[32m      dispatcher.on('volumeChange', (o, n) => {[m
[32m+[m[32m        this.unregisterDispatcher(dispatcher, o);[m
[32m+[m[32m        if (!this._dispatchers.has(n)) {[m
[32m+[m[32m          this._dispatchers.set(n, new Set());[m
[32m+[m[32m          this._encoders.set(n, OpusEncoders.fetch());[m
[32m+[m[32m        }[m
[32m+[m[32m        this._dispatchers.get(n).add(dispatcher);[m
[32m+[m[32m      });[m
[32m+[m[32m      /**[m
[32m+[m[32m       * Emitted whenever a stream dispatcher subscribes to the broadcast.[m
[32m+[m[32m       * @event VoiceBroadcast#subscribe[m
[32m+[m[32m       * @param {StreamDispatcher} dispatcher The subscribed dispatcher[m
[32m+[m[32m       */[m
[32m+[m[32m      this.emit('subscribe', dispatcher);[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  killCurrentTranscoder() {[m
[32m+[m[32m    if (this.currentTranscoder) {[m
[32m+[m[32m      if (this.currentTranscoder.transcoder) this.currentTranscoder.transcoder.kill();[m
[32m+[m[32m      this.currentTranscoder = null;[m
[32m+[m[32m      this.emit('end');[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Plays any audio stream across the broadcast.[m
[32m+[m[32m   * @param {ReadableStream} stream The audio stream to play[m
[32m+[m[32m   * @param {StreamOptions} [options] Options for playing the stream[m
[32m+[m[32m   * @returns {VoiceBroadcast}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Play streams using ytdl-core[m
[32m+[m[32m   * const ytdl = require('ytdl-core');[m
[32m+[m[32m   * const streamOptions = { seek: 0, volume: 1 };[m
[32m+[m[32m   * const broadcast = client.createVoiceBroadcast();[m
[32m+[m[32m   *[m
[32m+[m[32m   * voiceChannel.join()[m
[32m+[m[32m   *   .then(connection => {[m
[32m+[m[32m   *     const stream = ytdl('https://www.youtube.com/watch?v=XAWgeLF9EVQ', { filter : 'audioonly' });[m
[32m+[m[32m   *     broadcast.playStream(stream);[m
[32m+[m[32m   *     const dispatcher = connection.playBroadcast(broadcast);[m
[32m+[m[32m   *   })[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  playStream(stream, options = {}) {[m
[32m+[m[32m    this.setVolume(options.volume || 1);[m
[32m+[m[32m    return this._playTranscodable(stream, options);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Play the given file in the voice connection.[m
[32m+[m[32m   * @param {string} file The absolute path to the file[m
[32m+[m[32m   * @param {StreamOptions} [options] Options for playing the stream[m
[32m+[m[32m   * @returns {StreamDispatcher}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Play files natively[m
[32m+[m[32m   * const broadcast = client.createVoiceBroadcast();[m
[32m+[m[32m   *[m
[32m+[m[32m   * voiceChannel.join()[m
[32m+[m[32m   *   .then(connection => {[m
[32m+[m[32m   *     broadcast.playFile('C:/Users/Discord/Desktop/music.mp3');[m
[32m+[m[32m   *     const dispatcher = connection.playBroadcast(broadcast);[m
[32m+[m[32m   *   })[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  playFile(file, options = {}) {[m
[32m+[m[32m    this.setVolume(options.volume || 1);[m
[32m+[m[32m    return this._playTranscodable(`file:${file}`, options);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  _playTranscodable(media, options) {[m
[32m+[m[32m    this.killCurrentTranscoder();[m
[32m+[m[32m    const transcoder = this.prism.transcode({[m
[32m+[m[32m      type: 'ffmpeg',[m
[32m+[m[32m      media,[m
[32m+[m[32m      ffmpegArguments: ffmpegArguments.concat(['-ss', String(options.seek || 0)]),[m
[32m+[m[32m    });[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Emitted whenever an error occurs.[m
[32m+[m[32m     * @event VoiceBroadcast#error[m
[32m+[m[32m     * @param {Error} error The error that occurred[m
[32m+[m[32m     */[m
[32m+[m[32m    transcoder.once('error', e => {[m
[32m+[m[32m      if (this.listenerCount('error') > 0) this.emit('error', e);[m
[32m+[m[32m      /**[m
[32m+[m[32m       * Emitted whenever the VoiceBroadcast has any warnings.[m
[32m+[m[32m       * @event VoiceBroadcast#warn[m
[32m+[m[32m       * @param {string|Error} warning The warning that was raised[m
[32m+[m[32m       */[m
[32m+[m[32m      else this.emit('warn', e);[m
[32m+[m[32m    });[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Emitted once the broadcast (the audio stream) ends.[m
[32m+[m[32m     * @event VoiceBroadcast#end[m
[32m+[m[32m     */[m
[32m+[m[32m    transcoder.once('end', () => this.killCurrentTranscoder());[m
[32m+[m[32m    this.currentTranscoder = {[m
[32m+[m[32m      transcoder,[m
[32m+[m[32m      options,[m
[32m+[m[32m    };[m
[32m+[m[32m    transcoder.output.once('readable', () => this._startPlaying());[m
[32m+[m[32m    return this;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Plays a stream of 16-bit signed stereo PCM.[m
[32m+[m[32m   * @param {ReadableStream} stream The audio stream to play[m
[32m+[m[32m   * @param {StreamOptions} [options] Options for playing the stream[m
[32m+[m[32m   * @returns {VoiceBroadcast}[m
[32m+[m[32m   */[m
[32m+[m[32m  playConvertedStream(stream, options = {}) {[m
[32m+[m[32m    this.killCurrentTranscoder();[m
[32m+[m[32m    this.setVolume(options.volume || 1);[m
[32m+[m[32m    this.currentTranscoder = { options: { stream } };[m
[32m+[m[32m    stream.once('readable', () => this._startPlaying());[m
[32m+[m[32m    return this;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Plays an Opus encoded stream.[m
[32m+[m[32m   * <warn>Note that inline volume is not compatible with this method.</warn>[m
[32m+[m[32m   * @param {ReadableStream} stream The Opus audio stream to play[m
[32m+[m[32m   * @param {StreamOptions} [options] Options for playing the stream[m
[32m+[m[32m   * @returns {StreamDispatcher}[m
[32m+[m[32m   */[m
[32m+[m[32m  playOpusStream(stream) {[m
[32m+[m[32m    this.currentTranscoder = { options: { stream }, opus: true };[m
[32m+[m[32m    stream.once('readable', () => this._startPlaying());[m
[32m+[m[32m    return this;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Play an arbitrary input that can be [handled by ffmpeg](https://ffmpeg.org/ffmpeg-protocols.html#Description)[m
[32m+[m[32m   * @param {string} input The arbitrary input[m
[32m+[m[32m   * @param {StreamOptions} [options] Options for playing the stream[m
[32m+[m[32m   * @returns {VoiceBroadcast}[m
[32m+[m[32m   */[m
[32m+[m[32m  playArbitraryInput(input, options = {}) {[m
[32m+[m[32m    this.setVolume(options.volume || 1);[m
[32m+[m[32m    options.input = input;[m
[32m+[m[32m    return this._playTranscodable(input, options);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Pauses the entire broadcast - all dispatchers also pause.[m
[32m+[m[32m   */[m
[32m+[m[32m  pause() {[m
[32m+[m[32m    this.paused = true;[m
[32m+[m[32m    for (const container of this._dispatchers.values()) {[m
[32m+[m[32m      for (const dispatcher of container.values()) {[m
[32m+[m[32m        dispatcher.pause();[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Resumes the entire broadcast - all dispatchers also resume.[m
[32m+[m[32m   */[m
[32m+[m[32m  resume() {[m
[32m+[m[32m    this.paused = false;[m
[32m+[m[32m    for (const container of this._dispatchers.values()) {[m
[32m+[m[32m      for (const dispatcher of container.values()) {[m
[32m+[m[32m        dispatcher.resume();[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  _startPlaying() {[m
[32m+[m[32m    if (this.tickInterval) clearInterval(this.tickInterval);[m
[32m+[m[32m    // Old code?[m
[32m+[m[32m    // this.tickInterval = this.client.setInterval(this.tick.bind(this), 20);[m
[32m+[m[32m    this._startTime = Date.now();[m
[32m+[m[32m    this._count = 0;[m
[32m+[m[32m    this._pausedTime = 0;[m
[32m+[m[32m    this._missed = 0;[m
[32m+[m[32m    this.tick();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  tick() {[m
[32m+[m[32m    if (!this._playableStream) return;[m
[32m+[m[32m    if (this.paused) {[m
[32m+[m[32m      this._pausedTime += 20;[m
[32m+[m[32m      setTimeout(() => this.tick(), 20);[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    const opus = this.currentTranscoder.opus;[m
[32m+[m[32m    const buffer = this.readStreamBuffer();[m
[32m+[m
[32m+[m[32m    if (!buffer) {[m
[32m+[m[32m      this._missed++;[m
[32m+[m[32m      if (this._missed < 5) {[m
[32m+[m[32m        this._pausedTime += 200;[m
[32m+[m[32m        setTimeout(() => this.tick(), 200);[m
[32m+[m[32m      } else {[m
[32m+[m[32m        this.killCurrentTranscoder();[m
[32m+[m[32m      }[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    this._missed = 0;[m
[32m+[m
[32m+[m[32m    let packetMatrix = {};[m
[32m+[m
[32m+[m[32m    const getOpusPacket = volume => {[m
[32m+[m[32m      if (packetMatrix[volume]) return packetMatrix[volume];[m
[32m+[m
[32m+[m[32m      const opusEncoder = this._encoders.get(volume);[m
[32m+[m[32m      const opusPacket = opusEncoder.encode(this.applyVolume(buffer, this._volume * volume));[m
[32m+[m[32m      packetMatrix[volume] = opusPacket;[m
[32m+[m[32m      return opusPacket;[m
[32m+[m[32m    };[m
[32m+[m
[32m+[m[32m    for (const dispatcher of this.dispatchers) {[m
[32m+[m[32m      if (opus) {[m
[32m+[m[32m        dispatcher.processPacket(buffer);[m
[32m+[m[32m        continue;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      const volume = dispatcher.volume;[m
[32m+[m[32m      dispatcher.processPacket(getOpusPacket(volume));[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    const next = 20 + (this._startTime + this._pausedTime + (this._count * 20) - Date.now());[m
[32m+[m[32m    this._count++;[m
[32m+[m[32m    setTimeout(() => this.tick(), next);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  readStreamBuffer() {[m
[32m+[m[32m    const opus = this.currentTranscoder.opus;[m
[32m+[m[32m    const bufferLength = (opus ? 80 : 1920) * 2;[m
[32m+[m[32m    let buffer = this._playableStream.read(bufferLength);[m
[32m+[m[32m    if (opus) return buffer;[m
[32m+[m[32m    if (!buffer) return null;[m
[32m+[m
[32m+[m[32m    if (buffer.length !== bufferLength) {[m
[32m+[m[32m      const newBuffer = Buffer.alloc(bufferLength).fill(0);[m
[32m+[m[32m      buffer.copy(newBuffer);[m
[32m+[m[32m      buffer = newBuffer;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return buffer;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Stop the current stream from playing without unsubscribing dispatchers.[m
[32m+[m[32m   */[m
[32m+[m[32m  end() {[m
[32m+[m[32m    this.killCurrentTranscoder();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * End the current broadcast, all subscribed dispatchers will also end.[m
[32m+[m[32m   */[m
[32m+[m[32m  destroy() {[m
[32m+[m[32m    this.end();[m
[32m+[m[32m    for (const container of this._dispatchers.values()) {[m
[32m+[m[32m      for (const dispatcher of container.values()) {[m
[32m+[m[32m        dispatcher.destroy('end', 'broadcast ended');[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = VoiceBroadcast;[m
[1mdiff --git a/node_modules/discord.js/src/client/voice/VoiceConnection.js b/node_modules/discord.js/src/client/voice/VoiceConnection.js[m
[1mnew file mode 100644[m
[1mindex 0000000..7029011[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/voice/VoiceConnection.js[m
[36m@@ -0,0 +1,530 @@[m
[32m+[m[32mconst VoiceWebSocket = require('./VoiceWebSocket');[m
[32m+[m[32mconst VoiceUDP = require('./VoiceUDPClient');[m
[32m+[m[32mconst Util = require('../../util/Util');[m
[32m+[m[32mconst Constants = require('../../util/Constants');[m
[32m+[m[32mconst AudioPlayer = require('./player/AudioPlayer');[m
[32m+[m[32mconst VoiceReceiver = require('./receiver/VoiceReceiver');[m
[32m+[m[32mconst EventEmitter = require('events').EventEmitter;[m
[32m+[m[32mconst Prism = require('prism-media');[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Represents a connection to a guild's voice server.[m
[32m+[m[32m * ```js[m
[32m+[m[32m * // Obtained using:[m
[32m+[m[32m * voiceChannel.join()[m
[32m+[m[32m *   .then(connection => {[m
[32m+[m[32m *[m
[32m+[m[32m *   });[m
[32m+[m[32m * ```[m
[32m+[m[32m * @extends {EventEmitter}[m
[32m+[m[32m */[m
[32m+[m[32mclass VoiceConnection extends EventEmitter {[m
[32m+[m[32m  constructor(voiceManager, channel) {[m
[32m+[m[32m    super();[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The voice manager that instantiated this connection[m
[32m+[m[32m     * @type {ClientVoiceManager}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.voiceManager = voiceManager;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The client that instantiated this connection[m
[32m+[m[32m     * @type {Client}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.client = voiceManager.client;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * @external Prism[m
[32m+[m[32m     * @see {@link https://github.com/hydrabolt/prism-media}[m
[32m+[m[32m     */[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The audio transcoder for this connection[m
[32m+[m[32m     * @type {Prism}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.prism = new Prism();[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The voice channel this connection is currently serving[m
[32m+[m[32m     * @type {VoiceChannel}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.channel = channel;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The current status of the voice connection[m
[32m+[m[32m     * @type {number}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.status = Constants.VoiceStatus.AUTHENTICATING;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Whether we're currently transmitting audio[m
[32m+[m[32m     * @type {boolean}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.speaking = false;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * An array of Voice Receivers that have been created for this connection[m
[32m+[m[32m     * @type {VoiceReceiver[]}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.receivers = [];[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The authentication data needed to connect to the voice server[m
[32m+[m[32m     * @type {Object}[m
[32m+[m[32m     * @private[m
[32m+[m[32m     */[m
[32m+[m[32m    this.authentication = {};[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The audio player for this voice connection[m
[32m+[m[32m     * @type {AudioPlayer}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.player = new AudioPlayer(this);[m
[32m+[m
[32m+[m[32m    this.player.on('debug', m => {[m
[32m+[m[32m      /**[m
[32m+[m[32m       * Debug info from the connection.[m
[32m+[m[32m       * @event VoiceConnection#debug[m
[32m+[m[32m       * @param {string} message The debug message[m
[32m+[m[32m       */[m
[32m+[m[32m      this.emit('debug', `audio player - ${m}`);[m
[32m+[m[32m    });[m
[32m+[m
[32m+[m[32m    this.player.on('error', e => {[m
[32m+[m[32m      /**[m
[32m+[m[32m       * Warning info from the connection.[m
[32m+[m[32m       * @event VoiceConnection#warn[m
[32m+[m[32m       * @param {string|Error} warning The warning[m
[32m+[m[32m       */[m
[32m+[m[32m      this.emit('warn', e);[m
[32m+[m[32m    });[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Map SSRC to speaking values[m
[32m+[m[32m     * @type {Map<number, boolean>}[m
[32m+[m[32m     * @private[m
[32m+[m[32m     */[m
[32m+[m[32m    this.ssrcMap = new Map();[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Object that wraps contains the `ws` and `udp` sockets of this voice connection[m
[32m+[m[32m     * @type {Object}[m
[32m+[m[32m     * @private[m
[32m+[m[32m     */[m
[32m+[m[32m    this.sockets = {};[m
[32m+[m
[32m+[m[32m    this.authenticate();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The current stream dispatcher (if any)[m
[32m+[m[32m   * @type {?StreamDispatcher}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get dispatcher() {[m
[32m+[m[32m    return this.player.dispatcher;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets whether the voice connection should display as "speaking" or not.[m
[32m+[m[32m   * @param {boolean} value Whether or not to speak[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  setSpeaking(value) {[m
[32m+[m[32m    if (this.speaking === value) return;[m
[32m+[m[32m    if (this.status !== Constants.VoiceStatus.CONNECTED) return;[m
[32m+[m[32m    this.speaking = value;[m
[32m+[m[32m    this.sockets.ws.sendPacket({[m
[32m+[m[32m      op: Constants.VoiceOPCodes.SPEAKING,[m
[32m+[m[32m      d: {[m
[32m+[m[32m        speaking: true,[m
[32m+[m[32m        delay: 0,[m
[32m+[m[32m      },[m
[32m+[m[32m    }).catch(e => {[m
[32m+[m[32m      this.emit('debug', e);[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sends a request to the main gateway to join a voice channel.[m
[32m+[m[32m   * @param {Object} [options] The options to provide[m
[32m+[m[32m   */[m
[32m+[m[32m  sendVoiceStateUpdate(options = {}) {[m
[32m+[m[32m    options = Util.mergeDefault({[m
[32m+[m[32m      guild_id: this.channel.guild.id,[m
[32m+[m[32m      channel_id: this.channel.id,[m
[32m+[m[32m      self_mute: false,[m
[32m+[m[32m      self_deaf: false,[m
[32m+[m[32m    }, options);[m
[32m+[m
[32m+[m[32m    this.client.ws.send({[m
[32m+[m[32m      op: Constants.OPCodes.VOICE_STATE_UPDATE,[m
[32m+[m[32m      d: options,[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Set the token and endpoint required to connect to the voice servers.[m
[32m+[m[32m   * @param {string} token The voice token[m
[32m+[m[32m   * @param {string} endpoint The voice endpoint[m
[32m+[m[32m   * @returns {void}[m
[32m+[m[32m   */[m
[32m+[m[32m  setTokenAndEndpoint(token, endpoint) {[m
[32m+[m[32m    if (!endpoint) {[m
[32m+[m[32m      // Signifies awaiting endpoint stage[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (!token) {[m
[32m+[m[32m      this.authenticateFailed('Token not provided from voice server packet.');[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    endpoint = endpoint.match(/([^:]*)/)[0];[m
[32m+[m
[32m+[m[32m    if (!endpoint) {[m
[32m+[m[32m      this.authenticateFailed('Invalid endpoint received.');[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (this.status === Constants.VoiceStatus.AUTHENTICATING) {[m
[32m+[m[32m      this.authentication.token = token;[m
[32m+[m[32m      this.authentication.endpoint = endpoint;[m
[32m+[m[32m      this.checkAuthenticated();[m
[32m+[m[32m    } else if (token !== this.authentication.token || endpoint !== this.authentication.endpoint) {[m
[32m+[m[32m      this.reconnect(token, endpoint);[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets the Session ID for the connection.[m
[32m+[m[32m   * @param {string} sessionID The voice session ID[m
[32m+[m[32m   */[m
[32m+[m[32m  setSessionID(sessionID) {[m
[32m+[m[32m    if (!sessionID) {[m
[32m+[m[32m      this.authenticateFailed('Session ID not supplied.');[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (this.status === Constants.VoiceStatus.AUTHENTICATING) {[m
[32m+[m[32m      this.authentication.sessionID = sessionID;[m
[32m+[m[32m      this.checkAuthenticated();[m
[32m+[m[32m    } else if (sessionID !== this.authentication.sessionID) {[m
[32m+[m[32m      this.authentication.sessionID = sessionID;[m
[32m+[m[32m      /**[m
[32m+[m[32m       * Emitted when a new session ID is received.[m
[32m+[m[32m       * @event VoiceConnection#newSession[m
[32m+[m[32m       * @private[m
[32m+[m[32m       */[m
[32m+[m[32m      this.emit('newSession', sessionID);[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Checks whether the voice connection is authenticated.[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  checkAuthenticated() {[m
[32m+[m[32m    const { token, endpoint, sessionID } = this.authentication;[m
[32m+[m
[32m+[m[32m    if (token && endpoint && sessionID) {[m
[32m+[m[32m      clearTimeout(this.connectTimeout);[m
[32m+[m[32m      this.status = Constants.VoiceStatus.CONNECTING;[m
[32m+[m[32m      /**[m
[32m+[m[32m       * Emitted when we successfully initiate a voice connection.[m
[32m+[m[32m       * @event VoiceConnection#authenticated[m
[32m+[m[32m       */[m
[32m+[m[32m      this.emit('authenticated');[m
[32m+[m[32m      this.connect();[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Invoked when we fail to initiate a voice connection.[m
[32m+[m[32m   * @param {string} reason The reason for failure[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  authenticateFailed(reason) {[m
[32m+[m[32m    clearTimeout(this.connectTimeout);[m
[32m+[m[32m    if (this.status === Constants.VoiceStatus.AUTHENTICATING) {[m
[32m+[m[32m      /**[m
[32m+[m[32m       * Emitted when we fail to initiate a voice connection.[m
[32m+[m[32m       * @event VoiceConnection#failed[m
[32m+[m[32m       * @param {Error} error The encountered error[m
[32m+[m[32m       */[m
[32m+[m[32m      this.emit('failed', new Error(reason));[m
[32m+[m[32m    } else {[m
[32m+[m[32m      /**[m
[32m+[m[32m       * Emitted whenever the connection encounters an error.[m
[32m+[m[32m       * @event VoiceConnection#error[m
[32m+[m[32m       * @param {Error} error The encountered error[m
[32m+[m[32m       */[m
[32m+[m[32m      this.emit('error', new Error(reason));[m
[32m+[m[32m    }[m
[32m+[m[32m    this.status = Constants.VoiceStatus.DISCONNECTED;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Move to a different voice channel in the same guild.[m
[32m+[m[32m   * @param {VoiceChannel} channel The channel to move to[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  updateChannel(channel) {[m
[32m+[m[32m    this.channel = channel;[m
[32m+[m[32m    this.sendVoiceStateUpdate();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Attempts to authenticate to the voice server.[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  authenticate() {[m
[32m+[m[32m    this.sendVoiceStateUpdate();[m
[32m+[m[32m    this.connectTimeout = this.client.setTimeout([m
[32m+[m[32m      () => this.authenticateFailed(new Error('Connection not established within 15 seconds.')), 15000);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Attempts to reconnect to the voice server (typically after a region change).[m
[32m+[m[32m   * @param {string} token The voice token[m
[32m+[m[32m   * @param {string} endpoint The voice endpoint[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  reconnect(token, endpoint) {[m
[32m+[m[32m    this.authentication.token = token;[m
[32m+[m[32m    this.authentication.endpoint = endpoint;[m
[32m+[m
[32m+[m[32m    this.status = Constants.VoiceStatus.RECONNECTING;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Emitted when the voice connection is reconnecting (typically after a region change).[m
[32m+[m[32m     * @event VoiceConnection#reconnecting[m
[32m+[m[32m     */[m
[32m+[m[32m    this.emit('reconnecting');[m
[32m+[m[32m    this.connect();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Disconnect the voice connection, causing a disconnect and closing event to be emitted.[m
[32m+[m[32m   */[m
[32m+[m[32m  disconnect() {[m
[32m+[m[32m    this.emit('closing');[m
[32m+[m[32m    this.sendVoiceStateUpdate({[m
[32m+[m[32m      channel_id: null,[m
[32m+[m[32m    });[m
[32m+[m[32m    this.player.destroy();[m
[32m+[m[32m    this.cleanup();[m
[32m+[m[32m    this.status = Constants.VoiceStatus.DISCONNECTED;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Emitted when the voice connection disconnects.[m
[32m+[m[32m     * @event VoiceConnection#disconnect[m
[32m+[m[32m     */[m
[32m+[m[32m    this.emit('disconnect');[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Cleans up after disconnect.[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  cleanup() {[m
[32m+[m[32m    const { ws, udp } = this.sockets;[m
[32m+[m
[32m+[m[32m    if (ws) {[m
[32m+[m[32m      ws.removeAllListeners('error');[m
[32m+[m[32m      ws.removeAllListeners('ready');[m
[32m+[m[32m      ws.removeAllListeners('sessionDescription');[m
[32m+[m[32m      ws.removeAllListeners('speaking');[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (udp) udp.removeAllListeners('error');[m
[32m+[m
[32m+[m[32m    this.sockets.ws = null;[m
[32m+[m[32m    this.sockets.udp = null;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Connect the voice connection.[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  connect() {[m
[32m+[m[32m    if (this.status !== Constants.VoiceStatus.RECONNECTING) {[m
[32m+[m[32m      if (this.sockets.ws) throw new Error('There is already an existing WebSocket connection.');[m
[32m+[m[32m      if (this.sockets.udp) throw new Error('There is already an existing UDP connection.');[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (this.sockets.ws) this.sockets.ws.shutdown();[m
[32m+[m[32m    if (this.sockets.udp) this.sockets.udp.shutdown();[m
[32m+[m
[32m+[m[32m    this.sockets.ws = new VoiceWebSocket(this);[m
[32m+[m[32m    this.sockets.udp = new VoiceUDP(this);[m
[32m+[m
[32m+[m[32m    const { ws, udp } = this.sockets;[m
[32m+[m
[32m+[m[32m    ws.on('error', err => this.emit('error', err));[m
[32m+[m[32m    udp.on('error', err => this.emit('error', err));[m
[32m+[m[32m    ws.on('ready', this.onReady.bind(this));[m
[32m+[m[32m    ws.on('sessionDescription', this.onSessionDescription.bind(this));[m
[32m+[m[32m    ws.on('speaking', this.onSpeaking.bind(this));[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Invoked when the voice websocket is ready.[m
[32m+[m[32m   * @param {Object} data The received data[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  onReady({ port, ssrc, ip }) {[m
[32m+[m[32m    this.authentication.port = port;[m
[32m+[m[32m    this.authentication.ssrc = ssrc;[m
[32m+[m[32m    this.sockets.udp.createUDPSocket(ip);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Invoked when a session description is received.[m
[32m+[m[32m   * @param {string} mode The encryption mode[m
[32m+[m[32m   * @param {string} secret The secret key[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  onSessionDescription(mode, secret) {[m
[32m+[m[32m    this.authentication.encryptionMode = mode;[m
[32m+[m[32m    this.authentication.secretKey = secret;[m
[32m+[m
[32m+[m[32m    this.status = Constants.VoiceStatus.CONNECTED;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Emitted once the connection is ready, when a promise to join a voice channel resolves,[m
[32m+[m[32m     * the connection will already be ready.[m
[32m+[m[32m     * @event VoiceConnection#ready[m
[32m+[m[32m     */[m
[32m+[m[32m    this.emit('ready');[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Invoked when a speaking event is received.[m
[32m+[m[32m   * @param {Object} data The received data[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  onSpeaking({ user_id, ssrc, speaking }) {[m
[32m+[m[32m    const guild = this.channel.guild;[m
[32m+[m[32m    const user = this.client.users.get(user_id);[m
[32m+[m[32m    this.ssrcMap.set(+ssrc, user);[m
[32m+[m[32m    if (!speaking) {[m
[32m+[m[32m      for (const receiver of this.receivers) {[m
[32m+[m[32m        receiver.stoppedSpeaking(user);[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Emitted whenever a user starts/stops speaking.[m
[32m+[m[32m     * @event VoiceConnection#speaking[m
[32m+[m[32m     * @param {User} user The user that has started/stopped speaking[m
[32m+[m[32m     * @param {boolean} speaking Whether or not the user is speaking[m
[32m+[m[32m     */[m
[32m+[m[32m    if (this.status === Constants.VoiceStatus.CONNECTED) this.emit('speaking', user, speaking);[m
[32m+[m[32m    guild._memberSpeakUpdate(user_id, speaking);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Options that can be passed to stream-playing methods:[m
[32m+[m[32m   * @typedef {Object} StreamOptions[m
[32m+[m[32m   * @property {number} [seek=0] The time to seek to[m
[32m+[m[32m   * @property {number} [volume=1] The volume to play at[m
[32m+[m[32m   * @property {number} [passes=1] How many times to send the voice packet to reduce packet loss[m
[32m+[m[32m   * @property {number|string} [bitrate=48000] The bitrate (quality) of the audio.[m
[32m+[m[32m   * If set to 'auto', the voice channel's bitrate will be used[m
[32m+[m[32m   */[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Play the given file in the voice connection.[m
[32m+[m[32m   * @param {string} file The absolute path to the file[m
[32m+[m[32m   * @param {StreamOptions} [options] Options for playing the stream[m
[32m+[m[32m   * @returns {StreamDispatcher}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Play files natively[m
[32m+[m[32m   * voiceChannel.join()[m
[32m+[m[32m   *   .then(connection => {[m
[32m+[m[32m   *     const dispatcher = connection.playFile('C:/Users/Discord/Desktop/music.mp3');[m
[32m+[m[32m   *   })[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  playFile(file, options) {[m
[32m+[m[32m    return this.player.playUnknownStream(`file:${file}`, options);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Play an arbitrary input that can be [handled by ffmpeg](https://ffmpeg.org/ffmpeg-protocols.html#Description)[m
[32m+[m[32m   * @param {string} input the arbitrary input[m
[32m+[m[32m   * @param {StreamOptions} [options] Options for playing the stream[m
[32m+[m[32m   * @returns {StreamDispatcher}[m
[32m+[m[32m   */[m
[32m+[m[32m  playArbitraryInput(input, options) {[m
[32m+[m[32m    return this.player.playUnknownStream(input, options);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Plays and converts an audio stream in the voice connection.[m
[32m+[m[32m   * @param {ReadableStream} stream The audio stream to play[m
[32m+[m[32m   * @param {StreamOptions} [options] Options for playing the stream[m
[32m+[m[32m   * @returns {StreamDispatcher}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Play streams using ytdl-core[m
[32m+[m[32m   * const ytdl = require('ytdl-core');[m
[32m+[m[32m   * const streamOptions = { seek: 0, volume: 1 };[m
[32m+[m[32m   * voiceChannel.join()[m
[32m+[m[32m   *   .then(connection => {[m
[32m+[m[32m   *     const stream = ytdl('https://www.youtube.com/watch?v=XAWgeLF9EVQ', { filter : 'audioonly' });[m
[32m+[m[32m   *     const dispatcher = connection.playStream(stream, streamOptions);[m
[32m+[m[32m   *   })[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  playStream(stream, options) {[m
[32m+[m[32m    return this.player.playUnknownStream(stream, options);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Plays a stream of 16-bit signed stereo PCM.[m
[32m+[m[32m   * @param {ReadableStream} stream The audio stream to play[m
[32m+[m[32m   * @param {StreamOptions} [options] Options for playing the stream[m
[32m+[m[32m   * @returns {StreamDispatcher}[m
[32m+[m[32m   */[m
[32m+[m[32m  playConvertedStream(stream, options) {[m
[32m+[m[32m    return this.player.playPCMStream(stream, options);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Plays an Opus encoded stream.[m
[32m+[m[32m   * <warn>Note that inline volume is not compatible with this method.</warn>[m
[32m+[m[32m   * @param {ReadableStream} stream The Opus audio stream to play[m
[32m+[m[32m   * @param {StreamOptions} [options] Options for playing the stream[m
[32m+[m[32m   * @returns {StreamDispatcher}[m
[32m+[m[32m   */[m
[32m+[m[32m  playOpusStream(stream, options) {[m
[32m+[m[32m    return this.player.playOpusStream(stream, options);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Plays a voice broadcast.[m
[32m+[m[32m   * @param {VoiceBroadcast} broadcast The broadcast to play[m
[32m+[m[32m   * @param {StreamOptions} [options] Options for playing the stream[m
[32m+[m[32m   * @returns {StreamDispatcher}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Play a broadcast[m
[32m+[m[32m   * const broadcast = client[m
[32m+[m[32m   *   .createVoiceBroadcast()[m
[32m+[m[32m   *   .playFile('./test.mp3');[m
[32m+[m[32m   * const dispatcher = voiceConnection.playBroadcast(broadcast);[m
[32m+[m[32m   */[m
[32m+[m[32m  playBroadcast(broadcast, options) {[m
[32m+[m[32m    return this.player.playBroadcast(broadcast, options);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Creates a VoiceReceiver so you can start listening to voice data.[m
[32m+[m[32m   * It's recommended to only create one of these.[m
[32m+[m[32m   * @returns {VoiceReceiver}[m
[32m+[m[32m   */[m
[32m+[m[32m  createReceiver() {[m
[32m+[m[32m    const receiver = new VoiceReceiver(this);[m
[32m+[m[32m    this.receivers.push(receiver);[m
[32m+[m[32m    return receiver;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = VoiceConnection;[m
[1mdiff --git a/node_modules/discord.js/src/client/voice/VoiceUDPClient.js b/node_modules/discord.js/src/client/voice/VoiceUDPClient.js[m
[1mnew file mode 100644[m
[1mindex 0000000..cf1e388[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/voice/VoiceUDPClient.js[m
[36m@@ -0,0 +1,127 @@[m
[32m+[m[32mconst udp = require('dgram');[m
[32m+[m[32mconst Constants = require('../../util/Constants');[m
[32m+[m[32mconst EventEmitter = require('events').EventEmitter;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Represents a UDP client for a Voice Connection.[m
[32m+[m[32m * @extends {EventEmitter}[m
[32m+[m[32m * @private[m
[32m+[m[32m */[m
[32m+[m[32mclass VoiceConnectionUDPClient extends EventEmitter {[m
[32m+[m[32m  constructor(voiceConnection) {[m
[32m+[m[32m    super();[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The voice connection that this UDP client serves[m
[32m+[m[32m     * @type {VoiceConnection}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.voiceConnection = voiceConnection;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The UDP socket[m
[32m+[m[32m     * @type {?Socket}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.socket = null;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The address of the Discord voice server[m
[32m+[m[32m     * @type {?string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.discordAddress = null;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The local IP address[m
[32m+[m[32m     * @type {?string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.localAddress = null;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The local port[m
[32m+[m[32m     * @type {?string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.localPort = null;[m
[32m+[m
[32m+[m[32m    this.voiceConnection.on('closing', this.shutdown.bind(this));[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  shutdown() {[m
[32m+[m[32m    if (this.socket) {[m
[32m+[m[32m      this.socket.removeAllListeners('message');[m
[32m+[m[32m      try {[m
[32m+[m[32m        this.socket.close();[m
[32m+[m[32m      } finally {[m
[32m+[m[32m        this.socket = null;[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The port of the Discord voice server[m
[32m+[m[32m   * @type {number}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get discordPort() {[m
[32m+[m[32m    return this.voiceConnection.authentication.port;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Send a packet to the UDP client.[m
[32m+[m[32m   * @param {Object} packet The packet to send[m
[32m+[m[32m   * @returns {Promise<Object>}[m
[32m+[m[32m   */[m
[32m+[m[32m  send(packet) {[m
[32m+[m[32m    return new Promise((resolve, reject) => {[m
[32m+[m[32m      if (!this.socket) throw new Error('Tried to send a UDP packet, but there is no socket available.');[m
[32m+[m[32m      if (!this.discordAddress || !this.discordPort) throw new Error('Malformed UDP address or port.');[m
[32m+[m[32m      this.socket.send(packet, 0, packet.length, this.discordPort, this.discordAddress, error => {[m
[32m+[m[32m        if (error) reject(error); else resolve(packet);[m
[32m+[m[32m      });[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  createUDPSocket(address) {[m
[32m+[m[32m    this.discordAddress = address;[m
[32m+[m[32m    const socket = this.socket = udp.createSocket('udp4');[m
[32m+[m
[32m+[m[32m    socket.once('message', message => {[m
[32m+[m[32m      const packet = parseLocalPacket(message);[m
[32m+[m[32m      if (packet.error) {[m
[32m+[m[32m        this.emit('error', packet.error);[m
[32m+[m[32m        return;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      this.localAddress = packet.address;[m
[32m+[m[32m      this.localPort = packet.port;[m
[32m+[m
[32m+[m[32m      this.voiceConnection.sockets.ws.sendPacket({[m
[32m+[m[32m        op: Constants.VoiceOPCodes.SELECT_PROTOCOL,[m
[32m+[m[32m        d: {[m
[32m+[m[32m          protocol: 'udp',[m
[32m+[m[32m          data: {[m
[32m+[m[32m            address: packet.address,[m
[32m+[m[32m            port: packet.port,[m
[32m+[m[32m            mode: 'xsalsa20_poly1305',[m
[32m+[m[32m          },[m
[32m+[m[32m        },[m
[32m+[m[32m      });[m
[32m+[m[32m    });[m
[32m+[m
[32m+[m[32m    const blankMessage = Buffer.alloc(70);[m
[32m+[m[32m    blankMessage.writeUIntBE(this.voiceConnection.authentication.ssrc, 0, 4);[m
[32m+[m[32m    this.send(blankMessage);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction parseLocalPacket(message) {[m
[32m+[m[32m  try {[m
[32m+[m[32m    const packet = Buffer.from(message);[m
[32m+[m[32m    let address = '';[m
[32m+[m[32m    for (let i = 4; i < packet.indexOf(0, i); i++) address += String.fromCharCode(packet[i]);[m
[32m+[m[32m    const port = parseInt(packet.readUIntLE(packet.length - 2, 2).toString(10), 10);[m
[32m+[m[32m    return { address, port };[m
[32m+[m[32m  } catch (error) {[m
[32m+[m[32m    return { error };[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = VoiceConnectionUDPClient;[m
[1mdiff --git a/node_modules/discord.js/src/client/voice/VoiceWebSocket.js b/node_modules/discord.js/src/client/voice/VoiceWebSocket.js[m
[1mnew file mode 100644[m
[1mindex 0000000..e0d532e[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/voice/VoiceWebSocket.js[m
[36m@@ -0,0 +1,246 @@[m
[32m+[m[32mconst Constants = require('../../util/Constants');[m
[32m+[m[32mconst SecretKey = require('./util/SecretKey');[m
[32m+[m[32mconst EventEmitter = require('events').EventEmitter;[m
[32m+[m
[32m+[m[32mlet WebSocket;[m
[32m+[m[32mtry {[m
[32m+[m[32m  WebSocket = require('@discordjs/uws');[m
[32m+[m[32m} catch (err) {[m
[32m+[m[32m  WebSocket = require('ws');[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Represents a Voice Connection's WebSocket.[m
[32m+[m[32m * @extends {EventEmitter}[m
[32m+[m[32m * @private[m
[32m+[m[32m */[m
[32m+[m[32mclass VoiceWebSocket extends EventEmitter {[m
[32m+[m[32m  constructor(voiceConnection) {[m
[32m+[m[32m    super();[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The client of this voice WebSocket[m
[32m+[m[32m     * @type {Client}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.client = voiceConnection.voiceManager.client;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The Voice Connection that this WebSocket serves[m
[32m+[m[32m     * @type {VoiceConnection}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.voiceConnection = voiceConnection;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * How many connection attempts have been made[m
[32m+[m[32m     * @type {number}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.attempts = 0;[m
[32m+[m
[32m+[m[32m    this.connect();[m
[32m+[m[32m    this.dead = false;[m
[32m+[m[32m    this.voiceConnection.on('closing', this.shutdown.bind(this));[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  shutdown() {[m
[32m+[m[32m    this.dead = true;[m
[32m+[m[32m    this.reset();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Resets the current WebSocket.[m
[32m+[m[32m   */[m
[32m+[m[32m  reset() {[m
[32m+[m[32m    if (this.ws) {[m
[32m+[m[32m      if (this.ws.readyState !== WebSocket.CLOSED) this.ws.close();[m
[32m+[m[32m      this.ws = null;[m
[32m+[m[32m    }[m
[32m+[m[32m    this.clearHeartbeat();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Starts connecting to the Voice WebSocket Server.[m
[32m+[m[32m   */[m
[32m+[m[32m  connect() {[m
[32m+[m[32m    if (this.dead) return;[m
[32m+[m[32m    if (this.ws) this.reset();[m
[32m+[m[32m    if (this.attempts >= 5) {[m
[32m+[m[32m      this.emit('debug', new Error(`Too many connection attempts (${this.attempts}).`));[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    this.attempts++;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The actual WebSocket used to connect to the Voice WebSocket Server.[m
[32m+[m[32m     * @type {WebSocket}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.ws = new WebSocket(`wss://${this.voiceConnection.authentication.endpoint}`);[m
[32m+[m[32m    this.ws.onopen = this.onOpen.bind(this);[m
[32m+[m[32m    this.ws.onmessage = this.onMessage.bind(this);[m
[32m+[m[32m    this.ws.onclose = this.onClose.bind(this);[m
[32m+[m[32m    this.ws.onerror = this.onError.bind(this);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sends data to the WebSocket if it is open.[m
[32m+[m[32m   * @param {string} data The data to send to the WebSocket[m
[32m+[m[32m   * @returns {Promise<string>}[m
[32m+[m[32m   */[m
[32m+[m[32m  send(data) {[m
[32m+[m[32m    return new Promise((resolve, reject) => {[m
[32m+[m[32m      if (!this.ws || this.ws.readyState !== WebSocket.OPEN) {[m
[32m+[m[32m        throw new Error(`Voice websocket not open to send ${data}.`);[m
[32m+[m[32m      }[m
[32m+[m[32m      this.ws.send(data, null, error => {[m
[32m+[m[32m        if (error) reject(error); else resolve(data);[m
[32m+[m[32m      });[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * JSON.stringify's a packet and then sends it to the WebSocket Server.[m
[32m+[m[32m   * @param {Object} packet The packet to send[m
[32m+[m[32m   * @returns {Promise<string>}[m
[32m+[m[32m   */[m
[32m+[m[32m  sendPacket(packet) {[m
[32m+[m[32m    try {[m
[32m+[m[32m      packet = JSON.stringify(packet);[m
[32m+[m[32m    } catch (error) {[m
[32m+[m[32m      return Promise.reject(error);[m
[32m+[m[32m    }[m
[32m+[m[32m    return this.send(packet);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Called whenever the WebSocket opens.[m
[32m+[m[32m   */[m
[32m+[m[32m  onOpen() {[m
[32m+[m[32m    this.sendPacket({[m
[32m+[m[32m      op: Constants.OPCodes.DISPATCH,[m
[32m+[m[32m      d: {[m
[32m+[m[32m        server_id: this.voiceConnection.channel.guild.id,[m
[32m+[m[32m        user_id: this.client.user.id,[m
[32m+[m[32m        token: this.voiceConnection.authentication.token,[m
[32m+[m[32m        session_id: this.voiceConnection.authentication.sessionID,[m
[32m+[m[32m      },[m
[32m+[m[32m    }).catch(() => {[m
[32m+[m[32m      this.emit('error', new Error('Tried to send join packet, but the WebSocket is not open.'));[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Called whenever a message is received from the WebSocket.[m
[32m+[m[32m   * @param {MessageEvent} event The message event that was received[m
[32m+[m[32m   * @returns {void}[m
[32m+[m[32m   */[m
[32m+[m[32m  onMessage(event) {[m
[32m+[m[32m    try {[m
[32m+[m[32m      return this.onPacket(JSON.parse(event.data));[m
[32m+[m[32m    } catch (error) {[m
[32m+[m[32m      return this.onError(error);[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Called whenever the connection to the WebSocket server is lost.[m
[32m+[m[32m   */[m
[32m+[m[32m  onClose() {[m
[32m+[m[32m    if (!this.dead) this.client.setTimeout(this.connect.bind(this), this.attempts * 1000);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Called whenever an error occurs with the WebSocket.[m
[32m+[m[32m   * @param {Error} error The error that occurred[m
[32m+[m[32m   */[m
[32m+[m[32m  onError(error) {[m
[32m+[m[32m    this.emit('error', error);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Called whenever a valid packet is received from the WebSocket.[m
[32m+[m[32m   * @param {Object} packet The received packet[m
[32m+[m[32m   */[m
[32m+[m[32m  onPacket(packet) {[m
[32m+[m[32m    switch (packet.op) {[m
[32m+[m[32m      case Constants.VoiceOPCodes.READY:[m
[32m+[m[32m        this.setHeartbeat(packet.d.heartbeat_interval);[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Emitted once the voice WebSocket receives the ready packet.[m
[32m+[m[32m         * @param {Object} packet The received packet[m
[32m+[m[32m         * @event VoiceWebSocket#ready[m
[32m+[m[32m         */[m
[32m+[m[32m        this.emit('ready', packet.d);[m
[32m+[m[32m        break;[m
[32m+[m[32m      case Constants.VoiceOPCodes.SESSION_DESCRIPTION:[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Emitted once the Voice Websocket receives a description of this voice session.[m
[32m+[m[32m         * @param {string} encryptionMode The type of encryption being used[m
[32m+[m[32m         * @param {SecretKey} secretKey The secret key used for encryption[m
[32m+[m[32m         * @event VoiceWebSocket#sessionDescription[m
[32m+[m[32m         */[m
[32m+[m[32m        this.emit('sessionDescription', packet.d.mode, new SecretKey(packet.d.secret_key));[m
[32m+[m[32m        break;[m
[32m+[m[32m      case Constants.VoiceOPCodes.SPEAKING:[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Emitted whenever a speaking packet is received.[m
[32m+[m[32m         * @param {Object} data[m
[32m+[m[32m         * @event VoiceWebSocket#speaking[m
[32m+[m[32m         */[m
[32m+[m[32m        this.emit('speaking', packet.d);[m
[32m+[m[32m        break;[m
[32m+[m[32m      default:[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Emitted when an unhandled packet is received.[m
[32m+[m[32m         * @param {Object} packet[m
[32m+[m[32m         * @event VoiceWebSocket#unknownPacket[m
[32m+[m[32m         */[m
[32m+[m[32m        this.emit('unknownPacket', packet);[m
[32m+[m[32m        break;[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets an interval at which to send a heartbeat packet to the WebSocket.[m
[32m+[m[32m   * @param {number} interval The interval at which to send a heartbeat packet[m
[32m+[m[32m   */[m
[32m+[m[32m  setHeartbeat(interval) {[m
[32m+[m[32m    if (!interval || isNaN(interval)) {[m
[32m+[m[32m      this.onError(new Error('Tried to set voice heartbeat but no valid interval was specified.'));[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m[32m    if (this.heartbeatInterval) {[m
[32m+[m[32m      /**[m
[32m+[m[32m       * Emitted whenver the voice WebSocket encounters a non-fatal error.[m
[32m+[m[32m       * @param {string} warn The warning[m
[32m+[m[32m       * @event VoiceWebSocket#warn[m
[32m+[m[32m       */[m
[32m+[m[32m      this.emit('warn', 'A voice heartbeat interval is being overwritten');[m
[32m+[m[32m      clearInterval(this.heartbeatInterval);[m
[32m+[m[32m    }[m
[32m+[m[32m    this.heartbeatInterval = this.client.setInterval(this.sendHeartbeat.bind(this), interval);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Clears a heartbeat interval, if one exists.[m
[32m+[m[32m   */[m
[32m+[m[32m  clearHeartbeat() {[m
[32m+[m[32m    if (!this.heartbeatInterval) {[m
[32m+[m[32m      this.emit('warn', 'Tried to clear a heartbeat interval that does not exist');[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m[32m    clearInterval(this.heartbeatInterval);[m
[32m+[m[32m    this.heartbeatInterval = null;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sends a heartbeat packet.[m
[32m+[m[32m   */[m
[32m+[m[32m  sendHeartbeat() {[m
[32m+[m[32m    this.sendPacket({ op: Constants.VoiceOPCodes.HEARTBEAT, d: null }).catch(() => {[m
[32m+[m[32m      this.emit('warn', 'Tried to send heartbeat, but connection is not open');[m
[32m+[m[32m      this.clearHeartbeat();[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = VoiceWebSocket;[m
[1mdiff --git a/node_modules/discord.js/src/client/voice/dispatcher/StreamDispatcher.js b/node_modules/discord.js/src/client/voice/dispatcher/StreamDispatcher.js[m
[1mnew file mode 100644[m
[1mindex 0000000..77734ca[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/voice/dispatcher/StreamDispatcher.js[m
[36m@@ -0,0 +1,331 @@[m
[32m+[m[32mconst VolumeInterface = require('../util/VolumeInterface');[m
[32m+[m[32mconst VoiceBroadcast = require('../VoiceBroadcast');[m
[32m+[m[32mconst Constants = require('../../../util/Constants');[m
[32m+[m
[32m+[m[32mconst secretbox = require('../util/Secretbox');[m
[32m+[m
[32m+[m[32mconst nonce = Buffer.alloc(24);[m
[32m+[m[32mnonce.fill(0);[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * The class that sends voice packet data to the voice connection.[m
[32m+[m[32m * ```js[m
[32m+[m[32m * // Obtained using:[m
[32m+[m[32m * voiceChannel.join().then(connection => {[m
[32m+[m[32m *   // You can play a file or a stream here:[m
[32m+[m[32m *   const dispatcher = connection.playFile('./file.mp3');[m
[32m+[m[32m * });[m
[32m+[m[32m * ```[m
[32m+[m[32m * @implements {VolumeInterface}[m
[32m+[m[32m */[m
[32m+[m[32mclass StreamDispatcher extends VolumeInterface {[m
[32m+[m[32m  constructor(player, stream, streamOptions) {[m
[32m+[m[32m    super(streamOptions);[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The Audio Player that controls this dispatcher[m
[32m+[m[32m     * @type {AudioPlayer}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.player = player;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The stream that the dispatcher plays[m
[32m+[m[32m     * @type {ReadableStream|VoiceBroadcast}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.stream = stream;[m
[32m+[m[32m    if (!(this.stream instanceof VoiceBroadcast)) this.startStreaming();[m
[32m+[m[32m    this.streamOptions = streamOptions;[m
[32m+[m
[32m+[m[32m    const data = this.streamingData;[m
[32m+[m[32m    data.length = 20;[m
[32m+[m[32m    data.missed = 0;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Whether playing is paused[m
[32m+[m[32m     * @type {boolean}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.paused = false;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Whether this dispatcher has been destroyed[m
[32m+[m[32m     * @type {boolean}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.destroyed = false;[m
[32m+[m
[32m+[m[32m    this._opus = streamOptions.opus;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * How many passes the dispatcher should take when sending packets to reduce packet loss. Values over 5[m
[32m+[m[32m   * aren't recommended, as it means you are using 5x more bandwidth. You _can_ edit this at runtime[m
[32m+[m[32m   * @type {number}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get passes() {[m
[32m+[m[32m    return this.streamOptions.passes || 1;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  set passes(n) {[m
[32m+[m[32m    this.streamOptions.passes = n;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  get streamingData() {[m
[32m+[m[32m    return this.player.streamingData;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * How long the stream dispatcher has been "speaking" for[m
[32m+[m[32m   * @type {number}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get time() {[m
[32m+[m[32m    return this.streamingData.count * (this.streamingData.length || 0);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The total time, taking into account pauses and skips, that the dispatcher has been streaming for[m
[32m+[m[32m   * @type {number}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get totalStreamTime() {[m
[32m+[m[32m    return this.time + this.streamingData.pausedTime;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Stops sending voice packets to the voice connection (stream may still progress however).[m
[32m+[m[32m   */[m
[32m+[m[32m  pause() { this.setPaused(true); }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Resumes sending voice packets to the voice connection (may be further on in the stream than when paused).[m
[32m+[m[32m   */[m
[32m+[m[32m  resume() { this.setPaused(false); }[m
[32m+[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Stops the current stream permanently and emits an `end` event.[m
[32m+[m[32m   * @param {string} [reason='user'] An optional reason for stopping the dispatcher[m
[32m+[m[32m   */[m
[32m+[m[32m  end(reason = 'user') {[m
[32m+[m[32m    this.destroy('end', reason);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  setSpeaking(value) {[m
[32m+[m[32m    if (this.speaking === value) return;[m
[32m+[m[32m    if (this.player.voiceConnection.status !== Constants.VoiceStatus.CONNECTED) return;[m
[32m+[m[32m    this.speaking = value;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Emitted when the dispatcher starts/stops speaking.[m
[32m+[m[32m     * @event StreamDispatcher#speaking[m
[32m+[m[32m     * @param {boolean} value Whether or not the dispatcher is speaking[m
[32m+[m[32m     */[m
[32m+[m[32m    this.emit('speaking', value);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Set the bitrate of the current Opus encoder.[m
[32m+[m[32m   * @param {number} bitrate New bitrate, in kbps[m
[32m+[m[32m   * If set to 'auto', the voice channel's bitrate will be used[m
[32m+[m[32m   */[m
[32m+[m[32m  setBitrate(bitrate) {[m
[32m+[m[32m    this.player.setBitrate(bitrate);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  sendBuffer(buffer, sequence, timestamp, opusPacket) {[m
[32m+[m[32m    opusPacket = opusPacket || this.player.opusEncoder.encode(buffer);[m
[32m+[m[32m    const packet = this.createPacket(sequence, timestamp, opusPacket);[m
[32m+[m[32m    this.sendPacket(packet);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  sendPacket(packet) {[m
[32m+[m[32m    let repeats = this.passes;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Emitted whenever the dispatcher has debug information.[m
[32m+[m[32m     * @event StreamDispatcher#debug[m
[32m+[m[32m     * @param {string} info The debug info[m
[32m+[m[32m     */[m
[32m+[m[32m    this.setSpeaking(true);[m
[32m+[m[32m    while (repeats-- && this.player.voiceConnection.sockets.udp) {[m
[32m+[m[32m      this.player.voiceConnection.sockets.udp.send(packet)[m
[32m+[m[32m        .catch(e => {[m
[32m+[m[32m          this.setSpeaking(false);[m
[32m+[m[32m          this.emit('debug', `Failed to send a packet ${e}`);[m
[32m+[m[32m        });[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  createPacket(sequence, timestamp, buffer) {[m
[32m+[m[32m    const packetBuffer = Buffer.alloc(buffer.length + 28);[m
[32m+[m[32m    packetBuffer.fill(0);[m
[32m+[m[32m    packetBuffer[0] = 0x80;[m
[32m+[m[32m    packetBuffer[1] = 0x78;[m
[32m+[m
[32m+[m[32m    packetBuffer.writeUIntBE(sequence, 2, 2);[m
[32m+[m[32m    packetBuffer.writeUIntBE(timestamp, 4, 4);[m
[32m+[m[32m    packetBuffer.writeUIntBE(this.player.voiceConnection.authentication.ssrc, 8, 4);[m
[32m+[m
[32m+[m[32m    packetBuffer.copy(nonce, 0, 0, 12);[m
[32m+[m[32m    buffer = secretbox.methods.close(buffer, nonce, this.player.voiceConnection.authentication.secretKey.key);[m
[32m+[m[32m    for (let i = 0; i < buffer.length; i++) packetBuffer[i + 12] = buffer[i];[m
[32m+[m
[32m+[m[32m    return packetBuffer;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  processPacket(packet) {[m
[32m+[m[32m    try {[m
[32m+[m[32m      if (this.destroyed || !this.player.voiceConnection.authentication.secretKey) {[m
[32m+[m[32m        this.setSpeaking(false);[m
[32m+[m[32m        return;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      const data = this.streamingData;[m
[32m+[m
[32m+[m[32m      if (this.paused) {[m
[32m+[m[32m        this.setSpeaking(false);[m
[32m+[m[32m        data.pausedTime = data.length * 10;[m
[32m+[m[32m        return;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      if (!packet) {[m
[32m+[m[32m        data.missed++;[m
[32m+[m[32m        data.pausedTime += data.length * 10;[m
[32m+[m[32m        return;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      this.started();[m
[32m+[m[32m      this.missed = 0;[m
[32m+[m
[32m+[m[32m      this.stepStreamingData();[m
[32m+[m[32m      this.sendBuffer(null, data.sequence, data.timestamp, packet);[m
[32m+[m[32m    } catch (e) {[m
[32m+[m[32m      this.destroy('error', e);[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  process() {[m
[32m+[m[32m    try {[m
[32m+[m[32m      if (this.destroyed) {[m
[32m+[m[32m        this.setSpeaking(false);[m
[32m+[m[32m        return;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      const data = this.streamingData;[m
[32m+[m
[32m+[m[32m      if (data.missed >= 5) {[m
[32m+[m[32m        this.destroy('end', 'Stream is not generating quickly enough.');[m
[32m+[m[32m        return;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      if (this.paused) {[m
[32m+[m[32m        this.setSpeaking(false);[m
[32m+[m[32m        // Old code?[m
[32m+[m[32m        // data.timestamp = data.timestamp + 4294967295 ? data.timestamp + 960 : 0;[m
[32m+[m[32m        data.pausedTime += data.length * 10;[m
[32m+[m[32m        this.player.voiceConnection.voiceManager.client.setTimeout(() => this.process(), data.length * 10);[m
[32m+[m[32m        return;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      this.started();[m
[32m+[m
[32m+[m[32m      const buffer = this.readStreamBuffer();[m
[32m+[m[32m      if (!buffer) {[m
[32m+[m[32m        data.missed++;[m
[32m+[m[32m        data.pausedTime += data.length * 10;[m
[32m+[m[32m        this.player.voiceConnection.voiceManager.client.setTimeout(() => this.process(), data.length * 10);[m
[32m+[m[32m        return;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      data.missed = 0;[m
[32m+[m
[32m+[m[32m      this.stepStreamingData();[m
[32m+[m
[32m+[m[32m      if (this._opus) {[m
[32m+[m[32m        this.sendBuffer(null, data.sequence, data.timestamp, buffer);[m
[32m+[m[32m      } else {[m
[32m+[m[32m        this.sendBuffer(buffer, data.sequence, data.timestamp);[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      const nextTime = data.length + (data.startTime + data.pausedTime + (data.count * data.length) - Date.now());[m
[32m+[m[32m      this.player.voiceConnection.voiceManager.client.setTimeout(() => this.process(), nextTime);[m
[32m+[m[32m    } catch (e) {[m
[32m+[m[32m      this.destroy('error', e);[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  readStreamBuffer() {[m
[32m+[m[32m    const data = this.streamingData;[m
[32m+[m[32m    const bufferLength = (this._opus ? 80 : 1920) * data.channels;[m
[32m+[m[32m    let buffer = this.stream.read(bufferLength);[m
[32m+[m[32m    if (this._opus) return buffer;[m
[32m+[m[32m    if (!buffer) return null;[m
[32m+[m
[32m+[m[32m    if (buffer.length !== bufferLength) {[m
[32m+[m[32m      const newBuffer = Buffer.alloc(bufferLength).fill(0);[m
[32m+[m[32m      buffer.copy(newBuffer);[m
[32m+[m[32m      buffer = newBuffer;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    buffer = this.applyVolume(buffer);[m
[32m+[m[32m    return buffer;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  started() {[m
[32m+[m[32m    const data = this.streamingData;[m
[32m+[m
[32m+[m[32m    if (!data.startTime) {[m
[32m+[m[32m      /**[m
[32m+[m[32m       * Emitted once the dispatcher starts streaming.[m
[32m+[m[32m       * @event StreamDispatcher#start[m
[32m+[m[32m       */[m
[32m+[m[32m      this.emit('start');[m
[32m+[m[32m      data.startTime = Date.now();[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  stepStreamingData() {[m
[32m+[m[32m    const data = this.streamingData;[m
[32m+[m[32m    data.count++;[m
[32m+[m[32m    data.sequence = data.sequence < 65535 ? data.sequence + 1 : 0;[m
[32m+[m[32m    data.timestamp = (data.timestamp + 960) < 4294967295 ? data.timestamp + 960 : 0;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  destroy(type, reason) {[m
[32m+[m[32m    if (this.destroyed) return;[m
[32m+[m[32m    this.destroyed = true;[m
[32m+[m[32m    this.setSpeaking(false);[m
[32m+[m[32m    this.emit(type, reason);[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Emitted once the dispatcher ends.[m
[32m+[m[32m     * @param {string} [reason] The reason the dispatcher ended[m
[32m+[m[32m     * @event StreamDispatcher#end[m
[32m+[m[32m     */[m
[32m+[m[32m    if (type !== 'end') this.emit('end', `destroyed due to ${type} - ${reason}`);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  startStreaming() {[m
[32m+[m[32m    if (!this.stream) {[m
[32m+[m[32m      /**[m
[32m+[m[32m       * Emitted if the dispatcher encounters an error.[m
[32m+[m[32m       * @event StreamDispatcher#error[m
[32m+[m[32m       * @param {string} error The error message[m
[32m+[m[32m       */[m
[32m+[m[32m      this.emit('error', 'No stream');[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    this.stream.on('end', err => this.destroy('end', err || 'stream'));[m
[32m+[m[32m    this.stream.on('error', err => this.destroy('error', err));[m
[32m+[m
[32m+[m[32m    const data = this.streamingData;[m
[32m+[m[32m    data.length = 20;[m
[32m+[m[32m    data.missed = 0;[m
[32m+[m
[32m+[m[32m    this.stream.once('readable', () => {[m
[32m+[m[32m      data.startTime = null;[m
[32m+[m[32m      data.count = 0;[m
[32m+[m[32m      this.process();[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  setPaused(paused) { this.setSpeaking(!(this.paused = paused)); }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = StreamDispatcher;[m
[1mdiff --git a/node_modules/discord.js/src/client/voice/opus/BaseOpusEngine.js b/node_modules/discord.js/src/client/voice/opus/BaseOpusEngine.js[m
[1mnew file mode 100644[m
[1mindex 0000000..a510449[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/voice/opus/BaseOpusEngine.js[m
[36m@@ -0,0 +1,60 @@[m
[32m+[m[32m/**[m
[32m+[m[32m * The base opus encoding engine.[m
[32m+[m[32m * @private[m
[32m+[m[32m */[m
[32m+[m[32mclass BaseOpus {[m
[32m+[m[32m  /**[m
[32m+[m[32m   * @param {Object} [options] The options to apply to the Opus engine[m
[32m+[m[32m   * @param {number} [options.bitrate=48] The desired bitrate (kbps)[m
[32m+[m[32m   * @param {boolean} [options.fec=false] Whether to enable forward error correction[m
[32m+[m[32m   * @param {number} [options.plp=0] The expected packet loss percentage[m
[32m+[m[32m   */[m
[32m+[m[32m  constructor({ bitrate = 48, fec = false, plp = 0 } = {}) {[m
[32m+[m[32m    this.ctl = {[m
[32m+[m[32m      BITRATE: 4002,[m
[32m+[m[32m      FEC: 4012,[m
[32m+[m[32m      PLP: 4014,[m
[32m+[m[32m    };[m
[32m+[m
[32m+[m[32m    this.samplingRate = 48000;[m
[32m+[m[32m    this.channels = 2;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The desired bitrate (kbps)[m
[32m+[m[32m     * @type {number}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.bitrate = bitrate;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Miscellaneous Opus options[m
[32m+[m[32m     * @type {Object}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.options = { fec, plp };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  init() {[m
[32m+[m[32m    try {[m
[32m+[m[32m      this.setBitrate(this.bitrate);[m
[32m+[m
[32m+[m[32m      // Set FEC (forward error correction)[m
[32m+[m[32m      if (this.options.fec) this.setFEC(this.options.fec);[m
[32m+[m
[32m+[m[32m      // Set PLP (expected packet loss percentage)[m
[32m+[m[32m      if (this.options.plp) this.setPLP(this.options.plp);[m
[32m+[m[32m    } catch (err) {[m
[32m+[m[32m      // Opus engine likely has no support for libopus CTL[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  encode(buffer) {[m
[32m+[m[32m    return buffer;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  decode(buffer) {[m
[32m+[m[32m    return buffer;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  destroy() {} // eslint-disable-line no-empty-function[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = BaseOpus;[m
[1mdiff --git a/node_modules/discord.js/src/client/voice/opus/NodeOpusEngine.js b/node_modules/discord.js/src/client/voice/opus/NodeOpusEngine.js[m
[1mnew file mode 100644[m
[1mindex 0000000..02e8806[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/voice/opus/NodeOpusEngine.js[m
[36m@@ -0,0 +1,40 @@[m
[32m+[m[32mconst OpusEngine = require('./BaseOpusEngine');[m
[32m+[m
[32m+[m[32mlet opus;[m
[32m+[m
[32m+[m[32mclass NodeOpusEngine extends OpusEngine {[m
[32m+[m[32m  constructor(player) {[m
[32m+[m[32m    super(player);[m
[32m+[m[32m    try {[m
[32m+[m[32m      opus = require('node-opus');[m
[32m+[m[32m    } catch (err) {[m
[32m+[m[32m      throw err;[m
[32m+[m[32m    }[m
[32m+[m[32m    this.encoder = new opus.OpusEncoder(this.samplingRate, this.channels);[m
[32m+[m[32m    super.init();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  setBitrate(bitrate) {[m
[32m+[m[32m    this.encoder.applyEncoderCTL(this.ctl.BITRATE, Math.min(128, Math.max(16, bitrate)) * 1000);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  setFEC(enabled) {[m
[32m+[m[32m    this.encoder.applyEncoderCTL(this.ctl.FEC, enabled ? 1 : 0);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  setPLP(percent) {[m
[32m+[m[32m    this.encoder.applyEncoderCTL(this.ctl.PLP, Math.min(100, Math.max(0, percent * 100)));[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  encode(buffer) {[m
[32m+[m[32m    super.encode(buffer);[m
[32m+[m[32m    return this.encoder.encode(buffer, 1920);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  decode(buffer) {[m
[32m+[m[32m    super.decode(buffer);[m
[32m+[m[32m    return this.encoder.decode(buffer, 1920);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = NodeOpusEngine;[m
[1mdiff --git a/node_modules/discord.js/src/client/voice/opus/OpusEngineList.js b/node_modules/discord.js/src/client/voice/opus/OpusEngineList.js[m
[1mnew file mode 100644[m
[1mindex 0000000..7fbec9e[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/voice/opus/OpusEngineList.js[m
[36m@@ -0,0 +1,28 @@[m
[32m+[m[32mconst list = [[m
[32m+[m[32m  require('./NodeOpusEngine'),[m
[32m+[m[32m  require('./OpusScriptEngine'),[m
[32m+[m[32m];[m
[32m+[m
[32m+[m[32mfunction fetch(Encoder, engineOptions) {[m
[32m+[m[32m  try {[m
[32m+[m[32m    return new Encoder(engineOptions);[m
[32m+[m[32m  } catch (err) {[m
[32m+[m[32m    if (err.message.includes('Cannot find module')) return null;[m
[32m+[m
[32m+[m[32m    // The Opus engine exists, but another error occurred.[m
[32m+[m[32m    throw err;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mexports.add = encoder => {[m
[32m+[m[32m  list.push(encoder);[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mexports.fetch = engineOptions => {[m
[32m+[m[32m  for (const encoder of list) {[m
[32m+[m[32m    const fetched = fetch(encoder, engineOptions);[m
[32m+[m[32m    if (fetched) return fetched;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  throw new Error('Couldn\'t find an Opus engine.');[m
[32m+[m[32m};[m
[1mdiff --git a/node_modules/discord.js/src/client/voice/opus/OpusScriptEngine.js b/node_modules/discord.js/src/client/voice/opus/OpusScriptEngine.js[m
[1mnew file mode 100644[m
[1mindex 0000000..a5e046d[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/voice/opus/OpusScriptEngine.js[m
[36m@@ -0,0 +1,45 @@[m
[32m+[m[32mconst OpusEngine = require('./BaseOpusEngine');[m
[32m+[m
[32m+[m[32mlet OpusScript;[m
[32m+[m
[32m+[m[32mclass OpusScriptEngine extends OpusEngine {[m
[32m+[m[32m  constructor(player) {[m
[32m+[m[32m    super(player);[m
[32m+[m[32m    try {[m
[32m+[m[32m      OpusScript = require('opusscript');[m
[32m+[m[32m    } catch (err) {[m
[32m+[m[32m      throw err;[m
[32m+[m[32m    }[m
[32m+[m[32m    this.encoder = new OpusScript(this.samplingRate, this.channels);[m
[32m+[m[32m    super.init();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  setBitrate(bitrate) {[m
[32m+[m[32m    this.encoder.encoderCTL(this.ctl.BITRATE, Math.min(128, Math.max(16, bitrate)) * 1000);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  setFEC(enabled) {[m
[32m+[m[32m    this.encoder.encoderCTL(this.ctl.FEC, enabled ? 1 : 0);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  setPLP(percent) {[m
[32m+[m[32m    this.encoder.encoderCTL(this.ctl.PLP, Math.min(100, Math.max(0, percent * 100)));[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  encode(buffer) {[m
[32m+[m[32m    super.encode(buffer);[m
[32m+[m[32m    return this.encoder.encode(buffer, 960);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  decode(buffer) {[m
[32m+[m[32m    super.decode(buffer);[m
[32m+[m[32m    return this.encoder.decode(buffer);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  destroy() {[m
[32m+[m[32m    super.destroy();[m
[32m+[m[32m    this.encoder.delete();[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = OpusScriptEngine;[m
[1mdiff --git a/node_modules/discord.js/src/client/voice/player/AudioPlayer.js b/node_modules/discord.js/src/client/voice/player/AudioPlayer.js[m
[1mnew file mode 100644[m
[1mindex 0000000..9b30c85[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/voice/player/AudioPlayer.js[m
[36m@@ -0,0 +1,170 @@[m
[32m+[m[32mconst EventEmitter = require('events').EventEmitter;[m
[32m+[m[32mconst Prism = require('prism-media');[m
[32m+[m[32mconst StreamDispatcher = require('../dispatcher/StreamDispatcher');[m
[32m+[m[32mconst Collection = require('../../../util/Collection');[m
[32m+[m[32mconst OpusEncoders = require('../opus/OpusEngineList');[m
[32m+[m
[32m+[m[32mconst ffmpegArguments = [[m
[32m+[m[32m  '-analyzeduration', '0',[m
[32m+[m[32m  '-loglevel', '0',[m
[32m+[m[32m  '-f', 's16le',[m
[32m+[m[32m  '-ar', '48000',[m
[32m+[m[32m  '-ac', '2',[m
[32m+[m[32m];[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * An Audio Player for a Voice Connection.[m
[32m+[m[32m * @private[m
[32m+[m[32m * @extends {EventEmitter}[m
[32m+[m[32m */[m
[32m+[m[32mclass AudioPlayer extends EventEmitter {[m
[32m+[m[32m  constructor(voiceConnection) {[m
[32m+[m[32m    super();[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The voice connection that the player serves[m
[32m+[m[32m     * @type {VoiceConnection}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.voiceConnection = voiceConnection;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The prism transcoder that the player uses[m
[32m+[m[32m     * @type {Prism}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.prism = new Prism();[m
[32m+[m[32m    this.streams = new Collection();[m
[32m+[m[32m    this.currentStream = {};[m
[32m+[m[32m    this.streamingData = {[m
[32m+[m[32m      channels: 2,[m
[32m+[m[32m      count: 0,[m
[32m+[m[32m      sequence: 0,[m
[32m+[m[32m      timestamp: 0,[m
[32m+[m[32m      pausedTime: 0,[m
[32m+[m[32m    };[m
[32m+[m[32m    this.voiceConnection.once('closing', () => this.destroyCurrentStream());[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The current transcoder[m
[32m+[m[32m   * @type {?Object}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get transcoder() {[m
[32m+[m[32m    return this.currentStream.transcoder;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The current dispatcher[m
[32m+[m[32m   * @type {?StreamDispatcher}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get dispatcher() {[m
[32m+[m[32m    return this.currentStream.dispatcher;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  destroy() {[m
[32m+[m[32m    if (this.opusEncoder) this.opusEncoder.destroy();[m
[32m+[m[32m    this.opusEncoder = null;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  destroyCurrentStream() {[m
[32m+[m[32m    const transcoder = this.transcoder;[m
[32m+[m[32m    const dispatcher = this.dispatcher;[m
[32m+[m[32m    if (transcoder) transcoder.kill();[m
[32m+[m[32m    if (dispatcher) {[m
[32m+[m[32m      const end = dispatcher.listeners('end')[0];[m
[32m+[m[32m      const error = dispatcher.listeners('error')[0];[m
[32m+[m[32m      if (end) dispatcher.removeListener('end', end);[m
[32m+[m[32m      if (error) dispatcher.removeListener('error', error);[m
[32m+[m[32m      dispatcher.destroy('end');[m
[32m+[m[32m    }[m
[32m+[m[32m    this.currentStream = {};[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Set the bitrate of the current Opus encoder.[m
[32m+[m[32m   * @param {number} value New bitrate, in kbps[m
[32m+[m[32m   * If set to 'auto', the voice channel's bitrate will be used[m
[32m+[m[32m   */[m
[32m+[m[32m  setBitrate(value) {[m
[32m+[m[32m    if (!value) return;[m
[32m+[m[32m    if (!this.opusEncoder) return;[m
[32m+[m[32m    const bitrate = value === 'auto' ? this.voiceConnection.channel.bitrate : value;[m
[32m+[m[32m    this.opusEncoder.setBitrate(bitrate);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  playUnknownStream(stream, options = {}) {[m
[32m+[m[32m    this.destroy();[m
[32m+[m[32m    this.opusEncoder = OpusEncoders.fetch(options);[m
[32m+[m[32m    const transcoder = this.prism.transcode({[m
[32m+[m[32m      type: 'ffmpeg',[m
[32m+[m[32m      media: stream,[m
[32m+[m[32m      ffmpegArguments: ffmpegArguments.concat(['-ss', String(options.seek || 0)]),[m
[32m+[m[32m    });[m
[32m+[m[32m    this.destroyCurrentStream();[m
[32m+[m[32m    this.currentStream = {[m
[32m+[m[32m      transcoder: transcoder,[m
[32m+[m[32m      output: transcoder.output,[m
[32m+[m[32m      input: stream,[m
[32m+[m[32m    };[m
[32m+[m[32m    transcoder.on('error', e => {[m
[32m+[m[32m      this.destroyCurrentStream();[m
[32m+[m[32m      if (this.listenerCount('error') > 0) this.emit('error', e);[m
[32m+[m[32m      this.emit('warn', `prism transcoder error - ${e}`);[m
[32m+[m[32m    });[m
[32m+[m[32m    return this.playPCMStream(transcoder.output, options, true);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  playPCMStream(stream, options = {}, fromUnknown = false) {[m
[32m+[m[32m    this.destroy();[m
[32m+[m[32m    this.opusEncoder = OpusEncoders.fetch(options);[m
[32m+[m[32m    this.setBitrate(options.bitrate);[m
[32m+[m[32m    const dispatcher = this.createDispatcher(stream, options);[m
[32m+[m[32m    if (fromUnknown) {[m
[32m+[m[32m      this.currentStream.dispatcher = dispatcher;[m
[32m+[m[32m    } else {[m
[32m+[m[32m      this.destroyCurrentStream();[m
[32m+[m[32m      this.currentStream = {[m
[32m+[m[32m        dispatcher,[m
[32m+[m[32m        input: stream,[m
[32m+[m[32m        output: stream,[m
[32m+[m[32m      };[m
[32m+[m[32m    }[m
[32m+[m[32m    return dispatcher;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  playOpusStream(stream, options = {}) {[m
[32m+[m[32m    options.opus = true;[m
[32m+[m[32m    this.destroyCurrentStream();[m
[32m+[m[32m    const dispatcher = this.createDispatcher(stream, options);[m
[32m+[m[32m    this.currentStream = {[m
[32m+[m[32m      dispatcher,[m
[32m+[m[32m      input: stream,[m
[32m+[m[32m      output: stream,[m
[32m+[m[32m    };[m
[32m+[m[32m    return dispatcher;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  playBroadcast(broadcast, options) {[m
[32m+[m[32m    this.destroyCurrentStream();[m
[32m+[m[32m    const dispatcher = this.createDispatcher(broadcast, options);[m
[32m+[m[32m    this.currentStream = {[m
[32m+[m[32m      dispatcher,[m
[32m+[m[32m      broadcast,[m
[32m+[m[32m      input: broadcast,[m
[32m+[m[32m      output: broadcast,[m
[32m+[m[32m    };[m
[32m+[m[32m    broadcast.registerDispatcher(dispatcher);[m
[32m+[m[32m    return dispatcher;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  createDispatcher(stream, { seek = 0, volume = 1, passes = 1, opus } = {}) {[m
[32m+[m[32m    const options = { seek, volume, passes, opus };[m
[32m+[m
[32m+[m[32m    const dispatcher = new StreamDispatcher(this, stream, options);[m
[32m+[m[32m    dispatcher.on('end', () => this.destroyCurrentStream());[m
[32m+[m[32m    dispatcher.on('error', () => this.destroyCurrentStream());[m
[32m+[m[32m    dispatcher.on('speaking', value => this.voiceConnection.setSpeaking(value));[m
[32m+[m[32m    return dispatcher;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = AudioPlayer;[m
[1mdiff --git a/node_modules/discord.js/src/client/voice/receiver/VoiceReadable.js b/node_modules/discord.js/src/client/voice/receiver/VoiceReadable.js[m
[1mnew file mode 100644[m
[1mindex 0000000..d349428[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/voice/receiver/VoiceReadable.js[m
[36m@@ -0,0 +1,17 @@[m
[32m+[m[32mconst Readable = require('stream').Readable;[m
[32m+[m
[32m+[m[32mclass VoiceReadable extends Readable {[m
[32m+[m[32m  constructor() {[m
[32m+[m[32m    super();[m
[32m+[m[32m    this._packets = [];[m
[32m+[m[32m    this.open = true;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  _read() {} // eslint-disable-line no-empty-function[m
[32m+[m
[32m+[m[32m  _push(d) {[m
[32m+[m[32m    if (this.open) this.push(d);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = VoiceReadable;[m
[1mdiff --git a/node_modules/discord.js/src/client/voice/receiver/VoiceReceiver.js b/node_modules/discord.js/src/client/voice/receiver/VoiceReceiver.js[m
[1mnew file mode 100644[m
[1mindex 0000000..56ee63d[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/voice/receiver/VoiceReceiver.js[m
[36m@@ -0,0 +1,219 @@[m
[32m+[m[32mconst EventEmitter = require('events').EventEmitter;[m
[32m+[m[32mconst secretbox = require('../util/Secretbox');[m
[32m+[m[32mconst Readable = require('./VoiceReadable');[m
[32m+[m[32mconst OpusEncoders = require('../opus/OpusEngineList');[m
[32m+[m
[32m+[m[32mconst nonce = Buffer.alloc(24);[m
[32m+[m[32mnonce.fill(0);[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Receives voice data from a voice connection.[m
[32m+[m[32m * ```js[m
[32m+[m[32m * // Obtained using:[m
[32m+[m[32m * voiceChannel.join()[m
[32m+[m[32m *   .then(connection => {[m
[32m+[m[32m *     const receiver = connection.createReceiver();[m
[32m+[m[32m *   });[m
[32m+[m[32m * ```[m
[32m+[m[32m * @extends {EventEmitter}[m
[32m+[m[32m */[m
[32m+[m[32mclass VoiceReceiver extends EventEmitter {[m
[32m+[m[32m  constructor(connection) {[m
[32m+[m[32m    super();[m
[32m+[m[32m    /*[m
[32m+[m[32m      Need a queue because we don't get the ssrc of the user speaking until after the first few packets,[m
[32m+[m[32m      so we queue up unknown SSRCs until they become known, then empty the queue[m
[32m+[m[32m    */[m
[32m+[m[32m    this.queues = new Map();[m
[32m+[m[32m    this.pcmStreams = new Map();[m
[32m+[m[32m    this.opusStreams = new Map();[m
[32m+[m[32m    this.opusEncoders = new Map();[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Whether or not this receiver has been destroyed[m
[32m+[m[32m     * @type {boolean}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.destroyed = false;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The VoiceConnection that instantiated this[m
[32m+[m[32m     * @type {VoiceConnection}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.voiceConnection = connection;[m
[32m+[m
[32m+[m[32m    this._listener = msg => {[m
[32m+[m[32m      const ssrc = +msg.readUInt32BE(8).toString(10);[m
[32m+[m[32m      const user = this.voiceConnection.ssrcMap.get(ssrc);[m
[32m+[m[32m      if (!user) {[m
[32m+[m[32m        if (!this.queues.has(ssrc)) this.queues.set(ssrc, []);[m
[32m+[m[32m        this.queues.get(ssrc).push(msg);[m
[32m+[m[32m      } else {[m
[32m+[m[32m        if (this.queues.get(ssrc)) {[m
[32m+[m[32m          this.queues.get(ssrc).push(msg);[m
[32m+[m[32m          this.queues.get(ssrc).map(m => this.handlePacket(m, user));[m
[32m+[m[32m          this.queues.delete(ssrc);[m
[32m+[m[32m          return;[m
[32m+[m[32m        }[m
[32m+[m[32m        this.handlePacket(msg, user);[m
[32m+[m[32m      }[m
[32m+[m[32m    };[m
[32m+[m[32m    this.voiceConnection.sockets.udp.socket.on('message', this._listener);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * If this VoiceReceiver has been destroyed, running `recreate()` will recreate the listener.[m
[32m+[m[32m   * This avoids you having to create a new receiver.[m
[32m+[m[32m   * <info>Any streams that you had prior to destroying the receiver will not be recreated.</info>[m
[32m+[m[32m   */[m
[32m+[m[32m  recreate() {[m
[32m+[m[32m    if (!this.destroyed) return;[m
[32m+[m[32m    this.voiceConnection.sockets.udp.socket.on('message', this._listener);[m
[32m+[m[32m    this.destroyed = false;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Destroy this VoiceReceiver, also ending any streams that it may be controlling.[m
[32m+[m[32m   */[m
[32m+[m[32m  destroy() {[m
[32m+[m[32m    this.voiceConnection.sockets.udp.socket.removeListener('message', this._listener);[m
[32m+[m[32m    for (const [id, stream] of this.pcmStreams) {[m
[32m+[m[32m      stream._push(null);[m
[32m+[m[32m      this.pcmStreams.delete(id);[m
[32m+[m[32m    }[m
[32m+[m[32m    for (const [id, stream] of this.opusStreams) {[m
[32m+[m[32m      stream._push(null);[m
[32m+[m[32m      this.opusStreams.delete(id);[m
[32m+[m[32m    }[m
[32m+[m[32m    for (const [id, encoder] of this.opusEncoders) {[m
[32m+[m[32m      encoder.destroy();[m
[32m+[m[32m      this.opusEncoders.delete(id);[m
[32m+[m[32m    }[m
[32m+[m[32m    this.destroyed = true;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Invoked when a user stops speaking.[m
[32m+[m[32m   * @param {User} user The user that stopped speaking[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  stoppedSpeaking(user) {[m
[32m+[m[32m    const opusStream = this.opusStreams.get(user.id);[m
[32m+[m[32m    const pcmStream = this.pcmStreams.get(user.id);[m
[32m+[m[32m    const opusEncoder = this.opusEncoders.get(user.id);[m
[32m+[m[32m    if (opusStream) {[m
[32m+[m[32m      opusStream.push(null);[m
[32m+[m[32m      opusStream.open = false;[m
[32m+[m[32m      this.opusStreams.delete(user.id);[m
[32m+[m[32m    }[m
[32m+[m[32m    if (pcmStream) {[m
[32m+[m[32m      pcmStream.push(null);[m
[32m+[m[32m      pcmStream.open = false;[m
[32m+[m[32m      this.pcmStreams.delete(user.id);[m
[32m+[m[32m    }[m
[32m+[m[32m    if (opusEncoder) {[m
[32m+[m[32m      opusEncoder.destroy();[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Creates a readable stream for a user that provides opus data while the user is speaking. When the user[m
[32m+[m[32m   * stops speaking, the stream is destroyed.[m
[32m+[m[32m   * @param {UserResolvable} user The user to create the stream for[m
[32m+[m[32m   * @returns {ReadableStream}[m
[32m+[m[32m   */[m
[32m+[m[32m  createOpusStream(user) {[m
[32m+[m[32m    user = this.voiceConnection.voiceManager.client.resolver.resolveUser(user);[m
[32m+[m[32m    if (!user) throw new Error('Couldn\'t resolve the user to create Opus stream.');[m
[32m+[m[32m    if (this.opusStreams.get(user.id)) throw new Error('There is already an existing stream for that user.');[m
[32m+[m[32m    const stream = new Readable();[m
[32m+[m[32m    this.opusStreams.set(user.id, stream);[m
[32m+[m[32m    return stream;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Creates a readable stream for a user that provides PCM data while the user is speaking. When the user[m
[32m+[m[32m   * stops speaking, the stream is destroyed. The stream is 32-bit signed stereo PCM at 48KHz.[m
[32m+[m[32m   * @param {UserResolvable} user The user to create the stream for[m
[32m+[m[32m   * @returns {ReadableStream}[m
[32m+[m[32m   */[m
[32m+[m[32m  createPCMStream(user) {[m
[32m+[m[32m    user = this.voiceConnection.voiceManager.client.resolver.resolveUser(user);[m
[32m+[m[32m    if (!user) throw new Error('Couldn\'t resolve the user to create PCM stream.');[m
[32m+[m[32m    if (this.pcmStreams.get(user.id)) throw new Error('There is already an existing stream for that user.');[m
[32m+[m[32m    const stream = new Readable();[m
[32m+[m[32m    this.pcmStreams.set(user.id, stream);[m
[32m+[m[32m    return stream;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  handlePacket(msg, user) {[m
[32m+[m[32m    msg.copy(nonce, 0, 0, 12);[m
[32m+[m[32m    let data = secretbox.methods.open(msg.slice(12), nonce, this.voiceConnection.authentication.secretKey.key);[m
[32m+[m[32m    if (!data) {[m
[32m+[m[32m      /**[m
[32m+[m[32m       * Emitted whenever a voice packet experiences a problem.[m
[32m+[m[32m       * @event VoiceReceiver#warn[m
[32m+[m[32m       * @param {string} reason The reason for the warning. If it happened because the voice packet could not be[m
[32m+[m[32m       * decrypted, this would be `decrypt`. If it happened because the voice packet could not be decoded into[m
[32m+[m[32m       * PCM, this would be `decode`[m
[32m+[m[32m       * @param {string} message The warning message[m
[32m+[m[32m       */[m
[32m+[m[32m      this.emit('warn', 'decrypt', 'Failed to decrypt voice packet');[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m[32m    data = Buffer.from(data);[m
[32m+[m
[32m+[m[32m    // Strip RTP Header Extensions (one-byte only)[m
[32m+[m[32m    if (data[0] === 0xBE && data[1] === 0xDE && data.length > 4) {[m
[32m+[m[32m      const headerExtensionLength = data.readUInt16BE(2);[m
[32m+[m[32m      let offset = 4;[m
[32m+[m[32m      for (let i = 0; i < headerExtensionLength; i++) {[m
[32m+[m[32m        const byte = data[offset];[m
[32m+[m[32m        offset++;[m
[32m+[m[32m        if (byte === 0) {[m
[32m+[m[32m          continue;[m
[32m+[m[32m        }[m
[32m+[m[32m        offset += 1 + (0b1111 & (byte >> 4));[m
[32m+[m[32m      }[m
[32m+[m[32m      while (data[offset] === 0) {[m
[32m+[m[32m        offset++;[m
[32m+[m[32m      }[m
[32m+[m[32m      data = data.slice(offset);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (this.opusStreams.get(user.id)) this.opusStreams.get(user.id)._push(data);[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Emitted whenever voice data is received from the voice connection. This is _always_ emitted (unlike PCM).[m
[32m+[m[32m     * @event VoiceReceiver#opus[m
[32m+[m[32m     * @param {User} user The user that is sending the buffer (is speaking)[m
[32m+[m[32m     * @param {Buffer} buffer The opus buffer[m
[32m+[m[32m     */[m
[32m+[m[32m    this.emit('opus', user, data);[m
[32m+[m[32m    if (this.listenerCount('pcm') > 0 || this.pcmStreams.size > 0) {[m
[32m+[m[32m      if (!this.opusEncoders.get(user.id)) this.opusEncoders.set(user.id, OpusEncoders.fetch());[m
[32m+[m[32m      const { pcm, error } = VoiceReceiver._tryDecode(this.opusEncoders.get(user.id), data);[m
[32m+[m[32m      if (error) {[m
[32m+[m[32m        this.emit('warn', 'decode', `Failed to decode packet voice to PCM because: ${error.message}`);[m
[32m+[m[32m        return;[m
[32m+[m[32m      }[m
[32m+[m[32m      if (this.pcmStreams.get(user.id)) this.pcmStreams.get(user.id)._push(pcm);[m
[32m+[m[32m      /**[m
[32m+[m[32m       * Emits decoded voice data when it's received. For performance reasons, the decoding will only[m
[32m+[m[32m       * happen if there is at least one `pcm` listener on this receiver.[m
[32m+[m[32m       * @event VoiceReceiver#pcm[m
[32m+[m[32m       * @param {User} user The user that is sending the buffer (is speaking)[m
[32m+[m[32m       * @param {Buffer} buffer The decoded buffer[m
[32m+[m[32m       */[m
[32m+[m[32m      this.emit('pcm', user, pcm);[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  static _tryDecode(encoder, data) {[m
[32m+[m[32m    try {[m
[32m+[m[32m      return { pcm: encoder.decode(data) };[m
[32m+[m[32m    } catch (error) {[m
[32m+[m[32m      return { error };[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = VoiceReceiver;[m
[1mdiff --git a/node_modules/discord.js/src/client/voice/util/SecretKey.js b/node_modules/discord.js/src/client/voice/util/SecretKey.js[m
[1mnew file mode 100644[m
[1mindex 0000000..f165e5f[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/voice/util/SecretKey.js[m
[36m@@ -0,0 +1,16 @@[m
[32m+[m[32m/**[m
[32m+[m[32m * Represents a Secret Key used in encryption over voice.[m
[32m+[m[32m * @private[m
[32m+[m[32m */[m
[32m+[m[32mclass SecretKey {[m
[32m+[m[32m  constructor(key) {[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The key used for encryption[m
[32m+[m[32m     * @type {Uint8Array}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.key = new Uint8Array(new ArrayBuffer(key.length));[m
[32m+[m[32m    for (const index in key) this.key[index] = key[index];[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = SecretKey;[m
[1mdiff --git a/node_modules/discord.js/src/client/voice/util/Secretbox.js b/node_modules/discord.js/src/client/voice/util/Secretbox.js[m
[1mnew file mode 100644[m
[1mindex 0000000..a833d51[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/voice/util/Secretbox.js[m
[36m@@ -0,0 +1,33 @@[m
[32m+[m[32mconst libs = {[m
[32m+[m[32m  sodium: sodium => ({[m
[32m+[m[32m    open: sodium.api.crypto_secretbox_open_easy,[m
[32m+[m[32m    close: sodium.api.crypto_secretbox_easy,[m
[32m+[m[32m  }),[m
[32m+[m[32m  'libsodium-wrappers': sodium => ({[m
[32m+[m[32m    open: sodium.crypto_secretbox_open_easy,[m
[32m+[m[32m    close: sodium.crypto_secretbox_easy,[m
[32m+[m[32m  }),[m
[32m+[m[32m  tweetnacl: tweetnacl => ({[m
[32m+[m[32m    open: tweetnacl.secretbox.open,[m
[32m+[m[32m    close: tweetnacl.secretbox,[m
[32m+[m[32m  }),[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mexports.methods = {};[m
[32m+[m
[32m+[m[32mfor (const libName of Object.keys(libs)) {[m
[32m+[m[32m  try {[m
[32m+[m[32m    const lib = require(libName);[m
[32m+[m[32m    if (libName === 'libsodium-wrappers' && lib.ready) {[m
[32m+[m[32m      lib.ready.then(() => {[m
[32m+[m[32m        exports.methods = libs[libName](lib);[m
[32m+[m[32m      }).catch(() => {[m
[32m+[m[32m        const tweetnacl = require('tweetnacl');[m
[32m+[m[32m        exports.methods = libs.tweetnacl(tweetnacl);[m
[32m+[m[32m      }).catch(() => undefined);[m
[32m+[m[32m    } else {[m
[32m+[m[32m      exports.methods = libs[libName](lib);[m
[32m+[m[32m    }[m
[32m+[m[32m    break;[m
[32m+[m[32m  } catch (err) {} // eslint-disable-line no-empty[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/discord.js/src/client/voice/util/VolumeInterface.js b/node_modules/discord.js/src/client/voice/util/VolumeInterface.js[m
[1mnew file mode 100644[m
[1mindex 0000000..62e6da5[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/voice/util/VolumeInterface.js[m
[36m@@ -0,0 +1,86 @@[m
[32m+[m[32mconst EventEmitter = require('events');[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * An interface class for volume transformation.[m
[32m+[m[32m * @extends {EventEmitter}[m
[32m+[m[32m */[m
[32m+[m[32mclass VolumeInterface extends EventEmitter {[m
[32m+[m[32m  constructor({ volume = 1 } = {}) {[m
[32m+[m[32m    super();[m
[32m+[m[32m    this.setVolume(volume);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The current volume of the broadcast[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   * @type {number}[m
[32m+[m[32m   */[m
[32m+[m[32m  get volume() {[m
[32m+[m[32m    return this._volume;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The current volume of the broadcast in decibels[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   * @type {number}[m
[32m+[m[32m   */[m
[32m+[m[32m  get volumeDecibels() {[m
[32m+[m[32m    return Math.log10(this._volume) * 20;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The current volume of the broadcast from a logarithmic scale[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   * @type {number}[m
[32m+[m[32m   */[m
[32m+[m[32m  get volumeLogarithmic() {[m
[32m+[m[32m    return Math.pow(this._volume, 1 / 1.660964);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  applyVolume(buffer, volume) {[m
[32m+[m[32m    volume = volume || this._volume;[m
[32m+[m[32m    if (volume === 1) return buffer;[m
[32m+[m
[32m+[m[32m    const out = Buffer.alloc(buffer.length);[m
[32m+[m[32m    for (let i = 0; i < buffer.length; i += 2) {[m
[32m+[m[32m      if (i >= buffer.length - 1) break;[m
[32m+[m[32m      const uint = Math.min(32767, Math.max(-32767, Math.floor(volume * buffer.readInt16LE(i))));[m
[32m+[m[32m      out.writeInt16LE(uint, i);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return out;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets the volume relative to the input stream - i.e. 1 is normal, 0.5 is half, 2 is double.[m
[32m+[m[32m   * @param {number} volume The volume that you want to set[m
[32m+[m[32m   */[m
[32m+[m[32m  setVolume(volume) {[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Emitted when the volume of this interface changes.[m
[32m+[m[32m     * @event VolumeInterface#volumeChange[m
[32m+[m[32m     * @param {number} oldVolume The old volume of this interface[m
[32m+[m[32m     * @param {number} newVolume The new volume of this interface[m
[32m+[m[32m     */[m
[32m+[m[32m    this.emit('volumeChange', this._volume, volume);[m
[32m+[m[32m    this._volume = volume;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Set the volume in decibels.[m
[32m+[m[32m   * @param {number} db The decibels[m
[32m+[m[32m   */[m
[32m+[m[32m  setVolumeDecibels(db) {[m
[32m+[m[32m    this.setVolume(Math.pow(10, db / 20));[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Set the volume so that a perceived value of 0.5 is half the perceived volume etc.[m
[32m+[m[32m   * @param {number} value The value for the volume[m
[32m+[m[32m   */[m
[32m+[m[32m  setVolumeLogarithmic(value) {[m
[32m+[m[32m    this.setVolume(Math.pow(value, 1.660964));[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = VolumeInterface;[m
[1mdiff --git a/node_modules/discord.js/src/client/websocket/WebSocketConnection.js b/node_modules/discord.js/src/client/websocket/WebSocketConnection.js[m
[1mnew file mode 100644[m
[1mindex 0000000..2937f62[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/websocket/WebSocketConnection.js[m
[36m@@ -0,0 +1,506 @@[m
[32m+[m[32mconst browser = typeof window !== 'undefined';[m
[32m+[m[32mconst EventEmitter = require('events');[m
[32m+[m[32mconst Constants = require('../../util/Constants');[m
[32m+[m[32mconst zlib = require('zlib');[m
[32m+[m[32mconst PacketManager = require('./packets/WebSocketPacketManager');[m
[32m+[m[32mconst erlpack = (function findErlpack() {[m
[32m+[m[32m  try {[m
[32m+[m[32m    const e = require('erlpack');[m
[32m+[m[32m    if (!e.pack) return null;[m
[32m+[m[32m    return e;[m
[32m+[m[32m  } catch (e) {[m
[32m+[m[32m    return null;[m
[32m+[m[32m  }[m
[32m+[m[32m}());[m
[32m+[m
[32m+[m[32mconst WebSocket = (function findWebSocket() {[m
[32m+[m[32m  if (browser) return window.WebSocket; // eslint-disable-line no-undef[m
[32m+[m[32m  try {[m
[32m+[m[32m    return require('@discordjs/uws');[m
[32m+[m[32m  } catch (e) {[m
[32m+[m[32m    return require('ws');[m
[32m+[m[32m  }[m
[32m+[m[32m}());[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Abstracts a WebSocket connection with decoding/encoding for the Discord gateway.[m
[32m+[m[32m * @private[m
[32m+[m[32m */[m
[32m+[m[32mclass WebSocketConnection extends EventEmitter {[m
[32m+[m[32m  /**[m
[32m+[m[32m   * @param {WebSocketManager} manager The WebSocket manager[m
[32m+[m[32m   * @param {string} gateway The WebSocket gateway to connect to[m
[32m+[m[32m   */[m
[32m+[m[32m  constructor(manager, gateway) {[m
[32m+[m[32m    super();[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The WebSocket Manager of this connection[m
[32m+[m[32m     * @type {WebSocketManager}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.manager = manager;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The client this belongs to[m
[32m+[m[32m     * @type {Client}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.client = manager.client;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The WebSocket connection itself[m
[32m+[m[32m     * @type {WebSocket}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.ws = null;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The current sequence of the WebSocket[m
[32m+[m[32m     * @type {number}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.sequence = -1;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The current status of the client[m
[32m+[m[32m     * @type {Status}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.status = Constants.Status.IDLE;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The Packet Manager of the connection[m
[32m+[m[32m     * @type {WebSocketPacketManager}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.packetManager = new PacketManager(this);[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The last time a ping was sent (a timestamp)[m
[32m+[m[32m     * @type {number}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.lastPingTimestamp = 0;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Contains the rate limit queue and metadata[m
[32m+[m[32m     * @type {Object}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.ratelimit = {[m
[32m+[m[32m      queue: [],[m
[32m+[m[32m      remaining: 120,[m
[32m+[m[32m      total: 120,[m
[32m+[m[32m      time: 60e3,[m
[32m+[m[32m      resetTimer: null,[m
[32m+[m[32m    };[m
[32m+[m[32m    this.connect(gateway);[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Events that are disabled (will not be processed)[m
[32m+[m[32m     * @type {Object}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.disabledEvents = {};[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The sequence on WebSocket close[m
[32m+[m[32m     * @type {number}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.closeSequence = 0;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Whether or not the WebSocket is expecting to be closed[m
[32m+[m[32m     * @type {boolean}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.expectingClose = false;[m
[32m+[m[32m    for (const event of this.client.options.disabledEvents) this.disabledEvents[event] = true;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Causes the client to be marked as ready and emits the ready event.[m
[32m+[m[32m   * @returns {void}[m
[32m+[m[32m   */[m
[32m+[m[32m  triggerReady() {[m
[32m+[m[32m    if (this.status === Constants.Status.READY) {[m
[32m+[m[32m      this.debug('Tried to mark self as ready, but already ready');[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Emitted when the client becomes ready to start working.[m
[32m+[m[32m     * @event Client#ready[m
[32m+[m[32m     */[m
[32m+[m[32m    this.status = Constants.Status.READY;[m
[32m+[m[32m    this.client.emit(Constants.Events.READY);[m
[32m+[m[32m    this.packetManager.handleQueue();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Checks whether the client is ready to be marked as ready.[m
[32m+[m[32m   * @returns {void}[m
[32m+[m[32m   */[m
[32m+[m[32m  checkIfReady() {[m
[32m+[m[32m    if (this.status === Constants.Status.READY || this.status === Constants.Status.NEARLY) return false;[m
[32m+[m[32m    let unavailableGuilds = 0;[m
[32m+[m[32m    for (const guild of this.client.guilds.values()) {[m
[32m+[m[32m      if (!guild.available) unavailableGuilds++;[m
[32m+[m[32m    }[m
[32m+[m[32m    if (unavailableGuilds === 0) {[m
[32m+[m[32m      this.status = Constants.Status.NEARLY;[m
[32m+[m[32m      if (!this.client.options.fetchAllMembers) return this.triggerReady();[m
[32m+[m[32m      // Fetch all members before marking self as ready[m
[32m+[m[32m      const promises = this.client.guilds.map(g => g.fetchMembers());[m
[32m+[m[32m      Promise.all(promises)[m
[32m+[m[32m        .then(() => this.triggerReady())[m
[32m+[m[32m        .catch(e => {[m
[32m+[m[32m          this.debug(`Failed to fetch all members before ready! ${e}`);[m
[32m+[m[32m          this.triggerReady();[m
[32m+[m[32m        });[m
[32m+[m[32m    }[m
[32m+[m[32m    return true;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  // Util[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Emits a debug message.[m
[32m+[m[32m   * @param {string} message Debug message[m
[32m+[m[32m   * @returns {void}[m
[32m+[m[32m   */[m
[32m+[m[32m  debug(message) {[m
[32m+[m[32m    if (message instanceof Error) message = message.stack;[m
[32m+[m[32m    return this.manager.debug(`[connection] ${message}`);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Attempts to serialise data from the WebSocket.[m
[32m+[m[32m   * @param {string|Object} data Data to unpack[m
[32m+[m[32m   * @returns {Object}[m
[32m+[m[32m   */[m
[32m+[m[32m  unpack(data) {[m
[32m+[m[32m    if (data instanceof ArrayBuffer) data = Buffer.from(new Uint8Array(data));[m
[32m+[m
[32m+[m[32m    if (erlpack && typeof data !== 'string') return erlpack.unpack(data);[m
[32m+[m[32m    else if (data instanceof Buffer) data = zlib.inflateSync(data).toString();[m
[32m+[m
[32m+[m[32m    return JSON.parse(data);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Packs an object ready to be sent.[m
[32m+[m[32m   * @param {Object} data Data to pack[m
[32m+[m[32m   * @returns {string|Buffer}[m
[32m+[m[32m   */[m
[32m+[m[32m  pack(data) {[m
[32m+[m[32m    return erlpack ? erlpack.pack(data) : JSON.stringify(data);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Processes the current WebSocket queue.[m
[32m+[m[32m   */[m
[32m+[m[32m  processQueue() {[m
[32m+[m[32m    if (this.ratelimit.remaining === 0) return;[m
[32m+[m[32m    if (this.ratelimit.queue.length === 0) return;[m
[32m+[m[32m    if (this.ratelimit.remaining === this.ratelimit.total) {[m
[32m+[m[32m      this.ratelimit.resetTimer = this.client.setTimeout(() => {[m
[32m+[m[32m        this.ratelimit.remaining = this.ratelimit.total;[m
[32m+[m[32m        this.processQueue();[m
[32m+[m[32m      }, this.ratelimit.time);[m
[32m+[m[32m    }[m
[32m+[m[32m    while (this.ratelimit.remaining > 0) {[m
[32m+[m[32m      const item = this.ratelimit.queue.shift();[m
[32m+[m[32m      if (!item) return;[m
[32m+[m[32m      this._send(item);[m
[32m+[m[32m      this.ratelimit.remaining--;[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sends data, bypassing the queue.[m
[32m+[m[32m   * @param {Object} data Packet to send[m
[32m+[m[32m   * @returns {void}[m
[32m+[m[32m   */[m
[32m+[m[32m  _send(data) {[m
[32m+[m[32m    if (!this.ws || this.ws.readyState !== WebSocket.OPEN) {[m
[32m+[m[32m      this.debug(`Tried to send packet ${JSON.stringify(data)} but no WebSocket is available!`);[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m[32m    this.ws.send(this.pack(data));[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Adds data to the queue to be sent.[m
[32m+[m[32m   * @param {Object} data Packet to send[m
[32m+[m[32m   * @returns {void}[m
[32m+[m[32m   */[m
[32m+[m[32m  send(data) {[m
[32m+[m[32m    if (!this.ws || this.ws.readyState !== WebSocket.OPEN) {[m
[32m+[m[32m      this.debug(`Tried to send packet ${JSON.stringify(data)} but no WebSocket is available!`);[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m[32m    this.ratelimit.queue.push(data);[m
[32m+[m[32m    this.processQueue();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Creates a connection to a gateway.[m
[32m+[m[32m   * @param {string} gateway The gateway to connect to[m
[32m+[m[32m   * @param {number} [after=0] How long to wait before connecting[m
[32m+[m[32m   * @param {boolean} [force=false] Whether or not to force a new connection even if one already exists[m
[32m+[m[32m   * @returns {boolean}[m
[32m+[m[32m   */[m
[32m+[m[32m  connect(gateway = this.gateway, after = 0, force = false) {[m
[32m+[m[32m    if (after) return this.client.setTimeout(() => this.connect(gateway, 0, force), after); // eslint-disable-line[m
[32m+[m[32m    if (this.ws && !force) {[m
[32m+[m[32m      this.debug('WebSocket connection already exists');[m
[32m+[m[32m      return false;[m
[32m+[m[32m    } else if (typeof gateway !== 'string') {[m
[32m+[m[32m      this.debug(`Tried to connect to an invalid gateway: ${gateway}`);[m
[32m+[m[32m      return false;[m
[32m+[m[32m    }[m
[32m+[m[32m    this.expectingClose = false;[m
[32m+[m[32m    this.gateway = gateway;[m
[32m+[m[32m    this.debug(`Connecting to ${gateway}`);[m
[32m+[m[32m    const ws = this.ws = new WebSocket(gateway);[m
[32m+[m[32m    if (browser) ws.binaryType = 'arraybuffer';[m
[32m+[m[32m    ws.onmessage = this.onMessage.bind(this);[m
[32m+[m[32m    ws.onopen = this.onOpen.bind(this);[m
[32m+[m[32m    ws.onerror = this.onError.bind(this);[m
[32m+[m[32m    ws.onclose = this.onClose.bind(this);[m
[32m+[m[32m    this.status = Constants.Status.CONNECTING;[m
[32m+[m[32m    return true;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Destroys the connection.[m
[32m+[m[32m   * @returns {boolean}[m
[32m+[m[32m   */[m
[32m+[m[32m  destroy() {[m
[32m+[m[32m    const ws = this.ws;[m
[32m+[m[32m    if (!ws) {[m
[32m+[m[32m      this.debug('Attempted to destroy WebSocket but no connection exists!');[m
[32m+[m[32m      return false;[m
[32m+[m[32m    }[m
[32m+[m[32m    this.heartbeat(-1);[m
[32m+[m[32m    this.expectingClose = true;[m
[32m+[m[32m    ws.close(1000);[m
[32m+[m[32m    this.packetManager.handleQueue();[m
[32m+[m[32m    this.ws = null;[m
[32m+[m[32m    this.status = Constants.Status.DISCONNECTED;[m
[32m+[m[32m    this.ratelimit.remaining = this.ratelimit.total;[m
[32m+[m[32m    return true;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Called whenever a message is received.[m
[32m+[m[32m   * @param {Event} event Event received[m
[32m+[m[32m   * @returns {boolean}[m
[32m+[m[32m   */[m
[32m+[m[32m  onMessage(event) {[m
[32m+[m[32m    let data;[m
[32m+[m[32m    try {[m
[32m+[m[32m      data = this.unpack(event.data);[m
[32m+[m[32m    } catch (err) {[m
[32m+[m[32m      this.emit('debug', err);[m
[32m+[m[32m    }[m
[32m+[m[32m    return this.onPacket(data);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets the current sequence of the connection.[m
[32m+[m[32m   * @param {number} s New sequence[m
[32m+[m[32m   */[m
[32m+[m[32m  setSequence(s) {[m
[32m+[m[32m    this.sequence = s > this.sequence ? s : this.sequence;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Called whenever a packet is received.[m
[32m+[m[32m   * @param {Object} packet Received packet[m
[32m+[m[32m   * @returns {boolean}[m
[32m+[m[32m   */[m
[32m+[m[32m  onPacket(packet) {[m
[32m+[m[32m    if (!packet) {[m
[32m+[m[32m      this.debug('Received null packet');[m
[32m+[m[32m      return false;[m
[32m+[m[32m    }[m
[32m+[m[32m    this.client.emit('raw', packet);[m
[32m+[m[32m    switch (packet.op) {[m
[32m+[m[32m      case Constants.OPCodes.HELLO:[m
[32m+[m[32m        return this.heartbeat(packet.d.heartbeat_interval);[m
[32m+[m[32m      case Constants.OPCodes.RECONNECT:[m
[32m+[m[32m        return this.reconnect();[m
[32m+[m[32m      case Constants.OPCodes.INVALID_SESSION:[m
[32m+[m[32m        if (!packet.d) this.sessionID = null;[m
[32m+[m[32m        this.sequence = -1;[m
[32m+[m[32m        this.debug('Session invalidated -- will identify with a new session');[m
[32m+[m[32m        return this.identify(packet.d ? 2500 : 0);[m
[32m+[m[32m      case Constants.OPCodes.HEARTBEAT_ACK:[m
[32m+[m[32m        return this.ackHeartbeat();[m
[32m+[m[32m      case Constants.OPCodes.HEARTBEAT:[m
[32m+[m[32m        return this.heartbeat();[m
[32m+[m[32m      default:[m
[32m+[m[32m        return this.packetManager.handle(packet);[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Called whenever a connection is opened to the gateway.[m
[32m+[m[32m   * @param {Event} event Received open event[m
[32m+[m[32m   */[m
[32m+[m[32m  onOpen(event) {[m
[32m+[m[32m    if (event && event.target && event.target.url) this.gateway = event.target.url;[m
[32m+[m[32m    this.debug(`Connected to gateway ${this.gateway}`);[m
[32m+[m[32m    this.identify();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Causes a reconnection to the gateway.[m
[32m+[m[32m   */[m
[32m+[m[32m  reconnect() {[m
[32m+[m[32m    this.debug('Attemping to reconnect in 5500ms...');[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Emitted whenever the client tries to reconnect to the WebSocket.[m
[32m+[m[32m     * @event Client#reconnecting[m
[32m+[m[32m     */[m
[32m+[m[32m    this.client.emit(Constants.Events.RECONNECTING);[m
[32m+[m[32m    this.connect(this.gateway, 5500, true);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Called whenever an error occurs with the WebSocket.[m
[32m+[m[32m   * @param {Error} error The error that occurred[m
[32m+[m[32m   */[m
[32m+[m[32m  onError(error) {[m
[32m+[m[32m    if (error && error.message === 'uWs client connection error') {[m
[32m+[m[32m      this.reconnect();[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Emitted whenever the client's WebSocket encounters a connection error.[m
[32m+[m[32m     * @event Client#error[m
[32m+[m[32m     * @param {Error} error The encountered error[m
[32m+[m[32m     */[m
[32m+[m[32m    this.client.emit(Constants.Events.ERROR, error);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * @external CloseEvent[m
[32m+[m[32m   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent}[m
[32m+[m[32m   */[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Called whenever a connection to the gateway is closed.[m
[32m+[m[32m   * @param {CloseEvent} event Close event that was received[m
[32m+[m[32m   */[m
[32m+[m[32m  onClose(event) {[m
[32m+[m[32m    this.debug(`${this.expectingClose ? 'Client' : 'Server'} closed the WebSocket connection: ${event.code}`);[m
[32m+[m[32m    this.closeSequence = this.sequence;[m
[32m+[m[32m    // Reset the state before trying to fix anything[m
[32m+[m[32m    this.emit('close', event);[m
[32m+[m[32m    this.heartbeat(-1);[m
[32m+[m[32m    // Should we reconnect?[m
[32m+[m[32m    if (event.code === 1000 ? this.expectingClose : Constants.WSCodes[event.code]) {[m
[32m+[m[32m      this.expectingClose = false;[m
[32m+[m[32m      /**[m
[32m+[m[32m       * Emitted when the client's WebSocket disconnects and will no longer attempt to reconnect.[m
[32m+[m[32m       * @event Client#disconnect[m
[32m+[m[32m       * @param {CloseEvent} event The WebSocket close event[m
[32m+[m[32m       */[m
[32m+[m[32m      this.client.emit(Constants.Events.DISCONNECT, event);[m
[32m+[m[32m      this.debug(Constants.WSCodes[event.code]);[m
[32m+[m[32m      this.destroy();[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m[32m    this.expectingClose = false;[m
[32m+[m[32m    this.reconnect();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  // Heartbeat[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Acknowledges a heartbeat.[m
[32m+[m[32m   */[m
[32m+[m[32m  ackHeartbeat() {[m
[32m+[m[32m    this.debug(`Heartbeat acknowledged, latency of ${Date.now() - this.lastPingTimestamp}ms`);[m
[32m+[m[32m    this.client._pong(this.lastPingTimestamp);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sends a heartbeat or sets an interval for sending heartbeats.[m
[32m+[m[32m   * @param {number} [time] If -1, clears the interval, any other number sets an interval[m
[32m+[m[32m   * If no value is given, a heartbeat will be sent instantly[m
[32m+[m[32m   */[m
[32m+[m[32m  heartbeat(time) {[m
[32m+[m[32m    if (!isNaN(time)) {[m
[32m+[m[32m      if (time === -1) {[m
[32m+[m[32m        this.debug('Clearing heartbeat interval');[m
[32m+[m[32m        this.client.clearInterval(this.heartbeatInterval);[m
[32m+[m[32m        this.heartbeatInterval = null;[m
[32m+[m[32m      } else {[m
[32m+[m[32m        this.debug(`Setting a heartbeat interval for ${time}ms`);[m
[32m+[m[32m        this.heartbeatInterval = this.client.setInterval(() => this.heartbeat(), time);[m
[32m+[m[32m      }[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m[32m    this.debug('Sending a heartbeat');[m
[32m+[m[32m    this.lastPingTimestamp = Date.now();[m
[32m+[m[32m    this.send({[m
[32m+[m[32m      op: Constants.OPCodes.HEARTBEAT,[m
[32m+[m[32m      d: this.sequence,[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  // Identification[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Identifies the client on a connection.[m
[32m+[m[32m   * @param {number} [after] How long to wait before identifying[m
[32m+[m[32m   * @returns {void}[m
[32m+[m[32m   */[m
[32m+[m[32m  identify(after) {[m
[32m+[m[32m    if (after) return this.client.setTimeout(this.identify.bind(this), after);[m
[32m+[m[32m    return this.sessionID ? this.identifyResume() : this.identifyNew();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Identifies as a new connection on the gateway.[m
[32m+[m[32m   * @returns {void}[m
[32m+[m[32m   */[m
[32m+[m[32m  identifyNew() {[m
[32m+[m[32m    if (!this.client.token) {[m
[32m+[m[32m      this.debug('No token available to identify a new session with');[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m[32m    // Clone the generic payload and assign the token[m
[32m+[m[32m    const d = Object.assign({ token: this.client.token }, this.client.options.ws);[m
[32m+[m
[32m+[m[32m    // Sharding stuff[m
[32m+[m[32m    const { shardId, shardCount } = this.client.options;[m
[32m+[m[32m    if (shardCount > 0) d.shard = [Number(shardId), Number(shardCount)];[m
[32m+[m
[32m+[m[32m    // Send the payload[m
[32m+[m[32m    this.debug('Identifying as a new session');[m
[32m+[m[32m    this.send({ op: Constants.OPCodes.IDENTIFY, d });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Resumes a session on the gateway.[m
[32m+[m[32m   * @returns {void}[m
[32m+[m[32m   */[m
[32m+[m[32m  identifyResume() {[m
[32m+[m[32m    if (!this.sessionID) {[m
[32m+[m[32m      this.debug('Warning: wanted to resume but session ID not available; identifying as a new session instead');[m
[32m+[m[32m      return this.identifyNew();[m
[32m+[m[32m    }[m
[32m+[m[32m    this.debug(`Attempting to resume session ${this.sessionID}`);[m
[32m+[m
[32m+[m[32m    const d = {[m
[32m+[m[32m      token: this.client.token,[m
[32m+[m[32m      session_id: this.sessionID,[m
[32m+[m[32m      seq: this.sequence,[m
[32m+[m[32m    };[m
[32m+[m
[32m+[m[32m    return this.send({[m
[32m+[m[32m      op: Constants.OPCodes.RESUME,[m
[32m+[m[32m      d,[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Encoding the WebSocket connections will use.[m
[32m+[m[32m * @type {string}[m
[32m+[m[32m */[m
[32m+[m[32mWebSocketConnection.ENCODING = erlpack ? 'etf' : 'json';[m
[32m+[m[32mWebSocketConnection.WebSocket = WebSocket;[m
[32m+[m
[32m+[m[32mmodule.exports = WebSocketConnection;[m
[1mdiff --git a/node_modules/discord.js/src/client/websocket/WebSocketManager.js b/node_modules/discord.js/src/client/websocket/WebSocketManager.js[m
[1mnew file mode 100644[m
[1mindex 0000000..9ef073f[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/websocket/WebSocketManager.js[m
[36m@@ -0,0 +1,90 @@[m
[32m+[m[32mconst EventEmitter = require('events').EventEmitter;[m
[32m+[m[32mconst Constants = require('../../util/Constants');[m
[32m+[m[32mconst WebSocketConnection = require('./WebSocketConnection');[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * WebSocket Manager of the client.[m
[32m+[m[32m * @private[m
[32m+[m[32m */[m
[32m+[m[32mclass WebSocketManager extends EventEmitter {[m
[32m+[m[32m  constructor(client) {[m
[32m+[m[32m    super();[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The client that instantiated this WebSocketManager[m
[32m+[m[32m     * @type {Client}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.client = client;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The WebSocket connection of this manager[m
[32m+[m[32m     * @type {?WebSocketConnection}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.connection = null;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sends a heartbeat on the available connection.[m
[32m+[m[32m   * @returns {void}[m
[32m+[m[32m   */[m
[32m+[m[32m  heartbeat() {[m
[32m+[m[32m    if (!this.connection) return this.debug('No connection to heartbeat');[m
[32m+[m[32m    return this.connection.heartbeat();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Emits a debug event.[m
[32m+[m[32m   * @param {string} message Debug message[m
[32m+[m[32m   * @returns {void}[m
[32m+[m[32m   */[m
[32m+[m[32m  debug(message) {[m
[32m+[m[32m    return this.client.emit('debug', `[ws] ${message}`);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Destroy the client.[m
[32m+[m[32m   * @returns {void} Whether or not destruction was successful[m
[32m+[m[32m   */[m
[32m+[m[32m  destroy() {[m
[32m+[m[32m    if (!this.connection) {[m
[32m+[m[32m      this.debug('Attempted to destroy WebSocket but no connection exists!');[m
[32m+[m[32m      return false;[m
[32m+[m[32m    }[m
[32m+[m[32m    return this.connection.destroy();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Send a packet on the available WebSocket.[m
[32m+[m[32m   * @param {Object} packet Packet to send[m
[32m+[m[32m   * @returns {void}[m
[32m+[m[32m   */[m
[32m+[m[32m  send(packet) {[m
[32m+[m[32m    if (!this.connection) {[m
[32m+[m[32m      this.debug('No connection to websocket');[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m[32m    this.connection.send(packet);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Connects the client to a gateway.[m
[32m+[m[32m   * @param {string} gateway The gateway to connect to[m
[32m+[m[32m   * @returns {boolean}[m
[32m+[m[32m   */[m
[32m+[m[32m  connect(gateway) {[m
[32m+[m[32m    if (!this.connection) {[m
[32m+[m[32m      this.connection = new WebSocketConnection(this, gateway);[m
[32m+[m[32m      return true;[m
[32m+[m[32m    }[m
[32m+[m[32m    switch (this.connection.status) {[m
[32m+[m[32m      case Constants.Status.IDLE:[m
[32m+[m[32m      case Constants.Status.DISCONNECTED:[m
[32m+[m[32m        this.connection.connect(gateway, 5500);[m
[32m+[m[32m        return true;[m
[32m+[m[32m      default:[m
[32m+[m[32m        this.debug(`Couldn't connect to ${gateway} as the websocket is at state ${this.connection.status}`);[m
[32m+[m[32m        return false;[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = WebSocketManager;[m
[1mdiff --git a/node_modules/discord.js/src/client/websocket/packets/WebSocketPacketManager.js b/node_modules/discord.js/src/client/websocket/packets/WebSocketPacketManager.js[m
[1mnew file mode 100644[m
[1mindex 0000000..37be737[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/websocket/packets/WebSocketPacketManager.js[m
[36m@@ -0,0 +1,110 @@[m
[32m+[m[32mconst Constants = require('../../../util/Constants');[m
[32m+[m
[32m+[m[32mconst BeforeReadyWhitelist = [[m
[32m+[m[32m  Constants.WSEvents.READY,[m
[32m+[m[32m  Constants.WSEvents.RESUMED,[m
[32m+[m[32m  Constants.WSEvents.GUILD_CREATE,[m
[32m+[m[32m  Constants.WSEvents.GUILD_DELETE,[m
[32m+[m[32m  Constants.WSEvents.GUILD_MEMBERS_CHUNK,[m
[32m+[m[32m  Constants.WSEvents.GUILD_MEMBER_ADD,[m
[32m+[m[32m  Constants.WSEvents.GUILD_MEMBER_REMOVE,[m
[32m+[m[32m];[m
[32m+[m
[32m+[m[32mclass WebSocketPacketManager {[m
[32m+[m[32m  constructor(connection) {[m
[32m+[m[32m    this.ws = connection;[m
[32m+[m[32m    this.handlers = {};[m
[32m+[m[32m    this.queue = [];[m
[32m+[m
[32m+[m[32m    this.register(Constants.WSEvents.READY, require('./handlers/Ready'));[m
[32m+[m[32m    this.register(Constants.WSEvents.RESUMED, require('./handlers/Resumed'));[m
[32m+[m[32m    this.register(Constants.WSEvents.GUILD_CREATE, require('./handlers/GuildCreate'));[m
[32m+[m[32m    this.register(Constants.WSEvents.GUILD_DELETE, require('./handlers/GuildDelete'));[m
[32m+[m[32m    this.register(Constants.WSEvents.GUILD_UPDATE, require('./handlers/GuildUpdate'));[m
[32m+[m[32m    this.register(Constants.WSEvents.GUILD_BAN_ADD, require('./handlers/GuildBanAdd'));[m
[32m+[m[32m    this.register(Constants.WSEvents.GUILD_BAN_REMOVE, require('./handlers/GuildBanRemove'));[m
[32m+[m[32m    this.register(Constants.WSEvents.GUILD_MEMBER_ADD, require('./handlers/GuildMemberAdd'));[m
[32m+[m[32m    this.register(Constants.WSEvents.GUILD_MEMBER_REMOVE, require('./handlers/GuildMemberRemove'));[m
[32m+[m[32m    this.register(Constants.WSEvents.GUILD_MEMBER_UPDATE, require('./handlers/GuildMemberUpdate'));[m
[32m+[m[32m    this.register(Constants.WSEvents.GUILD_ROLE_CREATE, require('./handlers/GuildRoleCreate'));[m
[32m+[m[32m    this.register(Constants.WSEvents.GUILD_ROLE_DELETE, require('./handlers/GuildRoleDelete'));[m
[32m+[m[32m    this.register(Constants.WSEvents.GUILD_ROLE_UPDATE, require('./handlers/GuildRoleUpdate'));[m
[32m+[m[32m    this.register(Constants.WSEvents.GUILD_EMOJIS_UPDATE, require('./handlers/GuildEmojisUpdate'));[m
[32m+[m[32m    this.register(Constants.WSEvents.GUILD_MEMBERS_CHUNK, require('./handlers/GuildMembersChunk'));[m
[32m+[m[32m    this.register(Constants.WSEvents.GUILD_INTEGRATIONS_UPDATE, require('./handlers/GuildIntegrationsUpdate'));[m
[32m+[m[32m    this.register(Constants.WSEvents.CHANNEL_CREATE, require('./handlers/ChannelCreate'));[m
[32m+[m[32m    this.register(Constants.WSEvents.CHANNEL_DELETE, require('./handlers/ChannelDelete'));[m
[32m+[m[32m    this.register(Constants.WSEvents.CHANNEL_UPDATE, require('./handlers/ChannelUpdate'));[m
[32m+[m[32m    this.register(Constants.WSEvents.CHANNEL_PINS_UPDATE, require('./handlers/ChannelPinsUpdate'));[m
[32m+[m[32m    this.register(Constants.WSEvents.PRESENCE_UPDATE, require('./handlers/PresenceUpdate'));[m
[32m+[m[32m    this.register(Constants.WSEvents.USER_UPDATE, require('./handlers/UserUpdate'));[m
[32m+[m[32m    this.register(Constants.WSEvents.USER_NOTE_UPDATE, require('./handlers/UserNoteUpdate'));[m
[32m+[m[32m    this.register(Constants.WSEvents.USER_SETTINGS_UPDATE, require('./handlers/UserSettingsUpdate'));[m
[32m+[m[32m    this.register(Constants.WSEvents.USER_GUILD_SETTINGS_UPDATE, require('./handlers/UserGuildSettingsUpdate'));[m
[32m+[m[32m    this.register(Constants.WSEvents.VOICE_STATE_UPDATE, require('./handlers/VoiceStateUpdate'));[m
[32m+[m[32m    this.register(Constants.WSEvents.TYPING_START, require('./handlers/TypingStart'));[m
[32m+[m[32m    this.register(Constants.WSEvents.MESSAGE_CREATE, require('./handlers/MessageCreate'));[m
[32m+[m[32m    this.register(Constants.WSEvents.MESSAGE_DELETE, require('./handlers/MessageDelete'));[m
[32m+[m[32m    this.register(Constants.WSEvents.MESSAGE_UPDATE, require('./handlers/MessageUpdate'));[m
[32m+[m[32m    this.register(Constants.WSEvents.MESSAGE_DELETE_BULK, require('./handlers/MessageDeleteBulk'));[m
[32m+[m[32m    this.register(Constants.WSEvents.VOICE_SERVER_UPDATE, require('./handlers/VoiceServerUpdate'));[m
[32m+[m[32m    this.register(Constants.WSEvents.GUILD_SYNC, require('./handlers/GuildSync'));[m
[32m+[m[32m    this.register(Constants.WSEvents.RELATIONSHIP_ADD, require('./handlers/RelationshipAdd'));[m
[32m+[m[32m    this.register(Constants.WSEvents.RELATIONSHIP_REMOVE, require('./handlers/RelationshipRemove'));[m
[32m+[m[32m    this.register(Constants.WSEvents.MESSAGE_REACTION_ADD, require('./handlers/MessageReactionAdd'));[m
[32m+[m[32m    this.register(Constants.WSEvents.MESSAGE_REACTION_REMOVE, require('./handlers/MessageReactionRemove'));[m
[32m+[m[32m    this.register(Constants.WSEvents.MESSAGE_REACTION_REMOVE_ALL, require('./handlers/MessageReactionRemoveAll'));[m
[32m+[m[32m    this.register(Constants.WSEvents.WEBHOOKS_UPDATE, require('./handlers/WebhooksUpdate'));[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  get client() {[m
[32m+[m[32m    return this.ws.client;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  register(event, Handler) {[m
[32m+[m[32m    this.handlers[event] = new Handler(this);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  handleQueue() {[m
[32m+[m[32m    this.queue.forEach((element, index) => {[m
[32m+[m[32m      this.handle(this.queue[index], true);[m
[32m+[m[32m      this.queue.splice(index, 1);[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  handle(packet, queue = false) {[m
[32m+[m[32m    if (packet.op === Constants.OPCodes.HEARTBEAT_ACK) {[m
[32m+[m[32m      this.ws.client._pong(this.ws.client._pingTimestamp);[m
[32m+[m[32m      this.ws.lastHeartbeatAck = true;[m
[32m+[m[32m      this.ws.client.emit('debug', 'Heartbeat acknowledged');[m
[32m+[m[32m    } else if (packet.op === Constants.OPCodes.HEARTBEAT) {[m
[32m+[m[32m      this.client.ws.send({[m
[32m+[m[32m        op: Constants.OPCodes.HEARTBEAT,[m
[32m+[m[32m        d: this.client.ws.sequence,[m
[32m+[m[32m      });[m
[32m+[m[32m      this.ws.client.emit('debug', 'Received gateway heartbeat');[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (this.ws.status === Constants.Status.RECONNECTING) {[m
[32m+[m[32m      this.ws.reconnecting = false;[m
[32m+[m[32m      this.ws.checkIfReady();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    this.ws.setSequence(packet.s);[m
[32m+[m
[32m+[m[32m    if (this.ws.disabledEvents[packet.t] !== undefined) return false;[m
[32m+[m
[32m+[m[32m    if (this.ws.status !== Constants.Status.READY) {[m
[32m+[m[32m      if (BeforeReadyWhitelist.indexOf(packet.t) === -1) {[m
[32m+[m[32m        this.queue.push(packet);[m
[32m+[m[32m        return false;[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (!queue && this.queue.length > 0) this.handleQueue();[m
[32m+[m[32m    if (this.handlers[packet.t]) return this.handlers[packet.t].handle(packet);[m
[32m+[m[32m    return false;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = WebSocketPacketManager;[m
[1mdiff --git a/node_modules/discord.js/src/client/websocket/packets/handlers/AbstractHandler.js b/node_modules/discord.js/src/client/websocket/packets/handlers/AbstractHandler.js[m
[1mnew file mode 100644[m
[1mindex 0000000..c1c2a5a[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/websocket/packets/handlers/AbstractHandler.js[m
[36m@@ -0,0 +1,11 @@[m
[32m+[m[32mclass AbstractHandler {[m
[32m+[m[32m  constructor(packetManager) {[m
[32m+[m[32m    this.packetManager = packetManager;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  handle(packet) {[m
[32m+[m[32m    return packet;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = AbstractHandler;[m
[1mdiff --git a/node_modules/discord.js/src/client/websocket/packets/handlers/ChannelCreate.js b/node_modules/discord.js/src/client/websocket/packets/handlers/ChannelCreate.js[m
[1mnew file mode 100644[m
[1mindex 0000000..04cb298[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/websocket/packets/handlers/ChannelCreate.js[m
[36m@@ -0,0 +1,17 @@[m
[32m+[m[32mconst AbstractHandler = require('./AbstractHandler');[m
[32m+[m
[32m+[m[32mclass ChannelCreateHandler extends AbstractHandler {[m
[32m+[m[32m  handle(packet) {[m
[32m+[m[32m    const client = this.packetManager.client;[m
[32m+[m[32m    const data = packet.d;[m
[32m+[m[32m    client.actions.ChannelCreate.handle(data);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Emitted whenever a channel is created.[m
[32m+[m[32m * @event Client#channelCreate[m
[32m+[m[32m * @param {Channel} channel The channel that was created[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mmodule.exports = ChannelCreateHandler;[m
[1mdiff --git a/node_modules/discord.js/src/client/websocket/packets/handlers/ChannelDelete.js b/node_modules/discord.js/src/client/websocket/packets/handlers/ChannelDelete.js[m
[1mnew file mode 100644[m
[1mindex 0000000..b25f585[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/websocket/packets/handlers/ChannelDelete.js[m
[36m@@ -0,0 +1,20 @@[m
[32m+[m[32mconst AbstractHandler = require('./AbstractHandler');[m
[32m+[m
[32m+[m[32mconst Constants = require('../../../../util/Constants');[m
[32m+[m
[32m+[m[32mclass ChannelDeleteHandler extends AbstractHandler {[m
[32m+[m[32m  handle(packet) {[m
[32m+[m[32m    const client = this.packetManager.client;[m
[32m+[m[32m    const data = packet.d;[m
[32m+[m[32m    const response = client.actions.ChannelDelete.handle(data);[m
[32m+[m[32m    if (response.channel) client.emit(Constants.Events.CHANNEL_DELETE, response.channel);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Emitted whenever a channel is deleted.[m
[32m+[m[32m * @event Client#channelDelete[m
[32m+[m[32m * @param {Channel} channel The channel that was deleted[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mmodule.exports = ChannelDeleteHandler;[m
[1mdiff --git a/node_modules/discord.js/src/client/websocket/packets/handlers/ChannelPinsUpdate.js b/node_modules/discord.js/src/client/websocket/packets/handlers/ChannelPinsUpdate.js[m
[1mnew file mode 100644[m
[1mindex 0000000..16ffe1c[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/websocket/packets/handlers/ChannelPinsUpdate.js[m
[36m@@ -0,0 +1,37 @@[m
[32m+[m[32mconst AbstractHandler = require('./AbstractHandler');[m
[32m+[m[32mconst Constants = require('../../../../util/Constants');[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m{ t: 'CHANNEL_PINS_UPDATE',[m
[32m+[m[32m  s: 666,[m
[32m+[m[32m  op: 0,[m
[32m+[m[32m  d:[m
[32m+[m[32m   { last_pin_timestamp: '2016-08-28T17:37:13.171774+00:00',[m
[32m+[m[32m     channel_id: '314866471639044027' } }[m
[32m+[m[32m*/[m
[32m+[m
[32m+[m[32mclass ChannelPinsUpdate extends AbstractHandler {[m
[32m+[m[32m  handle(packet) {[m
[32m+[m[32m    const client = this.packetManager.client;[m
[32m+[m[32m    const data = packet.d;[m
[32m+[m[32m    const channel = client.channels.get(data.channel_id);[m
[32m+[m[32m    const time = new Date(data.last_pin_timestamp);[m
[32m+[m[32m    if (channel && time) {[m
[32m+[m[32m      // Discord sends null for last_pin_timestamp if the last pinned message was removed[m
[32m+[m[32m      channel.lastPinTimestamp = time.getTime() || null;[m
[32m+[m
[32m+[m[32m      client.emit(Constants.Events.CHANNEL_PINS_UPDATE, channel, time);[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Emitted whenever the pins of a channel are updated. Due to the nature of the WebSocket event, not much information[m
[32m+[m[32m * can be provided easily here - you need to manually check the pins yourself.[m
[32m+[m[32m * <warn>The `time` parameter will be a Unix Epoch Date object when there are no pins left.</warn>[m
[32m+[m[32m * @event Client#channelPinsUpdate[m
[32m+[m[32m * @param {Channel} channel The channel that the pins update occured in[m
[32m+[m[32m * @param {Date} time The time when the last pinned message was pinned[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mmodule.exports = ChannelPinsUpdate;[m
[1mdiff --git a/node_modules/discord.js/src/client/websocket/packets/handlers/ChannelUpdate.js b/node_modules/discord.js/src/client/websocket/packets/handlers/ChannelUpdate.js[m
[1mnew file mode 100644[m
[1mindex 0000000..fa535b1[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/websocket/packets/handlers/ChannelUpdate.js[m
[36m@@ -0,0 +1,11 @@[m
[32m+[m[32mconst AbstractHandler = require('./AbstractHandler');[m
[32m+[m
[32m+[m[32mclass ChannelUpdateHandler extends AbstractHandler {[m
[32m+[m[32m  handle(packet) {[m
[32m+[m[32m    const client = this.packetManager.client;[m
[32m+[m[32m    const data = packet.d;[m
[32m+[m[32m    client.actions.ChannelUpdate.handle(data);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = ChannelUpdateHandler;[m
[1mdiff --git a/node_modules/discord.js/src/client/websocket/packets/handlers/GuildBanAdd.js b/node_modules/discord.js/src/client/websocket/packets/handlers/GuildBanAdd.js[m
[1mnew file mode 100644[m
[1mindex 0000000..60ce72d[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/websocket/packets/handlers/GuildBanAdd.js[m
[36m@@ -0,0 +1,23 @@[m
[32m+[m[32m// ##untested handler##[m
[32m+[m
[32m+[m[32mconst AbstractHandler = require('./AbstractHandler');[m
[32m+[m[32mconst Constants = require('../../../../util/Constants');[m
[32m+[m
[32m+[m[32mclass GuildBanAddHandler extends AbstractHandler {[m
[32m+[m[32m  handle(packet) {[m
[32m+[m[32m    const client = this.packetManager.client;[m
[32m+[m[32m    const data = packet.d;[m
[32m+[m[32m    const guild = client.guilds.get(data.guild_id);[m
[32m+[m[32m    const user = client.users.get(data.user.id);[m
[32m+[m[32m    if (guild && user) client.emit(Constants.Events.GUILD_BAN_ADD, guild, user);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Emitted whenever a member is banned from a guild.[m
[32m+[m[32m * @event Client#guildBanAdd[m
[32m+[m[32m * @param {Guild} guild The guild that the ban occurred in[m
[32m+[m[32m * @param {User} user The user that was banned[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mmodule.exports = GuildBanAddHandler;[m
[1mdiff --git a/node_modules/discord.js/src/client/websocket/packets/handlers/GuildBanRemove.js b/node_modules/discord.js/src/client/websocket/packets/handlers/GuildBanRemove.js[m
[1mnew file mode 100644[m
[1mindex 0000000..c4edbde[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/websocket/packets/handlers/GuildBanRemove.js[m
[36m@@ -0,0 +1,20 @@[m
[32m+[m[32m// ##untested handler##[m
[32m+[m
[32m+[m[32mconst AbstractHandler = require('./AbstractHandler');[m
[32m+[m
[32m+[m[32mclass GuildBanRemoveHandler extends AbstractHandler {[m
[32m+[m[32m  handle(packet) {[m
[32m+[m[32m    const client = this.packetManager.client;[m
[32m+[m[32m    const data = packet.d;[m
[32m+[m[32m    client.actions.GuildBanRemove.handle(data);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Emitted whenever a member is unbanned from a guild.[m
[32m+[m[32m * @event Client#guildBanRemove[m
[32m+[m[32m * @param {Guild} guild The guild that the unban occurred in[m
[32m+[m[32m * @param {User} user The user that was unbanned[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mmodule.exports = GuildBanRemoveHandler;[m
[1mdiff --git a/node_modules/discord.js/src/client/websocket/packets/handlers/GuildCreate.js b/node_modules/discord.js/src/client/websocket/packets/handlers/GuildCreate.js[m
[1mnew file mode 100644[m
[1mindex 0000000..d7c1803[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/websocket/packets/handlers/GuildCreate.js[m
[36m@@ -0,0 +1,22 @@[m
[32m+[m[32mconst AbstractHandler = require('./AbstractHandler');[m
[32m+[m
[32m+[m[32mclass GuildCreateHandler extends AbstractHandler {[m
[32m+[m[32m  handle(packet) {[m
[32m+[m[32m    const client = this.packetManager.client;[m
[32m+[m[32m    const data = packet.d;[m
[32m+[m
[32m+[m[32m    const guild = client.guilds.get(data.id);[m
[32m+[m[32m    if (guild) {[m
[32m+[m[32m      if (!guild.available && !data.unavailable) {[m
[32m+[m[32m        // A newly available guild[m
[32m+[m[32m        guild.setup(data);[m
[32m+[m[32m        this.packetManager.ws.checkIfReady();[m
[32m+[m[32m      }[m
[32m+[m[32m    } else {[m
[32m+[m[32m      // A new guild[m
[32m+[m[32m      client.dataManager.newGuild(data);[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = GuildCreateHandler;[m
[1mdiff --git a/node_modules/discord.js/src/client/websocket/packets/handlers/GuildDelete.js b/node_modules/discord.js/src/client/websocket/packets/handlers/GuildDelete.js[m
[1mnew file mode 100644[m
[1mindex 0000000..35e3c53[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/websocket/packets/handlers/GuildDelete.js[m
[36m@@ -0,0 +1,19 @@[m
[32m+[m[32mconst AbstractHandler = require('./AbstractHandler');[m
[32m+[m[32mconst Constants = require('../../../../util/Constants');[m
[32m+[m
[32m+[m[32mclass GuildDeleteHandler extends AbstractHandler {[m
[32m+[m[32m  handle(packet) {[m
[32m+[m[32m    const client = this.packetManager.client;[m
[32m+[m[32m    const data = packet.d;[m
[32m+[m[32m    const response = client.actions.GuildDelete.handle(data);[m
[32m+[m[32m    if (response.guild) client.emit(Constants.Events.GUILD_DELETE, response.guild);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Emitted whenever a guild is deleted/left.[m
[32m+[m[32m * @event Client#guildDelete[m
[32m+[m[32m * @param {Guild} guild The guild that was deleted[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mmodule.exports = GuildDeleteHandler;[m
[1mdiff --git a/node_modules/discord.js/src/client/websocket/packets/handlers/GuildEmojisUpdate.js b/node_modules/discord.js/src/client/websocket/packets/handlers/GuildEmojisUpdate.js[m
[1mnew file mode 100644[m
[1mindex 0000000..2906e74[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/websocket/packets/handlers/GuildEmojisUpdate.js[m
[36m@@ -0,0 +1,11 @@[m
[32m+[m[32mconst AbstractHandler = require('./AbstractHandler');[m
[32m+[m
[32m+[m[32mclass GuildEmojisUpdate extends AbstractHandler {[m
[32m+[m[32m  handle(packet) {[m
[32m+[m[32m    const client = this.packetManager.client;[m
[32m+[m[32m    const data = packet.d;[m
[32m+[m[32m    client.actions.GuildEmojisUpdate.handle(data);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = GuildEmojisUpdate;[m
[1mdiff --git a/node_modules/discord.js/src/client/websocket/packets/handlers/GuildIntegrationsUpdate.js b/node_modules/discord.js/src/client/websocket/packets/handlers/GuildIntegrationsUpdate.js[m
[1mnew file mode 100644[m
[1mindex 0000000..5adfb5b[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/websocket/packets/handlers/GuildIntegrationsUpdate.js[m
[36m@@ -0,0 +1,19 @@[m
[32m+[m[32mconst AbstractHandler = require('./AbstractHandler');[m
[32m+[m[32mconst { Events } = require('../../../../util/Constants');[m
[32m+[m
[32m+[m[32mclass GuildIntegrationsHandler extends AbstractHandler {[m
[32m+[m[32m  handle(packet) {[m
[32m+[m[32m    const client = this.packetManager.client;[m
[32m+[m[32m    const data = packet.d;[m
[32m+[m[32m    const guild = client.guilds.get(data.guild_id);[m
[32m+[m[32m    if (guild) client.emit(Events.GUILD_INTEGRATIONS_UPDATE, guild);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = GuildIntegrationsHandler;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Emitted whenever a guild integration is updated[m
[32m+[m[32m * @event Client#guildIntegrationsUpdate[m
[32m+[m[32m * @param {Guild} guild The guild whose integrations were updated[m
[32m+[m[32m */[m
[1mdiff --git a/node_modules/discord.js/src/client/websocket/packets/handlers/GuildMemberAdd.js b/node_modules/discord.js/src/client/websocket/packets/handlers/GuildMemberAdd.js[m
[1mnew file mode 100644[m
[1mindex 0000000..d4d122f[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/websocket/packets/handlers/GuildMemberAdd.js[m
[36m@@ -0,0 +1,17 @@[m
[32m+[m[32m// ##untested handler##[m
[32m+[m
[32m+[m[32mconst AbstractHandler = require('./AbstractHandler');[m
[32m+[m
[32m+[m[32mclass GuildMemberAddHandler extends AbstractHandler {[m
[32m+[m[32m  handle(packet) {[m
[32m+[m[32m    const client = this.packetManager.client;[m
[32m+[m[32m    const data = packet.d;[m
[32m+[m[32m    const guild = client.guilds.get(data.guild_id);[m
[32m+[m[32m    if (guild) {[m
[32m+[m[32m      guild.memberCount++;[m
[32m+[m[32m      guild._addMember(data);[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = GuildMemberAddHandler;[m
[1mdiff --git a/node_modules/discord.js/src/client/websocket/packets/handlers/GuildMemberRemove.js b/node_modules/discord.js/src/client/websocket/packets/handlers/GuildMemberRemove.js[m
[1mnew file mode 100644[m
[1mindex 0000000..6ec1bfe[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/websocket/packets/handlers/GuildMemberRemove.js[m
[36m@@ -0,0 +1,13 @@[m
[32m+[m[32m// ##untested handler##[m
[32m+[m
[32m+[m[32mconst AbstractHandler = require('./AbstractHandler');[m
[32m+[m
[32m+[m[32mclass GuildMemberRemoveHandler extends AbstractHandler {[m
[32m+[m[32m  handle(packet) {[m
[32m+[m[32m    const client = this.packetManager.client;[m
[32m+[m[32m    const data = packet.d;[m
[32m+[m[32m    client.actions.GuildMemberRemove.handle(data);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = GuildMemberRemoveHandler;[m
[1mdiff --git a/node_modules/discord.js/src/client/websocket/packets/handlers/GuildMemberUpdate.js b/node_modules/discord.js/src/client/websocket/packets/handlers/GuildMemberUpdate.js[m
[1mnew file mode 100644[m
[1mindex 0000000..94ac71f[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/websocket/packets/handlers/GuildMemberUpdate.js[m
[36m@@ -0,0 +1,18 @@[m
[32m+[m[32m// ##untested handler##[m
[32m+[m
[32m+[m[32mconst AbstractHandler = require('./AbstractHandler');[m
[32m+[m
[32m+[m[32mclass GuildMemberUpdateHandler extends AbstractHandler {[m
[32m+[m[32m  handle(packet) {[m
[32m+[m[32m    const client = this.packetManager.client;[m
[32m+[m[32m    const data = packet.d;[m
[32m+[m
[32m+[m[32m    const guild = client.guilds.get(data.guild_id);[m
[32m+[m[32m    if (guild) {[m
[32m+[m[32m      const member = guild.members.get(data.user.id);[m
[32m+[m[32m      if (member) guild._updateMember(member, data);[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = GuildMemberUpdateHandler;[m
[1mdiff --git a/node_modules/discord.js/src/client/websocket/packets/handlers/GuildMembersChunk.js b/node_modules/discord.js/src/client/websocket/packets/handlers/GuildMembersChunk.js[m
[1mnew file mode 100644[m
[1mindex 0000000..4458644[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/websocket/packets/handlers/GuildMembersChunk.js[m
[36m@@ -0,0 +1,33 @@[m
[32m+[m[32mconst AbstractHandler = require('./AbstractHandler');[m
[32m+[m[32mconst Constants = require('../../../../util/Constants');[m
[32m+[m[32m// Uncomment in v12[m
[32m+[m[32m// const Collection = require('../../../../util/Collection');[m
[32m+[m
[32m+[m[32mclass GuildMembersChunkHandler extends AbstractHandler {[m
[32m+[m[32m  handle(packet) {[m
[32m+[m[32m    const client = this.packetManager.client;[m
[32m+[m[32m    const data = packet.d;[m
[32m+[m[32m    const guild = client.guilds.get(data.guild_id);[m
[32m+[m[32m    if (!guild) return;[m
[32m+[m
[32m+[m[32m    // Uncomment in v12[m
[32m+[m[32m    // const members = new Collection();[m
[32m+[m[32m    //[m
[32m+[m[32m    // for (const member of data.members) members.set(member.id, guild._addMember(member, false));[m
[32m+[m
[32m+[m[32m    const members = data.members.map(member => guild._addMember(member, false));[m
[32m+[m
[32m+[m[32m    client.emit(Constants.Events.GUILD_MEMBERS_CHUNK, members, guild);[m
[32m+[m
[32m+[m[32m    client.ws.lastHeartbeatAck = true;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Emitted whenever a chunk of guild members is received (all members come from the same guild).[m
[32m+[m[32m * @event Client#guildMembersChunk[m
[32m+[m[32m * @param {GuildMember[]} members The members in the chunk[m
[32m+[m[32m * @param {Guild} guild The guild related to the member chunk[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mmodule.exports = GuildMembersChunkHandler;[m
[1mdiff --git a/node_modules/discord.js/src/client/websocket/packets/handlers/GuildRoleCreate.js b/node_modules/discord.js/src/client/websocket/packets/handlers/GuildRoleCreate.js[m
[1mnew file mode 100644[m
[1mindex 0000000..8581d53[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/websocket/packets/handlers/GuildRoleCreate.js[m
[36m@@ -0,0 +1,11 @@[m
[32m+[m[32mconst AbstractHandler = require('./AbstractHandler');[m
[32m+[m
[32m+[m[32mclass GuildRoleCreateHandler extends AbstractHandler {[m
[32m+[m[32m  handle(packet) {[m
[32m+[m[32m    const client = this.packetManager.client;[m
[32m+[m[32m    const data = packet.d;[m
[32m+[m[32m    client.actions.GuildRoleCreate.handle(data);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = GuildRoleCreateHandler;[m
[1mdiff --git a/node_modules/discord.js/src/client/websocket/packets/handlers/GuildRoleDelete.js b/node_modules/discord.js/src/client/websocket/packets/handlers/GuildRoleDelete.js[m
[1mnew file mode 100644[m
[1mindex 0000000..63439b0[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/websocket/packets/handlers/GuildRoleDelete.js[m
[36m@@ -0,0 +1,11 @@[m
[32m+[m[32mconst AbstractHandler = require('./AbstractHandler');[m
[32m+[m
[32m+[m[32mclass GuildRoleDeleteHandler extends AbstractHandler {[m
[32m+[m[32m  handle(packet) {[m
[32m+[m[32m    const client = this.packetManager.client;[m
[32m+[m[32m    const data = packet.d;[m
[32m+[m[32m    client.actions.GuildRoleDelete.handle(data);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = GuildRoleDeleteHandler;[m
[1mdiff --git a/node_modules/discord.js/src/client/websocket/packets/handlers/GuildRoleUpdate.js b/node_modules/discord.js/src/client/websocket/packets/handlers/GuildRoleUpdate.js[m
[1mnew file mode 100644[m
[1mindex 0000000..6fbdc10[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/websocket/packets/handlers/GuildRoleUpdate.js[m
[36m@@ -0,0 +1,11 @@[m
[32m+[m[32mconst AbstractHandler = require('./AbstractHandler');[m
[32m+[m
[32m+[m[32mclass GuildRoleUpdateHandler extends AbstractHandler {[m
[32m+[m[32m  handle(packet) {[m
[32m+[m[32m    const client = this.packetManager.client;[m
[32m+[m[32m    const data = packet.d;[m
[32m+[m[32m    client.actions.GuildRoleUpdate.handle(data);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = GuildRoleUpdateHandler;[m
[1mdiff --git a/node_modules/discord.js/src/client/websocket/packets/handlers/GuildSync.js b/node_modules/discord.js/src/client/websocket/packets/handlers/GuildSync.js[m
[1mnew file mode 100644[m
[1mindex 0000000..0b9f5aa[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/websocket/packets/handlers/GuildSync.js[m
[36m@@ -0,0 +1,11 @@[m
[32m+[m[32mconst AbstractHandler = require('./AbstractHandler');[m
[32m+[m
[32m+[m[32mclass GuildSyncHandler extends AbstractHandler {[m
[32m+[m[32m  handle(packet) {[m
[32m+[m[32m    const client = this.packetManager.client;[m
[32m+[m[32m    const data = packet.d;[m
[32m+[m[32m    client.actions.GuildSync.handle(data);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = GuildSyncHandler;[m
[1mdiff --git a/node_modules/discord.js/src/client/websocket/packets/handlers/GuildUpdate.js b/node_modules/discord.js/src/client/websocket/packets/handlers/GuildUpdate.js[m
[1mnew file mode 100644[m
[1mindex 0000000..70eff52[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/websocket/packets/handlers/GuildUpdate.js[m
[36m@@ -0,0 +1,11 @@[m
[32m+[m[32mconst AbstractHandler = require('./AbstractHandler');[m
[32m+[m
[32m+[m[32mclass GuildUpdateHandler extends AbstractHandler {[m
[32m+[m[32m  handle(packet) {[m
[32m+[m[32m    const client = this.packetManager.client;[m
[32m+[m[32m    const data = packet.d;[m
[32m+[m[32m    client.actions.GuildUpdate.handle(data);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = GuildUpdateHandler;[m
[1mdiff --git a/node_modules/discord.js/src/client/websocket/packets/handlers/MessageCreate.js b/node_modules/discord.js/src/client/websocket/packets/handlers/MessageCreate.js[m
[1mnew file mode 100644[m
[1mindex 0000000..beed34d[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/websocket/packets/handlers/MessageCreate.js[m
[36m@@ -0,0 +1,19 @@[m
[32m+[m[32mconst AbstractHandler = require('./AbstractHandler');[m
[32m+[m[32mconst Constants = require('../../../../util/Constants');[m
[32m+[m
[32m+[m[32mclass MessageCreateHandler extends AbstractHandler {[m
[32m+[m[32m  handle(packet) {[m
[32m+[m[32m    const client = this.packetManager.client;[m
[32m+[m[32m    const data = packet.d;[m
[32m+[m[32m    const response = client.actions.MessageCreate.handle(data);[m
[32m+[m[32m    if (response.message) client.emit(Constants.Events.MESSAGE_CREATE, response.message);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Emitted whenever a message is created.[m
[32m+[m[32m * @event Client#message[m
[32m+[m[32m * @param {Message} message The created message[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mmodule.exports = MessageCreateHandler;[m
[1mdiff --git a/node_modules/discord.js/src/client/websocket/packets/handlers/MessageDelete.js b/node_modules/discord.js/src/client/websocket/packets/handlers/MessageDelete.js[m
[1mnew file mode 100644[m
[1mindex 0000000..043c70a[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/websocket/packets/handlers/MessageDelete.js[m
[36m@@ -0,0 +1,19 @@[m
[32m+[m[32mconst AbstractHandler = require('./AbstractHandler');[m
[32m+[m[32mconst Constants = require('../../../../util/Constants');[m
[32m+[m
[32m+[m[32mclass MessageDeleteHandler extends AbstractHandler {[m
[32m+[m[32m  handle(packet) {[m
[32m+[m[32m    const client = this.packetManager.client;[m
[32m+[m[32m    const data = packet.d;[m
[32m+[m[32m    const response = client.actions.MessageDelete.handle(data);[m
[32m+[m[32m    if (response.message) client.emit(Constants.Events.MESSAGE_DELETE, response.message);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Emitted whenever a message is deleted.[m
[32m+[m[32m * @event Client#messageDelete[m
[32m+[m[32m * @param {Message} message The deleted message[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mmodule.exports = MessageDeleteHandler;[m
[1mdiff --git a/node_modules/discord.js/src/client/websocket/packets/handlers/MessageDeleteBulk.js b/node_modules/discord.js/src/client/websocket/packets/handlers/MessageDeleteBulk.js[m
[1mnew file mode 100644[m
[1mindex 0000000..db02df0[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/websocket/packets/handlers/MessageDeleteBulk.js[m
[36m@@ -0,0 +1,17 @@[m
[32m+[m[32mconst AbstractHandler = require('./AbstractHandler');[m
[32m+[m
[32m+[m[32mclass MessageDeleteBulkHandler extends AbstractHandler {[m
[32m+[m[32m  handle(packet) {[m
[32m+[m[32m    const client = this.packetManager.client;[m
[32m+[m[32m    const data = packet.d;[m
[32m+[m[32m    client.actions.MessageDeleteBulk.handle(data);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Emitted whenever messages are deleted in bulk.[m
[32m+[m[32m * @event Client#messageDeleteBulk[m
[32m+[m[32m * @param {Collection<Snowflake, Message>} messages The deleted messages, mapped by their ID[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mmodule.exports = MessageDeleteBulkHandler;[m
[1mdiff --git a/node_modules/discord.js/src/client/websocket/packets/handlers/MessageReactionAdd.js b/node_modules/discord.js/src/client/websocket/packets/handlers/MessageReactionAdd.js[m
[1mnew file mode 100644[m
[1mindex 0000000..a58db70[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/websocket/packets/handlers/MessageReactionAdd.js[m
[36m@@ -0,0 +1,11 @@[m
[32m+[m[32mconst AbstractHandler = require('./AbstractHandler');[m
[32m+[m
[32m+[m[32mclass MessageReactionAddHandler extends AbstractHandler {[m
[32m+[m[32m  handle(packet) {[m
[32m+[m[32m    const client = this.packetManager.client;[m
[32m+[m[32m    const data = packet.d;[m
[32m+[m[32m    client.actions.MessageReactionAdd.handle(data);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = MessageReactionAddHandler;[m
[1mdiff --git a/node_modules/discord.js/src/client/websocket/packets/handlers/MessageReactionRemove.js b/node_modules/discord.js/src/client/websocket/packets/handlers/MessageReactionRemove.js[m
[1mnew file mode 100644[m
[1mindex 0000000..cddde70[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/websocket/packets/handlers/MessageReactionRemove.js[m
[36m@@ -0,0 +1,11 @@[m
[32m+[m[32mconst AbstractHandler = require('./AbstractHandler');[m
[32m+[m
[32m+[m[32mclass MessageReactionRemove extends AbstractHandler {[m
[32m+[m[32m  handle(packet) {[m
[32m+[m[32m    const client = this.packetManager.client;[m
[32m+[m[32m    const data = packet.d;[m
[32m+[m[32m    client.actions.MessageReactionRemove.handle(data);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = MessageReactionRemove;[m
[1mdiff --git a/node_modules/discord.js/src/client/websocket/packets/handlers/MessageReactionRemoveAll.js b/node_modules/discord.js/src/client/websocket/packets/handlers/MessageReactionRemoveAll.js[m
[1mnew file mode 100644[m
[1mindex 0000000..303da9c[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/websocket/packets/handlers/MessageReactionRemoveAll.js[m
[36m@@ -0,0 +1,11 @@[m
[32m+[m[32mconst AbstractHandler = require('./AbstractHandler');[m
[32m+[m
[32m+[m[32mclass MessageReactionRemoveAll extends AbstractHandler {[m
[32m+[m[32m  handle(packet) {[m
[32m+[m[32m    const client = this.packetManager.client;[m
[32m+[m[32m    const data = packet.d;[m
[32m+[m[32m    client.actions.MessageReactionRemoveAll.handle(data);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = MessageReactionRemoveAll;[m
[1mdiff --git a/node_modules/discord.js/src/client/websocket/packets/handlers/MessageUpdate.js b/node_modules/discord.js/src/client/websocket/packets/handlers/MessageUpdate.js[m
[1mnew file mode 100644[m
[1mindex 0000000..527632d[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/websocket/packets/handlers/MessageUpdate.js[m
[36m@@ -0,0 +1,11 @@[m
[32m+[m[32mconst AbstractHandler = require('./AbstractHandler');[m
[32m+[m
[32m+[m[32mclass MessageUpdateHandler extends AbstractHandler {[m
[32m+[m[32m  handle(packet) {[m
[32m+[m[32m    const client = this.packetManager.client;[m
[32m+[m[32m    const data = packet.d;[m
[32m+[m[32m    client.actions.MessageUpdate.handle(data);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = MessageUpdateHandler;[m
[1mdiff --git a/node_modules/discord.js/src/client/websocket/packets/handlers/PresenceUpdate.js b/node_modules/discord.js/src/client/websocket/packets/handlers/PresenceUpdate.js[m
[1mnew file mode 100644[m
[1mindex 0000000..8bcf659[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/websocket/packets/handlers/PresenceUpdate.js[m
[36m@@ -0,0 +1,76 @@[m
[32m+[m[32mconst AbstractHandler = require('./AbstractHandler');[m
[32m+[m[32mconst Constants = require('../../../../util/Constants');[m
[32m+[m[32mconst Util = require('../../../../util/Util');[m
[32m+[m
[32m+[m[32mclass PresenceUpdateHandler extends AbstractHandler {[m
[32m+[m[32m  handle(packet) {[m
[32m+[m[32m    const client = this.packetManager.client;[m
[32m+[m[32m    const data = packet.d;[m
[32m+[m[32m    let user = client.users.get(data.user.id);[m
[32m+[m[32m    const guild = client.guilds.get(data.guild_id);[m
[32m+[m
[32m+[m[32m    // Step 1[m
[32m+[m[32m    if (!user) {[m
[32m+[m[32m      if (data.user.username) {[m
[32m+[m[32m        user = client.dataManager.newUser(data.user);[m
[32m+[m[32m      } else {[m
[32m+[m[32m        return;[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    const oldUser = Util.cloneObject(user);[m
[32m+[m[32m    user.patch(data.user);[m
[32m+[m[32m    if (!user.equals(oldUser)) {[m
[32m+[m[32m      client.emit(Constants.Events.USER_UPDATE, oldUser, user);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (guild) {[m
[32m+[m[32m      let member = guild.members.get(user.id);[m
[32m+[m[32m      if (!member && data.status !== 'offline') {[m
[32m+[m[32m        member = guild._addMember({[m
[32m+[m[32m          user,[m
[32m+[m[32m          roles: data.roles,[m
[32m+[m[32m          deaf: false,[m
[32m+[m[32m          mute: false,[m
[32m+[m[32m        }, false);[m
[32m+[m[32m        client.emit(Constants.Events.GUILD_MEMBER_AVAILABLE, member);[m
[32m+[m[32m      }[m
[32m+[m[32m      if (member) {[m
[32m+[m[32m        if (client.listenerCount(Constants.Events.PRESENCE_UPDATE) === 0) {[m
[32m+[m[32m          guild._setPresence(user.id, data);[m
[32m+[m[32m          return;[m
[32m+[m[32m        }[m
[32m+[m[32m        const oldMember = Util.cloneObject(member);[m
[32m+[m[32m        if (member.presence) {[m
[32m+[m[32m          oldMember.frozenPresence = Util.cloneObject(member.presence);[m
[32m+[m[32m        }[m
[32m+[m[32m        guild._setPresence(user.id, data);[m
[32m+[m[32m        client.emit(Constants.Events.PRESENCE_UPDATE, oldMember, member);[m
[32m+[m[32m      } else {[m
[32m+[m[32m        guild._setPresence(user.id, data);[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Emitted whenever a guild member's presence changes, or they change one of their details.[m
[32m+[m[32m * @event Client#presenceUpdate[m
[32m+[m[32m * @param {GuildMember} oldMember The member before the presence update[m
[32m+[m[32m * @param {GuildMember} newMember The member after the presence update[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Emitted whenever a user's details (e.g. username) are changed.[m
[32m+[m[32m * @event Client#userUpdate[m
[32m+[m[32m * @param {User} oldUser The user before the update[m
[32m+[m[32m * @param {User} newUser The user after the update[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Emitted whenever a member becomes available in a large guild.[m
[32m+[m[32m * @event Client#guildMemberAvailable[m
[32m+[m[32m * @param {GuildMember} member The member that became available[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mmodule.exports = PresenceUpdateHandler;[m
[1mdiff --git a/node_modules/discord.js/src/client/websocket/packets/handlers/Ready.js b/node_modules/discord.js/src/client/websocket/packets/handlers/Ready.js[m
[1mnew file mode 100644[m
[1mindex 0000000..7fea48c[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/websocket/packets/handlers/Ready.js[m
[36m@@ -0,0 +1,83 @@[m
[32m+[m[32mconst AbstractHandler = require('./AbstractHandler');[m
[32m+[m
[32m+[m[32mconst ClientUser = require('../../../../structures/ClientUser');[m
[32m+[m
[32m+[m[32mclass ReadyHandler extends AbstractHandler {[m
[32m+[m[32m  handle(packet) {[m
[32m+[m[32m    const client = this.packetManager.client;[m
[32m+[m[32m    const data = packet.d;[m
[32m+[m
[32m+[m[32m    client.ws.heartbeat();[m
[32m+[m
[32m+[m[32m    data.user.user_settings = data.user_settings;[m
[32m+[m[32m    data.user.user_guild_settings = data.user_guild_settings;[m
[32m+[m
[32m+[m[32m    const clientUser = new ClientUser(client, data.user);[m
[32m+[m[32m    client.user = clientUser;[m
[32m+[m[32m    client.readyAt = new Date();[m
[32m+[m[32m    client.users.set(clientUser.id, clientUser);[m
[32m+[m
[32m+[m[32m    for (const guild of data.guilds) if (!client.guilds.has(guild.id)) client.dataManager.newGuild(guild);[m
[32m+[m[32m    for (const privateDM of data.private_channels) client.dataManager.newChannel(privateDM);[m
[32m+[m
[32m+[m[32m    for (const relation of data.relationships) {[m
[32m+[m[32m      const user = client.dataManager.newUser(relation.user);[m
[32m+[m[32m      if (relation.type === 1) {[m
[32m+[m[32m        client.user.friends.set(user.id, user);[m
[32m+[m[32m      } else if (relation.type === 2) {[m
[32m+[m[32m        client.user.blocked.set(user.id, user);[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    data.presences = data.presences || [];[m
[32m+[m[32m    for (const presence of data.presences) {[m
[32m+[m[32m      client.dataManager.newUser(presence.user);[m
[32m+[m[32m      client._setPresence(presence.user.id, presence);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (data.notes) {[m
[32m+[m[32m      for (const user in data.notes) {[m
[32m+[m[32m        let note = data.notes[user];[m
[32m+[m[32m        if (!note.length) note = null;[m
[32m+[m
[32m+[m[32m        client.user.notes.set(user, note);[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (!client.user.bot && client.options.sync) client.setInterval(client.syncGuilds.bind(client), 30000);[m
[32m+[m
[32m+[m[32m    if (!client.users.has('1')) {[m
[32m+[m[32m      client.dataManager.newUser({[m
[32m+[m[32m        id: '1',[m
[32m+[m[32m        username: 'Clyde',[m
[32m+[m[32m        discriminator: '0000',[m
[32m+[m[32m        avatar: 'https://discordapp.com/assets/f78426a064bc9dd24847519259bc42af.png',[m
[32m+[m[32m        bot: true,[m
[32m+[m[32m        status: 'online',[m
[32m+[m[32m        game: null,[m
[32m+[m[32m        verified: true,[m
[32m+[m[32m      });[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    const t = client.setTimeout(() => {[m
[32m+[m[32m      client.ws.connection.triggerReady();[m
[32m+[m[32m    }, 1200 * data.guilds.length);[m
[32m+[m
[32m+[m[32m    client.setMaxListeners(data.guilds.length + 10);[m
[32m+[m
[32m+[m[32m    client.once('ready', () => {[m
[32m+[m[32m      client.syncGuilds();[m
[32m+[m[32m      client.setMaxListeners(10);[m
[32m+[m[32m      client.clearTimeout(t);[m
[32m+[m[32m    });[m
[32m+[m
[32m+[m[32m    const ws = this.packetManager.ws;[m
[32m+[m
[32m+[m[32m    ws.sessionID = data.session_id;[m
[32m+[m[32m    ws._trace = data._trace;[m
[32m+[m[32m    client.emit('debug', `READY ${ws._trace.join(' -> ')} ${ws.sessionID}`);[m
[32m+[m[32m    ws.checkIfReady();[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = ReadyHandler;[m
[1mdiff --git a/node_modules/discord.js/src/client/websocket/packets/handlers/RelationshipAdd.js b/node_modules/discord.js/src/client/websocket/packets/handlers/RelationshipAdd.js[m
[1mnew file mode 100644[m
[1mindex 0000000..122b4c5[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/websocket/packets/handlers/RelationshipAdd.js[m
[36m@@ -0,0 +1,19 @@[m
[32m+[m[32mconst AbstractHandler = require('./AbstractHandler');[m
[32m+[m
[32m+[m[32mclass RelationshipAddHandler extends AbstractHandler {[m
[32m+[m[32m  handle(packet) {[m
[32m+[m[32m    const client = this.packetManager.client;[m
[32m+[m[32m    const data = packet.d;[m
[32m+[m[32m    if (data.type === 1) {[m
[32m+[m[32m      client.fetchUser(data.id).then(user => {[m
[32m+[m[32m        client.user.friends.set(user.id, user);[m
[32m+[m[32m      });[m
[32m+[m[32m    } else if (data.type === 2) {[m
[32m+[m[32m      client.fetchUser(data.id).then(user => {[m
[32m+[m[32m        client.user.blocked.set(user.id, user);[m
[32m+[m[32m      });[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = RelationshipAddHandler;[m
[1mdiff --git a/node_modules/discord.js/src/client/websocket/packets/handlers/RelationshipRemove.js b/node_modules/discord.js/src/client/websocket/packets/handlers/RelationshipRemove.js[m
[1mnew file mode 100644[m
[1mindex 0000000..b57326a[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/websocket/packets/handlers/RelationshipRemove.js[m
[36m@@ -0,0 +1,19 @@[m
[32m+[m[32mconst AbstractHandler = require('./AbstractHandler');[m
[32m+[m
[32m+[m[32mclass RelationshipRemoveHandler extends AbstractHandler {[m
[32m+[m[32m  handle(packet) {[m
[32m+[m[32m    const client = this.packetManager.client;[m
[32m+[m[32m    const data = packet.d;[m
[32m+[m[32m    if (data.type === 2) {[m
[32m+[m[32m      if (client.user.blocked.has(data.id)) {[m
[32m+[m[32m        client.user.blocked.delete(data.id);[m
[32m+[m[32m      }[m
[32m+[m[32m    } else if (data.type === 1) {[m
[32m+[m[32m      if (client.user.friends.has(data.id)) {[m
[32m+[m[32m        client.user.friends.delete(data.id);[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = RelationshipRemoveHandler;[m
[1mdiff --git a/node_modules/discord.js/src/client/websocket/packets/handlers/Resumed.js b/node_modules/discord.js/src/client/websocket/packets/handlers/Resumed.js[m
[1mnew file mode 100644[m
[1mindex 0000000..0c79605[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/websocket/packets/handlers/Resumed.js[m
[36m@@ -0,0 +1,28 @@[m
[32m+[m[32mconst AbstractHandler = require('./AbstractHandler');[m
[32m+[m[32mconst Constants = require('../../../../util/Constants');[m
[32m+[m
[32m+[m[32mclass ResumedHandler extends AbstractHandler {[m
[32m+[m[32m  handle(packet) {[m
[32m+[m[32m    const client = this.packetManager.client;[m
[32m+[m[32m    const ws = client.ws.connection;[m
[32m+[m
[32m+[m[32m    ws._trace = packet.d._trace;[m
[32m+[m
[32m+[m[32m    ws.status = Constants.Status.READY;[m
[32m+[m[32m    this.packetManager.handleQueue();[m
[32m+[m
[32m+[m[32m    const replayed = ws.sequence - ws.closeSequence;[m
[32m+[m
[32m+[m[32m    ws.debug(`RESUMED ${ws._trace.join(' -> ')} | replayed ${replayed} events.`);[m
[32m+[m[32m    client.emit(Constants.Events.RESUME, replayed);[m
[32m+[m[32m    ws.heartbeat();[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Emitted whenever a WebSocket resumes.[m
[32m+[m[32m * @event Client#resume[m
[32m+[m[32m * @param {number} replayed The number of events that were replayed[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mmodule.exports = ResumedHandler;[m
[1mdiff --git a/node_modules/discord.js/src/client/websocket/packets/handlers/TypingStart.js b/node_modules/discord.js/src/client/websocket/packets/handlers/TypingStart.js[m
[1mnew file mode 100644[m
[1mindex 0000000..a7f5a36[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/websocket/packets/handlers/TypingStart.js[m
[36m@@ -0,0 +1,68 @@[m
[32m+[m[32mconst AbstractHandler = require('./AbstractHandler');[m
[32m+[m[32mconst Constants = require('../../../../util/Constants');[m
[32m+[m
[32m+[m[32mclass TypingStartHandler extends AbstractHandler {[m
[32m+[m[32m  handle(packet) {[m
[32m+[m[32m    const client = this.packetManager.client;[m
[32m+[m[32m    const data = packet.d;[m
[32m+[m[32m    const channel = client.channels.get(data.channel_id);[m
[32m+[m[32m    const user = client.users.get(data.user_id);[m
[32m+[m[32m    const timestamp = new Date(data.timestamp * 1000);[m
[32m+[m
[32m+[m[32m    if (channel && user) {[m
[32m+[m[32m      if (channel.type === 'voice') {[m
[32m+[m[32m        client.emit(Constants.Events.WARN, `Discord sent a typing packet to voice channel ${channel.id}`);[m
[32m+[m[32m        return;[m
[32m+[m[32m      }[m
[32m+[m[32m      if (channel._typing.has(user.id)) {[m
[32m+[m[32m        const typing = channel._typing.get(user.id);[m
[32m+[m[32m        typing.lastTimestamp = timestamp;[m
[32m+[m[32m        typing.resetTimeout(tooLate(channel, user));[m
[32m+[m[32m      } else {[m
[32m+[m[32m        channel._typing.set(user.id, new TypingData(client, timestamp, timestamp, tooLate(channel, user)));[m
[32m+[m[32m        client.emit(Constants.Events.TYPING_START, channel, user);[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mclass TypingData {[m
[32m+[m[32m  constructor(client, since, lastTimestamp, _timeout) {[m
[32m+[m[32m    this.client = client;[m
[32m+[m[32m    this.since = since;[m
[32m+[m[32m    this.lastTimestamp = lastTimestamp;[m
[32m+[m[32m    this._timeout = _timeout;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  resetTimeout(_timeout) {[m
[32m+[m[32m    this.client.clearTimeout(this._timeout);[m
[32m+[m[32m    this._timeout = _timeout;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  get elapsedTime() {[m
[32m+[m[32m    return Date.now() - this.since;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction tooLate(channel, user) {[m
[32m+[m[32m  return channel.client.setTimeout(() => {[m
[32m+[m[32m    channel.client.emit(Constants.Events.TYPING_STOP, channel, user, channel._typing.get(user.id));[m
[32m+[m[32m    channel._typing.delete(user.id);[m
[32m+[m[32m  }, 6000);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Emitted whenever a user starts typing in a channel.[m
[32m+[m[32m * @event Client#typingStart[m
[32m+[m[32m * @param {Channel} channel The channel the user started typing in[m
[32m+[m[32m * @param {User} user The user that started typing[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Emitted whenever a user stops typing in a channel.[m
[32m+[m[32m * @event Client#typingStop[m
[32m+[m[32m * @param {Channel} channel The channel the user stopped typing in[m
[32m+[m[32m * @param {User} user The user that stopped typing[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mmodule.exports = TypingStartHandler;[m
[1mdiff --git a/node_modules/discord.js/src/client/websocket/packets/handlers/UserGuildSettingsUpdate.js b/node_modules/discord.js/src/client/websocket/packets/handlers/UserGuildSettingsUpdate.js[m
[1mnew file mode 100644[m
[1mindex 0000000..90bca4c[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/websocket/packets/handlers/UserGuildSettingsUpdate.js[m
[36m@@ -0,0 +1,21 @@[m
[32m+[m[32mconst AbstractHandler = require('./AbstractHandler');[m
[32m+[m[32mconst Constants = require('../../../../util/Constants');[m
[32m+[m[32mconst ClientUserGuildSettings = require('../../../../structures/ClientUserGuildSettings');[m
[32m+[m
[32m+[m[32mclass UserGuildSettingsUpdateHandler extends AbstractHandler {[m
[32m+[m[32m  handle(packet) {[m
[32m+[m[32m    const client = this.packetManager.client;[m
[32m+[m[32m    const settings = client.user.guildSettings.get(packet.d.guild_id);[m
[32m+[m[32m    if (settings) settings.patch(packet.d);[m
[32m+[m[32m    else client.user.guildSettings.set(packet.d.guild_id, new ClientUserGuildSettings(packet.d, client));[m
[32m+[m[32m    client.emit(Constants.Events.USER_GUILD_SETTINGS_UPDATE, client.user.guildSettings.get(packet.d.guild_id));[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Emitted whenever the client user's settings update.[m
[32m+[m[32m * @event Client#clientUserGuildSettingsUpdate[m
[32m+[m[32m * @param {ClientUserGuildSettings} clientUserGuildSettings The new client user guild settings[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mmodule.exports = UserGuildSettingsUpdateHandler;[m
[1mdiff --git a/node_modules/discord.js/src/client/websocket/packets/handlers/UserNoteUpdate.js b/node_modules/discord.js/src/client/websocket/packets/handlers/UserNoteUpdate.js[m
[1mnew file mode 100644[m
[1mindex 0000000..1e4777a[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/websocket/packets/handlers/UserNoteUpdate.js[m
[36m@@ -0,0 +1,12 @@[m
[32m+[m[32mconst AbstractHandler = require('./AbstractHandler');[m
[32m+[m
[32m+[m[32mclass UserNoteUpdateHandler extends AbstractHandler {[m
[32m+[m[32m  handle(packet) {[m
[32m+[m[32m    const client = this.packetManager.client;[m
[32m+[m[32m    const data = packet.d;[m
[32m+[m
[32m+[m[32m    client.actions.UserNoteUpdate.handle(data);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = UserNoteUpdateHandler;[m
[1mdiff --git a/node_modules/discord.js/src/client/websocket/packets/handlers/UserSettingsUpdate.js b/node_modules/discord.js/src/client/websocket/packets/handlers/UserSettingsUpdate.js[m
[1mnew file mode 100644[m
[1mindex 0000000..903b64b[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/websocket/packets/handlers/UserSettingsUpdate.js[m
[36m@@ -0,0 +1,18 @@[m
[32m+[m[32mconst AbstractHandler = require('./AbstractHandler');[m
[32m+[m[32mconst Constants = require('../../../../util/Constants');[m
[32m+[m
[32m+[m[32mclass UserSettingsUpdateHandler extends AbstractHandler {[m
[32m+[m[32m  handle(packet) {[m
[32m+[m[32m    const client = this.packetManager.client;[m
[32m+[m[32m    client.user.settings.patch(packet.d);[m
[32m+[m[32m    client.emit(Constants.Events.USER_SETTINGS_UPDATE, client.user.settings);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Emitted when the client user's settings update.[m
[32m+[m[32m * @event Client#clientUserSettingsUpdate[m
[32m+[m[32m * @param {ClientUserSettings} clientUserSettings The new client user settings[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mmodule.exports = UserSettingsUpdateHandler;[m
[1mdiff --git a/node_modules/discord.js/src/client/websocket/packets/handlers/UserUpdate.js b/node_modules/discord.js/src/client/websocket/packets/handlers/UserUpdate.js[m
[1mnew file mode 100644[m
[1mindex 0000000..bc34f34[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/websocket/packets/handlers/UserUpdate.js[m
[36m@@ -0,0 +1,11 @@[m
[32m+[m[32mconst AbstractHandler = require('./AbstractHandler');[m
[32m+[m
[32m+[m[32mclass UserUpdateHandler extends AbstractHandler {[m
[32m+[m[32m  handle(packet) {[m
[32m+[m[32m    const client = this.packetManager.client;[m
[32m+[m[32m    const data = packet.d;[m
[32m+[m[32m    client.actions.UserUpdate.handle(data);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = UserUpdateHandler;[m
[1mdiff --git a/node_modules/discord.js/src/client/websocket/packets/handlers/VoiceServerUpdate.js b/node_modules/discord.js/src/client/websocket/packets/handlers/VoiceServerUpdate.js[m
[1mnew file mode 100644[m
[1mindex 0000000..97885d6[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/websocket/packets/handlers/VoiceServerUpdate.js[m
[36m@@ -0,0 +1,19 @@[m
[32m+[m[32mconst AbstractHandler = require('./AbstractHandler');[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m{[m
[32m+[m[32m    "token": "my_token",[m
[32m+[m[32m    "guild_id": "41771983423143937",[m
[32m+[m[32m    "endpoint": "smart.loyal.discord.gg"[m
[32m+[m[32m}[m
[32m+[m[32m*/[m
[32m+[m
[32m+[m[32mclass VoiceServerUpdate extends AbstractHandler {[m
[32m+[m[32m  handle(packet) {[m
[32m+[m[32m    const client = this.packetManager.client;[m
[32m+[m[32m    const data = packet.d;[m
[32m+[m[32m    client.emit('self.voiceServer', data);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = VoiceServerUpdate;[m
[1mdiff --git a/node_modules/discord.js/src/client/websocket/packets/handlers/VoiceStateUpdate.js b/node_modules/discord.js/src/client/websocket/packets/handlers/VoiceStateUpdate.js[m
[1mnew file mode 100644[m
[1mindex 0000000..3e63bdd[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/websocket/packets/handlers/VoiceStateUpdate.js[m
[36m@@ -0,0 +1,52 @@[m
[32m+[m[32mconst AbstractHandler = require('./AbstractHandler');[m
[32m+[m
[32m+[m[32mconst Constants = require('../../../../util/Constants');[m
[32m+[m[32mconst Util = require('../../../../util/Util');[m
[32m+[m
[32m+[m[32mclass VoiceStateUpdateHandler extends AbstractHandler {[m
[32m+[m[32m  handle(packet) {[m
[32m+[m[32m    const client = this.packetManager.client;[m
[32m+[m[32m    const data = packet.d;[m
[32m+[m
[32m+[m[32m    const guild = client.guilds.get(data.guild_id);[m
[32m+[m[32m    if (guild) {[m
[32m+[m[32m      const member = guild.members.get(data.user_id);[m
[32m+[m[32m      if (member) {[m
[32m+[m[32m        const oldVoiceChannelMember = Util.cloneObject(member);[m
[32m+[m[32m        if (member.voiceChannel && member.voiceChannel.id !== data.channel_id) {[m
[32m+[m[32m          member.voiceChannel.members.delete(oldVoiceChannelMember.id);[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        // If the member left the voice channel, unset their speaking property[m
[32m+[m[32m        if (!data.channel_id) member.speaking = null;[m
[32m+[m
[32m+[m[32m        if (member.user.id === client.user.id && data.channel_id) {[m
[32m+[m[32m          client.emit('self.voiceStateUpdate', data);[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        const newChannel = client.channels.get(data.channel_id);[m
[32m+[m[32m        if (newChannel) {[m
[32m+[m[32m          newChannel.members.set(member.id, member);[m
[32m+[m[32m          member.guild.channels.set(data.channel_id, newChannel);[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        member.serverMute = data.mute;[m
[32m+[m[32m        member.serverDeaf = data.deaf;[m
[32m+[m[32m        member.selfMute = data.self_mute;[m
[32m+[m[32m        member.selfDeaf = data.self_deaf;[m
[32m+[m[32m        member.voiceSessionID = data.session_id;[m
[32m+[m[32m        member.voiceChannelID = data.channel_id;[m
[32m+[m[32m        client.emit(Constants.Events.VOICE_STATE_UPDATE, oldVoiceChannelMember, member);[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Emitted whenever a user changes voice state - e.g. joins/leaves a channel, mutes/unmutes.[m
[32m+[m[32m * @event Client#voiceStateUpdate[m
[32m+[m[32m * @param {GuildMember} oldMember The member before the voice state update[m
[32m+[m[32m * @param {GuildMember} newMember The member after the voice state update[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mmodule.exports = VoiceStateUpdateHandler;[m
[1mdiff --git a/node_modules/discord.js/src/client/websocket/packets/handlers/WebhooksUpdate.js b/node_modules/discord.js/src/client/websocket/packets/handlers/WebhooksUpdate.js[m
[1mnew file mode 100644[m
[1mindex 0000000..7ed2721[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/client/websocket/packets/handlers/WebhooksUpdate.js[m
[36m@@ -0,0 +1,19 @@[m
[32m+[m[32mconst AbstractHandler = require('./AbstractHandler');[m
[32m+[m[32mconst { Events } = require('../../../../util/Constants');[m
[32m+[m
[32m+[m[32mclass WebhooksUpdate extends AbstractHandler {[m
[32m+[m[32m  handle(packet) {[m
[32m+[m[32m    const client = this.packetManager.client;[m
[32m+[m[32m    const data = packet.d;[m
[32m+[m[32m    const channel = client.channels.get(data.channel_id);[m
[32m+[m[32m    if (channel) client.emit(Events.WEBHOOKS_UPDATE, channel);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Emitted whenever a guild text channel has its webhooks changed.[m
[32m+[m[32m * @event Client#webhookUpdate[m
[32m+[m[32m * @param {TextChannel} channel The channel that had a webhook update[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mmodule.exports = WebhooksUpdate;[m
[1mdiff --git a/node_modules/discord.js/src/index.js b/node_modules/discord.js/src/index.js[m
[1mnew file mode 100644[m
[1mindex 0000000..4624694[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/index.js[m
[36m@@ -0,0 +1,66 @@[m
[32m+[m[32mconst Util = require('./util/Util');[m
[32m+[m
[32m+[m[32mmodule.exports = {[m
[32m+[m[32m  // "Root" classes (starting points)[m
[32m+[m[32m  Client: require('./client/Client'),[m
[32m+[m[32m  Shard: require('./sharding/Shard'),[m
[32m+[m[32m  ShardClientUtil: require('./sharding/ShardClientUtil'),[m
[32m+[m[32m  ShardingManager: require('./sharding/ShardingManager'),[m
[32m+[m[32m  WebhookClient: require('./client/WebhookClient'),[m
[32m+[m
[32m+[m[32m  // Utilities[m
[32m+[m[32m  Collection: require('./util/Collection'),[m
[32m+[m[32m  Constants: require('./util/Constants'),[m
[32m+[m[32m  DiscordAPIError: require('./client/rest/DiscordAPIError'),[m
[32m+[m[32m  EvaluatedPermissions: require('./util/Permissions'),[m
[32m+[m[32m  Permissions: require('./util/Permissions'),[m
[32m+[m[32m  Snowflake: require('./util/Snowflake'),[m
[32m+[m[32m  SnowflakeUtil: require('./util/Snowflake'),[m
[32m+[m[32m  Util: Util,[m
[32m+[m[32m  util: Util,[m
[32m+[m[32m  version: require('../package').version,[m
[32m+[m
[32m+[m[32m  // Shortcuts to Util methods[m
[32m+[m[32m  escapeMarkdown: Util.escapeMarkdown,[m
[32m+[m[32m  fetchRecommendedShards: Util.fetchRecommendedShards,[m
[32m+[m[32m  splitMessage: Util.splitMessage,[m
[32m+[m
[32m+[m[32m  // Structures[m
[32m+[m[32m  Attachment: require('./structures/Attachment'),[m
[32m+[m[32m  CategoryChannel: require('./structures/CategoryChannel'),[m
[32m+[m[32m  Channel: require('./structures/Channel'),[m
[32m+[m[32m  ClientUser: require('./structures/ClientUser'),[m
[32m+[m[32m  ClientUserSettings: require('./structures/ClientUserSettings'),[m
[32m+[m[32m  Collector: require('./structures/interfaces/Collector'),[m
[32m+[m[32m  DMChannel: require('./structures/DMChannel'),[m
[32m+[m[32m  Emoji: require('./structures/Emoji'),[m
[32m+[m[32m  Game: require('./structures/Presence').Game,[m
[32m+[m[32m  GroupDMChannel: require('./structures/GroupDMChannel'),[m
[32m+[m[32m  Guild: require('./structures/Guild'),[m
[32m+[m[32m  GuildAuditLogs: require('./structures/GuildAuditLogs'),[m
[32m+[m[32m  GuildChannel: require('./structures/GuildChannel'),[m
[32m+[m[32m  GuildMember: require('./structures/GuildMember'),[m
[32m+[m[32m  Invite: require('./structures/Invite'),[m
[32m+[m[32m  Message: require('./structures/Message'),[m
[32m+[m[32m  MessageAttachment: require('./structures/MessageAttachment'),[m
[32m+[m[32m  MessageCollector: require('./structures/MessageCollector'),[m
[32m+[m[32m  MessageEmbed: require('./structures/MessageEmbed'),[m
[32m+[m[32m  MessageMentions: require('./structures/MessageMentions'),[m
[32m+[m[32m  MessageReaction: require('./structures/MessageReaction'),[m
[32m+[m[32m  NewsChannel: require('./structures/NewsChannel'),[m
[32m+[m[32m  OAuth2Application: require('./structures/OAuth2Application'),[m
[32m+[m[32m  ClientOAuth2Application: require('./structures/OAuth2Application'),[m
[32m+[m[32m  PartialGuild: require('./structures/PartialGuild'),[m
[32m+[m[32m  PartialGuildChannel: require('./structures/PartialGuildChannel'),[m
[32m+[m[32m  PermissionOverwrites: require('./structures/PermissionOverwrites'),[m
[32m+[m[32m  Presence: require('./structures/Presence').Presence,[m
[32m+[m[32m  ReactionEmoji: require('./structures/ReactionEmoji'),[m
[32m+[m[32m  ReactionCollector: require('./structures/ReactionCollector'),[m
[32m+[m[32m  RichEmbed: require('./structures/RichEmbed'),[m
[32m+[m[32m  Role: require('./structures/Role'),[m
[32m+[m[32m  StoreChannel: require('./structures/StoreChannel'),[m
[32m+[m[32m  TextChannel: require('./structures/TextChannel'),[m
[32m+[m[32m  User: require('./structures/User'),[m
[32m+[m[32m  VoiceChannel: require('./structures/VoiceChannel'),[m
[32m+[m[32m  Webhook: require('./structures/Webhook'),[m
[32m+[m[32m};[m
[1mdiff --git a/node_modules/discord.js/src/sharding/Shard.js b/node_modules/discord.js/src/sharding/Shard.js[m
[1mnew file mode 100644[m
[1mindex 0000000..b6fddb4[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/sharding/Shard.js[m
[36m@@ -0,0 +1,282 @@[m
[32m+[m[32mconst childProcess = require('child_process');[m
[32m+[m[32mconst EventEmitter = require('events');[m
[32m+[m[32mconst path = require('path');[m
[32m+[m[32mconst Util = require('../util/Util');[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Represents a Shard spawned by the ShardingManager.[m
[32m+[m[32m */[m
[32m+[m[32mclass Shard extends EventEmitter {[m
[32m+[m[32m  /**[m
[32m+[m[32m   * @param {ShardingManager} manager The sharding manager[m
[32m+[m[32m   * @param {number} id The ID of this shard[m
[32m+[m[32m   * @param {Array} [args=[]] Command line arguments to pass to the script[m
[32m+[m[32m   */[m
[32m+[m[32m  constructor(manager, id, args = []) {[m
[32m+[m[32m    super();[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Manager that created the shard[m
[32m+[m[32m     * @type {ShardingManager}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.manager = manager;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * ID of the shard[m
[32m+[m[32m     * @type {number}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.id = id;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The environment variables for the shard[m
[32m+[m[32m     * @type {Object}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.env = Object.assign({}, process.env, {[m
[32m+[m[32m      SHARD_ID: this.id,[m
[32m+[m[32m      SHARD_COUNT: this.manager.totalShards,[m
[32m+[m[32m      CLIENT_TOKEN: this.manager.token,[m
[32m+[m[32m    });[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Whether the shard's {@link Client} is ready[m
[32m+[m[32m     * @type {boolean}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.ready = false;[m
[32m+[m
[32m+[m[32m    this._evals = new Map();[m
[32m+[m[32m    this._fetches = new Map();[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Listener function for the {@link ChildProcess}' `exit` event[m
[32m+[m[32m     * @type {Function}[m
[32m+[m[32m     * @private[m
[32m+[m[32m     */[m
[32m+[m[32m    this._exitListener = this._handleExit.bind(this, undefined);[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Process of the shard[m
[32m+[m[32m     * @type {ChildProcess}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.process = null;[m
[32m+[m
[32m+[m[32m    this.spawn(args);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Forks a child process for the shard.[m
[32m+[m[32m   * <warn>You should not need to call this manually.</warn>[m
[32m+[m[32m   * @param {Array} [args=this.manager.args] Command line arguments to pass to the script[m
[32m+[m[32m   * @param {Array} [execArgv=this.manager.execArgv] Command line arguments to pass to the process executable[m
[32m+[m[32m   * @returns {ChildProcess}[m
[32m+[m[32m   */[m
[32m+[m[32m  spawn(args = this.manager.args, execArgv = this.manager.execArgv) {[m
[32m+[m[32m    this.process = childProcess.fork(path.resolve(this.manager.file), args, {[m
[32m+[m[32m      env: this.env, execArgv,[m
[32m+[m[32m    })[m
[32m+[m[32m      .on('exit', this._exitListener)[m
[32m+[m[32m      .on('message', this._handleMessage.bind(this));[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Emitted upon the creation of the shard's child process.[m
[32m+[m[32m     * @event Shard#spawn[m
[32m+[m[32m     * @param {ChildProcess} process Child process that was created[m
[32m+[m[32m     */[m
[32m+[m[32m    this.emit('spawn', this.process);[m
[32m+[m
[32m+[m[32m    return new Promise((resolve, reject) => {[m
[32m+[m[32m      this.once('ready', resolve);[m
[32m+[m[32m      this.once('disconnect', () => reject(new Error(`Shard ${this.id}'s Client disconnected before becoming ready.`)));[m
[32m+[m[32m      this.once('death', () => reject(new Error(`Shard ${this.id}'s process exited before its Client became ready.`)));[m
[32m+[m[32m      setTimeout(() => reject(new Error(`Shard ${this.id}'s Client took too long to become ready.`)), 30000);[m
[32m+[m[32m    }).then(() => this.process);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Immediately kills the shard's process and does not restart it.[m
[32m+[m[32m   */[m
[32m+[m[32m  kill() {[m
[32m+[m[32m    this.process.removeListener('exit', this._exitListener);[m
[32m+[m[32m    this.process.kill();[m
[32m+[m[32m    this._handleExit(false);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Kills and restarts the shard's process.[m
[32m+[m[32m   * @param {number} [delay=500] How long to wait between killing the process and restarting it (in milliseconds)[m
[32m+[m[32m   * @returns {Promise<ChildProcess>}[m
[32m+[m[32m   */[m
[32m+[m[32m  respawn(delay = 500) {[m
[32m+[m[32m    this.kill();[m
[32m+[m[32m    if (delay > 0) return Util.delayFor(delay).then(() => this.spawn());[m
[32m+[m[32m    return this.spawn();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sends a message to the shard's process.[m
[32m+[m[32m   * @param {*} message Message to send to the shard[m
[32m+[m[32m   * @returns {Promise<Shard>}[m
[32m+[m[32m   */[m
[32m+[m[32m  send(message) {[m
[32m+[m[32m    return new Promise((resolve, reject) => {[m
[32m+[m[32m      this.process.send(message, err => {[m
[32m+[m[32m        if (err) reject(err); else resolve(this);[m
[32m+[m[32m      });[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Fetches a client property value of the shard.[m
[32m+[m[32m   * @param {string} prop Name of the client property to get, using periods for nesting[m
[32m+[m[32m   * @returns {Promise<*>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * shard.fetchClientValue('guilds.size')[m
[32m+[m[32m   *   .then(count => console.log(`${count} guilds in shard ${shard.id}`))[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  fetchClientValue(prop) {[m
[32m+[m[32m    if (this._fetches.has(prop)) return this._fetches.get(prop);[m
[32m+[m
[32m+[m[32m    const promise = new Promise((resolve, reject) => {[m
[32m+[m[32m      const listener = message => {[m
[32m+[m[32m        if (!message || message._fetchProp !== prop) return;[m
[32m+[m[32m        this.process.removeListener('message', listener);[m
[32m+[m[32m        this._fetches.delete(prop);[m
[32m+[m[32m        resolve(message._result);[m
[32m+[m[32m      };[m
[32m+[m[32m      this.process.on('message', listener);[m
[32m+[m
[32m+[m[32m      this.send({ _fetchProp: prop }).catch(err => {[m
[32m+[m[32m        this.process.removeListener('message', listener);[m
[32m+[m[32m        this._fetches.delete(prop);[m
[32m+[m[32m        reject(err);[m
[32m+[m[32m      });[m
[32m+[m[32m    });[m
[32m+[m
[32m+[m[32m    this._fetches.set(prop, promise);[m
[32m+[m[32m    return promise;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Evaluates a script on the shard, in the context of the client.[m
[32m+[m[32m   * @param {string} script JavaScript to run on the shard[m
[32m+[m[32m   * @returns {Promise<*>} Result of the script execution[m
[32m+[m[32m   */[m
[32m+[m[32m  eval(script) {[m
[32m+[m[32m    if (this._evals.has(script)) return this._evals.get(script);[m
[32m+[m
[32m+[m[32m    const promise = new Promise((resolve, reject) => {[m
[32m+[m[32m      const listener = message => {[m
[32m+[m[32m        if (!message || message._eval !== script) return;[m
[32m+[m[32m        this.process.removeListener('message', listener);[m
[32m+[m[32m        this._evals.delete(script);[m
[32m+[m[32m        if (!message._error) resolve(message._result); else reject(Util.makeError(message._error));[m
[32m+[m[32m      };[m
[32m+[m[32m      this.process.on('message', listener);[m
[32m+[m
[32m+[m[32m      this.send({ _eval: script }).catch(err => {[m
[32m+[m[32m        this.process.removeListener('message', listener);[m
[32m+[m[32m        this._evals.delete(script);[m
[32m+[m[32m        reject(err);[m
[32m+[m[32m      });[m
[32m+[m[32m    });[m
[32m+[m
[32m+[m[32m    this._evals.set(script, promise);[m
[32m+[m[32m    return promise;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Handles an IPC message.[m
[32m+[m[32m   * @param {*} message Message received[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  _handleMessage(message) {[m
[32m+[m[32m    if (message) {[m
[32m+[m[32m      // Shard is ready[m
[32m+[m[32m      if (message._ready) {[m
[32m+[m[32m        this.ready = true;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Emitted upon the shard's {@link Client#ready} event.[m
[32m+[m[32m         * @event Shard#ready[m
[32m+[m[32m         */[m
[32m+[m[32m        this.emit('ready');[m
[32m+[m[32m        return;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      // Shard has disconnected[m
[32m+[m[32m      if (message._disconnect) {[m
[32m+[m[32m        this.ready = false;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Emitted upon the shard's {@link Client#disconnect} event.[m
[32m+[m[32m         * @event Shard#disconnect[m
[32m+[m[32m         */[m
[32m+[m[32m        this.emit('disconnect');[m
[32m+[m[32m        return;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      // Shard is attempting to reconnect[m
[32m+[m[32m      if (message._reconnecting) {[m
[32m+[m[32m        this.ready = false;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Emitted upon the shard's {@link Client#reconnecting} event.[m
[32m+[m[32m         * @event Shard#reconnecting[m
[32m+[m[32m         */[m
[32m+[m[32m        this.emit('reconnecting');[m
[32m+[m[32m        return;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      // Shard is requesting a property fetch[m
[32m+[m[32m      if (message._sFetchProp) {[m
[32m+[m[32m        this.manager.fetchClientValues(message._sFetchProp).then([m
[32m+[m[32m          results => this.send({ _sFetchProp: message._sFetchProp, _result: results }),[m
[32m+[m[32m          err => this.send({ _sFetchProp: message._sFetchProp, _error: Util.makePlainError(err) })[m
[32m+[m[32m        );[m
[32m+[m[32m        return;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      // Shard is requesting an eval broadcast[m
[32m+[m[32m      if (message._sEval) {[m
[32m+[m[32m        this.manager.broadcastEval(message._sEval).then([m
[32m+[m[32m          results => this.send({ _sEval: message._sEval, _result: results }),[m
[32m+[m[32m          err => this.send({ _sEval: message._sEval, _error: Util.makePlainError(err) })[m
[32m+[m[32m        );[m
[32m+[m[32m        return;[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Emitted upon recieving a message from a shard.[m
[32m+[m[32m     * @event ShardingManager#message[m
[32m+[m[32m     * @param {Shard} shard Shard that sent the message[m
[32m+[m[32m     * @param {*} message Message that was received[m
[32m+[m[32m     */[m
[32m+[m[32m    this.manager.emit('message', this, message);[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Emitted upon recieving a message from the child process.[m
[32m+[m[32m     * @event Shard#message[m
[32m+[m[32m     * @param {*} message Message that was received[m
[32m+[m[32m     */[m
[32m+[m[32m    this.emit('message', message);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Handles the shard's process exiting.[m
[32m+[m[32m   * @param {boolean} [respawn=this.manager.respawn] Whether to spawn the shard again[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  _handleExit(respawn = this.manager.respawn) {[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Emitted upon the shard's child process exiting.[m
[32m+[m[32m     * @event Shard#death[m
[32m+[m[32m     * @param {ChildProcess} process Child process that exited[m
[32m+[m[32m     */[m
[32m+[m[32m    this.emit('death', this.process);[m
[32m+[m
[32m+[m[32m    this.process = null;[m
[32m+[m[32m    this._evals.clear();[m
[32m+[m[32m    this._fetches.clear();[m
[32m+[m
[32m+[m[32m    if (respawn) this.manager.createShard(this.id);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = Shard;[m
[1mdiff --git a/node_modules/discord.js/src/sharding/ShardClientUtil.js b/node_modules/discord.js/src/sharding/ShardClientUtil.js[m
[1mnew file mode 100644[m
[1mindex 0000000..28571f1[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/sharding/ShardClientUtil.js[m
[36m@@ -0,0 +1,146 @@[m
[32m+[m[32mconst Util = require('../util/Util');[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Helper class for sharded clients spawned as a child process, such as from a ShardingManager.[m
[32m+[m[32m */[m
[32m+[m[32mclass ShardClientUtil {[m
[32m+[m[32m  /**[m
[32m+[m[32m   * @param {Client} client The client of the current shard[m
[32m+[m[32m   */[m
[32m+[m[32m  constructor(client) {[m
[32m+[m[32m    this.client = client;[m
[32m+[m[32m    process.on('message', this._handleMessage.bind(this));[m
[32m+[m[32m    client.on('ready', () => { process.send({ _ready: true }); });[m
[32m+[m[32m    client.on('disconnect', () => { process.send({ _disconnect: true }); });[m
[32m+[m[32m    client.on('reconnecting', () => { process.send({ _reconnecting: true }); });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * ID of this shard[m
[32m+[m[32m   * @type {number}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get id() {[m
[32m+[m[32m    return this.client.options.shardId;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Total number of shards[m
[32m+[m[32m   * @type {number}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get count() {[m
[32m+[m[32m    return this.client.options.shardCount;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sends a message to the master process.[m
[32m+[m[32m   * @param {*} message Message to send[m
[32m+[m[32m   * @returns {Promise<void>}[m
[32m+[m[32m   */[m
[32m+[m[32m  send(message) {[m
[32m+[m[32m    return new Promise((resolve, reject) => {[m
[32m+[m[32m      process.send(message, err => {[m
[32m+[m[32m        if (err) reject(err); else resolve();[m
[32m+[m[32m      });[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Fetches a client property value of each shard.[m
[32m+[m[32m   * @param {string} prop Name of the client property to get, using periods for nesting[m
[32m+[m[32m   * @returns {Promise<Array>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * client.shard.fetchClientValues('guilds.size')[m
[32m+[m[32m   *   .then(results => {[m
[32m+[m[32m   *     console.log(`${results.reduce((prev, val) => prev + val, 0)} total guilds`);[m
[32m+[m[32m   *   })[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  fetchClientValues(prop) {[m
[32m+[m[32m    return new Promise((resolve, reject) => {[m
[32m+[m[32m      const listener = message => {[m
[32m+[m[32m        if (!message || message._sFetchProp !== prop) return;[m
[32m+[m[32m        process.removeListener('message', listener);[m
[32m+[m[32m        if (!message._error) resolve(message._result); else reject(Util.makeError(message._error));[m
[32m+[m[32m      };[m
[32m+[m[32m      process.on('message', listener);[m
[32m+[m
[32m+[m[32m      this.send({ _sFetchProp: prop }).catch(err => {[m
[32m+[m[32m        process.removeListener('message', listener);[m
[32m+[m[32m        reject(err);[m
[32m+[m[32m      });[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Evaluates a script on all shards, in the context of the Clients.[m
[32m+[m[32m   * @param {string} script JavaScript to run on each shard[m
[32m+[m[32m   * @returns {Promise<Array>} Results of the script execution[m
[32m+[m[32m   */[m
[32m+[m[32m  broadcastEval(script) {[m
[32m+[m[32m    return new Promise((resolve, reject) => {[m
[32m+[m[32m      const listener = message => {[m
[32m+[m[32m        if (!message || message._sEval !== script) return;[m
[32m+[m[32m        process.removeListener('message', listener);[m
[32m+[m[32m        if (!message._error) resolve(message._result); else reject(Util.makeError(message._error));[m
[32m+[m[32m      };[m
[32m+[m[32m      process.on('message', listener);[m
[32m+[m
[32m+[m[32m      this.send({ _sEval: script }).catch(err => {[m
[32m+[m[32m        process.removeListener('message', listener);[m
[32m+[m[32m        reject(err);[m
[32m+[m[32m      });[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Handles an IPC message.[m
[32m+[m[32m   * @param {*} message Message received[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  _handleMessage(message) {[m
[32m+[m[32m    if (!message) return;[m
[32m+[m[32m    if (message._fetchProp) {[m
[32m+[m[32m      const props = message._fetchProp.split('.');[m
[32m+[m[32m      let value = this.client;[m
[32m+[m[32m      for (const prop of props) value = value[prop];[m
[32m+[m[32m      this._respond('fetchProp', { _fetchProp: message._fetchProp, _result: value });[m
[32m+[m[32m    } else if (message._eval) {[m
[32m+[m[32m      try {[m
[32m+[m[32m        this._respond('eval', { _eval: message._eval, _result: this.client._eval(message._eval) });[m
[32m+[m[32m      } catch (err) {[m
[32m+[m[32m        this._respond('eval', { _eval: message._eval, _error: Util.makePlainError(err) });[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sends a message to the master process, emitting an error from the client upon failure.[m
[32m+[m[32m   * @param {string} type Type of response to send[m
[32m+[m[32m   * @param {*} message Message to send[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  _respond(type, message) {[m
[32m+[m[32m    this.send(message).catch(err => {[m
[32m+[m[32m      err.message = `Error when sending ${type} response to master process: ${err.message}`;[m
[32m+[m[32m      this.client.emit('error', err);[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Creates/gets the singleton of this class.[m
[32m+[m[32m   * @param {Client} client The client to use[m
[32m+[m[32m   * @returns {ShardClientUtil}[m
[32m+[m[32m   */[m
[32m+[m[32m  static singleton(client) {[m
[32m+[m[32m    if (!this._singleton) {[m
[32m+[m[32m      this._singleton = new this(client);[m
[32m+[m[32m    } else {[m
[32m+[m[32m      client.emit('warn', 'Multiple clients created in child process; only the first will handle sharding helpers.');[m
[32m+[m[32m    }[m
[32m+[m[32m    return this._singleton;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = ShardClientUtil;[m
[1mdiff --git a/node_modules/discord.js/src/sharding/ShardingManager.js b/node_modules/discord.js/src/sharding/ShardingManager.js[m
[1mnew file mode 100644[m
[1mindex 0000000..5b07299[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/sharding/ShardingManager.js[m
[36m@@ -0,0 +1,220 @@[m
[32m+[m[32mconst path = require('path');[m
[32m+[m[32mconst fs = require('fs');[m
[32m+[m[32mconst EventEmitter = require('events').EventEmitter;[m
[32m+[m[32mconst Shard = require('./Shard');[m
[32m+[m[32mconst Collection = require('../util/Collection');[m
[32m+[m[32mconst Util = require('../util/Util');[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * This is a utility class that can be used to help you spawn shards of your client. Each shard is completely separate[m
[32m+[m[32m * from the other. The Shard Manager takes a path to a file and spawns it under the specified amount of shards safely.[m
[32m+[m[32m * If you do not select an amount of shards, the manager will automatically decide the best amount.[m
[32m+[m[32m * @extends {EventEmitter}[m
[32m+[m[32m */[m
[32m+[m[32mclass ShardingManager extends EventEmitter {[m
[32m+[m[32m  /**[m
[32m+[m[32m   * @param {string} file Path to your shard script file[m
[32m+[m[32m   * @param {Object} [options] Options for the sharding manager[m
[32m+[m[32m   * @param {number|string} [options.totalShards='auto'] Number of shards to spawn, or "auto"[m
[32m+[m[32m   * @param {boolean} [options.respawn=true] Whether shards should automatically respawn upon exiting[m
[32m+[m[32m   * @param {string[]} [options.shardArgs=[]] Arguments to pass to the shard script when spawning[m
[32m+[m[32m   * @param {string} [options.token] Token to use for automatic shard count and passing to shards[m
[32m+[m[32m   */[m
[32m+[m[32m  constructor(file, options = {}) {[m
[32m+[m[32m    super();[m
[32m+[m[32m    options = Util.mergeDefault({[m
[32m+[m[32m      totalShards: 'auto',[m
[32m+[m[32m      respawn: true,[m
[32m+[m[32m      shardArgs: [],[m
[32m+[m[32m      token: null,[m
[32m+[m[32m    }, options);[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Path to the shard script file[m
[32m+[m[32m     * @type {string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.file = file;[m
[32m+[m[32m    if (!file) throw new Error('File must be specified.');[m
[32m+[m[32m    if (!path.isAbsolute(file)) this.file = path.resolve(process.cwd(), file);[m
[32m+[m[32m    const stats = fs.statSync(this.file);[m
[32m+[m[32m    if (!stats.isFile()) throw new Error('File path does not point to a file.');[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Amount of shards that this manager is going to spawn[m
[32m+[m[32m     * @type {number|string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.totalShards = options.totalShards;[m
[32m+[m[32m    if (this.totalShards !== 'auto') {[m
[32m+[m[32m      if (typeof this.totalShards !== 'number' || isNaN(this.totalShards)) {[m
[32m+[m[32m        throw new TypeError('Amount of shards must be a number.');[m
[32m+[m[32m      }[m
[32m+[m[32m      if (this.totalShards < 1) throw new RangeError('Amount of shards must be at least 1.');[m
[32m+[m[32m      if (this.totalShards !== Math.floor(this.totalShards)) {[m
[32m+[m[32m        throw new RangeError('Amount of shards must be an integer.');[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Whether shards should automatically respawn upon exiting[m
[32m+[m[32m     * @type {boolean}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.respawn = options.respawn;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * An array of arguments to pass to shards[m
[32m+[m[32m     * @type {string[]}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.shardArgs = options.shardArgs;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Arguments for the shard's process executable[m
[32m+[m[32m     * @type {?string[]}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.execArgv = options.execArgv;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Token to use for obtaining the automatic shard count, and passing to shards[m
[32m+[m[32m     * @type {?string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.token = options.token ? options.token.replace(/^Bot\s*/i, '') : null;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * A collection of shards that this manager has spawned[m
[32m+[m[32m     * @type {Collection<number, Shard>}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.shards = new Collection();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Spawns a single shard.[m
[32m+[m[32m   * @param {number} id The ID of the shard to spawn. **This is usually not necessary**[m
[32m+[m[32m   * @returns {Promise<Shard>}[m
[32m+[m[32m   */[m
[32m+[m[32m  createShard(id = this.shards.size) {[m
[32m+[m[32m    const shard = new Shard(this, id, this.shardArgs);[m
[32m+[m[32m    this.shards.set(id, shard);[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Emitted upon launching a shard.[m
[32m+[m[32m     * @event ShardingManager#launch[m
[32m+[m[32m     * @param {Shard} shard Shard that was launched[m
[32m+[m[32m     */[m
[32m+[m[32m    this.emit('launch', shard);[m
[32m+[m[32m    return Promise.resolve(shard);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Spawns multiple shards.[m
[32m+[m[32m   * @param {number} [amount=this.totalShards] Number of shards to spawn[m
[32m+[m[32m   * @param {number} [delay=7500] How long to wait in between spawning each shard (in milliseconds)[m
[32m+[m[32m   * @returns {Promise<Collection<number, Shard>>}[m
[32m+[m[32m   */[m
[32m+[m[32m  spawn(amount = this.totalShards, delay = 7500) {[m
[32m+[m[32m    if (amount === 'auto') {[m
[32m+[m[32m      return Util.fetchRecommendedShards(this.token).then(count => {[m
[32m+[m[32m        this.totalShards = count;[m
[32m+[m[32m        return this._spawn(count, delay);[m
[32m+[m[32m      });[m
[32m+[m[32m    } else {[m
[32m+[m[32m      if (typeof amount !== 'number' || isNaN(amount)) throw new TypeError('Amount of shards must be a number.');[m
[32m+[m[32m      if (amount < 1) throw new RangeError('Amount of shards must be at least 1.');[m
[32m+[m[32m      if (amount !== Math.floor(amount)) throw new TypeError('Amount of shards must be an integer.');[m
[32m+[m[32m      return this._spawn(amount, delay);[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Actually spawns shards, unlike that poser above >:([m
[32m+[m[32m   * @param {number} amount Number of shards to spawn[m
[32m+[m[32m   * @param {number} delay How long to wait in between spawning each shard (in milliseconds)[m
[32m+[m[32m   * @returns {Promise<Collection<number, Shard>>}[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  _spawn(amount, delay) {[m
[32m+[m[32m    return new Promise(resolve => {[m
[32m+[m[32m      if (this.shards.size >= amount) throw new Error(`Already spawned ${this.shards.size} shards.`);[m
[32m+[m[32m      this.totalShards = amount;[m
[32m+[m
[32m+[m[32m      this.createShard();[m
[32m+[m[32m      if (this.shards.size >= this.totalShards) {[m
[32m+[m[32m        resolve(this.shards);[m
[32m+[m[32m        return;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      if (delay <= 0) {[m
[32m+[m[32m        while (this.shards.size < this.totalShards) this.createShard();[m
[32m+[m[32m        resolve(this.shards);[m
[32m+[m[32m      } else {[m
[32m+[m[32m        const interval = setInterval(() => {[m
[32m+[m[32m          this.createShard();[m
[32m+[m[32m          if (this.shards.size >= this.totalShards) {[m
[32m+[m[32m            clearInterval(interval);[m
[32m+[m[32m            resolve(this.shards);[m
[32m+[m[32m          }[m
[32m+[m[32m        }, delay);[m
[32m+[m[32m      }[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Send a message to all shards.[m
[32m+[m[32m   * @param {*} message Message to be sent to the shards[m
[32m+[m[32m   * @returns {Promise<Shard[]>}[m
[32m+[m[32m   */[m
[32m+[m[32m  broadcast(message) {[m
[32m+[m[32m    const promises = [];[m
[32m+[m[32m    for (const shard of this.shards.values()) promises.push(shard.send(message));[m
[32m+[m[32m    return Promise.all(promises);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Evaluates a script on all shards, in the context of the Clients.[m
[32m+[m[32m   * @param {string} script JavaScript to run on each shard[m
[32m+[m[32m   * @returns {Promise<Array>} Results of the script execution[m
[32m+[m[32m   */[m
[32m+[m[32m  broadcastEval(script) {[m
[32m+[m[32m    const promises = [];[m
[32m+[m[32m    for (const shard of this.shards.values()) promises.push(shard.eval(script));[m
[32m+[m[32m    return Promise.all(promises);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Fetches a client property value of each shard.[m
[32m+[m[32m   * @param {string} prop Name of the client property to get, using periods for nesting[m
[32m+[m[32m   * @returns {Promise<Array>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * manager.fetchClientValues('guilds.size')[m
[32m+[m[32m   *   .then(results => {[m
[32m+[m[32m   *     console.log(`${results.reduce((prev, val) => prev + val, 0)} total guilds`);[m
[32m+[m[32m   *   })[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  fetchClientValues(prop) {[m
[32m+[m[32m    if (this.shards.size === 0) return Promise.reject(new Error('No shards have been spawned.'));[m
[32m+[m[32m    if (this.shards.size !== this.totalShards) return Promise.reject(new Error('Still spawning shards.'));[m
[32m+[m[32m    const promises = [];[m
[32m+[m[32m    for (const shard of this.shards.values()) promises.push(shard.fetchClientValue(prop));[m
[32m+[m[32m    return Promise.all(promises);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Kills all running shards and respawns them.[m
[32m+[m[32m   * @param {number} [shardDelay=5000] How long to wait between shards (in milliseconds)[m
[32m+[m[32m   * @param {number} [respawnDelay=500] How long to wait between killing a shard's process and restarting it[m
[32m+[m[32m   * (in milliseconds)[m
[32m+[m[32m   * @param {boolean} [waitForReady=true] Whether to wait for a shard to become ready before continuing to another[m
[32m+[m[32m   * @param {number} [currentShardIndex=0] The shard index to start respawning at[m
[32m+[m[32m   * @returns {Promise<Collection<number, Shard>>}[m
[32m+[m[32m   */[m
[32m+[m[32m  respawnAll(shardDelay = 5000, respawnDelay = 500, waitForReady = true, currentShardIndex = 0) {[m
[32m+[m[32m    let s = 0;[m
[32m+[m[32m    const shard = this.shards.get(currentShardIndex);[m
[32m+[m[32m    const promises = [shard.respawn(respawnDelay, waitForReady)];[m
[32m+[m[32m    if (++s < this.shards.size && shardDelay > 0) promises.push(Util.delayFor(shardDelay));[m
[32m+[m[32m    return Promise.all(promises).then(() => {[m
[32m+[m[32m      if (++currentShardIndex === this.shards.size) return this.shards;[m
[32m+[m[32m      return this.respawnAll(shardDelay, respawnDelay, waitForReady, currentShardIndex);[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = ShardingManager;[m
[1mdiff --git a/node_modules/discord.js/src/structures/Attachment.js b/node_modules/discord.js/src/structures/Attachment.js[m
[1mnew file mode 100644[m
[1mindex 0000000..216b61c[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/structures/Attachment.js[m
[36m@@ -0,0 +1,75 @@[m
[32m+[m[32m/**[m
[32m+[m[32m * Represents an attachment in a message.[m
[32m+[m[32m * @param {BufferResolvable|Stream} file The file[m
[32m+[m[32m * @param {string} [name] The name of the file, if any[m
[32m+[m[32m */[m
[32m+[m[32mclass Attachment {[m
[32m+[m[32m  constructor(file, name) {[m
[32m+[m[32m    this.file = null;[m
[32m+[m[32m    if (name) this.setAttachment(file, name);[m
[32m+[m[32m    else this._attach(file);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m    * The name of the file[m
[32m+[m[32m    * @type {?string}[m
[32m+[m[32m    * @readonly[m
[32m+[m[32m    */[m
[32m+[m[32m  get name() {[m
[32m+[m[32m    return this.file.name;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m    * The file[m
[32m+[m[32m    * @type {?BufferResolvable|Stream}[m
[32m+[m[32m    * @readonly[m
[32m+[m[32m    */[m
[32m+[m[32m  get attachment() {[m
[32m+[m[32m    return this.file.attachment;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m    * Set the file of this attachment.[m
[32m+[m[32m    * @param {BufferResolvable|Stream} file The file[m
[32m+[m[32m    * @param {string} name The name of the file[m
[32m+[m[32m    * @returns {Attachment} This attachment[m
[32m+[m[32m    */[m
[32m+[m[32m  setAttachment(file, name) {[m
[32m+[m[32m    this.file = { attachment: file, name };[m
[32m+[m[32m    return this;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m    * Set the file of this attachment.[m
[32m+[m[32m    * @param {BufferResolvable|Stream} attachment The file[m
[32m+[m[32m    * @returns {Attachment} This attachment[m
[32m+[m[32m    */[m
[32m+[m[32m  setFile(attachment) {[m
[32m+[m[32m    this.file = { attachment };[m
[32m+[m[32m    return this;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m    * Set the name of this attachment.[m
[32m+[m[32m    * @param {string} name The name of the image[m
[32m+[m[32m    * @returns {Attachment} This attachment[m
[32m+[m[32m    */[m
[32m+[m[32m  setName(name) {[m
[32m+[m[32m    this.file.name = name;[m
[32m+[m[32m    return this;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m    * Set the file of this attachment.[m
[32m+[m[32m    * @param {BufferResolvable|Stream} file The file[m
[32m+[m[32m    * @param {string} name The name of the file[m
[32m+[m[32m    * @returns {void}[m
[32m+[m[32m    * @private[m
[32m+[m[32m    */[m
[32m+[m[32m  _attach(file, name) {[m
[32m+[m[32m    if (typeof file === 'string') this.file = file;[m
[32m+[m[32m    else this.setAttachment(file, name);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = Attachment;[m
[1mdiff --git a/node_modules/discord.js/src/structures/CategoryChannel.js b/node_modules/discord.js/src/structures/CategoryChannel.js[m
[1mnew file mode 100644[m
[1mindex 0000000..9ba263a[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/structures/CategoryChannel.js[m
[36m@@ -0,0 +1,22 @@[m
[32m+[m[32mconst GuildChannel = require('./GuildChannel');[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Represents a guild category channel on Discord.[m
[32m+[m[32m * @extends {GuildChannel}[m
[32m+[m[32m */[m
[32m+[m[32mclass CategoryChannel extends GuildChannel {[m
[32m+[m[32m  constructor(guild, data) {[m
[32m+[m[32m    super(guild, data);[m
[32m+[m[32m    this.type = 'category';[m
[32m+[m[32m  }[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The channels that are part of this category[m
[32m+[m[32m   * @type {?Collection<Snowflake, GuildChannel>}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get children() {[m
[32m+[m[32m    return this.guild.channels.filter(c => c.parentID === this.id);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = CategoryChannel;[m
[1mdiff --git a/node_modules/discord.js/src/structures/Channel.js b/node_modules/discord.js/src/structures/Channel.js[m
[1mnew file mode 100644[m
[1mindex 0000000..732945d[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/structures/Channel.js[m
[36m@@ -0,0 +1,78 @@[m
[32m+[m[32mconst Snowflake = require('../util/Snowflake');[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Represents any channel on Discord.[m
[32m+[m[32m */[m
[32m+[m[32mclass Channel {[m
[32m+[m[32m  constructor(client, data) {[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The client that instantiated the Channel[m
[32m+[m[32m     * @name Channel#client[m
[32m+[m[32m     * @type {Client}[m
[32m+[m[32m     * @readonly[m
[32m+[m[32m     */[m
[32m+[m[32m    Object.defineProperty(this, 'client', { value: client });[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The type of the channel, either:[m
[32m+[m[32m     * * `dm` - a DM channel[m
[32m+[m[32m     * * `group` - a Group DM channel[m
[32m+[m[32m     * * `text` - a guild text channel[m
[32m+[m[32m     * * `voice` - a guild voice channel[m
[32m+[m[32m     * * `category` - a guild category channel[m
[32m+[m[32m     * * `news` - a guild news channel[m
[32m+[m[32m     * * `store` - a guild store channel[m
[32m+[m[32m     * @type {string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.type = null;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Whether the channel has been deleted[m
[32m+[m[32m     * @type {boolean}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.deleted = false;[m
[32m+[m
[32m+[m[32m    if (data) this.setup(data);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  setup(data) {[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The unique ID of the channel[m
[32m+[m[32m     * @type {Snowflake}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.id = data.id;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The timestamp the channel was created at[m
[32m+[m[32m   * @type {number}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get createdTimestamp() {[m
[32m+[m[32m    return Snowflake.deconstruct(this.id).timestamp;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The time the channel was created[m
[32m+[m[32m   * @type {Date}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get createdAt() {[m
[32m+[m[32m    return new Date(this.createdTimestamp);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Deletes the channel.[m
[32m+[m[32m   * @returns {Promise<Channel>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Delete the channel[m
[32m+[m[32m   * channel.delete()[m
[32m+[m[32m   *   .then(console.log)[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  delete() {[m
[32m+[m[32m    return this.client.rest.methods.deleteChannel(this);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = Channel;[m
[1mdiff --git a/node_modules/discord.js/src/structures/ClientUser.js b/node_modules/discord.js/src/structures/ClientUser.js[m
[1mnew file mode 100644[m
[1mindex 0000000..4ae8c6e[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/structures/ClientUser.js[m
[36m@@ -0,0 +1,447 @@[m
[32m+[m[32mconst User = require('./User');[m
[32m+[m[32mconst Collection = require('../util/Collection');[m
[32m+[m[32mconst ClientUserSettings = require('./ClientUserSettings');[m
[32m+[m[32mconst ClientUserGuildSettings = require('./ClientUserGuildSettings');[m
[32m+[m[32mconst Constants = require('../util/Constants');[m
[32m+[m[32mconst util = require('util');[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Represents the logged in client's Discord user.[m
[32m+[m[32m * @extends {User}[m
[32m+[m[32m */[m
[32m+[m[32mclass ClientUser extends User {[m
[32m+[m[32m  setup(data) {[m
[32m+[m[32m    super.setup(data);[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Whether or not this account has been verified[m
[32m+[m[32m     * @type {boolean}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.verified = data.verified;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The email of this account[m
[32m+[m[32m     * <warn>This is only filled when using a user account.</warn>[m
[32m+[m[32m     * @type {?string}[m
[32m+[m[32m     * @deprecated[m
[32m+[m[32m     */[m
[32m+[m[32m    this.email = data.email;[m
[32m+[m[32m    this.localPresence = {};[m
[32m+[m[32m    this._typing = new Map();[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * A Collection of friends for the logged in user[m
[32m+[m[32m     * <warn>This is only filled when using a user account.</warn>[m
[32m+[m[32m     * @type {Collection<Snowflake, User>}[m
[32m+[m[32m     * @deprecated[m
[32m+[m[32m     */[m
[32m+[m[32m    this.friends = new Collection();[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * A Collection of blocked users for the logged in user[m
[32m+[m[32m     * <warn>This is only filled when using a user account.</warn>[m
[32m+[m[32m     * @type {Collection<Snowflake, User>}[m
[32m+[m[32m     * @deprecated[m
[32m+[m[32m     */[m
[32m+[m[32m    this.blocked = new Collection();[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * A Collection of notes for the logged in user[m
[32m+[m[32m     * <warn>This is only filled when using a user account.</warn>[m
[32m+[m[32m     * @type {Collection<Snowflake, string>}[m
[32m+[m[32m     * @deprecated[m
[32m+[m[32m     */[m
[32m+[m[32m    this.notes = new Collection();[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * If the user has Discord premium (nitro)[m
[32m+[m[32m     * <warn>This is only filled when using a user account.</warn>[m
[32m+[m[32m     * @type {?boolean}[m
[32m+[m[32m     * @deprecated[m
[32m+[m[32m     */[m
[32m+[m[32m    this.premium = typeof data.premium === 'boolean' ? data.premium : null;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * If the user has MFA enabled on their account[m
[32m+[m[32m     * @type {boolean}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.mfaEnabled = data.mfa_enabled;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * If the user has ever used a mobile device on Discord[m
[32m+[m[32m     * <warn>This is only filled when using a user account.</warn>[m
[32m+[m[32m     * @type {?boolean}[m
[32m+[m[32m     * @deprecated[m
[32m+[m[32m     */[m
[32m+[m[32m    this.mobile = typeof data.mobile === 'boolean' ? data.mobile : null;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Various settings for this user[m
[32m+[m[32m     * <warn>This is only filled when using a user account.</warn>[m
[32m+[m[32m     * @type {?ClientUserSettings}[m
[32m+[m[32m     * @deprecated[m
[32m+[m[32m     */[m
[32m+[m[32m    this.settings = data.user_settings ? new ClientUserSettings(this, data.user_settings) : null;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * All of the user's guild settings[m
[32m+[m[32m     * <warn>This is only filled when using a user account</warn>[m
[32m+[m[32m     * @type {Collection<Snowflake, ClientUserGuildSettings>}[m
[32m+[m[32m     * @deprecated[m
[32m+[m[32m     */[m
[32m+[m[32m    this.guildSettings = new Collection();[m
[32m+[m[32m    if (data.user_guild_settings) {[m
[32m+[m[32m      for (const settings of data.user_guild_settings) {[m
[32m+[m[32m        this.guildSettings.set(settings.guild_id, new ClientUserGuildSettings(settings, this.client));[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  edit(data) {[m
[32m+[m[32m    return this.client.rest.methods.updateCurrentUser(data);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Set the username of the logged in client.[m
[32m+[m[32m   * <info>Changing usernames in Discord is heavily rate limited, with only 2 requests[m
[32m+[m[32m   * every hour. Use this sparingly!</info>[m
[32m+[m[32m   * @param {string} username The new username[m
[32m+[m[32m   * @param {string} [password] Current password (only for user accounts)[m
[32m+[m[32m   * @returns {Promise<ClientUser>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Set username[m
[32m+[m[32m   * client.user.setUsername('discordjs')[m
[32m+[m[32m   *   .then(user => console.log(`My new username is ${user.username}`))[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  setUsername(username, password) {[m
[32m+[m[32m    return this.client.rest.methods.updateCurrentUser({ username }, password);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Changes the email for the client user's account.[m
[32m+[m[32m   * <warn>This is only available when using a user account.</warn>[m
[32m+[m[32m   * @param {string} email New email to change to[m
[32m+[m[32m   * @param {string} password Current password[m
[32m+[m[32m   * @returns {Promise<ClientUser>}[m
[32m+[m[32m   * @deprecated[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Set email[m
[32m+[m[32m   * client.user.setEmail('bob@gmail.com', 'some amazing password 123')[m
[32m+[m[32m   *   .then(user => console.log(`My new email is ${user.email}`))[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  setEmail(email, password) {[m
[32m+[m[32m    return this.client.rest.methods.updateCurrentUser({ email }, password);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Changes the password for the client user's account.[m
[32m+[m[32m   * <warn>This is only available when using a user account.</warn>[m
[32m+[m[32m   * @param {string} newPassword New password to change to[m
[32m+[m[32m   * @param {string} oldPassword Current password[m
[32m+[m[32m   * @returns {Promise<ClientUser>}[m
[32m+[m[32m   * @deprecated[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Set password[m
[32m+[m[32m   * client.user.setPassword('some new amazing password 456', 'some amazing password 123')[m
[32m+[m[32m   *   .then(user => console.log('New password set!'))[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  setPassword(newPassword, oldPassword) {[m
[32m+[m[32m    return this.client.rest.methods.updateCurrentUser({ password: newPassword }, oldPassword);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Set the avatar of the logged in client.[m
[32m+[m[32m   * @param {BufferResolvable|Base64Resolvable} avatar The new avatar[m
[32m+[m[32m   * @returns {Promise<ClientUser>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Set avatar[m
[32m+[m[32m   * client.user.setAvatar('./avatar.png')[m
[32m+[m[32m   *   .then(user => console.log(`New avatar set!`))[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  setAvatar(avatar) {[m
[32m+[m[32m    return this.client.resolver.resolveImage(avatar).then(data =>[m
[32m+[m[32m      this.client.rest.methods.updateCurrentUser({ avatar: data })[m
[32m+[m[32m    );[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Data resembling a raw Discord presence.[m
[32m+[m[32m   * @typedef {Object} PresenceData[m
[32m+[m[32m   * @property {PresenceStatus} [status] Status of the user[m
[32m+[m[32m   * @property {boolean} [afk] Whether the user is AFK[m
[32m+[m[32m   * @property {Object} [game] Game the user is playing[m
[32m+[m[32m   * @property {string} [game.name] Name of the game[m
[32m+[m[32m   * @property {string} [game.url] Twitch stream URL[m
[32m+[m[32m   * @property {?ActivityType|number} [game.type] Type of the activity[m
[32m+[m[32m   */[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets the full presence of the client user.[m
[32m+[m[32m   * @param {PresenceData} data Data for the presence[m
[32m+[m[32m   * @returns {Promise<ClientUser>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Set the client user's presence[m
[32m+[m[32m   * client.user.setPresence({ game: { name: 'with discord.js' }, status: 'idle' })[m
[32m+[m[32m   *   .then(console.log)[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  setPresence(data) {[m
[32m+[m[32m    // {"op":3,"d":{"status":"dnd","since":0,"game":null,"afk":false}}[m
[32m+[m[32m    return new Promise(resolve => {[m
[32m+[m[32m      let status = this.localPresence.status || this.presence.status;[m
[32m+[m[32m      let game = this.localPresence.game;[m
[32m+[m[32m      let afk = this.localPresence.afk || this.presence.afk;[m
[32m+[m
[32m+[m[32m      if (!game && this.presence.game) {[m
[32m+[m[32m        game = {[m
[32m+[m[32m          name: this.presence.game.name,[m
[32m+[m[32m          type: this.presence.game.type,[m
[32m+[m[32m          url: this.presence.game.url,[m
[32m+[m[32m        };[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      if (data.status) {[m
[32m+[m[32m        if (typeof data.status !== 'string') throw new TypeError('Status must be a string');[m
[32m+[m[32m        if (this.bot) {[m
[32m+[m[32m          status = data.status;[m
[32m+[m[32m        } else {[m
[32m+[m[32m          this.settings.update(Constants.UserSettingsMap.status, data.status);[m
[32m+[m[32m          status = 'invisible';[m
[32m+[m[32m        }[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      if (data.game) {[m
[32m+[m[32m        game = data.game;[m
[32m+[m[32m        game.type = game.url && typeof game.type === 'undefined' ? 1 : game.type || 0;[m
[32m+[m[32m        if (typeof game.type === 'string') {[m
[32m+[m[32m          game.type = Constants.ActivityTypes.indexOf(game.type.toUpperCase());[m
[32m+[m[32m        }[m
[32m+[m[32m      } else if (typeof data.game !== 'undefined') {[m
[32m+[m[32m        game = null;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      if (typeof data.afk !== 'undefined') afk = data.afk;[m
[32m+[m[32m      afk = Boolean(afk);[m
[32m+[m
[32m+[m[32m      this.localPresence = { status, game, afk };[m
[32m+[m[32m      this.localPresence.since = 0;[m
[32m+[m[32m      this.localPresence.game = this.localPresence.game || null;[m
[32m+[m
[32m+[m[32m      this.client.ws.send({[m
[32m+[m[32m        op: 3,[m
[32m+[m[32m        d: this.localPresence,[m
[32m+[m[32m      });[m
[32m+[m
[32m+[m[32m      this.client._setPresence(this.id, this.localPresence);[m
[32m+[m
[32m+[m[32m      resolve(this);[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * A user's status. Must be one of:[m
[32m+[m[32m   * * `online`[m
[32m+[m[32m   * * `idle`[m
[32m+[m[32m   * * `invisible`[m
[32m+[m[32m   * * `dnd` (do not disturb)[m
[32m+[m[32m   * @typedef {string} PresenceStatus[m
[32m+[m[32m   */[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets the status of the client user.[m
[32m+[m[32m   * @param {PresenceStatus} status Status to change to[m
[32m+[m[32m   * @returns {Promise<ClientUser>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Set the client user's status[m
[32m+[m[32m   * client.user.setStatus('idle')[m
[32m+[m[32m   *   .then(console.log)[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  setStatus(status) {[m
[32m+[m[32m    return this.setPresence({ status });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets the game the client user is playing.[m
[32m+[m[32m   * @param {?string} game Game being played[m
[32m+[m[32m   * @param {?string} [streamingURL] Twitch stream URL[m
[32m+[m[32m   * @returns {Promise<ClientUser>}[m
[32m+[m[32m   * @deprecated[m
[32m+[m[32m   */[m
[32m+[m[32m  setGame(game, streamingURL) {[m
[32m+[m[32m    if (!game) return this.setPresence({ game: null });[m
[32m+[m[32m    return this.setPresence({[m
[32m+[m[32m      game: {[m
[32m+[m[32m        name: game,[m
[32m+[m[32m        url: streamingURL,[m
[32m+[m[32m      },[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets the activity the client user is playing.[m
[32m+[m[32m   * @param {?string} name Activity being played[m
[32m+[m[32m   * @param {Object} [options] Options for setting the activity[m
[32m+[m[32m   * @param {string} [options.url] Twitch stream URL[m
[32m+[m[32m   * @param {ActivityType|number} [options.type] Type of the activity[m
[32m+[m[32m   * @returns {Promise<Presence>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * client.user.setActivity('YouTube', { type: 'WATCHING' })[m
[32m+[m[32m   *   .then(presence => console.log(`Activity set to ${presence.game ? presence.game.name : 'none'}`))[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  setActivity(name, { url, type } = {}) {[m
[32m+[m[32m    if (!name) return this.setPresence({ game: null });[m
[32m+[m[32m    return this.setPresence({[m
[32m+[m[32m      game: { name, type, url },[m
[32m+[m[32m    }).then(clientUser => clientUser.presence);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets/removes the AFK flag for the client user.[m
[32m+[m[32m   * @param {boolean} afk Whether or not the user is AFK[m
[32m+[m[32m   * @returns {Promise<ClientUser>}[m
[32m+[m[32m   */[m
[32m+[m[32m  setAFK(afk) {[m
[32m+[m[32m    return this.setPresence({ afk });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Fetches messages that mentioned the client's user.[m
[32m+[m[32m   * <warn>This is only available when using a user account.</warn>[m
[32m+[m[32m   * @param {Object} [options] Options for the fetch[m
[32m+[m[32m   * @param {number} [options.limit=25] Maximum number of mentions to retrieve[m
[32m+[m[32m   * @param {boolean} [options.roles=true] Whether to include role mentions[m
[32m+[m[32m   * @param {boolean} [options.everyone=true] Whether to include everyone/here mentions[m
[32m+[m[32m   * @param {GuildResolvable} [options.guild] Limit the search to a specific guild[m
[32m+[m[32m   * @returns {Promise<Message[]>}[m
[32m+[m[32m   * @deprecated[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Fetch mentions[m
[32m+[m[32m   * client.user.fetchMentions()[m
[32m+[m[32m   *   .then(console.log)[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Fetch mentions from a guild[m
[32m+[m[32m   * client.user.fetchMentions({ guild: '222078108977594368' })[m
[32m+[m[32m   *   .then(console.log)[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  fetchMentions(options = {}) {[m
[32m+[m[32m    return this.client.rest.methods.fetchMentions(options);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Send a friend request.[m
[32m+[m[32m   * <warn>This is only available when using a user account.</warn>[m
[32m+[m[32m   * @param {UserResolvable} user The user to send the friend request to[m
[32m+[m[32m   * @returns {Promise<User>} The user the friend request was sent to[m
[32m+[m[32m   * @deprecated[m
[32m+[m[32m   */[m
[32m+[m[32m  addFriend(user) {[m
[32m+[m[32m    user = this.client.resolver.resolveUser(user);[m
[32m+[m[32m    return this.client.rest.methods.addFriend(user);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Remove a friend.[m
[32m+[m[32m   * <warn>This is only available when using a user account.</warn>[m
[32m+[m[32m   * @param {UserResolvable} user The user to remove from your friends[m
[32m+[m[32m   * @returns {Promise<User>} The user that was removed[m
[32m+[m[32m   * @deprecated[m
[32m+[m[32m   */[m
[32m+[m[32m  removeFriend(user) {[m
[32m+[m[32m    user = this.client.resolver.resolveUser(user);[m
[32m+[m[32m    return this.client.rest.methods.removeFriend(user);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Creates a guild.[m
[32m+[m[32m   * <warn>This is only available to bots in less than 10 guilds and user accounts.</warn>[m
[32m+[m[32m   * @param {string} name The name of the guild[m
[32m+[m[32m   * @param {string} [region] The region for the server[m
[32m+[m[32m   * @param {BufferResolvable|Base64Resolvable} [icon=null] The icon for the guild[m
[32m+[m[32m   * @returns {Promise<Guild>} The guild that was created[m
[32m+[m[32m   */[m
[32m+[m[32m  createGuild(name, region, icon = null) {[m
[32m+[m[32m    if (typeof icon === 'string' && icon.startsWith('data:')) {[m
[32m+[m[32m      return this.client.rest.methods.createGuild({ name, icon, region });[m
[32m+[m[32m    } else {[m
[32m+[m[32m      return this.client.resolver.resolveImage(icon).then(data =>[m
[32m+[m[32m        this.client.rest.methods.createGuild({ name, icon: data, region })[m
[32m+[m[32m      );[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * An object containing either a user or access token, and an optional nickname.[m
[32m+[m[32m   * @typedef {Object} GroupDMRecipientOptions[m
[32m+[m[32m   * @property {UserResolvable|Snowflake} [user] User to add to the Group DM[m
[32m+[m[32m   * (only available if a user is creating the DM)[m
[32m+[m[32m   * @property {string} [accessToken] Access token to use to add a user to the Group DM[m
[32m+[m[32m   * (only available if a bot is creating the DM)[m
[32m+[m[32m   * @property {string} [nick] Permanent nickname (only available if a bot is creating the DM)[m
[32m+[m[32m   */[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Creates a Group DM.[m
[32m+[m[32m   * @param {GroupDMRecipientOptions[]} recipients The recipients[m
[32m+[m[32m   * @returns {Promise<GroupDMChannel>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Create a Group DM with a token provided from OAuth[m
[32m+[m[32m   * client.user.createGroupDM([{[m
[32m+[m[32m   *   user: '66564597481480192',[m
[32m+[m[32m   *   accessToken: token[m
[32m+[m[32m   * }])[m
[32m+[m[32m   *   .then(console.log)[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  createGroupDM(recipients) {[m
[32m+[m[32m    return this.client.rest.methods.createGroupDM({[m
[32m+[m[32m      recipients: recipients.map(u => this.client.resolver.resolveUserID(u.user)),[m
[32m+[m[32m      accessTokens: recipients.map(u => u.accessToken),[m
[32m+[m[32m      nicks: recipients.reduce((o, r) => {[m
[32m+[m[32m        if (r.nick) o[r.user ? r.user.id : r.id] = r.nick;[m
[32m+[m[32m        return o;[m
[32m+[m[32m      }, {}),[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Accepts an invite to join a guild.[m
[32m+[m[32m   * <warn>This is only available when using a user account.</warn>[m
[32m+[m[32m   * @param {Invite|string} invite Invite or code to accept[m
[32m+[m[32m   * @returns {Promise<Guild>} Joined guild[m
[32m+[m[32m   * @deprecated[m
[32m+[m[32m   */[m
[32m+[m[32m  acceptInvite(invite) {[m
[32m+[m[32m    return this.client.rest.methods.acceptInvite(invite);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mClientUser.prototype.acceptInvite =[m
[32m+[m[32m  util.deprecate(ClientUser.prototype.acceptInvite, 'ClientUser#acceptInvite: userbot methods will be removed');[m
[32m+[m
[32m+[m[32mClientUser.prototype.setGame =[m
[32m+[m[32m  util.deprecate(ClientUser.prototype.setGame, 'ClientUser#setGame: use ClientUser#setActivity instead');[m
[32m+[m
[32m+[m[32mClientUser.prototype.addFriend =[m
[32m+[m[32m  util.deprecate(ClientUser.prototype.addFriend, 'ClientUser#addFriend: userbot methods will be removed');[m
[32m+[m
[32m+[m[32mClientUser.prototype.removeFriend =[m
[32m+[m[32m  util.deprecate(ClientUser.prototype.removeFriend, 'ClientUser#removeFriend: userbot methods will be removed');[m
[32m+[m
[32m+[m[32mClientUser.prototype.setPassword =[m
[32m+[m[32m  util.deprecate(ClientUser.prototype.setPassword, 'ClientUser#setPassword: userbot methods will be removed');[m
[32m+[m
[32m+[m[32mClientUser.prototype.setEmail =[m
[32m+[m[32m  util.deprecate(ClientUser.prototype.setEmail, 'ClientUser#setEmail: userbot methods will be removed');[m
[32m+[m
[32m+[m[32mClientUser.prototype.fetchMentions =[m
[32m+[m[32m  util.deprecate(ClientUser.prototype.fetchMentions, 'ClientUser#fetchMentions: userbot methods will be removed');[m
[32m+[m
[32m+[m[32mmodule.exports = ClientUser;[m
[1mdiff --git a/node_modules/discord.js/src/structures/ClientUserChannelOverride.js b/node_modules/discord.js/src/structures/ClientUserChannelOverride.js[m
[1mnew file mode 100644[m
[1mindex 0000000..93efa45[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/structures/ClientUserChannelOverride.js[m
[36m@@ -0,0 +1,30 @@[m
[32m+[m[32mconst Constants = require('../util/Constants');[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * A wrapper around the ClientUser's channel overrides.[m
[32m+[m[32m */[m
[32m+[m[32mclass ClientUserChannelOverride {[m
[32m+[m[32m  constructor(data) {[m
[32m+[m[32m    this.patch(data);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Patch the data contained in this class with new partial data.[m
[32m+[m[32m   * @param {Object} data Data to patch this with[m
[32m+[m[32m   * @returns {void}[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  patch(data) {[m
[32m+[m[32m    for (const key of Object.keys(Constants.UserChannelOverrideMap)) {[m
[32m+[m[32m      const value = Constants.UserChannelOverrideMap[key];[m
[32m+[m[32m      if (!data.hasOwnProperty(key)) continue;[m
[32m+[m[32m      if (typeof value === 'function') {[m
[32m+[m[32m        this[value.name] = value(data[key]);[m
[32m+[m[32m      } else {[m
[32m+[m[32m        this[value] = data[key];[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = ClientUserChannelOverride;[m
[1mdiff --git a/node_modules/discord.js/src/structures/ClientUserGuildSettings.js b/node_modules/discord.js/src/structures/ClientUserGuildSettings.js[m
[1mnew file mode 100644[m
[1mindex 0000000..5a28747[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/structures/ClientUserGuildSettings.js[m
[36m@@ -0,0 +1,60 @@[m
[32m+[m[32mconst Constants = require('../util/Constants');[m
[32m+[m[32mconst Collection = require('../util/Collection');[m
[32m+[m[32mconst ClientUserChannelOverride = require('./ClientUserChannelOverride');[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * A wrapper around the ClientUser's guild settings.[m
[32m+[m[32m */[m
[32m+[m[32mclass ClientUserGuildSettings {[m
[32m+[m[32m  constructor(data, client) {[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The client that created the instance of the ClientUserGuildSettings[m
[32m+[m[32m     * @name ClientUserGuildSettings#client[m
[32m+[m[32m     * @type {Client}[m
[32m+[m[32m     * @readonly[m
[32m+[m[32m     */[m
[32m+[m[32m    Object.defineProperty(this, 'client', { value: client });[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The ID of the guild this settings are for[m
[32m+[m[32m     * @type {Snowflake}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.guildID = data.guild_id;[m
[32m+[m[32m    this.channelOverrides = new Collection();[m
[32m+[m[32m    this.patch(data);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Patch the data contained in this class with new partial data.[m
[32m+[m[32m   * @param {Object} data Data to patch this with[m
[32m+[m[32m   * @returns {void}[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  patch(data) {[m
[32m+[m[32m    for (const key of Object.keys(Constants.UserGuildSettingsMap)) {[m
[32m+[m[32m      const value = Constants.UserGuildSettingsMap[key];[m
[32m+[m[32m      if (!data.hasOwnProperty(key)) continue;[m
[32m+[m[32m      if (key === 'channel_overrides') {[m
[32m+[m[32m        for (const channel of data[key]) {[m
[32m+[m[32m          this.channelOverrides.set(channel.channel_id,[m
[32m+[m[32m            new ClientUserChannelOverride(channel));[m
[32m+[m[32m        }[m
[32m+[m[32m      } else if (typeof value === 'function') {[m
[32m+[m[32m        this[value.name] = value(data[key]);[m
[32m+[m[32m      } else {[m
[32m+[m[32m        this[value] = data[key];[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Update a specific property of the guild settings.[m
[32m+[m[32m   * @param {string} name Name of property[m
[32m+[m[32m   * @param {value} value Value to patch[m
[32m+[m[32m   * @returns {Promise<Object>}[m
[32m+[m[32m   */[m
[32m+[m[32m  update(name, value) {[m
[32m+[m[32m    return this.client.rest.methods.patchClientUserGuildSettings(this.guildID, { [name]: value });[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = ClientUserGuildSettings;[m
[1mdiff --git a/node_modules/discord.js/src/structures/ClientUserSettings.js b/node_modules/discord.js/src/structures/ClientUserSettings.js[m
[1mnew file mode 100644[m
[1mindex 0000000..6b18c03[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/structures/ClientUserSettings.js[m
[36m@@ -0,0 +1,80 @@[m
[32m+[m[32mconst Constants = require('../util/Constants');[m
[32m+[m[32mconst Util = require('../util/Util');[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * A wrapper around the ClientUser's settings.[m
[32m+[m[32m */[m
[32m+[m[32mclass ClientUserSettings {[m
[32m+[m[32m  constructor(user, data) {[m
[32m+[m[32m    this.user = user;[m
[32m+[m[32m    this.patch(data);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Patch the data contained in this class with new partial data.[m
[32m+[m[32m   * @param {Object} data Data to patch this with[m
[32m+[m[32m   * @returns {void}[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  patch(data) {[m
[32m+[m[32m    for (const key of Object.keys(Constants.UserSettingsMap)) {[m
[32m+[m[32m      const value = Constants.UserSettingsMap[key];[m
[32m+[m[32m      if (!data.hasOwnProperty(key)) continue;[m
[32m+[m[32m      if (typeof value === 'function') {[m
[32m+[m[32m        this[value.name] = value(data[key]);[m
[32m+[m[32m      } else {[m
[32m+[m[32m        this[value] = data[key];[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Update a specific property of of user settings.[m
[32m+[m[32m   * @param {string} name Name of property[m
[32m+[m[32m   * @param {*} value Value to patch[m
[32m+[m[32m   * @returns {Promise<Object>}[m
[32m+[m[32m   */[m
[32m+[m[32m  update(name, value) {[m
[32m+[m[32m    return this.user.client.rest.methods.patchUserSettings({ [name]: value });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets the position at which this guild will appear in the Discord client.[m
[32m+[m[32m   * @param {Guild} guild The guild to move[m
[32m+[m[32m   * @param {number} position Absolute or relative position[m
[32m+[m[32m   * @param {boolean} [relative=false] Whether to position relatively or absolutely[m
[32m+[m[32m   * @returns {Promise<Guild>}[m
[32m+[m[32m   */[m
[32m+[m[32m  setGuildPosition(guild, position, relative) {[m
[32m+[m[32m    const temp = Object.assign([], this.guildPositions);[m
[32m+[m[32m    Util.moveElementInArray(temp, guild.id, position, relative);[m
[32m+[m[32m    return this.update('guild_positions', temp).then(() => guild);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Add a guild to the list of restricted guilds.[m
[32m+[m[32m   * @param {Guild} guild The guild to add[m
[32m+[m[32m   * @returns {Promise<Guild>}[m
[32m+[m[32m   */[m
[32m+[m[32m  addRestrictedGuild(guild) {[m
[32m+[m[32m    const temp = Object.assign([], this.restrictedGuilds);[m
[32m+[m[32m    if (temp.includes(guild.id)) return Promise.reject(new Error('Guild is already restricted'));[m
[32m+[m[32m    temp.push(guild.id);[m
[32m+[m[32m    return this.update('restricted_guilds', temp).then(() => guild);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Remove a guild from the list of restricted guilds.[m
[32m+[m[32m   * @param {Guild} guild The guild to remove[m
[32m+[m[32m   * @returns {Promise<Guild>}[m
[32m+[m[32m   */[m
[32m+[m[32m  removeRestrictedGuild(guild) {[m
[32m+[m[32m    const temp = Object.assign([], this.restrictedGuilds);[m
[32m+[m[32m    const index = temp.indexOf(guild.id);[m
[32m+[m[32m    if (index < 0) return Promise.reject(new Error('Guild is not restricted'));[m
[32m+[m[32m    temp.splice(index, 1);[m
[32m+[m[32m    return this.update('restricted_guilds', temp).then(() => guild);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = ClientUserSettings;[m
[1mdiff --git a/node_modules/discord.js/src/structures/DMChannel.js b/node_modules/discord.js/src/structures/DMChannel.js[m
[1mnew file mode 100644[m
[1mindex 0000000..0a6a3d9[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/structures/DMChannel.js[m
[36m@@ -0,0 +1,76 @@[m
[32m+[m[32mconst Channel = require('./Channel');[m
[32m+[m[32mconst TextBasedChannel = require('./interfaces/TextBasedChannel');[m
[32m+[m[32mconst Collection = require('../util/Collection');[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Represents a direct message channel between two users.[m
[32m+[m[32m * @extends {Channel}[m
[32m+[m[32m * @implements {TextBasedChannel}[m
[32m+[m[32m */[m
[32m+[m[32mclass DMChannel extends Channel {[m
[32m+[m[32m  constructor(client, data) {[m
[32m+[m[32m    super(client, data);[m
[32m+[m[32m    this.type = 'dm';[m
[32m+[m[32m    this.messages = new Collection();[m
[32m+[m[32m    this._typing = new Map();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  setup(data) {[m
[32m+[m[32m    super.setup(data);[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The recipient on the other end of the DM[m
[32m+[m[32m     * @type {User}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.recipient = this.client.dataManager.newUser(data.recipients[0]);[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The ID of the last message in the channel, if one was sent[m
[32m+[m[32m     * @type {?Snowflake}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.lastMessageID = data.last_message_id;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The timestamp when the last pinned message was pinned, if there was one[m
[32m+[m[32m     * @type {?number}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.lastPinTimestamp = data.last_pin_timestamp ? new Date(data.last_pin_timestamp).getTime() : null;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * When concatenated with a string, this automatically concatenates the recipient's mention instead of the[m
[32m+[m[32m   * DM channel object.[m
[32m+[m[32m   * @returns {string}[m
[32m+[m[32m   */[m
[32m+[m[32m  toString() {[m
[32m+[m[32m    return this.recipient.toString();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  // These are here only for documentation purposes - they are implemented by TextBasedChannel[m
[32m+[m[32m  /* eslint-disable no-empty-function */[m
[32m+[m[32m  get lastPinAt() {}[m
[32m+[m[32m  send() {}[m
[32m+[m[32m  sendMessage() {}[m
[32m+[m[32m  sendEmbed() {}[m
[32m+[m[32m  sendFile() {}[m
[32m+[m[32m  sendFiles() {}[m
[32m+[m[32m  sendCode() {}[m
[32m+[m[32m  fetchMessage() {}[m
[32m+[m[32m  fetchMessages() {}[m
[32m+[m[32m  fetchPinnedMessages() {}[m
[32m+[m[32m  search() {}[m
[32m+[m[32m  startTyping() {}[m
[32m+[m[32m  stopTyping() {}[m
[32m+[m[32m  get typing() {}[m
[32m+[m[32m  get typingCount() {}[m
[32m+[m[32m  createCollector() {}[m
[32m+[m[32m  createMessageCollector() {}[m
[32m+[m[32m  awaitMessages() {}[m
[32m+[m[32m  // Doesn't work on DM channels; bulkDelete() {}[m
[32m+[m[32m  acknowledge() {}[m
[32m+[m[32m  _cacheMessage() {}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mTextBasedChannel.applyToClass(DMChannel, true, ['bulkDelete']);[m
[32m+[m
[32m+[m[32mmodule.exports = DMChannel;[m
[1mdiff --git a/node_modules/discord.js/src/structures/Emoji.js b/node_modules/discord.js/src/structures/Emoji.js[m
[1mnew file mode 100644[m
[1mindex 0000000..ef332fe[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/structures/Emoji.js[m
[36m@@ -0,0 +1,256 @@[m
[32m+[m[32mconst Constants = require('../util/Constants');[m
[32m+[m[32mconst Collection = require('../util/Collection');[m
[32m+[m[32mconst Permissions = require('../util/Permissions');[m
[32m+[m[32mconst Snowflake = require('../util/Snowflake');[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Represents a custom emoji.[m
[32m+[m[32m */[m
[32m+[m[32mclass Emoji {[m
[32m+[m[32m  constructor(guild, data) {[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The client that instantiated this object[m
[32m+[m[32m     * @name Emoji#client[m
[32m+[m[32m     * @type {Client}[m
[32m+[m[32m     * @readonly[m
[32m+[m[32m     */[m
[32m+[m[32m    Object.defineProperty(this, 'client', { value: guild.client });[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The guild this emoji is part of[m
[32m+[m[32m     * @type {Guild}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.guild = guild;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Whether this emoji has been deleted[m
[32m+[m[32m     * @type {boolean}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.deleted = false;[m
[32m+[m
[32m+[m[32m    this.setup(data);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  setup(data) {[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The ID of the emoji[m
[32m+[m[32m     * @type {Snowflake}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.id = data.id;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The name of the emoji[m
[32m+[m[32m     * @type {string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.name = data.name;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Whether or not this emoji requires colons surrounding it[m
[32m+[m[32m     * @type {boolean}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.requiresColons = data.require_colons;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Whether this emoji is managed by an external service[m
[32m+[m[32m     * @type {boolean}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.managed = data.managed;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Whether this emoji is animated[m
[32m+[m[32m     * @type {boolean}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.animated = data.animated;[m
[32m+[m
[32m+[m[32m    this._roles = data.roles;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The timestamp the emoji was created at[m
[32m+[m[32m   * @type {number}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get createdTimestamp() {[m
[32m+[m[32m    return Snowflake.deconstruct(this.id).timestamp;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The time the emoji was created[m
[32m+[m[32m   * @type {Date}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get createdAt() {[m
[32m+[m[32m    return new Date(this.createdTimestamp);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Whether the emoji is deletable by the client user[m
[32m+[m[32m   * @type {boolean}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get deletable() {[m
[32m+[m[32m    return !this.managed && this.guild.me.hasPermission(Permissions.FLAGS.MANAGE_EMOJIS);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * A collection of roles this emoji is active for (empty if all), mapped by role ID[m
[32m+[m[32m   * @type {Collection<Snowflake, Role>}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get roles() {[m
[32m+[m[32m    const roles = new Collection();[m
[32m+[m[32m    for (const role of this._roles) {[m
[32m+[m[32m      if (this.guild.roles.has(role)) roles.set(role, this.guild.roles.get(role));[m
[32m+[m[32m    }[m
[32m+[m[32m    return roles;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The URL to the emoji file[m
[32m+[m[32m   * @type {string}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get url() {[m
[32m+[m[32m    return Constants.Endpoints.CDN(this.client.options.http.cdn).Emoji(this.id, this.animated ? 'gif' : 'png');[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The identifier of this emoji, used for message reactions[m
[32m+[m[32m   * @type {string}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get identifier() {[m
[32m+[m[32m    if (this.id) return `${this.name}:${this.id}`;[m
[32m+[m[32m    return encodeURIComponent(this.name);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Data for editing an emoji.[m
[32m+[m[32m   * @typedef {Object} EmojiEditData[m
[32m+[m[32m   * @property {string} [name] The name of the emoji[m
[32m+[m[32m   * @property {Collection<Snowflake, Role>|Array<Snowflake|Role>} [roles] Roles to restrict emoji to[m
[32m+[m[32m   */[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Edits the emoji.[m
[32m+[m[32m   * @param {EmojiEditData} data The new data for the emoji[m
[32m+[m[32m   * @param {string} [reason] Reason for editing this emoji[m
[32m+[m[32m   * @returns {Promise<Emoji>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Edit an emoji[m
[32m+[m[32m   * emoji.edit({name: 'newemoji'})[m
[32m+[m[32m   *   .then(e => console.log(`Edited emoji ${e}`))[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  edit(data, reason) {[m
[32m+[m[32m    return this.client.rest.methods.updateEmoji(this, data, reason);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Set the name of the emoji.[m
[32m+[m[32m   * @param {string} name The new name for the emoji[m
[32m+[m[32m   * @param {string} [reason] The reason for changing the emoji's name[m
[32m+[m[32m   * @returns {Promise<Emoji>}[m
[32m+[m[32m   */[m
[32m+[m[32m  setName(name, reason) {[m
[32m+[m[32m    return this.edit({ name }, reason);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Fetches the author for this emoji[m
[32m+[m[32m   * @returns {Promise<User>}[m
[32m+[m[32m   */[m
[32m+[m[32m  fetchAuthor() {[m
[32m+[m[32m    if (this.managed) return Promise.reject(new Error('Emoji is managed and has no Author.'));[m
[32m+[m[32m    if (!this.guild.me.permissions.has(Permissions.FLAGS.MANAGE_EMOJIS)) {[m
[32m+[m[32m      return Promise.reject([m
[32m+[m[32m        new Error(`Client must have Manage Emoji permission in guild ${this.guild} to see emoji authors.`)[m
[32m+[m[32m      );[m
[32m+[m[32m    }[m
[32m+[m[32m    return this.client.rest.makeRequest('get', Constants.Endpoints.Guild(this.guild).Emoji(this.id), true)[m
[32m+[m[32m      .then(emoji => this.client.dataManager.newUser(emoji.user));[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Add a role to the list of roles that can use this emoji.[m
[32m+[m[32m   * @param {Role} role The role to add[m
[32m+[m[32m   * @returns {Promise<Emoji>}[m
[32m+[m[32m   */[m
[32m+[m[32m  addRestrictedRole(role) {[m
[32m+[m[32m    return this.addRestrictedRoles([role]);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Add multiple roles to the list of roles that can use this emoji.[m
[32m+[m[32m   * @param {Role[]} roles Roles to add[m
[32m+[m[32m   * @returns {Promise<Emoji>}[m
[32m+[m[32m   */[m
[32m+[m[32m  addRestrictedRoles(roles) {[m
[32m+[m[32m    const newRoles = new Collection(this.roles);[m
[32m+[m[32m    for (const role of roles) {[m
[32m+[m[32m      if (this.guild.roles.has(role.id)) newRoles.set(role.id, role);[m
[32m+[m[32m    }[m
[32m+[m[32m    return this.edit({ roles: newRoles });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Remove a role from the list of roles that can use this emoji.[m
[32m+[m[32m   * @param {Role} role The role to remove[m
[32m+[m[32m   * @returns {Promise<Emoji>}[m
[32m+[m[32m   */[m
[32m+[m[32m  removeRestrictedRole(role) {[m
[32m+[m[32m    return this.removeRestrictedRoles([role]);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Remove multiple roles from the list of roles that can use this emoji.[m
[32m+[m[32m   * @param {Role[]} roles Roles to remove[m
[32m+[m[32m   * @returns {Promise<Emoji>}[m
[32m+[m[32m   */[m
[32m+[m[32m  removeRestrictedRoles(roles) {[m
[32m+[m[32m    const newRoles = new Collection(this.roles);[m
[32m+[m[32m    for (const role of roles) {[m
[32m+[m[32m      if (newRoles.has(role.id)) newRoles.delete(role.id);[m
[32m+[m[32m    }[m
[32m+[m[32m    return this.edit({ roles: newRoles });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * When concatenated with a string, this automatically returns the emoji mention rather than the object.[m
[32m+[m[32m   * @returns {string}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Send an emoji:[m
[32m+[m[32m   * const emoji = guild.emojis.first();[m
[32m+[m[32m   * msg.reply(`Hello! ${emoji}`);[m
[32m+[m[32m   */[m
[32m+[m[32m  toString() {[m
[32m+[m[32m    if (!this.id || !this.requiresColons) {[m
[32m+[m[32m      return this.name;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return `<${this.animated ? 'a' : ''}:${this.name}:${this.id}>`;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Whether this emoji is the same as another one.[m
[32m+[m[32m   * @param {Emoji|Object} other The emoji to compare it to[m
[32m+[m[32m   * @returns {boolean} Whether the emoji is equal to the given emoji or not[m
[32m+[m[32m   */[m
[32m+[m[32m  equals(other) {[m
[32m+[m[32m    if (other instanceof Emoji) {[m
[32m+[m[32m      return ([m
[32m+[m[32m        other.id === this.id &&[m
[32m+[m[32m        other.name === this.name &&[m
[32m+[m[32m        other.managed === this.managed &&[m
[32m+[m[32m        other.requiresColons === this.requiresColons[m
[32m+[m[32m      );[m
[32m+[m[32m    } else {[m
[32m+[m[32m      return ([m
[32m+[m[32m        other.id === this.id &&[m
[32m+[m[32m        other.name === this.name[m
[32m+[m[32m      );[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = Emoji;[m
[1mdiff --git a/node_modules/discord.js/src/structures/GroupDMChannel.js b/node_modules/discord.js/src/structures/GroupDMChannel.js[m
[1mnew file mode 100644[m
[1mindex 0000000..0febf6c[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/structures/GroupDMChannel.js[m
[36m@@ -0,0 +1,246 @@[m
[32m+[m[32mconst Channel = require('./Channel');[m
[32m+[m[32mconst TextBasedChannel = require('./interfaces/TextBasedChannel');[m
[32m+[m[32mconst Collection = require('../util/Collection');[m
[32m+[m[32mconst Constants = require('../util/Constants');[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m{ type: 3,[m
[32m+[m[32m  recipients:[m
[32m+[m[32m   [ { username: 'Charlie',[m
[32m+[m[32m       id: '123',[m
[32m+[m[32m       discriminator: '6631',[m
[32m+[m[32m       avatar: '123' },[m
[32m+[m[32m     { username: 'Ben',[m
[32m+[m[32m       id: '123',[m
[32m+[m[32m       discriminator: '2055',[m
[32m+[m[32m       avatar: '123' },[m
[32m+[m[32m     { username: 'Adam',[m
[32m+[m[32m       id: '123',[m
[32m+[m[32m       discriminator: '2406',[m
[32m+[m[32m       avatar: '123' } ],[m
[32m+[m[32m  owner_id: '123',[m
[32m+[m[32m  name: null,[m
[32m+[m[32m  last_message_id: '123',[m
[32m+[m[32m  id: '123',[m
[32m+[m[32m  icon: null }[m
[32m+[m[32m*/[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Represents a Group DM on Discord.[m
[32m+[m[32m * @extends {Channel}[m
[32m+[m[32m * @implements {TextBasedChannel}[m
[32m+[m[32m */[m
[32m+[m[32mclass GroupDMChannel extends Channel {[m
[32m+[m[32m  constructor(client, data) {[m
[32m+[m[32m    super(client, data);[m
[32m+[m[32m    this.type = 'group';[m
[32m+[m[32m    this.messages = new Collection();[m
[32m+[m[32m    this._typing = new Map();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  setup(data) {[m
[32m+[m[32m    super.setup(data);[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The name of this Group DM, can be null if one isn't set[m
[32m+[m[32m     * @type {string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.name = data.name;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * A hash of this Group DM icon[m
[32m+[m[32m     * @type {?string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.icon = data.icon;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The user ID of this Group DM's owner[m
[32m+[m[32m     * @type {string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.ownerID = data.owner_id;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * If the DM is managed by an application[m
[32m+[m[32m     * @type {boolean}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.managed = data.managed;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Application ID of the application that made this Group DM, if applicable[m
[32m+[m[32m     * @type {?string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.applicationID = data.application_id;[m
[32m+[m
[32m+[m[32m    if (data.nicks) {[m
[32m+[m[32m      /**[m
[32m+[m[32m       * Nicknames for group members[m
[32m+[m[32m       * @type {?Collection<Snowflake, string>}[m
[32m+[m[32m       */[m
[32m+[m[32m      this.nicks = new Collection(data.nicks.map(n => [n.id, n.nick]));[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (!this.recipients) {[m
[32m+[m[32m      /**[m
[32m+[m[32m       * A collection of the recipients of this DM, mapped by their ID[m
[32m+[m[32m       * @type {Collection<Snowflake, User>}[m
[32m+[m[32m       */[m
[32m+[m[32m      this.recipients = new Collection();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (data.recipients) {[m
[32m+[m[32m      for (const recipient of data.recipients) {[m
[32m+[m[32m        const user = this.client.dataManager.newUser(recipient);[m
[32m+[m[32m        this.recipients.set(user.id, user);[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The ID of the last message in the channel, if one was sent[m
[32m+[m[32m     * @type {?Snowflake}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.lastMessageID = data.last_message_id;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The timestamp when the last pinned message was pinned, if there was one[m
[32m+[m[32m     * @type {?number}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.lastPinTimestamp = data.last_pin_timestamp ? new Date(data.last_pin_timestamp).getTime() : null;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The owner of this Group DM[m
[32m+[m[32m   * @type {User}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get owner() {[m
[32m+[m[32m    return this.client.users.get(this.ownerID);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The URL to this guild's icon[m
[32m+[m[32m   * @type {?string}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get iconURL() {[m
[32m+[m[32m    if (!this.icon) return null;[m
[32m+[m[32m    return Constants.Endpoints.Channel(this).Icon(this.client.options.http.cdn, this.icon);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  edit(data) {[m
[32m+[m[32m    const _data = {};[m
[32m+[m[32m    if (data.name) _data.name = data.name;[m
[32m+[m[32m    if (typeof data.icon !== 'undefined') _data.icon = data.icon;[m
[32m+[m[32m    return this.client.rest.methods.updateGroupDMChannel(this, _data);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Whether this channel equals another channel. It compares all properties, so for most operations[m
[32m+[m[32m   * it is advisable to just compare `channel.id === channel2.id` as it is much faster and is often[m
[32m+[m[32m   * what most users need.[m
[32m+[m[32m   * @param {GroupDMChannel} channel Channel to compare with[m
[32m+[m[32m   * @returns {boolean}[m
[32m+[m[32m   */[m
[32m+[m[32m  equals(channel) {[m
[32m+[m[32m    const equal = channel &&[m
[32m+[m[32m      this.id === channel.id &&[m
[32m+[m[32m      this.name === channel.name &&[m
[32m+[m[32m      this.icon === channel.icon &&[m
[32m+[m[32m      this.ownerID === channel.ownerID;[m
[32m+[m
[32m+[m[32m    if (equal) {[m
[32m+[m[32m      return this.recipients.equals(channel.recipients);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return equal;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Add a user to the DM[m
[32m+[m[32m   * @param {UserResolvable|string} accessTokenOrID Access token or user resolvable[m
[32m+[m[32m   * @param {string} [nick] Permanent nickname to give the user (only available if a bot is creating the DM)[m
[32m+[m[32m   * @returns {Promise<GroupDMChannel>}[m
[32m+[m[32m   */[m
[32m+[m
[32m+[m[32m  addUser(accessTokenOrID, nick) {[m
[32m+[m[32m    return this.client.rest.methods.addUserToGroupDM(this, {[m
[32m+[m[32m      nick,[m
[32m+[m[32m      id: this.client.resolver.resolveUserID(accessTokenOrID),[m
[32m+[m[32m      accessToken: accessTokenOrID,[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Set a new GroupDMChannel icon.[m
[32m+[m[32m   * @param {Base64Resolvable|BufferResolvable} icon The new icon of the group dm[m
[32m+[m[32m   * @returns {Promise<GroupDMChannel>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Edit the group dm icon[m
[32m+[m[32m   * channel.setIcon('./icon.png')[m
[32m+[m[32m   *  .then(updated => console.log('Updated the channel icon'))[m
[32m+[m[32m   *  .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  setIcon(icon) {[m
[32m+[m[32m    return this.client.resolver.resolveImage(icon).then(data => this.edit({ icon: data }));[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets a new name for this Group DM.[m
[32m+[m[32m   * @param {string} name New name for this Group DM[m
[32m+[m[32m   * @returns {Promise<GroupDMChannel>}[m
[32m+[m[32m   */[m
[32m+[m[32m  setName(name) {[m
[32m+[m[32m    return this.edit({ name });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Removes a user from this Group DM.[m
[32m+[m[32m   * @param {UserResolvable} user User to remove[m
[32m+[m[32m   * @returns {Promise<GroupDMChannel>}[m
[32m+[m[32m   */[m
[32m+[m[32m  removeUser(user) {[m
[32m+[m[32m    const id = this.client.resolver.resolveUserID(user);[m
[32m+[m[32m    return this.client.rest.methods.removeUserFromGroupDM(this, id);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * When concatenated with a string, this automatically concatenates the channel's name instead of the Channel object.[m
[32m+[m[32m   * @returns {string}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Logs: Hello from My Group DM![m
[32m+[m[32m   * console.log(`Hello from ${channel}!`);[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Logs: Hello from My Group DM![m
[32m+[m[32m   * console.log(`Hello from ' + channel + '!');[m
[32m+[m[32m   */[m
[32m+[m[32m  toString() {[m
[32m+[m[32m    return this.name;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  // These are here only for documentation purposes - they are implemented by TextBasedChannel[m
[32m+[m[32m  /* eslint-disable no-empty-function */[m
[32m+[m[32m  get lastPinAt() {}[m
[32m+[m[32m  send() {}[m
[32m+[m[32m  sendMessage() {}[m
[32m+[m[32m  sendEmbed() {}[m
[32m+[m[32m  sendFile() {}[m
[32m+[m[32m  sendFiles() {}[m
[32m+[m[32m  sendCode() {}[m
[32m+[m[32m  fetchMessage() {}[m
[32m+[m[32m  fetchMessages() {}[m
[32m+[m[32m  fetchPinnedMessages() {}[m
[32m+[m[32m  search() {}[m
[32m+[m[32m  startTyping() {}[m
[32m+[m[32m  stopTyping() {}[m
[32m+[m[32m  get typing() {}[m
[32m+[m[32m  get typingCount() {}[m
[32m+[m[32m  createCollector() {}[m
[32m+[m[32m  createMessageCollector() {}[m
[32m+[m[32m  awaitMessages() {}[m
[32m+[m[32m  // Doesn't work on Group DMs; bulkDelete() {}[m
[32m+[m[32m  acknowledge() {}[m
[32m+[m[32m  _cacheMessage() {}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mTextBasedChannel.applyToClass(GroupDMChannel, true, ['bulkDelete']);[m
[32m+[m
[32m+[m[32mmodule.exports = GroupDMChannel;[m
[1mdiff --git a/node_modules/discord.js/src/structures/Guild.js b/node_modules/discord.js/src/structures/Guild.js[m
[1mnew file mode 100644[m
[1mindex 0000000..c34ec17[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/structures/Guild.js[m
[36m@@ -0,0 +1,1461 @@[m
[32m+[m[32mconst util = require('util');[m
[32m+[m[32mconst Long = require('long');[m
[32m+[m[32mconst User = require('./User');[m
[32m+[m[32mconst Role = require('./Role');[m
[32m+[m[32mconst Emoji = require('./Emoji');[m
[32m+[m[32mconst Presence = require('./Presence').Presence;[m
[32m+[m[32mconst GuildMember = require('./GuildMember');[m
[32m+[m[32mconst Constants = require('../util/Constants');[m
[32m+[m[32mconst Collection = require('../util/Collection');[m
[32m+[m[32mconst Util = require('../util/Util');[m
[32m+[m[32mconst Snowflake = require('../util/Snowflake');[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Represents a guild (or a server) on Discord.[m
[32m+[m[32m * <info>It's recommended to see if a guild is available before performing operations or reading data from it. You can[m
[32m+[m[32m * check this with `guild.available`.</info>[m
[32m+[m[32m */[m
[32m+[m[32mclass Guild {[m
[32m+[m[32m  constructor(client, data) {[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The client that created the instance of the guild[m
[32m+[m[32m     * @name Guild#client[m
[32m+[m[32m     * @type {Client}[m
[32m+[m[32m     * @readonly[m
[32m+[m[32m     */[m
[32m+[m[32m    Object.defineProperty(this, 'client', { value: client });[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * A collection of members that are in this guild. The key is the member's ID, the value is the member[m
[32m+[m[32m     * @type {Collection<Snowflake, GuildMember>}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.members = new Collection();[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * A collection of channels that are in this guild. The key is the channel's ID, the value is the channel[m
[32m+[m[32m     * @type {Collection<Snowflake, GuildChannel>}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.channels = new Collection();[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * A collection of roles that are in this guild. The key is the role's ID, the value is the role[m
[32m+[m[32m     * @type {Collection<Snowflake, Role>}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.roles = new Collection();[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * A collection of presences in this guild[m
[32m+[m[32m     * @type {Collection<Snowflake, Presence>}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.presences = new Collection();[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Whether the bot has been removed from the guild[m
[32m+[m[32m     * @type {boolean}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.deleted = false;[m
[32m+[m
[32m+[m[32m    if (!data) return;[m
[32m+[m[32m    if (data.unavailable) {[m
[32m+[m[32m      /**[m
[32m+[m[32m       * Whether the guild is available to access. If it is not available, it indicates a server outage[m
[32m+[m[32m       * @type {boolean}[m
[32m+[m[32m       */[m
[32m+[m[32m      this.available = false;[m
[32m+[m
[32m+[m[32m      /**[m
[32m+[m[32m       * The Unique ID of the guild, useful for comparisons[m
[32m+[m[32m       * @type {Snowflake}[m
[32m+[m[32m       */[m
[32m+[m[32m      this.id = data.id;[m
[32m+[m[32m    } else {[m
[32m+[m[32m      this.setup(data);[m
[32m+[m[32m      if (!data.channels) this.available = false;[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /* eslint-disable complexity */[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets up the guild.[m
[32m+[m[32m   * @param {*} data The raw data of the guild[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  setup(data) {[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The name of the guild[m
[32m+[m[32m     * @type {string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.name = data.name;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The hash of the guild icon[m
[32m+[m[32m     * @type {?string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.icon = data.icon;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The hash of the guild splash image (VIP only)[m
[32m+[m[32m     * @type {?string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.splash = data.splash;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The region the guild is located in[m
[32m+[m[32m     * @type {string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.region = data.region;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The full amount of members in this guild[m
[32m+[m[32m     * @type {number}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.memberCount = data.member_count || this.memberCount;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Whether the guild is "large" (has more than 250 members)[m
[32m+[m[32m     * @type {boolean}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.large = Boolean('large' in data ? data.large : this.large);[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * An array of guild features[m
[32m+[m[32m     * @type {Object[]}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.features = data.features;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The ID of the application that created this guild (if applicable)[m
[32m+[m[32m     * @type {?Snowflake}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.applicationID = data.application_id;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The time in seconds before a user is counted as "away from keyboard"[m
[32m+[m[32m     * @type {?number}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.afkTimeout = data.afk_timeout;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The ID of the voice channel where AFK members are moved[m
[32m+[m[32m     * @type {?string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.afkChannelID = data.afk_channel_id;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The ID of the system channel[m
[32m+[m[32m     * @type {?Snowflake}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.systemChannelID = data.system_channel_id;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Whether embedded images are enabled on this guild[m
[32m+[m[32m     * @type {boolean}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.embedEnabled = data.embed_enabled;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The verification level of the guild[m
[32m+[m[32m     * @type {number}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.verificationLevel = data.verification_level;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The explicit content filter level of the guild[m
[32m+[m[32m     * @type {number}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.explicitContentFilter = data.explicit_content_filter;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The required MFA level for the guild[m
[32m+[m[32m     * @type {number}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.mfaLevel = data.mfa_level;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The timestamp the client user joined the guild at[m
[32m+[m[32m     * @type {number}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.joinedTimestamp = data.joined_at ? new Date(data.joined_at).getTime() : this.joinedTimestamp;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The value set for a guild's default message notifications[m
[32m+[m[32m     * @type {DefaultMessageNotifications|number}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.defaultMessageNotifications = Constants.DefaultMessageNotifications[data.default_message_notifications] ||[m
[32m+[m[32m      data.default_message_notifications;[m
[32m+[m
[32m+[m[32m    this.id = data.id;[m
[32m+[m[32m    this.available = !data.unavailable;[m
[32m+[m[32m    this.features = data.features || this.features || [];[m
[32m+[m
[32m+[m[32m    if (data.members) {[m
[32m+[m[32m      this.members.clear();[m
[32m+[m[32m      for (const guildUser of data.members) this._addMember(guildUser, false);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (data.owner_id) {[m
[32m+[m[32m      /**[m
[32m+[m[32m       * The user ID of this guild's owner[m
[32m+[m[32m       * @type {Snowflake}[m
[32m+[m[32m       */[m
[32m+[m[32m      this.ownerID = data.owner_id;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (data.channels) {[m
[32m+[m[32m      this.channels.clear();[m
[32m+[m[32m      for (const channel of data.channels) this.client.dataManager.newChannel(channel, this);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (data.roles) {[m
[32m+[m[32m      this.roles.clear();[m
[32m+[m[32m      for (const role of data.roles) {[m
[32m+[m[32m        const newRole = new Role(this, role);[m
[32m+[m[32m        this.roles.set(newRole.id, newRole);[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (data.presences) {[m
[32m+[m[32m      for (const presence of data.presences) {[m
[32m+[m[32m        this._setPresence(presence.user.id, presence);[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    this._rawVoiceStates = new Collection();[m
[32m+[m[32m    if (data.voice_states) {[m
[32m+[m[32m      for (const voiceState of data.voice_states) {[m
[32m+[m[32m        this._rawVoiceStates.set(voiceState.user_id, voiceState);[m
[32m+[m[32m        const member = this.members.get(voiceState.user_id);[m
[32m+[m[32m        const voiceChannel = this.channels.get(voiceState.channel_id);[m
[32m+[m[32m        if (member && voiceChannel) {[m
[32m+[m[32m          member.serverMute = voiceState.mute;[m
[32m+[m[32m          member.serverDeaf = voiceState.deaf;[m
[32m+[m[32m          member.selfMute = voiceState.self_mute;[m
[32m+[m[32m          member.selfDeaf = voiceState.self_deaf;[m
[32m+[m[32m          member.voiceSessionID = voiceState.session_id;[m
[32m+[m[32m          member.voiceChannelID = voiceState.channel_id;[m
[32m+[m[32m          voiceChannel.members.set(member.user.id, member);[m
[32m+[m[32m        }[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (!this.emojis) {[m
[32m+[m[32m      /**[m
[32m+[m[32m       * A collection of emojis that are in this guild[m
[32m+[m[32m       * The key is the emoji's ID, the value is the emoji[m
[32m+[m[32m       * @type {Collection<Snowflake, Emoji>}[m
[32m+[m[32m       */[m
[32m+[m[32m      this.emojis = new Collection();[m
[32m+[m[32m      for (const emoji of data.emojis) this.emojis.set(emoji.id, new Emoji(this, emoji));[m
[32m+[m[32m    } else {[m
[32m+[m[32m      this.client.actions.GuildEmojisUpdate.handle({[m
[32m+[m[32m        guild_id: this.id,[m
[32m+[m[32m        emojis: data.emojis,[m
[32m+[m[32m      });[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The timestamp the guild was created at[m
[32m+[m[32m   * @type {number}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get createdTimestamp() {[m
[32m+[m[32m    return Snowflake.deconstruct(this.id).timestamp;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The time the guild was created[m
[32m+[m[32m   * @type {Date}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get createdAt() {[m
[32m+[m[32m    return new Date(this.createdTimestamp);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The time the client user joined the guild[m
[32m+[m[32m   * @type {Date}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get joinedAt() {[m
[32m+[m[32m    return new Date(this.joinedTimestamp);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * If this guild is verified[m
[32m+[m[32m   * @type {boolean}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get verified() {[m
[32m+[m[32m    return this.features.includes('VERIFIED');[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The URL to this guild's icon[m
[32m+[m[32m   * @type {?string}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get iconURL() {[m
[32m+[m[32m    if (!this.icon) return null;[m
[32m+[m[32m    return Constants.Endpoints.Guild(this).Icon(this.client.options.http.cdn, this.icon);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The acronym that shows up in place of a guild icon.[m
[32m+[m[32m   * @type {string}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get nameAcronym() {[m
[32m+[m[32m    return this.name.replace(/\w+/g, name => name[0]).replace(/\s/g, '');[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The URL to this guild's splash[m
[32m+[m[32m   * @type {?string}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get splashURL() {[m
[32m+[m[32m    if (!this.splash) return null;[m
[32m+[m[32m    return Constants.Endpoints.Guild(this).Splash(this.client.options.http.cdn, this.splash);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The owner of the guild[m
[32m+[m[32m   * @type {?GuildMember}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get owner() {[m
[32m+[m[32m    return this.members.get(this.ownerID);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * AFK voice channel for this guild[m
[32m+[m[32m   * @type {?VoiceChannel}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get afkChannel() {[m
[32m+[m[32m    return this.client.channels.get(this.afkChannelID) || null;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * System channel for this guild[m
[32m+[m[32m   * @type {?GuildChannel}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get systemChannel() {[m
[32m+[m[32m    return this.client.channels.get(this.systemChannelID) || null;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * If the client is connected to any voice channel in this guild, this will be the relevant VoiceConnection[m
[32m+[m[32m   * @type {?VoiceConnection}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get voiceConnection() {[m
[32m+[m[32m    if (this.client.browser) return null;[m
[32m+[m[32m    return this.client.voice.connections.get(this.id) || null;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The position of this guild[m
[32m+[m[32m   * <warn>This is only available when using a user account.</warn>[m
[32m+[m[32m   * @type {?number}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   * @deprecated[m
[32m+[m[32m   */[m
[32m+[m[32m  get position() {[m
[32m+[m[32m    if (this.client.user.bot) return null;[m
[32m+[m[32m    if (!this.client.user.settings.guildPositions) return null;[m
[32m+[m[32m    return this.client.user.settings.guildPositions.indexOf(this.id);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Whether the guild is muted[m
[32m+[m[32m   * <warn>This is only available when using a user account.</warn>[m
[32m+[m[32m   * @type {?boolean}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   * @deprecated[m
[32m+[m[32m   */[m
[32m+[m[32m  get muted() {[m
[32m+[m[32m    if (this.client.user.bot) return null;[m
[32m+[m[32m    try {[m
[32m+[m[32m      return this.client.user.guildSettings.get(this.id).muted;[m
[32m+[m[32m    } catch (err) {[m
[32m+[m[32m      return false;[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The type of message that should notify you[m
[32m+[m[32m   * <warn>This is only available when using a user account.</warn>[m
[32m+[m[32m   * @type {?MessageNotificationType}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   * @deprecated[m
[32m+[m[32m   */[m
[32m+[m[32m  get messageNotifications() {[m
[32m+[m[32m    if (this.client.user.bot) return null;[m
[32m+[m[32m    try {[m
[32m+[m[32m      return this.client.user.guildSettings.get(this.id).messageNotifications;[m
[32m+[m[32m    } catch (err) {[m
[32m+[m[32m      return null;[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Whether to receive mobile push notifications[m
[32m+[m[32m   * <warn>This is only available when using a user account.</warn>[m
[32m+[m[32m   * @type {?boolean}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   * @deprecated[m
[32m+[m[32m   */[m
[32m+[m[32m  get mobilePush() {[m
[32m+[m[32m    if (this.client.user.bot) return null;[m
[32m+[m[32m    try {[m
[32m+[m[32m      return this.client.user.guildSettings.get(this.id).mobilePush;[m
[32m+[m[32m    } catch (err) {[m
[32m+[m[32m      return false;[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Whether to suppress everyone messages[m
[32m+[m[32m   * <warn>This is only available when using a user account.</warn>[m
[32m+[m[32m   * @type {?boolean}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   * @deprecated[m
[32m+[m[32m   */[m
[32m+[m[32m  get suppressEveryone() {[m
[32m+[m[32m    if (this.client.user.bot) return null;[m
[32m+[m[32m    try {[m
[32m+[m[32m      return this.client.user.guildSettings.get(this.id).suppressEveryone;[m
[32m+[m[32m    } catch (err) {[m
[32m+[m[32m      return null;[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The `@everyone` role of the guild[m
[32m+[m[32m   * @type {Role}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get defaultRole() {[m
[32m+[m[32m    return this.roles.get(this.id);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The client user as a GuildMember of this guild[m
[32m+[m[32m   * @type {?GuildMember}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get me() {[m
[32m+[m[32m    return this.members.get(this.client.user.id);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Fetches a collection of roles in the current guild sorted by position[m
[32m+[m[32m   * @type {Collection<Snowflake, Role>}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  get _sortedRoles() {[m
[32m+[m[32m    return this._sortPositionWithID(this.roles);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Returns the GuildMember form of a User object, if the user is present in the guild.[m
[32m+[m[32m   * @param {UserResolvable} user The user that you want to obtain the GuildMember of[m
[32m+[m[32m   * @returns {?GuildMember}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Get the guild member of a user[m
[32m+[m[32m   * const member = guild.member(message.author);[m
[32m+[m[32m   */[m
[32m+[m[32m  member(user) {[m
[32m+[m[32m    return this.client.resolver.resolveGuildMember(this, user);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * An object containing information about a guild member's ban.[m
[32m+[m[32m   * @typedef {Object} BanInfo[m
[32m+[m[32m   * @property {User} user User that was banned[m
[32m+[m[32m   * @property {?string} reason Reason the user was banned[m
[32m+[m[32m   */[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Fetch a ban for a user.[m
[32m+[m[32m   * @returns {Promise<BanInfo>}[m
[32m+[m[32m   * @param {UserResolvable} user The user to fetch the ban for[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Get ban[m
[32m+[m[32m   * guild.fetchBan(message.author)[m
[32m+[m[32m   *   .then(({ user, reason }) => console.log(`${user.tag} was banned for the reason: ${reason}.`))[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  fetchBan(user) {[m
[32m+[m[32m    return this.client.rest.methods.getGuildBan(this, user);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Fetch a collection of banned users in this guild.[m
[32m+[m[32m   * @returns {Promise<Collection<Snowflake, User|BanInfo>>}[m
[32m+[m[32m   * @param {boolean} [withReasons=false] Whether or not to include the ban reason(s)[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Fetch bans in guild[m
[32m+[m[32m   * guild.fetchBans()[m
[32m+[m[32m   *   .then(bans => console.log(`This guild has ${bans.size} bans`))[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  fetchBans(withReasons = false) {[m
[32m+[m[32m    if (withReasons) return this.client.rest.methods.getGuildBans(this);[m
[32m+[m[32m    return this.client.rest.methods.getGuildBans(this)[m
[32m+[m[32m      .then(bans => {[m
[32m+[m[32m        const users = new Collection();[m
[32m+[m[32m        for (const ban of bans.values()) users.set(ban.user.id, ban.user);[m
[32m+[m[32m        return users;[m
[32m+[m[32m      });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Fetch a collection of invites to this guild.[m
[32m+[m[32m   * Resolves with a collection mapping invites by their codes.[m
[32m+[m[32m   * @returns {Promise<Collection<string, Invite>>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Fetch invites[m
[32m+[m[32m   * guild.fetchInvites()[m
[32m+[m[32m   *   .then(invites => console.log(`Fetched ${invites.size} invites`))[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Fetch invite creator by their id[m
[32m+[m[32m   * guild.fetchInvites()[m
[32m+[m[32m   *  .then(invites => console.log(invites.find(invite => invite.inviter.id === '84484653687267328')))[m
[32m+[m[32m   *  .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  fetchInvites() {[m
[32m+[m[32m    return this.client.rest.methods.getGuildInvites(this);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Fetches the vanity url invite code to this guild.[m
[32m+[m[32m   * Resolves with a string matching the vanity url invite code, not the full url.[m
[32m+[m[32m   * @returns {Promise<string>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Fetch invites[m
[32m+[m[32m   * guild.fetchVanityCode()[m
[32m+[m[32m   *   .then(code => {[m
[32m+[m[32m   *     console.log(`Vanity URL: https://discord.gg/${code}`);[m
[32m+[m[32m   *   })[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  fetchVanityCode() {[m
[32m+[m[32m    if (!this.features.includes('VANITY_URL')) {[m
[32m+[m[32m      return Promise.reject(new Error('This guild does not have the VANITY_URL feature enabled.'));[m
[32m+[m[32m    }[m
[32m+[m[32m    return this.client.rest.methods.getGuildVanityCode(this);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Fetch all webhooks for the guild.[m
[32m+[m[32m   * @returns {Promise<Collection<Snowflake, Webhook>>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Fetch webhooks[m
[32m+[m[32m   * guild.fetchWebhooks()[m
[32m+[m[32m   *   .then(webhooks => console.log(`Fetched ${webhooks.size} webhooks`))[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  fetchWebhooks() {[m
[32m+[m[32m    return this.client.rest.methods.getGuildWebhooks(this);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Fetch available voice regions.[m
[32m+[m[32m   * @returns {Promise<Collection<string, VoiceRegion>>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Fetch voice regions[m
[32m+[m[32m   * guild.fetchVoiceRegions()[m
[32m+[m[32m   *   .then(console.log)[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  fetchVoiceRegions() {[m
[32m+[m[32m    return this.client.rest.methods.fetchVoiceRegions(this.id);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The Guild Embed object[m
[32m+[m[32m   * @typedef {Object} GuildEmbedData[m
[32m+[m[32m   * @property {boolean} enabled Whether the embed is enabled[m
[32m+[m[32m   * @property {?ChannelResolvable} channel The embed channel[m
[32m+[m[32m   */[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Fetches the guild embed.[m
[32m+[m[32m   * @returns {Promise<GuildEmbedData>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Fetches the guild embed[m
[32m+[m[32m   * guild.fetchEmbed()[m
[32m+[m[32m   *   .then(embed => console.log(`The embed is ${embed.enabled ? 'enabled' : 'disabled'}`))[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  fetchEmbed() {[m
[32m+[m[32m    return this.client.rest.methods.fetchEmbed(this.id);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Fetch audit logs for this guild.[m
[32m+[m[32m   * @param {Object} [options={}] Options for fetching audit logs[m
[32m+[m[32m   * @param {Snowflake|GuildAuditLogsEntry} [options.before] Limit to entries from before specified entry[m
[32m+[m[32m   * @param {Snowflake|GuildAuditLogsEntry} [options.after] Limit to entries from after specified entry[m
[32m+[m[32m   * @param {number} [options.limit] Limit number of entries[m
[32m+[m[32m   * @param {UserResolvable} [options.user] Only show entries involving this user[m
[32m+[m[32m   * @param {AuditLogAction} [options.type] Only show entries involving this action type[m
[32m+[m[32m   * @returns {Promise<GuildAuditLogs>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Output audit log entries[m
[32m+[m[32m   * guild.fetchAuditLogs()[m
[32m+[m[32m   *   .then(audit => console.log(audit.entries.first()))[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  fetchAuditLogs(options) {[m
[32m+[m[32m    return this.client.rest.methods.getGuildAuditLogs(this, options);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Adds a user to the guild using OAuth2. Requires the `CREATE_INSTANT_INVITE` permission.[m
[32m+[m[32m   * @param {UserResolvable} user User to add to the guild[m
[32m+[m[32m   * @param {Object} options Options for the addition[m
[32m+[m[32m   * @param {string} options.accessToken An OAuth2 access token for the user with the `guilds.join` scope granted to the[m
[32m+[m[32m   * bot's application[m
[32m+[m[32m   * @param {string} [options.nick] Nickname to give the member (requires `MANAGE_NICKNAMES`)[m
[32m+[m[32m   * @param {Collection<Snowflake, Role>|Role[]|Snowflake[]} [options.roles] Roles to add to the member[m
[32m+[m[32m   * (requires `MANAGE_ROLES`)[m
[32m+[m[32m   * @param {boolean} [options.mute] Whether the member should be muted (requires `MUTE_MEMBERS`)[m
[32m+[m[32m   * @param {boolean} [options.deaf] Whether the member should be deafened (requires `DEAFEN_MEMBERS`)[m
[32m+[m[32m   * @returns {Promise<GuildMember>}[m
[32m+[m[32m   */[m
[32m+[m[32m  addMember(user, options) {[m
[32m+[m[32m    user = this.client.resolver.resolveUserID(user);[m
[32m+[m[32m    if (this.members.has(user)) return Promise.resolve(this.members.get(user));[m
[32m+[m[32m    return this.client.rest.methods.putGuildMember(this, user, options);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Fetch a single guild member from a user.[m
[32m+[m[32m   * @param {UserResolvable} user The user to fetch the member for[m
[32m+[m[32m   * @param {boolean} [cache=true] Insert the member into the members cache[m
[32m+[m[32m   * @returns {Promise<GuildMember>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Fetch a guild member[m
[32m+[m[32m   * guild.fetchMember(message.author)[m
[32m+[m[32m   *   .then(console.log)[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  fetchMember(user, cache = true) {[m
[32m+[m[32m    user = this.client.resolver.resolveUser(user);[m
[32m+[m[32m    if (!user) return Promise.reject(new Error('Invalid or uncached id provided.'));[m
[32m+[m[32m    const member = this.members.get(user.id);[m
[32m+[m[32m    if (member && member.joinedTimestamp) return Promise.resolve(member);[m
[32m+[m[32m    return this.client.rest.methods.getGuildMember(this, user, cache);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Fetches all the members in the guild, even if they are offline. If the guild has less than 250 members,[m
[32m+[m[32m   * this should not be necessary.[m
[32m+[m[32m   * @param {string} [query=''] Limit fetch to members with similar usernames[m
[32m+[m[32m   * @param {number} [limit=0] Maximum number of members to request[m
[32m+[m[32m   * @returns {Promise<Guild>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Fetch guild members[m
[32m+[m[32m   * guild.fetchMembers()[m
[32m+[m[32m   *   .then(console.log)[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Fetches a maximum of 1 member with the given query[m
[32m+[m[32m   * guild.fetchMembers('hydrabolt', 1)[m
[32m+[m[32m   *   .then(console.log)[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  fetchMembers(query = '', limit = 0) {[m
[32m+[m[32m    return new Promise((resolve, reject) => {[m
[32m+[m[32m      if (this.memberCount === this.members.size) {[m
[32m+[m[32m        resolve(this);[m
[32m+[m[32m        return;[m
[32m+[m[32m      }[m
[32m+[m[32m      this.client.ws.send({[m
[32m+[m[32m        op: Constants.OPCodes.REQUEST_GUILD_MEMBERS,[m
[32m+[m[32m        d: {[m
[32m+[m[32m          guild_id: this.id,[m
[32m+[m[32m          query,[m
[32m+[m[32m          limit,[m
[32m+[m[32m        },[m
[32m+[m[32m      });[m
[32m+[m[32m      const handler = (members, guild) => {[m
[32m+[m[32m        if (guild.id !== this.id) return;[m
[32m+[m[32m        if (this.memberCount === this.members.size || members.length < 1000) {[m
[32m+[m[32m          this.client.removeListener(Constants.Events.GUILD_MEMBERS_CHUNK, handler);[m
[32m+[m[32m          resolve(this);[m
[32m+[m[32m        }[m
[32m+[m[32m      };[m
[32m+[m[32m      this.client.on(Constants.Events.GUILD_MEMBERS_CHUNK, handler);[m
[32m+[m[32m      this.client.setTimeout(() => reject(new Error('Members didn\'t arrive in time.')), 120 * 1000);[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Performs a search within the entire guild.[m
[32m+[m[32m   * <warn>This is only available when using a user account.</warn>[m
[32m+[m[32m   * @param {MessageSearchOptions} [options={}] Options to pass to the search[m
[32m+[m[32m   * @returns {Promise<MessageSearchResult>}[m
[32m+[m[32m   * @deprecated[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * guild.search({[m
[32m+[m[32m   *   content: 'discord.js',[m
[32m+[m[32m   *   before: '2016-11-17'[m
[32m+[m[32m   * })[m
[32m+[m[32m   *   .then(res => {[m
[32m+[m[32m   *     const hit = res.messages[0].find(m => m.hit).content;[m
[32m+[m[32m   *     console.log(`I found: **${hit}**, total results: ${res.totalResults}`);[m
[32m+[m[32m   *   })[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  search(options = {}) {[m
[32m+[m[32m    return this.client.rest.methods.search(this, options);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The data for editing a guild.[m
[32m+[m[32m   * @typedef {Object} GuildEditData[m
[32m+[m[32m   * @property {string} [name] The name of the guild[m
[32m+[m[32m   * @property {string} [region] The region of the guild[m
[32m+[m[32m   * @property {number} [verificationLevel] The verification level of the guild[m
[32m+[m[32m   * @property {number} [explicitContentFilter] The level of the explicit content filter[m
[32m+[m[32m   * @property {ChannelResolvable} [afkChannel] The AFK channel of the guild[m
[32m+[m[32m   * @property {ChannelResolvable} [systemChannel] The system channel of the guild[m
[32m+[m[32m   * @property {number} [afkTimeout] The AFK timeout of the guild[m
[32m+[m[32m   * @property {Base64Resolvable} [icon] The icon of the guild[m
[32m+[m[32m   * @property {GuildMemberResolvable} [owner] The owner of the guild[m
[32m+[m[32m   * @property {Base64Resolvable} [splash] The splash screen of the guild[m
[32m+[m[32m   */[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Updates the guild with new information - e.g. a new name.[m
[32m+[m[32m   * @param {GuildEditData} data The data to update the guild with[m
[32m+[m[32m   * @param {string} [reason] Reason for editing the guild[m
[32m+[m[32m   * @returns {Promise<Guild>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Set the guild name and region[m
[32m+[m[32m   * guild.edit({[m
[32m+[m[32m   *   name: 'Discord Guild',[m
[32m+[m[32m   *   region: 'london',[m
[32m+[m[32m   * })[m
[32m+[m[32m   *   .then(g => console.log(`Changed guild name to ${g} and region to ${g.region}`))[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  edit(data, reason) {[m
[32m+[m[32m    const _data = {};[m
[32m+[m[32m    if (data.name) _data.name = data.name;[m
[32m+[m[32m    if (data.region) _data.region = data.region;[m
[32m+[m[32m    if (typeof data.verificationLevel !== 'undefined') _data.verification_level = Number(data.verificationLevel);[m
[32m+[m[32m    if (typeof data.afkChannel !== 'undefined') {[m
[32m+[m[32m      _data.afk_channel_id = this.client.resolver.resolveChannelID(data.afkChannel);[m
[32m+[m[32m    }[m
[32m+[m[32m    if (typeof data.systemChannel !== 'undefined') {[m
[32m+[m[32m      _data.system_channel_id = this.client.resolver.resolveChannelID(data.systemChannel);[m
[32m+[m[32m    }[m
[32m+[m[32m    if (data.afkTimeout) _data.afk_timeout = Number(data.afkTimeout);[m
[32m+[m[32m    if (typeof data.icon !== 'undefined') _data.icon = data.icon;[m
[32m+[m[32m    if (data.owner) _data.owner_id = this.client.resolver.resolveUser(data.owner).id;[m
[32m+[m[32m    if (typeof data.splash !== 'undefined') _data.splash = data.splash;[m
[32m+[m[32m    if (typeof data.explicitContentFilter !== 'undefined') {[m
[32m+[m[32m      _data.explicit_content_filter = Number(data.explicitContentFilter);[m
[32m+[m[32m    }[m
[32m+[m[32m    if (typeof data.defaultMessageNotifications !== 'undefined') {[m
[32m+[m[32m      _data.default_message_notifications = typeof data.defaultMessageNotifications === 'string' ?[m
[32m+[m[32m        Constants.DefaultMessageNotifications.indexOf(data.defaultMessageNotifications) :[m
[32m+[m[32m        Number(data.defaultMessageNotifications);[m
[32m+[m[32m    }[m
[32m+[m[32m    return this.client.rest.methods.updateGuild(this, _data, reason);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Edit the level of the explicit content filter.[m
[32m+[m[32m   * @param {number} explicitContentFilter The new level of the explicit content filter[m
[32m+[m[32m   * @param {string} [reason] Reason for changing the level of the guild's explicit content filter[m
[32m+[m[32m   * @returns {Promise<Guild>}[m
[32m+[m[32m   */[m
[32m+[m[32m  setExplicitContentFilter(explicitContentFilter, reason) {[m
[32m+[m[32m    return this.edit({ explicitContentFilter }, reason);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Edits the setting of the default message notifications of the guild.[m
[32m+[m[32m   * @param {DefaultMessageNotifications|number} defaultMessageNotifications[m
[32m+[m[32m   * The new setting for the default message notifications[m
[32m+[m[32m   * @param {string} [reason] Reason for changing the setting of the default message notifications[m
[32m+[m[32m   * @returns {Promise<Guild>}[m
[32m+[m[32m   */[m
[32m+[m[32m  setDefaultMessageNotifications(defaultMessageNotifications, reason) {[m
[32m+[m[32m    return this.edit({ defaultMessageNotifications }, reason);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Edit the name of the guild.[m
[32m+[m[32m   * @param {string} name The new name of the guild[m
[32m+[m[32m   * @param {string} [reason] Reason for changing the guild's name[m
[32m+[m[32m   * @returns {Promise<Guild>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Edit the guild name[m
[32m+[m[32m   * guild.setName('Discord Guild')[m
[32m+[m[32m   *  .then(g => console.log(`Updated guild name to ${g}`))[m
[32m+[m[32m   *  .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  setName(name, reason) {[m
[32m+[m[32m    return this.edit({ name }, reason);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Edit the region of the guild.[m
[32m+[m[32m   * @param {string} region The new region of the guild[m
[32m+[m[32m   * @param {string} [reason] Reason for changing the guild's region[m
[32m+[m[32m   * @returns {Promise<Guild>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Edit the guild region[m
[32m+[m[32m   * guild.setRegion('london')[m
[32m+[m[32m   *  .then(g => console.log(`Updated guild region to ${g.region}`))[m
[32m+[m[32m   *  .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  setRegion(region, reason) {[m
[32m+[m[32m    return this.edit({ region }, reason);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Edit the verification level of the guild.[m
[32m+[m[32m   * @param {number} verificationLevel The new verification level of the guild[m
[32m+[m[32m   * @param {string} [reason] Reason for changing the guild's verification level[m
[32m+[m[32m   * @returns {Promise<Guild>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Edit the guild verification level[m
[32m+[m[32m   * guild.setVerificationLevel(1)[m
[32m+[m[32m   *  .then(g => console.log(`Updated guild verification level to ${g.verificationLevel}`))[m
[32m+[m[32m   *  .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  setVerificationLevel(verificationLevel, reason) {[m
[32m+[m[32m    return this.edit({ verificationLevel }, reason);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Edit the AFK channel of the guild.[m
[32m+[m[32m   * @param {ChannelResolvable} afkChannel The new AFK channel[m
[32m+[m[32m   * @param {string} [reason] Reason for changing the guild's AFK channel[m
[32m+[m[32m   * @returns {Promise<Guild>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Edit the guild AFK channel[m
[32m+[m[32m   * guild.setAFKChannel(channel)[m
[32m+[m[32m   *  .then(g => console.log(`Updated guild AFK channel to ${g.afkChannel.name}`))[m
[32m+[m[32m   *  .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  setAFKChannel(afkChannel, reason) {[m
[32m+[m[32m    return this.edit({ afkChannel }, reason);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Edit the system channel of the guild.[m
[32m+[m[32m   * @param {ChannelResolvable} systemChannel The new system channel[m
[32m+[m[32m   * @param {string} [reason] Reason for changing the guild's system channel[m
[32m+[m[32m   * @returns {Promise<Guild>}[m
[32m+[m[32m   */[m
[32m+[m[32m  setSystemChannel(systemChannel, reason) {[m
[32m+[m[32m    return this.edit({ systemChannel }, reason);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Edit the AFK timeout of the guild.[m
[32m+[m[32m   * @param {number} afkTimeout The time in seconds that a user must be idle to be considered AFK[m
[32m+[m[32m   * @param {string} [reason] Reason for changing the guild's AFK timeout[m
[32m+[m[32m   * @returns {Promise<Guild>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Edit the guild AFK channel[m
[32m+[m[32m   * guild.setAFKTimeout(60)[m
[32m+[m[32m   *  .then(g => console.log(`Updated guild AFK timeout to ${g.afkTimeout}`))[m
[32m+[m[32m   *  .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  setAFKTimeout(afkTimeout, reason) {[m
[32m+[m[32m    return this.edit({ afkTimeout }, reason);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Set a new guild icon.[m
[32m+[m[32m   * @param {Base64Resolvable|BufferResolvable} icon The new icon of the guild[m
[32m+[m[32m   * @param {string} [reason] Reason for changing the guild's icon[m
[32m+[m[32m   * @returns {Promise<Guild>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Edit the guild icon[m
[32m+[m[32m   * guild.setIcon('./icon.png')[m
[32m+[m[32m   *  .then(console.log)[m
[32m+[m[32m   *  .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  setIcon(icon, reason) {[m
[32m+[m[32m    return this.client.resolver.resolveImage(icon).then(data => this.edit({ icon: data, reason }));[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets a new owner of the guild.[m
[32m+[m[32m   * @param {GuildMemberResolvable} owner The new owner of the guild[m
[32m+[m[32m   * @param {string} [reason] Reason for setting the new owner[m
[32m+[m[32m   * @returns {Promise<Guild>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Edit the guild owner[m
[32m+[m[32m   * guild.setOwner(guild.members.first())[m
[32m+[m[32m   *  .then(g => console.log(`Updated the guild owner to ${g.owner.displayName}`))[m
[32m+[m[32m   *  .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  setOwner(owner, reason) {[m
[32m+[m[32m    return this.edit({ owner }, reason);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Set a new guild splash screen.[m
[32m+[m[32m   * @param {BufferResolvable|Base64Resolvable} splash The new splash screen of the guild[m
[32m+[m[32m   * @param {string} [reason] Reason for changing the guild's splash screen[m
[32m+[m[32m   * @returns {Promise<Guild>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Edit the guild splash[m
[32m+[m[32m   * guild.setSplash('./splash.png')[m
[32m+[m[32m   *  .then(console.log)[m
[32m+[m[32m   *  .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  setSplash(splash) {[m
[32m+[m[32m    return this.client.resolver.resolveImage(splash).then(data => this.edit({ splash: data }));[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets the position of the guild in the guild listing.[m
[32m+[m[32m   * <warn>This is only available when using a user account.</warn>[m
[32m+[m[32m   * @param {number} position Absolute or relative position[m
[32m+[m[32m   * @param {boolean} [relative=false] Whether to position relatively or absolutely[m
[32m+[m[32m   * @returns {Promise<Guild>}[m
[32m+[m[32m   * @deprecated[m
[32m+[m[32m   */[m
[32m+[m[32m  setPosition(position, relative) {[m
[32m+[m[32m    if (this.client.user.bot) {[m
[32m+[m[32m      return Promise.reject(new Error('Setting guild position is only available for user accounts'));[m
[32m+[m[32m    }[m
[32m+[m[32m    return this.client.user.settings.setGuildPosition(this, position, relative);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Marks all messages in this guild as read.[m
[32m+[m[32m   * <warn>This is only available when using a user account.</warn>[m
[32m+[m[32m   * @returns {Promise<Guild>}[m
[32m+[m[32m   * @deprecated[m
[32m+[m[32m   */[m
[32m+[m[32m  acknowledge() {[m
[32m+[m[32m    return this.client.rest.methods.ackGuild(this);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Allow direct messages from guild members.[m
[32m+[m[32m   * <warn>This is only available when using a user account.</warn>[m
[32m+[m[32m   * @param {boolean} allow Whether to allow direct messages[m
[32m+[m[32m   * @returns {Promise<Guild>}[m
[32m+[m[32m   * @deprecated[m
[32m+[m[32m   */[m
[32m+[m[32m  allowDMs(allow) {[m
[32m+[m[32m    const settings = this.client.user.settings;[m
[32m+[m[32m    if (allow) return settings.removeRestrictedGuild(this);[m
[32m+[m[32m    else return settings.addRestrictedGuild(this);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Bans a user from the guild.[m
[32m+[m[32m   * @param {UserResolvable} user The user to ban[m
[32m+[m[32m   * @param {Object|number|string} [options] Ban options. If a number, the number of days to delete messages for, if a[m
[32m+[m[32m   * string, the ban reason. Supplying an object allows you to do both.[m
[32m+[m[32m   * @param {number} [options.days=0] Number of days of messages to delete[m
[32m+[m[32m   * @param {string} [options.reason] Reason for banning[m
[32m+[m[32m   * @returns {Promise<GuildMember|User|string>} Result object will be resolved as specifically as possible.[m
[32m+[m[32m   * If the GuildMember cannot be resolved, the User will instead be attempted to be resolved. If that also cannot[m
[32m+[m[32m   * be resolved, the user ID will be the result.[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Ban a user by ID[m
[32m+[m[32m   * guild.ban('some user ID')[m
[32m+[m[32m   *   .then(user => console.log(`Banned ${user.username || user.id || user} from ${guild}`))[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Ban a user by object with reason and days[m
[32m+[m[32m   * guild.ban(user, { days: 7, reason: 'He needed to go' })[m
[32m+[m[32m   *   .then(console.log)[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  ban(user, options = {}) {[m
[32m+[m[32m    if (typeof options === 'number') {[m
[32m+[m[32m      options = { reason: null, 'delete-message-days': options };[m
[32m+[m[32m    } else if (typeof options === 'string') {[m
[32m+[m[32m      options = { reason: options, 'delete-message-days': 0 };[m
[32m+[m[32m    }[m
[32m+[m[32m    if (options.days) options['delete-message-days'] = options.days;[m
[32m+[m[32m    return this.client.rest.methods.banGuildMember(this, user, options);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Unbans a user from the guild.[m
[32m+[m[32m   * @param {UserResolvable} user The user to unban[m
[32m+[m[32m   * @param {string} [reason] Reason for unbanning the user[m
[32m+[m[32m   * @returns {Promise<User>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Unban a user by ID (or with a user/guild member object)[m
[32m+[m[32m   * guild.unban('some user ID')[m
[32m+[m[32m   *   .then(user => console.log(`Unbanned ${user.username} from ${guild}`))[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  unban(user, reason) {[m
[32m+[m[32m    return this.client.rest.methods.unbanGuildMember(this, user, reason);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Prunes members from the guild based on how long they have been inactive.[m
[32m+[m[32m   * @param {number} days Number of days of inactivity required to kick[m
[32m+[m[32m   * @param {boolean} [dry=false] If true, will return number of users that will be kicked, without actually doing it[m
[32m+[m[32m   * @param {string} [reason] Reason for this prune[m
[32m+[m[32m   * @returns {Promise<number>} The number of members that were/will be kicked[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // See how many members will be pruned[m
[32m+[m[32m   * guild.pruneMembers(12, true)[m
[32m+[m[32m   *   .then(pruned => console.log(`This will prune ${pruned} people!`))[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Actually prune the members[m
[32m+[m[32m   * guild.pruneMembers(12)[m
[32m+[m[32m   *   .then(pruned => console.log(`I just pruned ${pruned} people!`))[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  pruneMembers(days, dry = false, reason) {[m
[32m+[m[32m    if (typeof days !== 'number') throw new TypeError('Days must be a number.');[m
[32m+[m[32m    return this.client.rest.methods.pruneGuildMembers(this, days, dry, reason);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Syncs this guild (already done automatically every 30 seconds).[m
[32m+[m[32m   * <warn>This is only available when using a user account.</warn>[m
[32m+[m[32m   * @deprecated[m
[32m+[m[32m   */[m
[32m+[m[32m  sync() {[m
[32m+[m[32m    if (!this.client.user.bot) this.client.syncGuilds([this]);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Overwrites to use when creating a channel or replacing overwrites[m
[32m+[m[32m   * @typedef {Object} ChannelCreationOverwrites[m
[32m+[m[32m   * @property {PermissionResolvable} [allow] The permissions to allow[m
[32m+[m[32m   * @property {PermissionResolvable} [allowed] The permissions to allow[m
[32m+[m[32m   * **(deprecated)**[m
[32m+[m[32m   * @property {PermissionResolvable} [deny] The permissions to deny[m
[32m+[m[32m   * @property {PermissionResolvable} [denied] The permissions to deny[m
[32m+[m[32m   * **(deprecated)**[m
[32m+[m[32m   * @property {GuildMemberResolvable|RoleResolvable} id Member or role this overwrite is for[m
[32m+[m[32m   */[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Creates a new channel in the guild.[m
[32m+[m[32m   * @param {string} name The name of the new channel[m
[32m+[m[32m   * @param {string|ChannelData} [typeOrOptions='text'][m
[32m+[m[32m   * The type of the new channel, one of `text`, `voice`, `category`, `news`, or `store`. **(deprecated, use options)**[m
[32m+[m[32m   * Alternatively options for the new channel, overriding the following parameters.[m
[32m+[m[32m   * @param {ChannelCreationOverwrites[]|Collection<Snowflake, PermissionOverwrites>} [permissionOverwrites][m
[32m+[m[32m   * Permission overwrites **(deprecated, use options)**[m
[32m+[m[32m   * @param {string} [reason] Reason for creating this channel **(deprecated, use options)**[m
[32m+[m[32m   * @returns {Promise<CategoryChannel|TextChannel|VoiceChannel>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Create a new text channel[m
[32m+[m[32m   * guild.createChannel('new-general', { type: 'text' })[m
[32m+[m[32m   *   .then(console.log)[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Create a new category channel with permission overwrites[m
[32m+[m[32m   * guild.createChannel('new-category', {[m
[32m+[m[32m   *   type: 'category',[m
[32m+[m[32m   *   permissionOverwrites: [{[m
[32m+[m[32m   *     id: guild.id,[m
[32m+[m[32m   *     deny: ['MANAGE_MESSAGES'],[m
[32m+[m[32m   *     allow: ['SEND_MESSAGES'][m
[32m+[m[32m   *   }][m
[32m+[m[32m   * })[m
[32m+[m[32m   *   .then(console.log)[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  createChannel(name, typeOrOptions, permissionOverwrites, reason) {[m
[32m+[m[32m    if (!typeOrOptions || (typeof typeOrOptions === 'string')) {[m
[32m+[m[32m      if (typeOrOptions) {[m
[32m+[m[32m        process.emitWarning([m
[32m+[m[32m          'Guild#createChannel: Create channels with an options object instead of separate parameters',[m
[32m+[m[32m          'DeprecationWarning'[m
[32m+[m[32m        );[m
[32m+[m[32m      }[m
[32m+[m[32m      typeOrOptions = {[m
[32m+[m[32m        type: typeOrOptions,[m
[32m+[m[32m        permissionOverwrites,[m
[32m+[m[32m        reason,[m
[32m+[m[32m      };[m
[32m+[m[32m    }[m
[32m+[m[32m    return this.client.rest.methods.createChannel(this, name, typeOrOptions);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The data needed for updating a channel's position.[m
[32m+[m[32m   * @typedef {Object} ChannelPosition[m
[32m+[m[32m   * @property {ChannelResolvable} channel Channel to update[m
[32m+[m[32m   * @property {number} position New position for the channel[m
[32m+[m[32m   */[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Batch-updates the guild's channels' positions.[m
[32m+[m[32m   * @param {ChannelPosition[]} channelPositions Channel positions to update[m
[32m+[m[32m   * @returns {Promise<Guild>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * guild.updateChannels([{ channel: channelID, position: newChannelIndex }])[m
[32m+[m[32m   *   .then(g => console.log(`Updated channel positions for ${g}`))[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  setChannelPositions(channelPositions) {[m
[32m+[m[32m    return this.client.rest.methods.updateChannelPositions(this.id, channelPositions);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Edits the guild's embed.[m
[32m+[m[32m   * @param {GuildEmbedData} embed The embed for the guild[m
[32m+[m[32m   * @param {string} [reason] Reason for changing the guild's embed[m
[32m+[m[32m   * @returns {Promise<Guild>}[m
[32m+[m[32m   */[m
[32m+[m[32m  setEmbed(embed, reason) {[m
[32m+[m[32m    return this.client.rest.methods.updateEmbed(this.id, embed, reason)[m
[32m+[m[32m      .then(() => this);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Creates a new role in the guild with given information.[m
[32m+[m[32m   * @param {RoleData} [data] The data to update the role with[m
[32m+[m[32m   * @param {string} [reason] Reason for creating this role[m
[32m+[m[32m   * @returns {Promise<Role>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Create a new role[m
[32m+[m[32m   * guild.createRole()[m
[32m+[m[32m   *   .then(role => console.log(`Created new role with name ${role.name}`))[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Create a new role with data[m
[32m+[m[32m   * guild.createRole({[m
[32m+[m[32m   *   name: 'Super Cool People',[m
[32m+[m[32m   *   color: 'BLUE',[m
[32m+[m[32m   * })[m
[32m+[m[32m   *   .then(role => console.log(`Created new role with name ${role.name} and color ${role.color}`))[m
[32m+[m[32m   *   .catch(console.error)[m
[32m+[m[32m   */[m
[32m+[m[32m  createRole(data = {}, reason) {[m
[32m+[m[32m    return this.client.rest.methods.createGuildRole(this, data, reason);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Creates a new custom emoji in the guild.[m
[32m+[m[32m   * @param {BufferResolvable|Base64Resolvable} attachment The image for the emoji[m
[32m+[m[32m   * @param {string} name The name for the emoji[m
[32m+[m[32m   * @param {Collection<Snowflake, Role>|Role[]} [roles] Roles to limit the emoji to[m
[32m+[m[32m   * @param {string} [reason] Reason for creating the emoji[m
[32m+[m[32m   * @returns {Promise<Emoji>} The created emoji[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Create a new emoji from a url[m
[32m+[m[32m   * guild.createEmoji('https://i.imgur.com/w3duR07.png', 'rip')[m
[32m+[m[32m   *   .then(emoji => console.log(`Created new emoji with name ${emoji.name}`))[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Create a new emoji from a file on your computer[m
[32m+[m[32m   * guild.createEmoji('./memes/banana.png', 'banana')[m
[32m+[m[32m   *   .then(emoji => console.log(`Created new emoji with name ${emoji.name}`))[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  createEmoji(attachment, name, roles, reason) {[m
[32m+[m[32m    if (typeof attachment === 'string' && attachment.startsWith('data:')) {[m
[32m+[m[32m      return this.client.rest.methods.createEmoji(this, attachment, name, roles, reason);[m
[32m+[m[32m    } else {[m
[32m+[m[32m      return this.client.resolver.resolveImage(attachment).then(data =>[m
[32m+[m[32m        this.client.rest.methods.createEmoji(this, data, name, roles, reason)[m
[32m+[m[32m      );[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Delete an emoji.[m
[32m+[m[32m   * @param {Emoji|string} emoji The emoji to delete[m
[32m+[m[32m   * @param {string} [reason] Reason for deleting the emoji[m
[32m+[m[32m   * @returns {Promise}[m
[32m+[m[32m   */[m
[32m+[m[32m  deleteEmoji(emoji, reason) {[m
[32m+[m[32m    if (typeof emoji === 'string') emoji = this.emojis.get(emoji);[m
[32m+[m[32m    if (!(emoji instanceof Emoji)) throw new TypeError('Emoji must be either an instance of Emoji or an ID');[m
[32m+[m[32m    return this.client.rest.methods.deleteEmoji(emoji, reason);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Causes the client to leave the guild.[m
[32m+[m[32m   * @returns {Promise<Guild>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Leave a guild[m
[32m+[m[32m   * guild.leave()[m
[32m+[m[32m   *   .then(g => console.log(`Left the guild ${g}`))[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  leave() {[m
[32m+[m[32m    return this.client.rest.methods.leaveGuild(this);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Causes the client to delete the guild.[m
[32m+[m[32m   * @returns {Promise<Guild>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Delete a guild[m
[32m+[m[32m   * guild.delete()[m
[32m+[m[32m   *   .then(g => console.log(`Deleted the guild ${g}`))[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  delete() {[m
[32m+[m[32m    return this.client.rest.methods.deleteGuild(this);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Whether this guild equals another guild. It compares all properties, so for most operations[m
[32m+[m[32m   * it is advisable to just compare `guild.id === guild2.id` as it is much faster and is often[m
[32m+[m[32m   * what most users need.[m
[32m+[m[32m   * @param {Guild} guild The guild to compare with[m
[32m+[m[32m   * @returns {boolean}[m
[32m+[m[32m   */[m
[32m+[m[32m  equals(guild) {[m
[32m+[m[32m    let equal =[m
[32m+[m[32m      guild &&[m
[32m+[m[32m      this.id === guild.id &&[m
[32m+[m[32m      this.available === !guild.unavailable &&[m
[32m+[m[32m      this.splash === guild.splash &&[m
[32m+[m[32m      this.region === guild.region &&[m
[32m+[m[32m      this.name === guild.name &&[m
[32m+[m[32m      this.memberCount === guild.member_count &&[m
[32m+[m[32m      this.large === guild.large &&[m
[32m+[m[32m      this.icon === guild.icon &&[m
[32m+[m[32m      Util.arraysEqual(this.features, guild.features) &&[m
[32m+[m[32m      this.ownerID === guild.owner_id &&[m
[32m+[m[32m      this.verificationLevel === guild.verification_level &&[m
[32m+[m[32m      this.embedEnabled === guild.embed_enabled;[m
[32m+[m
[32m+[m[32m    if (equal) {[m
[32m+[m[32m      if (this.embedChannel) {[m
[32m+[m[32m        if (this.embedChannel.id !== guild.embed_channel_id) equal = false;[m
[32m+[m[32m      } else if (guild.embed_channel_id) {[m
[32m+[m[32m        equal = false;[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return equal;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * When concatenated with a string, this automatically concatenates the guild's name instead of the guild object.[m
[32m+[m[32m   * @returns {string}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Logs: Hello from My Guild![m
[32m+[m[32m   * console.log(`Hello from ${guild}!`);[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Logs: Hello from My Guild![m
[32m+[m[32m   * console.log('Hello from ' + guild + '!');[m
[32m+[m[32m   */[m
[32m+[m[32m  toString() {[m
[32m+[m[32m    return this.name;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  _addMember(guildUser, emitEvent = true) {[m
[32m+[m[32m    const existing = this.members.has(guildUser.user.id);[m
[32m+[m[32m    if (!(guildUser.user instanceof User)) guildUser.user = this.client.dataManager.newUser(guildUser.user);[m
[32m+[m
[32m+[m[32m    guildUser.joined_at = guildUser.joined_at || 0;[m
[32m+[m[32m    const member = new GuildMember(this, guildUser);[m
[32m+[m[32m    this.members.set(member.id, member);[m
[32m+[m
[32m+[m[32m    if (this._rawVoiceStates && this._rawVoiceStates.has(member.user.id)) {[m
[32m+[m[32m      const voiceState = this._rawVoiceStates.get(member.user.id);[m
[32m+[m[32m      member.serverMute = voiceState.mute;[m
[32m+[m[32m      member.serverDeaf = voiceState.deaf;[m
[32m+[m[32m      member.selfMute = voiceState.self_mute;[m
[32m+[m[32m      member.selfDeaf = voiceState.self_deaf;[m
[32m+[m[32m      member.voiceSessionID = voiceState.session_id;[m
[32m+[m[32m      member.voiceChannelID = voiceState.channel_id;[m
[32m+[m[32m      if (this.client.channels.has(voiceState.channel_id)) {[m
[32m+[m[32m        this.client.channels.get(voiceState.channel_id).members.set(member.user.id, member);[m
[32m+[m[32m      } else {[m
[32m+[m[32m        this.client.emit('warn', `Member ${member.id} added in guild ${this.id} with an uncached voice channel`);[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Emitted whenever a user joins a guild.[m
[32m+[m[32m     * @event Client#guildMemberAdd[m
[32m+[m[32m     * @param {GuildMember} member The member that has joined a guild[m
[32m+[m[32m     */[m
[32m+[m[32m    if (this.client.ws.connection.status === Constants.Status.READY && emitEvent && !existing) {[m
[32m+[m[32m      this.client.emit(Constants.Events.GUILD_MEMBER_ADD, member);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return member;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  _updateMember(member, data) {[m
[32m+[m[32m    const oldMember = Util.cloneObject(member);[m
[32m+[m
[32m+[m[32m    if (data.roles) member._roles = data.roles;[m
[32m+[m[32m    if (typeof data.nick !== 'undefined') member.nickname = data.nick;[m
[32m+[m
[32m+[m[32m    const notSame = member.nickname !== oldMember.nickname || !Util.arraysEqual(member._roles, oldMember._roles);[m
[32m+[m
[32m+[m[32m    if (this.client.ws.connection.status === Constants.Status.READY && notSame) {[m
[32m+[m[32m      /**[m
[32m+[m[32m       * Emitted whenever a guild member changes - i.e. new role, removed role, nickname.[m
[32m+[m[32m       * @event Client#guildMemberUpdate[m
[32m+[m[32m       * @param {GuildMember} oldMember The member before the update[m
[32m+[m[32m       * @param {GuildMember} newMember The member after the update[m
[32m+[m[32m       */[m
[32m+[m[32m      this.client.emit(Constants.Events.GUILD_MEMBER_UPDATE, oldMember, member);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return {[m
[32m+[m[32m      old: oldMember,[m
[32m+[m[32m      mem: member,[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  _removeMember(guildMember) {[m
[32m+[m[32m    if (guildMember.voiceChannel) guildMember.voiceChannel.members.delete(guildMember.id);[m
[32m+[m[32m    this.members.delete(guildMember.id);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  _memberSpeakUpdate(user, speaking) {[m
[32m+[m[32m    const member = this.members.get(user);[m
[32m+[m[32m    if (member && member.speaking !== speaking) {[m
[32m+[m[32m      member.speaking = speaking;[m
[32m+[m[32m      /**[m
[32m+[m[32m       * Emitted once a guild member starts/stops speaking.[m
[32m+[m[32m       * @event Client#guildMemberSpeaking[m
[32m+[m[32m       * @param {GuildMember} member The member that started/stopped speaking[m
[32m+[m[32m       * @param {boolean} speaking Whether or not the member is speaking[m
[32m+[m[32m       */[m
[32m+[m[32m      this.client.emit(Constants.Events.GUILD_MEMBER_SPEAKING, member, speaking);[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  _setPresence(id, presence) {[m
[32m+[m[32m    if (this.presences.get(id)) {[m
[32m+[m[32m      this.presences.get(id).update(presence);[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m[32m    this.presences.set(id, new Presence(presence, this.client));[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Set the position of a role in this guild.[m
[32m+[m[32m   * @param {string|Role} role The role to edit, can be a role object or a role ID[m
[32m+[m[32m   * @param {number} position The new position of the role[m
[32m+[m[32m   * @param {boolean} [relative=false] Position Moves the role relative to its current position[m
[32m+[m[32m   * @returns {Promise<Guild>}[m
[32m+[m[32m   */[m
[32m+[m[32m  setRolePosition(role, position, relative = false) {[m
[32m+[m[32m    if (typeof role === 'string') {[m
[32m+[m[32m      role = this.roles.get(role);[m
[32m+[m[32m      if (!role) return Promise.reject(new Error('Supplied role is not a role or snowflake.'));[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    position = Number(position);[m
[32m+[m[32m    if (isNaN(position)) return Promise.reject(new Error('Supplied position is not a number.'));[m
[32m+[m
[32m+[m[32m    let updatedRoles = this._sortedRoles.array();[m
[32m+[m
[32m+[m[32m    Util.moveElementInArray(updatedRoles, role, position, relative);[m
[32m+[m
[32m+[m[32m    updatedRoles = updatedRoles.map((r, i) => ({ id: r.id, position: i }));[m
[32m+[m[32m    return this.client.rest.methods.setRolePositions(this.id, updatedRoles);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Set the position of a channel in this guild.[m
[32m+[m[32m   * @param {string|GuildChannel} channel The channel to edit, can be a channel object or a channel ID[m
[32m+[m[32m   * @param {number} position The new position of the channel[m
[32m+[m[32m   * @param {boolean} [relative=false] Position Moves the channel relative to its current position[m
[32m+[m[32m   * @returns {Promise<Guild>}[m
[32m+[m[32m   */[m
[32m+[m[32m  setChannelPosition(channel, position, relative = false) {[m
[32m+[m[32m    if (typeof channel === 'string') {[m
[32m+[m[32m      channel = this.channels.get(channel);[m
[32m+[m[32m      if (!channel) return Promise.reject(new Error('Supplied channel is not a channel or snowflake.'));[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    position = Number(position);[m
[32m+[m[32m    if (isNaN(position)) return Promise.reject(new Error('Supplied position is not a number.'));[m
[32m+[m
[32m+[m[32m    let updatedChannels = this._sortedChannels(channel.type).array();[m
[32m+[m
[32m+[m[32m    Util.moveElementInArray(updatedChannels, channel, position, relative);[m
[32m+[m
[32m+[m[32m    updatedChannels = updatedChannels.map((r, i) => ({ id: r.id, position: i }));[m
[32m+[m[32m    return this.client.rest.methods.setChannelPositions(this.id, updatedChannels);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Fetches a collection of channels in the current guild sorted by position.[m
[32m+[m[32m   * @param {string} type The channel type[m
[32m+[m[32m   * @returns {Collection<Snowflake, GuildChannel>}[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  _sortedChannels(type) {[m
[32m+[m[32m    return this._sortPositionWithID(this.channels.filter(c => {[m
[32m+[m[32m      if (type === 'voice' && c.type === 'voice') return true;[m
[32m+[m[32m      else if (type !== 'voice' && c.type !== 'voice') return true;[m
[32m+[m[32m      else return type === c.type;[m
[32m+[m[32m    }));[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sorts a collection by object position or ID if the positions are equivalent.[m
[32m+[m[32m   * Intended to be identical to Discord's sorting method.[m
[32m+[m[32m   * @param {Collection} collection The collection to sort[m
[32m+[m[32m   * @returns {Collection}[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  _sortPositionWithID(collection) {[m
[32m+[m[32m    return collection.sort((a, b) =>[m
[32m+[m[32m      a.position !== b.position ?[m
[32m+[m[32m        a.position - b.position :[m
[32m+[m[32m        Long.fromString(b.id).sub(Long.fromString(a.id)).toNumber()[m
[32m+[m[32m    );[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * The `#general` TextChannel of the guild[m
[32m+[m[32m * @name Guild#defaultChannel[m
[32m+[m[32m * @type {TextChannel}[m
[32m+[m[32m * @readonly[m
[32m+[m[32m * @deprecated[m
[32m+[m[32m */[m
[32m+[m[32mObject.defineProperty(Guild.prototype, 'defaultChannel', {[m
[32m+[m[32m  get: util.deprecate(function defaultChannel() {[m
[32m+[m[32m    return this.channels.get(this.id);[m
[32m+[m[32m  }, 'Guild#defaultChannel: This property is obsolete, will be removed in v12.0.0, and may not function as expected.'),[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mGuild.prototype.allowDMs =[m
[32m+[m[32m  util.deprecate(Guild.prototype.allowDMs, 'Guild#allowDMs: userbot methods will be removed');[m
[32m+[m
[32m+[m[32mGuild.prototype.acknowledge =[m
[32m+[m[32m  util.deprecate(Guild.prototype.acknowledge, 'Guild#acknowledge: userbot methods will be removed');[m
[32m+[m
[32m+[m[32mGuild.prototype.setPosition =[m
[32m+[m[32m  util.deprecate(Guild.prototype.setPosition, 'Guild#setPosition: userbot methods will be removed');[m
[32m+[m
[32m+[m[32mGuild.prototype.search =[m
[32m+[m[32m  util.deprecate(Guild.prototype.search, 'Guild#search: userbot methods will be removed');[m
[32m+[m
[32m+[m[32mGuild.prototype.sync =[m
[32m+[m[32m  util.deprecate(Guild.prototype.sync, 'Guild#sync:, userbot methods will be removed');[m
[32m+[m
[32m+[m[32mmodule.exports = Guild;[m
[1mdiff --git a/node_modules/discord.js/src/structures/GuildAuditLogs.js b/node_modules/discord.js/src/structures/GuildAuditLogs.js[m
[1mnew file mode 100644[m
[1mindex 0000000..be86fcf[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/structures/GuildAuditLogs.js[m
[36m@@ -0,0 +1,371 @@[m
[32m+[m[32mconst Collection = require('../util/Collection');[m
[32m+[m[32mconst Snowflake = require('../util/Snowflake');[m
[32m+[m[32mconst Webhook = require('./Webhook');[m
[32m+[m[32mconst Invite = require('./Invite');[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * The target type of an entry, e.g. `GUILD`. Here are the available types:[m
[32m+[m[32m * * GUILD[m
[32m+[m[32m * * CHANNEL[m
[32m+[m[32m * * USER[m
[32m+[m[32m * * ROLE[m
[32m+[m[32m * * INVITE[m
[32m+[m[32m * * WEBHOOK[m
[32m+[m[32m * * EMOJI[m
[32m+[m[32m * * MESSAGE[m
[32m+[m[32m * @typedef {string} AuditLogTargetType[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Key mirror of all available audit log targets.[m
[32m+[m[32m * @name GuildAuditLogs.Targets[m
[32m+[m[32m * @type {AuditLogTargetType}[m
[32m+[m[32m */[m
[32m+[m[32mconst Targets = {[m
[32m+[m[32m  ALL: 'ALL',[m
[32m+[m[32m  GUILD: 'GUILD',[m
[32m+[m[32m  CHANNEL: 'CHANNEL',[m
[32m+[m[32m  USER: 'USER',[m
[32m+[m[32m  ROLE: 'ROLE',[m
[32m+[m[32m  INVITE: 'INVITE',[m
[32m+[m[32m  WEBHOOK: 'WEBHOOK',[m
[32m+[m[32m  EMOJI: 'EMOJI',[m
[32m+[m[32m  MESSAGE: 'MESSAGE',[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * The action of an entry. Here are the available actions:[m
[32m+[m[32m * * ALL: null[m
[32m+[m[32m * * GUILD_UPDATE: 1[m
[32m+[m[32m * * CHANNEL_CREATE: 10[m
[32m+[m[32m * * CHANNEL_UPDATE: 11[m
[32m+[m[32m * * CHANNEL_DELETE: 12[m
[32m+[m[32m * * CHANNEL_OVERWRITE_CREATE: 13[m
[32m+[m[32m * * CHANNEL_OVERWRITE_UPDATE: 14[m
[32m+[m[32m * * CHANNEL_OVERWRITE_DELETE: 15[m
[32m+[m[32m * * MEMBER_KICK: 20[m
[32m+[m[32m * * MEMBER_PRUNE: 21[m
[32m+[m[32m * * MEMBER_BAN_ADD: 22[m
[32m+[m[32m * * MEMBER_BAN_REMOVE: 23[m
[32m+[m[32m * * MEMBER_UPDATE: 24[m
[32m+[m[32m * * MEMBER_ROLE_UPDATE: 25[m
[32m+[m[32m * * ROLE_CREATE: 30[m
[32m+[m[32m * * ROLE_UPDATE: 31[m
[32m+[m[32m * * ROLE_DELETE: 32[m
[32m+[m[32m * * INVITE_CREATE: 40[m
[32m+[m[32m * * INVITE_UPDATE: 41[m
[32m+[m[32m * * INVITE_DELETE: 42[m
[32m+[m[32m * * WEBHOOK_CREATE: 50[m
[32m+[m[32m * * WEBHOOK_UPDATE: 51[m
[32m+[m[32m * * WEBHOOK_DELETE: 52[m
[32m+[m[32m * * EMOJI_CREATE: 60[m
[32m+[m[32m * * EMOJI_UPDATE: 61[m
[32m+[m[32m * * EMOJI_DELETE: 62[m
[32m+[m[32m * * MESSAGE_DELETE: 72[m
[32m+[m[32m * @typedef {?number|string} AuditLogAction[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * All available actions keyed under their names to their numeric values.[m
[32m+[m[32m * @name GuildAuditLogs.Actions[m
[32m+[m[32m * @type {AuditLogAction}[m
[32m+[m[32m */[m
[32m+[m[32mconst Actions = {[m
[32m+[m[32m  ALL: null,[m
[32m+[m[32m  GUILD_UPDATE: 1,[m
[32m+[m[32m  CHANNEL_CREATE: 10,[m
[32m+[m[32m  CHANNEL_UPDATE: 11,[m
[32m+[m[32m  CHANNEL_DELETE: 12,[m
[32m+[m[32m  CHANNEL_OVERWRITE_CREATE: 13,[m
[32m+[m[32m  CHANNEL_OVERWRITE_UPDATE: 14,[m
[32m+[m[32m  CHANNEL_OVERWRITE_DELETE: 15,[m
[32m+[m[32m  MEMBER_KICK: 20,[m
[32m+[m[32m  MEMBER_PRUNE: 21,[m
[32m+[m[32m  MEMBER_BAN_ADD: 22,[m
[32m+[m[32m  MEMBER_BAN_REMOVE: 23,[m
[32m+[m[32m  MEMBER_UPDATE: 24,[m
[32m+[m[32m  MEMBER_ROLE_UPDATE: 25,[m
[32m+[m[32m  ROLE_CREATE: 30,[m
[32m+[m[32m  ROLE_UPDATE: 31,[m
[32m+[m[32m  ROLE_DELETE: 32,[m
[32m+[m[32m  INVITE_CREATE: 40,[m
[32m+[m[32m  INVITE_UPDATE: 41,[m
[32m+[m[32m  INVITE_DELETE: 42,[m
[32m+[m[32m  WEBHOOK_CREATE: 50,[m
[32m+[m[32m  WEBHOOK_UPDATE: 51,[m
[32m+[m[32m  WEBHOOK_DELETE: 52,[m
[32m+[m[32m  EMOJI_CREATE: 60,[m
[32m+[m[32m  EMOJI_UPDATE: 61,[m
[32m+[m[32m  EMOJI_DELETE: 62,[m
[32m+[m[32m  MESSAGE_DELETE: 72,[m
[32m+[m[32m};[m
[32m+[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Audit logs entries are held in this class.[m
[32m+[m[32m */[m
[32m+[m[32mclass GuildAuditLogs {[m
[32m+[m[32m  constructor(guild, data) {[m
[32m+[m[32m    if (data.users) for (const user of data.users) guild.client.dataManager.newUser(user);[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Cached webhooks[m
[32m+[m[32m     * @type {Collection<Snowflake, Webhook>}[m
[32m+[m[32m     * @private[m
[32m+[m[32m     */[m
[32m+[m[32m    this.webhooks = new Collection();[m
[32m+[m[32m    if (data.webhooks) {[m
[32m+[m[32m      for (const hook of data.webhooks) {[m
[32m+[m[32m        this.webhooks.set(hook.id, new Webhook(guild.client, hook));[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The entries for this guild's audit logs[m
[32m+[m[32m     * @type {Collection<Snowflake, GuildAuditLogsEntry>}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.entries = new Collection();[m
[32m+[m[32m    for (const item of data.audit_log_entries) {[m
[32m+[m[32m      const entry = new GuildAuditLogsEntry(this, guild, item);[m
[32m+[m[32m      this.entries.set(entry.id, entry);[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Handles possible promises for entry targets.[m
[32m+[m[32m   * @returns {Promise<GuildAuditLogs>}[m
[32m+[m[32m   */[m
[32m+[m[32m  static build(...args) {[m
[32m+[m[32m    const logs = new GuildAuditLogs(...args);[m
[32m+[m[32m    return Promise.all(logs.entries.map(e => e.target)).then(() => logs);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The target of an entry. It can be one of:[m
[32m+[m[32m   * * A guild[m
[32m+[m[32m   * * A user[m
[32m+[m[32m   * * A role[m
[32m+[m[32m   * * An emoji[m
[32m+[m[32m   * * An invite[m
[32m+[m[32m   * * A webhook[m
[32m+[m[32m   * * An object where the keys represent either the new value or the old value[m
[32m+[m[32m   * @typedef {?Object|Guild|User|Role|Emoji|Invite|Webhook} AuditLogEntryTarget[m
[32m+[m[32m   */[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Find target type from entry action.[m
[32m+[m[32m   * @param {number} target The action target[m
[32m+[m[32m   * @returns {?string}[m
[32m+[m[32m   */[m
[32m+[m[32m  static targetType(target) {[m
[32m+[m[32m    if (target < 10) return Targets.GUILD;[m
[32m+[m[32m    if (target < 20) return Targets.CHANNEL;[m
[32m+[m[32m    if (target < 30) return Targets.USER;[m
[32m+[m[32m    if (target < 40) return Targets.ROLE;[m
[32m+[m[32m    if (target < 50) return Targets.INVITE;[m
[32m+[m[32m    if (target < 60) return Targets.WEBHOOK;[m
[32m+[m[32m    if (target < 70) return Targets.EMOJI;[m
[32m+[m[32m    if (target < 80) return Targets.MESSAGE;[m
[32m+[m[32m    return null;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The action type of an entry, e.g. `CREATE`. Here are the available types:[m
[32m+[m[32m   * * CREATE[m
[32m+[m[32m   * * DELETE[m
[32m+[m[32m   * * UPDATE[m
[32m+[m[32m   * * ALL[m
[32m+[m[32m   * @typedef {string} AuditLogActionType[m
[32m+[m[32m   */[m
[32m+[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Finds the action type from the entry action.[m
[32m+[m[32m   * @param {AuditLogAction} action The action target[m
[32m+[m[32m   * @returns {AuditLogActionType}[m
[32m+[m[32m   */[m
[32m+[m[32m  static actionType(action) {[m
[32m+[m[32m    if ([[m
[32m+[m[32m      Actions.CHANNEL_CREATE,[m
[32m+[m[32m      Actions.CHANNEL_OVERWRITE_CREATE,[m
[32m+[m[32m      Actions.MEMBER_BAN_REMOVE,[m
[32m+[m[32m      Actions.ROLE_CREATE,[m
[32m+[m[32m      Actions.INVITE_CREATE,[m
[32m+[m[32m      Actions.WEBHOOK_CREATE,[m
[32m+[m[32m      Actions.EMOJI_CREATE,[m
[32m+[m[32m    ].includes(action)) return 'CREATE';[m
[32m+[m
[32m+[m[32m    if ([[m
[32m+[m[32m      Actions.CHANNEL_DELETE,[m
[32m+[m[32m      Actions.CHANNEL_OVERWRITE_DELETE,[m
[32m+[m[32m      Actions.MEMBER_KICK,[m
[32m+[m[32m      Actions.MEMBER_PRUNE,[m
[32m+[m[32m      Actions.MEMBER_BAN_ADD,[m
[32m+[m[32m      Actions.ROLE_DELETE,[m
[32m+[m[32m      Actions.INVITE_DELETE,[m
[32m+[m[32m      Actions.WEBHOOK_DELETE,[m
[32m+[m[32m      Actions.EMOJI_DELETE,[m
[32m+[m[32m      Actions.MESSAGE_DELETE,[m
[32m+[m[32m    ].includes(action)) return 'DELETE';[m
[32m+[m
[32m+[m[32m    if ([[m
[32m+[m[32m      Actions.GUILD_UPDATE,[m
[32m+[m[32m      Actions.CHANNEL_UPDATE,[m
[32m+[m[32m      Actions.CHANNEL_OVERWRITE_UPDATE,[m
[32m+[m[32m      Actions.MEMBER_UPDATE,[m
[32m+[m[32m      Actions.MEMBER_ROLE_UPDATE,[m
[32m+[m[32m      Actions.ROLE_UPDATE,[m
[32m+[m[32m      Actions.INVITE_UPDATE,[m
[32m+[m[32m      Actions.WEBHOOK_UPDATE,[m
[32m+[m[32m      Actions.EMOJI_UPDATE,[m
[32m+[m[32m    ].includes(action)) return 'UPDATE';[m
[32m+[m
[32m+[m[32m    return 'ALL';[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Audit logs entry.[m
[32m+[m[32m */[m
[32m+[m[32mclass GuildAuditLogsEntry {[m
[32m+[m[32m  constructor(logs, guild, data) {[m
[32m+[m[32m    const targetType = GuildAuditLogs.targetType(data.action_type);[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The target type of this entry[m
[32m+[m[32m     * @type {AuditLogTargetType}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.targetType = targetType;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The action type of this entry[m
[32m+[m[32m     * @type {AuditLogActionType}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.actionType = GuildAuditLogs.actionType(data.action_type);[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Specific action type of this entry in its string representation[m
[32m+[m[32m     * @type {AuditLogAction}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.action = Object.keys(Actions).find(k => Actions[k] === data.action_type);[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The reason of this entry[m
[32m+[m[32m     * @type {?string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.reason = data.reason || null;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The user that executed this entry[m
[32m+[m[32m     * @type {User}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.executor = guild.client.users.get(data.user_id);[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * An entry in the audit log representing a specific change.[m
[32m+[m[32m     * @typedef {object} AuditLogChange[m
[32m+[m[32m     * @property {string} key The property that was changed, e.g. `nick` for nickname changes[m
[32m+[m[32m     * @property {*} [old] The old value of the change, e.g. for nicknames, the old nickname[m
[32m+[m[32m     * @property {*} [new] The new value of the change, e.g. for nicknames, the new nickname[m
[32m+[m[32m     */[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Specific property changes[m
[32m+[m[32m     * @type {AuditLogChange[]}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.changes = data.changes ? data.changes.map(c => ({ key: c.key, old: c.old_value, new: c.new_value })) : null;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The ID of this entry[m
[32m+[m[32m     * @type {Snowflake}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.id = data.id;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Any extra data from the entry[m
[32m+[m[32m     * @type {?Object|Role|GuildMember}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.extra = null;[m
[32m+[m[32m    if (data.options) {[m
[32m+[m[32m      if (data.action_type === Actions.MEMBER_PRUNE) {[m
[32m+[m[32m        this.extra = {[m
[32m+[m[32m          removed: data.options.members_removed,[m
[32m+[m[32m          days: data.options.delete_member_days,[m
[32m+[m[32m        };[m
[32m+[m[32m      } else if (data.action_type === Actions.MESSAGE_DELETE) {[m
[32m+[m[32m        this.extra = {[m
[32m+[m[32m          count: data.options.count,[m
[32m+[m[32m          channel: guild.channels.get(data.options.channel_id),[m
[32m+[m[32m        };[m
[32m+[m[32m      } else {[m
[32m+[m[32m        switch (data.options.type) {[m
[32m+[m[32m          case 'member':[m
[32m+[m[32m            this.extra = guild.members.get(data.options.id);[m
[32m+[m[32m            if (!this.extra) this.extra = { id: data.options.id };[m
[32m+[m[32m            break;[m
[32m+[m[32m          case 'role':[m
[32m+[m[32m            this.extra = guild.roles.get(data.options.id);[m
[32m+[m[32m            if (!this.extra) this.extra = { id: data.options.id, name: data.options.role_name };[m
[32m+[m[32m            break;[m
[32m+[m[32m          default:[m
[32m+[m[32m            break;[m
[32m+[m[32m        }[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if ([Targets.USER, Targets.GUILD].includes(targetType)) {[m
[32m+[m[32m      /**[m
[32m+[m[32m       * The target of this entry[m
[32m+[m[32m       * @type {AuditLogEntryTarget}[m
[32m+[m[32m       */[m
[32m+[m[32m      this.target = guild.client[`${targetType.toLowerCase()}s`].get(data.target_id);[m
[32m+[m[32m    } else if (targetType === Targets.WEBHOOK) {[m
[32m+[m[32m      this.target = logs.webhooks.get(data.target_id) ||[m
[32m+[m[32m        new Webhook(guild.client,[m
[32m+[m[32m          this.changes.reduce((o, c) => {[m
[32m+[m[32m            o[c.key] = c.new || c.old;[m
[32m+[m[32m            return o;[m
[32m+[m[32m          }, {[m
[32m+[m[32m            id: data.target_id,[m
[32m+[m[32m            guild_id: guild.id,[m
[32m+[m[32m          }));[m
[32m+[m[32m    } else if (targetType === Targets.INVITE) {[m
[32m+[m[32m      const changes = this.changes.reduce((o, c) => {[m
[32m+[m[32m        o[c.key] = c.new || c.old;[m
[32m+[m[32m        return o;[m
[32m+[m[32m      }, {[m
[32m+[m[32m        id: data.target_id,[m
[32m+[m[32m        guild,[m
[32m+[m[32m      });[m
[32m+[m[32m      changes.channel = { id: changes.channel_id };[m
[32m+[m[32m      this.target = new Invite(guild.client, changes);[m
[32m+[m[32m    } else if (targetType === Targets.MESSAGE) {[m
[32m+[m[32m      this.target = guild.client.users.get(data.target_id);[m
[32m+[m[32m    } else {[m
[32m+[m[32m      this.target = guild[`${targetType.toLowerCase()}s`].get(data.target_id);[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The timestamp this entry was created at[m
[32m+[m[32m   * @type {number}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get createdTimestamp() {[m
[32m+[m[32m    return Snowflake.deconstruct(this.id).timestamp;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The time this entry was created[m
[32m+[m[32m   * @type {Date}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get createdAt() {[m
[32m+[m[32m    return new Date(this.createdTimestamp);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mGuildAuditLogs.Actions = Actions;[m
[32m+[m[32mGuildAuditLogs.Targets = Targets;[m
[32m+[m[32mGuildAuditLogs.Entry = GuildAuditLogsEntry;[m
[32m+[m
[32m+[m[32mmodule.exports = GuildAuditLogs;[m
[1mdiff --git a/node_modules/discord.js/src/structures/GuildChannel.js b/node_modules/discord.js/src/structures/GuildChannel.js[m
[1mnew file mode 100644[m
[1mindex 0000000..3d1988a[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/structures/GuildChannel.js[m
[36m@@ -0,0 +1,537 @@[m
[32m+[m[32mconst Channel = require('./Channel');[m
[32m+[m[32mconst Role = require('./Role');[m
[32m+[m[32mconst PermissionOverwrites = require('./PermissionOverwrites');[m
[32m+[m[32mconst Permissions = require('../util/Permissions');[m
[32m+[m[32mconst Collection = require('../util/Collection');[m
[32m+[m[32mconst Constants = require('../util/Constants');[m
[32m+[m[32mconst Invite = require('./Invite');[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Represents a guild channel (i.e. text channels and voice channels).[m
[32m+[m[32m * @extends {Channel}[m
[32m+[m[32m */[m
[32m+[m[32mclass GuildChannel extends Channel {[m
[32m+[m[32m  constructor(guild, data) {[m
[32m+[m[32m    super(guild.client, data);[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The guild the channel is in[m
[32m+[m[32m     * @type {Guild}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.guild = guild;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  setup(data) {[m
[32m+[m[32m    super.setup(data);[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The name of the guild channel[m
[32m+[m[32m     * @type {string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.name = data.name;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The position of the channel in the list[m
[32m+[m[32m     * @type {number}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.position = data.position;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The ID of the category parent of this channel[m
[32m+[m[32m     * @type {?Snowflake}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.parentID = data.parent_id;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * A map of permission overwrites in this channel for roles and users[m
[32m+[m[32m     * @type {Collection<Snowflake, PermissionOverwrites>}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.permissionOverwrites = new Collection();[m
[32m+[m[32m    if (data.permission_overwrites) {[m
[32m+[m[32m      for (const overwrite of data.permission_overwrites) {[m
[32m+[m[32m        this.permissionOverwrites.set(overwrite.id, new PermissionOverwrites(this, overwrite));[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The position of the channel[m
[32m+[m[32m   * @type {number}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get calculatedPosition() {[m
[32m+[m[32m    const sorted = this.guild._sortedChannels(this.type);[m
[32m+[m[32m    return sorted.array().indexOf(sorted.get(this.id));[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The category parent of this channel[m
[32m+[m[32m   * @type {?CategoryChannel}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get parent() {[m
[32m+[m[32m    return this.guild.channels.get(this.parentID) || null;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Gets the overall set of permissions for a user in this channel, taking into account channel overwrites.[m
[32m+[m[32m   * @param {GuildMemberResolvable} member The user that you want to obtain the overall permissions for[m
[32m+[m[32m   * @returns {?Permissions}[m
[32m+[m[32m   */[m
[32m+[m[32m  memberPermissions(member) {[m
[32m+[m[32m    member = this.client.resolver.resolveGuildMember(this.guild, member);[m
[32m+[m[32m    if (!member) return null;[m
[32m+[m
[32m+[m[32m    if (member.id === this.guild.ownerID) return new Permissions(member, Permissions.ALL);[m
[32m+[m
[32m+[m[32m    const roles = member.roles;[m
[32m+[m[32m    const permissions = new Permissions(roles.map(role => role.permissions));[m
[32m+[m
[32m+[m[32m    if (permissions.has(Permissions.FLAGS.ADMINISTRATOR)) return new Permissions(Permissions.ALL).freeze();[m
[32m+[m
[32m+[m[32m    const overwrites = this.overwritesFor(member, true, roles);[m
[32m+[m
[32m+[m[32m    return permissions[m
[32m+[m[32m      .remove(overwrites.everyone ? overwrites.everyone.deny : 0)[m
[32m+[m[32m      .add(overwrites.everyone ? overwrites.everyone.allow : 0)[m
[32m+[m[32m      .remove(overwrites.roles.length > 0 ? overwrites.roles.map(role => role.deny) : 0)[m
[32m+[m[32m      .add(overwrites.roles.length > 0 ? overwrites.roles.map(role => role.allow) : 0)[m
[32m+[m[32m      .remove(overwrites.member ? overwrites.member.deny : 0)[m
[32m+[m[32m      .add(overwrites.member ? overwrites.member.allow : 0)[m
[32m+[m[32m      .freeze();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Gets the overall set of permissions for a role in this channel, taking into account channel overwrites.[m
[32m+[m[32m   * @param {RoleResolvable} role The role that you want to obtain the overall permissions for[m
[32m+[m[32m   * @returns {?Permissions}[m
[32m+[m[32m   */[m
[32m+[m[32m  rolePermissions(role) {[m
[32m+[m[32m    if (role.permissions & Permissions.FLAGS.ADMINISTRATOR) return new Permissions(Permissions.ALL).freeze();[m
[32m+[m
[32m+[m[32m    const everyoneOverwrites = this.permissionOverwrites.get(this.guild.id);[m
[32m+[m[32m    const roleOverwrites = this.permissionOverwrites.get(role.id);[m
[32m+[m
[32m+[m[32m    return new Permissions(role.permissions)[m
[32m+[m[32m      .remove(everyoneOverwrites ? everyoneOverwrites.deny : 0)[m
[32m+[m[32m      .add(everyoneOverwrites ? everyoneOverwrites.allow : 0)[m
[32m+[m[32m      .remove(roleOverwrites ? roleOverwrites.deny : 0)[m
[32m+[m[32m      .add(roleOverwrites ? roleOverwrites.allow : 0)[m
[32m+[m[32m      .freeze();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Get the overall set of permissions for a member or role in this channel, taking into account channel overwrites.[m
[32m+[m[32m   * @param {GuildMemberResolvable|RoleResolvable} memberOrRole The member or role to obtain the overall permissions for[m
[32m+[m[32m   * @returns {?Permissions}[m
[32m+[m[32m   */[m
[32m+[m[32m  permissionsFor(memberOrRole) {[m
[32m+[m[32m    const member = this.guild.member(memberOrRole);[m
[32m+[m[32m    if (member) return this.memberPermissions(member);[m
[32m+[m[32m    const role = this.client.resolver.resolveRole(this.guild, memberOrRole);[m
[32m+[m[32m    if (role) return this.rolePermissions(role);[m
[32m+[m[32m    return null;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  overwritesFor(member, verified = false, roles = null) {[m
[32m+[m[32m    if (!verified) member = this.client.resolver.resolveGuildMember(this.guild, member);[m
[32m+[m[32m    if (!member) return [];[m
[32m+[m
[32m+[m[32m    roles = roles || member.roles;[m
[32m+[m[32m    const roleOverwrites = [];[m
[32m+[m[32m    let memberOverwrites;[m
[32m+[m[32m    let everyoneOverwrites;[m
[32m+[m
[32m+[m[32m    for (const overwrite of this.permissionOverwrites.values()) {[m
[32m+[m[32m      if (overwrite.id === this.guild.id) {[m
[32m+[m[32m        everyoneOverwrites = overwrite;[m
[32m+[m[32m      } else if (roles.has(overwrite.id)) {[m
[32m+[m[32m        roleOverwrites.push(overwrite);[m
[32m+[m[32m      } else if (overwrite.id === member.id) {[m
[32m+[m[32m        memberOverwrites = overwrite;[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return {[m
[32m+[m[32m      everyone: everyoneOverwrites,[m
[32m+[m[32m      roles: roleOverwrites,[m
[32m+[m[32m      member: memberOverwrites,[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Replaces the permission overwrites for a channel[m
[32m+[m[32m   * @param {Object} [options] Options[m
[32m+[m[32m   * @param {ChannelCreationOverwrites[]|Collection<Snowflake, PermissionOverwrites>} [options.overwrites][m
[32m+[m[32m   * Permission overwrites[m
[32m+[m[32m   * @param {string} [options.reason] Reason for updating the channel overwrites[m
[32m+[m[32m   * @returns {Promise<GuildChannel>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * channel.replacePermissionOverwrites({[m
[32m+[m[32m   * overwrites: [[m
[32m+[m[32m   *   {[m
[32m+[m[32m   *      id: message.author.id,[m
[32m+[m[32m   *      denied: ['VIEW_CHANNEL'],[m
[32m+[m[32m   *   },[m
[32m+[m[32m   * ],[m
[32m+[m[32m   *   reason: 'Needed to change permissions'[m
[32m+[m[32m   * });[m
[32m+[m[32m   */[m
[32m+[m[32m  replacePermissionOverwrites({ overwrites, reason } = {}) {[m
[32m+[m[32m    return this.edit({ permissionOverwrites: overwrites, reason })[m
[32m+[m[32m      .then(() => this);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * An object mapping permission flags to `true` (enabled), `null` (unset) or `false` (disabled).[m
[32m+[m[32m   * ```js[m
[32m+[m[32m   * {[m
[32m+[m[32m   *  'SEND_MESSAGES': true,[m
[32m+[m[32m   *  'EMBED_LINKS': null,[m
[32m+[m[32m   *  'ATTACH_FILES': false,[m
[32m+[m[32m   * }[m
[32m+[m[32m   * ```[m
[32m+[m[32m   * @typedef {Object} PermissionOverwriteOptions[m
[32m+[m[32m   */[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Overwrites the permissions for a user or role in this channel.[m
[32m+[m[32m   * @param {Role|Snowflake|UserResolvable} userOrRole The user or role to update[m
[32m+[m[32m   * @param {PermissionOverwriteOptions} options The configuration for the update[m
[32m+[m[32m   * @param {string} [reason] Reason for creating/editing this overwrite[m
[32m+[m[32m   * @returns {Promise<GuildChannel>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Overwrite permissions for a message author[m
[32m+[m[32m   * message.channel.overwritePermissions(message.author, {[m
[32m+[m[32m   *   SEND_MESSAGES: false[m
[32m+[m[32m   * })[m
[32m+[m[32m   *   .then(updated => console.log(updated.permissionOverwrites.get(message.author.id)))[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Overwite permissions for a message author and reset some[m
[32m+[m[32m   * message.channel.overwritePermissions(message.author, {[m
[32m+[m[32m   *   VIEW_CHANNEL: false,[m
[32m+[m[32m   *   SEND_MESSAGES: null[m
[32m+[m[32m   * })[m
[32m+[m[32m   *   .then(updated => console.log(updated.permissionOverwrites.get(message.author.id)))[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  overwritePermissions(userOrRole, options, reason) {[m
[32m+[m[32m    const payload = {[m
[32m+[m[32m      allow: 0,[m
[32m+[m[32m      deny: 0,[m
[32m+[m[32m    };[m
[32m+[m
[32m+[m[32m    if (userOrRole instanceof Role) {[m
[32m+[m[32m      payload.type = 'role';[m
[32m+[m[32m    } else if (this.guild.roles.has(userOrRole)) {[m
[32m+[m[32m      userOrRole = this.guild.roles.get(userOrRole);[m
[32m+[m[32m      payload.type = 'role';[m
[32m+[m[32m    } else {[m
[32m+[m[32m      userOrRole = this.client.resolver.resolveUser(userOrRole);[m
[32m+[m[32m      payload.type = 'member';[m
[32m+[m[32m      if (!userOrRole) return Promise.reject(new TypeError('Supplied parameter was neither a User nor a Role.'));[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    payload.id = userOrRole.id;[m
[32m+[m
[32m+[m[32m    const prevOverwrite = this.permissionOverwrites.get(userOrRole.id);[m
[32m+[m
[32m+[m[32m    if (prevOverwrite) {[m
[32m+[m[32m      payload.allow = prevOverwrite.allow;[m
[32m+[m[32m      payload.deny = prevOverwrite.deny;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    for (const perm in options) {[m
[32m+[m[32m      if (options[perm] === true) {[m
[32m+[m[32m        payload.allow |= Permissions.FLAGS[perm] || 0;[m
[32m+[m[32m        payload.deny &= ~(Permissions.FLAGS[perm] || 0);[m
[32m+[m[32m      } else if (options[perm] === false) {[m
[32m+[m[32m        payload.allow &= ~(Permissions.FLAGS[perm] || 0);[m
[32m+[m[32m        payload.deny |= Permissions.FLAGS[perm] || 0;[m
[32m+[m[32m      } else if (options[perm] === null) {[m
[32m+[m[32m        payload.allow &= ~(Permissions.FLAGS[perm] || 0);[m
[32m+[m[32m        payload.deny &= ~(Permissions.FLAGS[perm] || 0);[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return this.client.rest.methods.setChannelOverwrite(this, payload, reason).then(() => this);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Locks in the permission overwrites from the parent channel.[m
[32m+[m[32m   * @returns {Promise<GuildChannel>}[m
[32m+[m[32m   */[m
[32m+[m[32m  lockPermissions() {[m
[32m+[m[32m    if (!this.parent) return Promise.reject(new TypeError('Could not find a parent to this guild channel.'));[m
[32m+[m[32m    const permissionOverwrites = this.parent.permissionOverwrites.map(overwrite => ({[m
[32m+[m[32m      deny: overwrite.deny,[m
[32m+[m[32m      allow: overwrite.allow,[m
[32m+[m[32m      id: overwrite.id,[m
[32m+[m[32m      type: overwrite.type,[m
[32m+[m[32m    }));[m
[32m+[m[32m    return this.edit({ permissionOverwrites });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The data for a guild channel.[m
[32m+[m[32m   * @typedef {Object} ChannelData[m
[32m+[m[32m   * @property {string} [type] The type of the channel (Only when creating)[m
[32m+[m[32m   * @property {string} [name] The name of the channel[m
[32m+[m[32m   * @property {number} [position] The position of the channel[m
[32m+[m[32m   * @property {string} [topic] The topic of the text channel[m
[32m+[m[32m   * @property {boolean} [nsfw] Whether the channel is NSFW[m
[32m+[m[32m   * @property {number} [bitrate] The bitrate of the voice channel[m
[32m+[m[32m   * @property {number} [userLimit] The user limit of the channel[m
[32m+[m[32m   * @property {CategoryChannel|Snowflake} [parent] The parent or parent ID of the channel[m
[32m+[m[32m   * @property {ChannelCreationOverwrites[]|Collection<Snowflake, PermissionOverwrites>} [permissionOverwrites][m
[32m+[m[32m   * Overwrites of the channel[m
[32m+[m[32m   * @property {number} [rateLimitPerUser] The rate limit per user of the channel in seconds[m
[32m+[m[32m   */[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Edits the channel.[m
[32m+[m[32m   * @param {ChannelData} data The new data for the channel[m
[32m+[m[32m   * @param {string} [reason] Reason for editing this channel[m
[32m+[m[32m   * @returns {Promise<GuildChannel>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Edit a channel[m
[32m+[m[32m   * channel.edit({ name: 'new-channel' })[m
[32m+[m[32m   *   .then(console.log)[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  edit(data, reason) {[m
[32m+[m[32m    return this.client.rest.methods.updateChannel(this, data, reason).then(() => this);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Set a new name for the guild channel.[m
[32m+[m[32m   * @param {string} name The new name for the guild channel[m
[32m+[m[32m   * @param {string} [reason] Reason for changing the guild channel's name[m
[32m+[m[32m   * @returns {Promise<GuildChannel>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Set a new channel name[m
[32m+[m[32m   * channel.setName('not_general')[m
[32m+[m[32m   *   .then(newChannel => console.log(`Channel's new name is ${newChannel.name}`))[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  setName(name, reason) {[m
[32m+[m[32m    return this.edit({ name }, reason);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Set a new position for the guild channel.[m
[32m+[m[32m   * @param {number} position The new position for the guild channel[m
[32m+[m[32m   * @param {boolean} [relative=false] Move the position relative to its current value[m
[32m+[m[32m   * @returns {Promise<GuildChannel>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Set a new channel position[m
[32m+[m[32m   * channel.setPosition(2)[m
[32m+[m[32m   *   .then(newChannel => console.log(`Channel's new position is ${newChannel.position}`))[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  setPosition(position, relative) {[m
[32m+[m[32m    return this.guild.setChannelPosition(this, position, relative);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Set a new parent for the guild channel.[m
[32m+[m[32m   * @param {CategoryChannel|SnowFlake} parent The new parent for the guild channel[m
[32m+[m[32m   * @param {string} [reason] Reason for changing the guild channel's parent[m
[32m+[m[32m   * @returns {Promise<GuildChannel>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Sets the parent of a channel[m
[32m+[m[32m   * channel.setParent('174674066072928256')[m
[32m+[m[32m   *   .then(updated => console.log(`Set the category of ${updated.name} to ${updated.parent.name}`))[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  setParent(parent, reason) {[m
[32m+[m[32m    parent = this.client.resolver.resolveChannelID(parent);[m
[32m+[m[32m    return this.edit({ parent }, reason);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Set a new topic for the guild channel.[m
[32m+[m[32m   * @param {string} topic The new topic for the guild channel[m
[32m+[m[32m   * @param {string} [reason] Reason for changing the guild channel's topic[m
[32m+[m[32m   * @returns {Promise<GuildChannel>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Set a new channel topic[m
[32m+[m[32m   * channel.setTopic('Needs more rate limiting')[m
[32m+[m[32m   *   .then(updated => console.log(`Channel's new topic is ${updated.topic}`))[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  setTopic(topic, reason) {[m
[32m+[m[32m    return this.edit({ topic }, reason);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Create an invite to this guild channel.[m
[32m+[m[32m   * <warn>This is only available when using a bot account.</warn>[m
[32m+[m[32m   * @param {Object} [options={}] Options for the invite[m
[32m+[m[32m   * @param {boolean} [options.temporary=false] Whether members that joined via the invite should be automatically[m
[32m+[m[32m   * kicked after 24 hours if they have not yet received a role[m
[32m+[m[32m   * @param {number} [options.maxAge=86400] How long the invite should last (in seconds, 0 for forever)[m
[32m+[m[32m   * @param {number} [options.maxUses=0] Maximum number of uses[m
[32m+[m[32m   * @param {boolean} [options.unique=false] Create a unique invite, or use an existing one with similar settings[m
[32m+[m[32m   * @param {string} [reason] Reason for creating the invite[m
[32m+[m[32m   * @returns {Promise<Invite>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Create an invite to a channel[m
[32m+[m[32m   * channel.createInvite()[m
[32m+[m[32m   *   .then(invite => console.log(`Created an invite with a code of ${invite.code}`))[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  createInvite(options = {}, reason) {[m
[32m+[m[32m    return this.client.rest.methods.createChannelInvite(this, options, reason);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Clone this channel.[m
[32m+[m[32m   * @param {string} [name=this.name] Optional name for the new channel, otherwise it has the name of this channel[m
[32m+[m[32m   * @param {boolean} [withPermissions=true] Whether to clone the channel with this channel's permission overwrites[m
[32m+[m[32m   * @param {boolean} [withTopic=true] Whether to clone the channel with this channel's topic[m
[32m+[m[32m   * @param {string} [reason] Reason for cloning this channel[m
[32m+[m[32m   * @returns {Promise<GuildChannel>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Clone a channel[m
[32m+[m[32m   * channel.clone(undefined, true, false, 'Needed a clone')[m
[32m+[m[32m   *   .then(clone => console.log(`Cloned ${channel.name} to make a channel called ${clone.name}`))[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  clone(name = this.name, withPermissions = true, withTopic = true, reason) {[m
[32m+[m[32m    return this.guild.createChannel(name, {[m
[32m+[m[32m      type: this.type,[m
[32m+[m[32m      permissionOverwrites: withPermissions ? this.permissionOverwrites : undefined,[m
[32m+[m[32m      topic: withTopic ? this.topic : undefined,[m
[32m+[m[32m      reason,[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Fetches a collection of invites to this guild channel.[m
[32m+[m[32m   * Resolves with a collection mapping invites by their codes.[m
[32m+[m[32m   * @returns {Promise<Collection<string, Invite>>}[m
[32m+[m[32m   */[m
[32m+[m[32m  fetchInvites() {[m
[32m+[m[32m    return this.client.rest.makeRequest('get', Constants.Endpoints.Channel(this.id).invites, true)[m
[32m+[m[32m      .then(data => {[m
[32m+[m[32m        const invites = new Collection();[m
[32m+[m[32m        for (let invite of data) {[m
[32m+[m[32m          invite = new Invite(this.client, invite);[m
[32m+[m[32m          invites.set(invite.code, invite);[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        return invites;[m
[32m+[m[32m      });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Deletes this channel.[m
[32m+[m[32m   * @param {string} [reason] Reason for deleting this channel[m
[32m+[m[32m   * @returns {Promise<GuildChannel>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Delete the channel[m
[32m+[m[32m   * channel.delete('Making room for new channels')[m
[32m+[m[32m   *   .then(deleted => console.log(`Deleted ${deleted.name} to make room for new channels`))[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  delete(reason) {[m
[32m+[m[32m    return this.client.rest.methods.deleteChannel(this, reason);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Checks if this channel has the same type, topic, position, name, overwrites and ID as another channel.[m
[32m+[m[32m   * In most cases, a simple `channel.id === channel2.id` will do, and is much faster too.[m
[32m+[m[32m   * @param {GuildChannel} channel Channel to compare with[m
[32m+[m[32m   * @returns {boolean}[m
[32m+[m[32m   */[m
[32m+[m[32m  equals(channel) {[m
[32m+[m[32m    let equal = channel &&[m
[32m+[m[32m      this.id === channel.id &&[m
[32m+[m[32m      this.type === channel.type &&[m
[32m+[m[32m      this.topic === channel.topic &&[m
[32m+[m[32m      this.position === channel.position &&[m
[32m+[m[32m      this.name === channel.name;[m
[32m+[m
[32m+[m[32m    if (equal) {[m
[32m+[m[32m      if (this.permissionOverwrites && channel.permissionOverwrites) {[m
[32m+[m[32m        equal = this.permissionOverwrites.equals(channel.permissionOverwrites);[m
[32m+[m[32m      } else {[m
[32m+[m[32m        equal = !this.permissionOverwrites && !channel.permissionOverwrites;[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return equal;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Whether the channel is deletable by the client user[m
[32m+[m[32m   * @type {boolean}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get deletable() {[m
[32m+[m[32m    return this.id !== this.guild.id &&[m
[32m+[m[32m      this.permissionsFor(this.client.user).has(Permissions.FLAGS.MANAGE_CHANNELS);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Whether the channel is manageable by the client user[m
[32m+[m[32m   * @type {boolean}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get manageable() {[m
[32m+[m[32m    if (this.client.user.id === this.guild.ownerID) return true;[m
[32m+[m[32m    const permissions = this.permissionsFor(this.client.user);[m
[32m+[m[32m    if (!permissions) return false;[m
[32m+[m[32m    return permissions.has([Permissions.FLAGS.MANAGE_CHANNELS, Permissions.FLAGS.VIEW_CHANNEL]);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Whether the channel is muted[m
[32m+[m[32m   * <warn>This is only available when using a user account.</warn>[m
[32m+[m[32m   * @type {?boolean}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   * @deprecated[m
[32m+[m[32m   */[m
[32m+[m[32m  get muted() {[m
[32m+[m[32m    if (this.client.user.bot) return null;[m
[32m+[m[32m    try {[m
[32m+[m[32m      return this.client.user.guildSettings.get(this.guild.id).channelOverrides.get(this.id).muted;[m
[32m+[m[32m    } catch (err) {[m
[32m+[m[32m      return false;[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The type of message that should notify you[m
[32m+[m[32m   * <warn>This is only available when using a user account.</warn>[m
[32m+[m[32m   * @type {?MessageNotificationType}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   * @deprecated[m
[32m+[m[32m   */[m
[32m+[m[32m  get messageNotifications() {[m
[32m+[m[32m    if (this.client.user.bot) return null;[m
[32m+[m[32m    try {[m
[32m+[m[32m      return this.client.user.guildSettings.get(this.guild.id).channelOverrides.get(this.id).messageNotifications;[m
[32m+[m[32m    } catch (err) {[m
[32m+[m[32m      return Constants.MessageNotificationTypes[3];[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * When concatenated with a string, this automatically returns the channel's mention instead of the Channel object.[m
[32m+[m[32m   * @returns {string}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Logs: Hello from <#123456789012345678>[m
[32m+[m[32m   * console.log(`Hello from ${channel}`);[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Logs: Hello from <#123456789012345678>[m
[32m+[m[32m   * console.log('Hello from ' + channel);[m
[32m+[m[32m   */[m
[32m+[m[32m  toString() {[m
[32m+[m[32m    return `<#${this.id}>`;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = GuildChannel;[m
[1mdiff --git a/node_modules/discord.js/src/structures/GuildMember.js b/node_modules/discord.js/src/structures/GuildMember.js[m
[1mnew file mode 100644[m
[1mindex 0000000..e10f11d[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/structures/GuildMember.js[m
[36m@@ -0,0 +1,613 @@[m
[32m+[m[32mconst TextBasedChannel = require('./interfaces/TextBasedChannel');[m
[32m+[m[32mconst Role = require('./Role');[m
[32m+[m[32mconst Permissions = require('../util/Permissions');[m
[32m+[m[32mconst Collection = require('../util/Collection');[m
[32m+[m[32mconst { Presence } = require('./Presence');[m
[32m+[m[32mconst util = require('util');[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Represents a member of a guild on Discord.[m
[32m+[m[32m * @implements {TextBasedChannel}[m
[32m+[m[32m */[m
[32m+[m[32mclass GuildMember {[m
[32m+[m[32m  constructor(guild, data) {[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The client that instantiated this GuildMember[m
[32m+[m[32m     * @name GuildMember#client[m
[32m+[m[32m     * @type {Client}[m
[32m+[m[32m     * @readonly[m
[32m+[m[32m     */[m
[32m+[m[32m    Object.defineProperty(this, 'client', { value: guild.client });[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The guild that this member is part of[m
[32m+[m[32m     * @type {Guild}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.guild = guild;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The user that this member instance Represents[m
[32m+[m[32m     * @type {User}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.user = {};[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The timestamp this member joined the guild at[m
[32m+[m[32m     * @type {number}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.joinedTimestamp = null;[m
[32m+[m
[32m+[m[32m    this._roles = [];[m
[32m+[m[32m    if (data) this.setup(data);[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The ID of the last message sent by this member in their guild, if one was sent[m
[32m+[m[32m     * @type {?Snowflake}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.lastMessageID = null;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The Message object of the last message sent by this member in their guild, if one was sent[m
[32m+[m[32m     * @type {?Message}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.lastMessage = null;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Whether the member has been removed from the guild[m
[32m+[m[32m     * @type {boolean}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.deleted = false;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  setup(data) {[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Whether this member is deafened server-wide[m
[32m+[m[32m     * @type {boolean}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.serverDeaf = data.deaf;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Whether this member is muted server-wide[m
[32m+[m[32m     * @type {boolean}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.serverMute = data.mute;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Whether this member is self-muted[m
[32m+[m[32m     * @type {boolean}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.selfMute = data.self_mute;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Whether this member is self-deafened[m
[32m+[m[32m     * @type {boolean}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.selfDeaf = data.self_deaf;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The voice session ID of this member, if any[m
[32m+[m[32m     * @type {?Snowflake}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.voiceSessionID = data.session_id;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The voice channel ID of this member, if any[m
[32m+[m[32m     * @type {?Snowflake}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.voiceChannelID = data.channel_id;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Whether this member is speaking and the client is in the same channel[m
[32m+[m[32m     * @type {boolean}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.speaking = false;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The nickname of this member, if they have one[m
[32m+[m[32m     * @type {?string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.nickname = data.nick || null;[m
[32m+[m
[32m+[m[32m    if (data.joined_at) this.joinedTimestamp = new Date(data.joined_at).getTime();[m
[32m+[m
[32m+[m[32m    this.user = data.user;[m
[32m+[m[32m    this._roles = data.roles;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The time this member joined the guild[m
[32m+[m[32m   * @type {?Date}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get joinedAt() {[m
[32m+[m[32m    return this.joinedTimestamp ? new Date(this.joinedTimestamp) : null;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The presence of this member[m
[32m+[m[32m   * @type {Presence}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get presence() {[m
[32m+[m[32m    return this.frozenPresence || this.guild.presences.get(this.id) || new Presence(undefined, this.client);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * A list of roles that are applied to this member, mapped by the role ID[m
[32m+[m[32m   * @type {Collection<Snowflake, Role>}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get roles() {[m
[32m+[m[32m    const list = new Collection();[m
[32m+[m[32m    const everyoneRole = this.guild.roles.get(this.guild.id);[m
[32m+[m
[32m+[m[32m    if (everyoneRole) list.set(everyoneRole.id, everyoneRole);[m
[32m+[m
[32m+[m[32m    for (const roleID of this._roles) {[m
[32m+[m[32m      const role = this.guild.roles.get(roleID);[m
[32m+[m[32m      if (role) list.set(role.id, role);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return list;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The role of this member with the highest position[m
[32m+[m[32m   * @type {Role}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get highestRole() {[m
[32m+[m[32m    return this.roles.reduce((prev, role) => !prev || role.comparePositionTo(prev) > 0 ? role : prev);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The role of this member used to set their color[m
[32m+[m[32m   * @type {?Role}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get colorRole() {[m
[32m+[m[32m    const coloredRoles = this.roles.filter(role => role.color);[m
[32m+[m[32m    if (!coloredRoles.size) return null;[m
[32m+[m[32m    return coloredRoles.reduce((prev, role) => !prev || role.comparePositionTo(prev) > 0 ? role : prev);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The displayed color of this member in base 10[m
[32m+[m[32m   * @type {number}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get displayColor() {[m
[32m+[m[32m    const role = this.colorRole;[m
[32m+[m[32m    return (role && role.color) || 0;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The displayed color of this member in hexadecimal[m
[32m+[m[32m   * @type {string}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get displayHexColor() {[m
[32m+[m[32m    const role = this.colorRole;[m
[32m+[m[32m    return (role && role.hexColor) || '#000000';[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The role of this member used to hoist them in a separate category in the users list[m
[32m+[m[32m   * @type {?Role}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get hoistRole() {[m
[32m+[m[32m    const hoistedRoles = this.roles.filter(role => role.hoist);[m
[32m+[m[32m    if (!hoistedRoles.size) return null;[m
[32m+[m[32m    return hoistedRoles.reduce((prev, role) => !prev || role.comparePositionTo(prev) > 0 ? role : prev);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Whether this member is muted in any way[m
[32m+[m[32m   * @type {boolean}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get mute() {[m
[32m+[m[32m    return this.selfMute || this.serverMute;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Whether this member is deafened in any way[m
[32m+[m[32m   * @type {boolean}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get deaf() {[m
[32m+[m[32m    return this.selfDeaf || this.serverDeaf;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The voice channel this member is in, if any[m
[32m+[m[32m   * @type {?VoiceChannel}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get voiceChannel() {[m
[32m+[m[32m    return this.guild.channels.get(this.voiceChannelID);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The ID of this user[m
[32m+[m[32m   * @type {Snowflake}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get id() {[m
[32m+[m[32m    return this.user.id;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The nickname of this member, or their username if they don't have one[m
[32m+[m[32m   * @type {string}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get displayName() {[m
[32m+[m[32m    return this.nickname || this.user.username;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The overall set of permissions for this member, taking only roles into account[m
[32m+[m[32m   * @type {Permissions}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get permissions() {[m
[32m+[m[32m    if (this.user.id === this.guild.ownerID) return new Permissions(this, Permissions.ALL);[m
[32m+[m
[32m+[m[32m    let permissions = 0;[m
[32m+[m[32m    const roles = this.roles;[m
[32m+[m[32m    for (const role of roles.values()) permissions |= role.permissions;[m
[32m+[m
[32m+[m[32m    return new Permissions(this, permissions);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Whether this member is manageable in terms of role hierarchy by the client user[m
[32m+[m[32m   * @type {boolean}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get manageable() {[m
[32m+[m[32m    if (this.user.id === this.guild.ownerID) return false;[m
[32m+[m[32m    if (this.user.id === this.client.user.id) return false;[m
[32m+[m[32m    return this.guild.me.highestRole.comparePositionTo(this.highestRole) > 0;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Whether this member is kickable by the client user[m
[32m+[m[32m   * @type {boolean}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get kickable() {[m
[32m+[m[32m    return this.manageable && this.guild.me.permissions.has(Permissions.FLAGS.KICK_MEMBERS);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Whether this member is bannable by the client user[m
[32m+[m[32m   * @type {boolean}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get bannable() {[m
[32m+[m[32m    return this.manageable && this.guild.me.permissions.has(Permissions.FLAGS.BAN_MEMBERS);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Returns `channel.permissionsFor(guildMember)`. Returns permissions for this member in a guild channel,[m
[32m+[m[32m   * taking into account roles and permission overwrites.[m
[32m+[m[32m   * @param {ChannelResolvable} channel The guild channel to use as context[m
[32m+[m[32m   * @returns {?Permissions}[m
[32m+[m[32m   */[m
[32m+[m[32m  permissionsIn(channel) {[m
[32m+[m[32m    channel = this.client.resolver.resolveChannel(channel);[m
[32m+[m[32m    if (!channel || !channel.guild) throw new Error('Could not resolve channel to a guild channel.');[m
[32m+[m[32m    return channel.permissionsFor(this);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Checks if any of this member's roles have a permission.[m
[32m+[m[32m   * @param {PermissionResolvable} permission Permission(s) to check for[m
[32m+[m[32m   * @param {boolean} [explicit=false] Whether to require the role to explicitly have the exact permission[m
[32m+[m[32m   * **(deprecated)**[m
[32m+[m[32m   * @param {boolean} [checkAdmin] Whether to allow the administrator permission to override[m
[32m+[m[32m   * (takes priority over `explicit`)[m
[32m+[m[32m   * @param {boolean} [checkOwner] Whether to allow being the guild's owner to override[m
[32m+[m[32m   * (takes priority over `explicit`)[m
[32m+[m[32m   * @returns {boolean}[m
[32m+[m[32m   */[m
[32m+[m[32m  hasPermission(permission, explicit = false, checkAdmin, checkOwner) {[m
[32m+[m[32m    if (typeof checkAdmin === 'undefined') checkAdmin = !explicit;[m
[32m+[m[32m    if (typeof checkOwner === 'undefined') checkOwner = !explicit;[m
[32m+[m[32m    if (checkOwner && this.user.id === this.guild.ownerID) return true;[m
[32m+[m[32m    return this.roles.some(r => r.hasPermission(permission, undefined, checkAdmin));[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Checks whether the roles of this member allows them to perform specific actions.[m
[32m+[m[32m   * @param {PermissionResolvable} permissions The permissions to check for[m
[32m+[m[32m   * @param {boolean} [explicit=false] Whether to require the member to explicitly have the exact permissions[m
[32m+[m[32m   * @returns {boolean}[m
[32m+[m[32m   * @deprecated[m
[32m+[m[32m   */[m
[32m+[m[32m  hasPermissions(permissions, explicit = false) {[m
[32m+[m[32m    if (!explicit && this.user.id === this.guild.ownerID) return true;[m
[32m+[m[32m    return this.hasPermission(permissions, explicit);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Checks whether the roles of this member allows them to perform specific actions, and lists any missing permissions.[m
[32m+[m[32m   * @param {PermissionResolvable} permissions The permissions to check for[m
[32m+[m[32m   * @param {boolean} [explicit=false] Whether to require the member to explicitly have the exact permissions[m
[32m+[m[32m   * @returns {PermissionResolvable}[m
[32m+[m[32m   */[m
[32m+[m[32m  missingPermissions(permissions, explicit = false) {[m
[32m+[m[32m    if (!(permissions instanceof Array)) permissions = [permissions];[m
[32m+[m[32m    return this.permissions.missing(permissions, explicit);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The data for editing this member.[m
[32m+[m[32m   * @typedef {Object} GuildMemberEditData[m
[32m+[m[32m   * @property {string} [nick] The nickname to set for the member[m
[32m+[m[32m   * @property {Collection<Snowflake, Role>|RoleResolvable[]} [roles] The roles or role IDs to apply[m
[32m+[m[32m   * @property {boolean} [mute] Whether or not the member should be muted[m
[32m+[m[32m   * @property {boolean} [deaf] Whether or not the member should be deafened[m
[32m+[m[32m   * @property {ChannelResolvable|null} [channel] Channel to move member to (if they are connected to voice), or `null`[m
[32m+[m[32m   * if you want to kick them from voice[m
[32m+[m[32m   */[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Edits this member.[m
[32m+[m[32m   * @param {GuildMemberEditData} data The data to edit the member with[m
[32m+[m[32m   * @param {string} [reason] Reason for editing this user[m
[32m+[m[32m   * @returns {Promise<GuildMember>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Set a member's nickname and clear their roles[m
[32m+[m[32m   * message.member.edit({[m
[32m+[m[32m   *   nick: 'Cool Name',[m
[32m+[m[32m   *   roles: [][m
[32m+[m[32m   * })[m
[32m+[m[32m   *   .then(console.log)[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  edit(data, reason) {[m
[32m+[m[32m    return this.client.rest.methods.updateGuildMember(this, data, reason);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Mute/unmute this member.[m
[32m+[m[32m   * @param {boolean} mute Whether or not the member should be muted[m
[32m+[m[32m   * @param {string} [reason] Reason for muting or unmuting[m
[32m+[m[32m   * @returns {Promise<GuildMember>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Mute a member with a reason[m
[32m+[m[32m   * message.member.setMute(true, 'It needed to be done')[m
[32m+[m[32m   *   .then(() => console.log(`Muted ${message.member.displayName}`)))[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  setMute(mute, reason) {[m
[32m+[m[32m    return this.edit({ mute }, reason);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Deafen/undeafen this member.[m
[32m+[m[32m   * @param {boolean} deaf Whether or not the member should be deafened[m
[32m+[m[32m   * @param {string} [reason] Reason for deafening or undeafening[m
[32m+[m[32m   * @returns {Promise<GuildMember>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Deafen a member[m
[32m+[m[32m   * message.member.setDeaf(true)[m
[32m+[m[32m   *   .then(() => console.log(`Deafened ${message.member.displayName}`))[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  setDeaf(deaf, reason) {[m
[32m+[m[32m    return this.edit({ deaf }, reason);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Moves this member to the given channel.[m
[32m+[m[32m   * @param {ChannelResolvable|null} channel Channel to move the member to, or `null` if you want to kick them from[m
[32m+[m[32m   * voice[m
[32m+[m[32m   * @returns {Promise<GuildMember>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Moves a member to a voice channel[m
[32m+[m[32m   * member.setVoiceChannel('174674066072928256')[m
[32m+[m[32m   *   .then(() => console.log(`Moved ${member.displayName}`))[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  setVoiceChannel(channel) {[m
[32m+[m[32m    return this.edit({ channel });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets the roles applied to this member.[m
[32m+[m[32m   * @param {Collection<Snowflake, Role>|RoleResolvable[]} roles The roles or role IDs to apply[m
[32m+[m[32m   * @param {string} [reason] Reason for applying the roles[m
[32m+[m[32m   * @returns {Promise<GuildMember>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Set the member's roles to a single role[m
[32m+[m[32m   * guildMember.setRoles(['391156570408615936'])[m
[32m+[m[32m   *   .then(console.log)[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Remove all of the member's roles[m
[32m+[m[32m   * guildMember.setRoles([])[m
[32m+[m[32m   *   .then(member => console.log(`${member.displayName} now has ${member.roles.size} roles`))[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  setRoles(roles, reason) {[m
[32m+[m[32m    return this.edit({ roles }, reason);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Adds a single role to this member.[m
[32m+[m[32m   * @param {RoleResolvable} role The role or ID of the role to add[m
[32m+[m[32m   * @param {string} [reason] Reason for adding the role[m
[32m+[m[32m   * @returns {Promise<GuildMember>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Give a role to a member[m
[32m+[m[32m   * message.member.addRole('193654001089118208')[m
[32m+[m[32m   *   .then(console.log)[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  addRole(role, reason) {[m
[32m+[m[32m    if (!(role instanceof Role)) role = this.guild.roles.get(role);[m
[32m+[m[32m    if (!role) return Promise.reject(new TypeError('Supplied parameter was neither a Role nor a Snowflake.'));[m
[32m+[m[32m    return this.client.rest.methods.addMemberRole(this, role, reason);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Adds multiple roles to this member.[m
[32m+[m[32m   * @param {Collection<Snowflake, Role>|RoleResolvable[]} roles The roles or role IDs to add[m
[32m+[m[32m   * @param {string} [reason] Reason for adding the roles[m
[32m+[m[32m   * @returns {Promise<GuildMember>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Gives a member a few roles[m
[32m+[m[32m   * message.member.addRoles(['193654001089118208', '369308579892690945'])[m
[32m+[m[32m   *   .then(console.log)[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  addRoles(roles, reason) {[m
[32m+[m[32m    let allRoles;[m
[32m+[m[32m    if (roles instanceof Collection) {[m
[32m+[m[32m      allRoles = this._roles.slice();[m
[32m+[m[32m      for (const role of roles.values()) allRoles.push(role.id);[m
[32m+[m[32m    } else {[m
[32m+[m[32m      allRoles = this._roles.concat(roles);[m
[32m+[m[32m    }[m
[32m+[m[32m    return this.edit({ roles: allRoles }, reason);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Removes a single role from this member.[m
[32m+[m[32m   * @param {RoleResolvable} role The role or ID of the role to remove[m
[32m+[m[32m   * @param {string} [reason] Reason for removing the role[m
[32m+[m[32m   * @returns {Promise<GuildMember>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Remove a role from a member[m
[32m+[m[32m   * message.member.removeRole('193654001089118208')[m
[32m+[m[32m   *   .then(console.log)[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  removeRole(role, reason) {[m
[32m+[m[32m    if (!(role instanceof Role)) role = this.guild.roles.get(role);[m
[32m+[m[32m    if (!role) return Promise.reject(new TypeError('Supplied parameter was neither a Role nor a Snowflake.'));[m
[32m+[m[32m    return this.client.rest.methods.removeMemberRole(this, role, reason);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Removes multiple roles from this member.[m
[32m+[m[32m   * @param {Collection<Snowflake, Role>|RoleResolvable[]} roles The roles or role IDs to remove[m
[32m+[m[32m   * @param {string} [reason] Reason for removing the roles[m
[32m+[m[32m   * @returns {Promise<GuildMember>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Removes a few roles from the member[m
[32m+[m[32m   * message.member.removeRoles(['193654001089118208', '369308579892690945'])[m
[32m+[m[32m   *   .then(console.log)[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  removeRoles(roles, reason) {[m
[32m+[m[32m    const allRoles = this._roles.slice();[m
[32m+[m[32m    if (roles instanceof Collection) {[m
[32m+[m[32m      for (const role of roles.values()) {[m
[32m+[m[32m        const index = allRoles.indexOf(role.id);[m
[32m+[m[32m        if (index >= 0) allRoles.splice(index, 1);[m
[32m+[m[32m      }[m
[32m+[m[32m    } else {[m
[32m+[m[32m      for (const role of roles) {[m
[32m+[m[32m        const index = allRoles.indexOf(role instanceof Role ? role.id : role);[m
[32m+[m[32m        if (index >= 0) allRoles.splice(index, 1);[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m    return this.edit({ roles: allRoles }, reason);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Set the nickname for this member.[m
[32m+[m[32m   * @param {string} nick The nickname for the guild member[m
[32m+[m[32m   * @param {string} [reason] Reason for setting the nickname[m
[32m+[m[32m   * @returns {Promise<GuildMember>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Update the member's nickname[m
[32m+[m[32m   * message.member.setNickname('Cool Name')[m
[32m+[m[32m   *   .then(console.log)[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  setNickname(nick, reason) {[m
[32m+[m[32m    return this.edit({ nick }, reason);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Creates a DM channel between the client and this member.[m
[32m+[m[32m   * @returns {Promise<DMChannel>}[m
[32m+[m[32m   */[m
[32m+[m[32m  createDM() {[m
[32m+[m[32m    return this.user.createDM();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Deletes any DMs with this guild member.[m
[32m+[m[32m   * @returns {Promise<DMChannel>}[m
[32m+[m[32m   */[m
[32m+[m[32m  deleteDM() {[m
[32m+[m[32m    return this.user.deleteDM();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Kick this member from the guild.[m
[32m+[m[32m   * @param {string} [reason] Reason for kicking user[m
[32m+[m[32m   * @returns {Promise<GuildMember>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Kick a member[m
[32m+[m[32m   * member.kick()[m
[32m+[m[32m   *   .then(() => console.log(`Kicked ${member.displayName}`))[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  kick(reason) {[m
[32m+[m[32m    return this.client.rest.methods.kickGuildMember(this.guild, this, reason);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Ban this member.[m
[32m+[m[32m   * @param {Object|number|string} [options] Ban options. If a number, the number of days to delete messages for, if a[m
[32m+[m[32m   * string, the ban reason. Supplying an object allows you to do both.[m
[32m+[m[32m   * @param {number} [options.days=0] Number of days of messages to delete[m
[32m+[m[32m   * @param {string} [options.reason] Reason for banning[m
[32m+[m[32m   * @returns {Promise<GuildMember>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Ban a guild member[m
[32m+[m[32m   * member.ban(7)[m
[32m+[m[32m   *   .then(() => console.log(`Banned ${member.displayName}`))[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  ban(options) {[m
[32m+[m[32m    return this.guild.ban(this, options);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * When concatenated with a string, this automatically concatenates the user's mention instead of the Member object.[m
[32m+[m[32m   * @returns {string}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Logs: Hello from <@123456789>![m
[32m+[m[32m   * console.log(`Hello from ${member}!`);[m
[32m+[m[32m   */[m
[32m+[m[32m  toString() {[m
[32m+[m[32m    return `<@${this.nickname ? '!' : ''}${this.user.id}>`;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  // These are here only for documentation purposes - they are implemented by TextBasedChannel[m
[32m+[m[32m  /* eslint-disable no-empty-function */[m
[32m+[m[32m  send() {}[m
[32m+[m[32m  sendMessage() {}[m
[32m+[m[32m  sendEmbed() {}[m
[32m+[m[32m  sendFile() {}[m
[32m+[m[32m  sendCode() {}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mTextBasedChannel.applyToClass(GuildMember);[m
[32m+[m
[32m+[m[32mGuildMember.prototype.hasPermissions = util.deprecate(GuildMember.prototype.hasPermissions,[m
[32m+[m[32m  'GuildMember#hasPermissions is deprecated - use GuildMember#hasPermission, it now takes an array');[m
[32m+[m[32mGuildMember.prototype.missingPermissions = util.deprecate(GuildMember.prototype.missingPermissions,[m
[32m+[m[32m  'GuildMember#missingPermissions is deprecated - use GuildMember#permissions.missing, it now takes an array');[m
[32m+[m
[32m+[m[32mmodule.exports = GuildMember;[m
[1mdiff --git a/node_modules/discord.js/src/structures/Invite.js b/node_modules/discord.js/src/structures/Invite.js[m
[1mnew file mode 100644[m
[1mindex 0000000..1d84cf5[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/structures/Invite.js[m
[36m@@ -0,0 +1,164 @@[m
[32m+[m[32mconst PartialGuild = require('./PartialGuild');[m
[32m+[m[32mconst PartialGuildChannel = require('./PartialGuildChannel');[m
[32m+[m[32mconst Constants = require('../util/Constants');[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Represents an invitation to a guild channel.[m
[32m+[m[32m * <warn>The only guaranteed properties are `code`, `url`, `guild`, and `channel`.[m
[32m+[m[32m * Other properties can be missing.</warn>[m
[32m+[m[32m */[m
[32m+[m[32mclass Invite {[m
[32m+[m[32m  constructor(client, data) {[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The client that instantiated the invite[m
[32m+[m[32m     * @name Invite#client[m
[32m+[m[32m     * @type {Client}[m
[32m+[m[32m     * @readonly[m
[32m+[m[32m     */[m
[32m+[m[32m    Object.defineProperty(this, 'client', { value: client });[m
[32m+[m
[32m+[m[32m    this.setup(data);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  setup(data) {[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The guild the invite is for. If this guild is already known, this will be a guild object. If the guild is[m
[32m+[m[32m     * unknown, this will be a PartialGuild object[m
[32m+[m[32m     * @type {Guild|PartialGuild}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.guild = this.client.guilds.get(data.guild.id) || new PartialGuild(this.client, data.guild);[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The code for this invite[m
[32m+[m[32m     * @type {string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.code = data.code;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The approximate number of online members of the guild this invite is for[m
[32m+[m[32m     * @type {number}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.presenceCount = data.approximate_presence_count;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The approximate total number of members of the guild this invite is for[m
[32m+[m[32m     * @type {number}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.memberCount = data.approximate_member_count;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The number of text channels the guild this invite goes to has[m
[32m+[m[32m     * @type {number}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.textChannelCount = data.guild.text_channel_count;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The number of voice channels the guild this invite goes to has[m
[32m+[m[32m     * @type {number}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.voiceChannelCount = data.guild.voice_channel_count;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Whether or not this invite is temporary[m
[32m+[m[32m     * @type {boolean}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.temporary = data.temporary;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The maximum age of the invite, in seconds[m
[32m+[m[32m     * @type {?number}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.maxAge = data.max_age;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * How many times this invite has been used[m
[32m+[m[32m     * @type {number}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.uses = data.uses;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The maximum uses of this invite[m
[32m+[m[32m     * @type {number}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.maxUses = data.max_uses;[m
[32m+[m
[32m+[m[32m    if (data.inviter) {[m
[32m+[m[32m      /**[m
[32m+[m[32m       * The user who created this invite[m
[32m+[m[32m       * @type {?User}[m
[32m+[m[32m       */[m
[32m+[m[32m      this.inviter = this.client.dataManager.newUser(data.inviter);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The channel the invite is for. If this channel is already known, this will be a GuildChannel object.[m
[32m+[m[32m     * If the channel is unknown, this will be a PartialGuildChannel object.[m
[32m+[m[32m     * @type {GuildChannel|PartialGuildChannel}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.channel = this.client.channels.get(data.channel.id) || new PartialGuildChannel(this.client, data.channel);[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The timestamp the invite was created at[m
[32m+[m[32m     * @type {number}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.createdTimestamp = new Date(data.created_at).getTime();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The time the invite was created[m
[32m+[m[32m   * @type {Date}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get createdAt() {[m
[32m+[m[32m    return new Date(this.createdTimestamp);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The timestamp the invite will expire at[m
[32m+[m[32m   * @type {number}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get expiresTimestamp() {[m
[32m+[m[32m    return this.createdTimestamp + (this.maxAge * 1000);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The time the invite will expire[m
[32m+[m[32m   * @type {Date}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get expiresAt() {[m
[32m+[m[32m    return new Date(this.expiresTimestamp);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The URL to the invite[m
[32m+[m[32m   * @type {string}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get url() {[m
[32m+[m[32m    return Constants.Endpoints.inviteLink(this.code);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Deletes this invite.[m
[32m+[m[32m   * @param {string} [reason] Reason for deleting this invite[m
[32m+[m[32m   * @returns {Promise<Invite>}[m
[32m+[m[32m   */[m
[32m+[m[32m  delete(reason) {[m
[32m+[m[32m    return this.client.rest.methods.deleteInvite(this, reason);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * When concatenated with a string, this automatically concatenates the invite's URL instead of the object.[m
[32m+[m[32m   * @returns {string}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Logs: Invite: https://discord.gg/A1b2C3[m
[32m+[m[32m   * console.log(`Invite: ${invite}`);[m
[32m+[m[32m   */[m
[32m+[m[32m  toString() {[m
[32m+[m[32m    return this.url;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = Invite;[m
[1mdiff --git a/node_modules/discord.js/src/structures/Message.js b/node_modules/discord.js/src/structures/Message.js[m
[1mnew file mode 100644[m
[1mindex 0000000..d53d8bf[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/structures/Message.js[m
[36m@@ -0,0 +1,605 @@[m
[32m+[m[32mconst Mentions = require('./MessageMentions');[m
[32m+[m[32mconst Attachment = require('./MessageAttachment');[m
[32m+[m[32mconst Embed = require('./MessageEmbed');[m
[32m+[m[32mconst RichEmbed = require('./RichEmbed');[m
[32m+[m[32mconst MessageReaction = require('./MessageReaction');[m
[32m+[m[32mconst ReactionCollector = require('./ReactionCollector');[m
[32m+[m[32mconst Util = require('../util/Util');[m
[32m+[m[32mconst Collection = require('../util/Collection');[m
[32m+[m[32mconst Constants = require('../util/Constants');[m
[32m+[m[32mconst Permissions = require('../util/Permissions');[m
[32m+[m[32mlet GuildMember;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Represents a message on Discord.[m
[32m+[m[32m */[m
[32m+[m[32mclass Message {[m
[32m+[m[32m  constructor(channel, data, client) {[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The client that instantiated the Message[m
[32m+[m[32m     * @name Message#client[m
[32m+[m[32m     * @type {Client}[m
[32m+[m[32m     * @readonly[m
[32m+[m[32m     */[m
[32m+[m[32m    Object.defineProperty(this, 'client', { value: client });[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The channel that the message was sent in[m
[32m+[m[32m     * @type {TextChannel|DMChannel|GroupDMChannel}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.channel = channel;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Whether this message has been deleted[m
[32m+[m[32m     * @type {boolean}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.deleted = false;[m
[32m+[m
[32m+[m[32m    if (data) this.setup(data);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  setup(data) { // eslint-disable-line complexity[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The ID of the message[m
[32m+[m[32m     * @type {Snowflake}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.id = data.id;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The type of the message[m
[32m+[m[32m     * @type {MessageType}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.type = Constants.MessageTypes[data.type];[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The content of the message[m
[32m+[m[32m     * @type {string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.content = data.content;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The author of the message[m
[32m+[m[32m     * @type {User}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.author = this.client.dataManager.newUser(data.author, !data.webhook_id);[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Represents the author of the message as a guild member[m
[32m+[m[32m     * Only available if the message comes from a guild where the author is still a member[m
[32m+[m[32m     * @type {?GuildMember}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.member = this.guild ? this.guild.member(this.author) || null : null;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Whether or not this message is pinned[m
[32m+[m[32m     * @type {boolean}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.pinned = data.pinned;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Whether or not the message was Text-To-Speech[m
[32m+[m[32m     * @type {boolean}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.tts = data.tts;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * A random number or string used for checking message delivery[m
[32m+[m[32m     * @type {string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.nonce = data.nonce;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Whether or not this message was sent by Discord, not actually a user (e.g. pin notifications)[m
[32m+[m[32m     * @type {boolean}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.system = data.type === 6;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * A list of embeds in the message - e.g. YouTube Player[m
[32m+[m[32m     * @type {MessageEmbed[]}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.embeds = data.embeds.map(e => new Embed(this, e));[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * A collection of attachments in the message - e.g. Pictures - mapped by their ID[m
[32m+[m[32m     * @type {Collection<Snowflake, MessageAttachment>}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.attachments = new Collection();[m
[32m+[m[32m    for (const attachment of data.attachments) this.attachments.set(attachment.id, new Attachment(this, attachment));[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The timestamp the message was sent at[m
[32m+[m[32m     * @type {number}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.createdTimestamp = new Date(data.timestamp).getTime();[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The timestamp the message was last edited at (if applicable)[m
[32m+[m[32m     * @type {?number}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.editedTimestamp = data.edited_timestamp ? new Date(data.edited_timestamp).getTime() : null;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * A collection of reactions to this message, mapped by the reaction ID[m
[32m+[m[32m     * @type {Collection<Snowflake, MessageReaction>}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.reactions = new Collection();[m
[32m+[m[32m    if (data.reactions && data.reactions.length > 0) {[m
[32m+[m[32m      for (const reaction of data.reactions) {[m
[32m+[m[32m        const id = reaction.emoji.id ? `${reaction.emoji.name}:${reaction.emoji.id}` : reaction.emoji.name;[m
[32m+[m[32m        this.reactions.set(id, new MessageReaction(this, reaction.emoji, reaction.count, reaction.me));[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * All valid mentions that the message contains[m
[32m+[m[32m     * @type {MessageMentions}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.mentions = new Mentions(this, data.mentions, data.mention_roles, data.mention_everyone);[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * ID of the webhook that sent the message, if applicable[m
[32m+[m[32m     * @type {?Snowflake}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.webhookID = data.webhook_id || null;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Whether this message is a hit in a search[m
[32m+[m[32m     * @type {?boolean}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.hit = typeof data.hit === 'boolean' ? data.hit : null;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The previous versions of the message, sorted with the most recent first[m
[32m+[m[32m     * @type {Message[]}[m
[32m+[m[32m     * @private[m
[32m+[m[32m     */[m
[32m+[m[32m    this._edits = [];[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Updates the message.[m
[32m+[m[32m   * @param {Object} data Raw Discord message update data[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  patch(data) {[m
[32m+[m[32m    const clone = Util.cloneObject(this);[m
[32m+[m[32m    this._edits.unshift(clone);[m
[32m+[m
[32m+[m[32m    if ('edited_timestamp' in data) this.editedTimestamp = new Date(data.edited_timestamp).getTime();[m
[32m+[m[32m    if ('content' in data) this.content = data.content;[m
[32m+[m[32m    if ('pinned' in data) this.pinned = data.pinned;[m
[32m+[m[32m    if ('tts' in data) this.tts = data.tts;[m
[32m+[m[32m    if ('embeds' in data) this.embeds = data.embeds.map(e => new Embed(this, e));[m
[32m+[m[32m    else this.embeds = this.embeds.slice();[m
[32m+[m
[32m+[m[32m    if ('attachments' in data) {[m
[32m+[m[32m      this.attachments = new Collection();[m
[32m+[m[32m      for (const attachment of data.attachments) this.attachments.set(attachment.id, new Attachment(this, attachment));[m
[32m+[m[32m    } else {[m
[32m+[m[32m      this.attachments = new Collection(this.attachments);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    this.mentions = new Mentions([m
[32m+[m[32m      this,[m
[32m+[m[32m      'mentions' in data ? data.mentions : this.mentions.users,[m
[32m+[m[32m      'mentions_roles' in data ? data.mentions_roles : this.mentions.roles,[m
[32m+[m[32m      'mention_everyone' in data ? data.mention_everyone : this.mentions.everyone[m
[32m+[m[32m    );[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The time the message was sent[m
[32m+[m[32m   * @type {Date}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get createdAt() {[m
[32m+[m[32m    return new Date(this.createdTimestamp);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The time the message was last edited at (if applicable)[m
[32m+[m[32m   * @type {?Date}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get editedAt() {[m
[32m+[m[32m    return this.editedTimestamp ? new Date(this.editedTimestamp) : null;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The guild the message was sent in (if in a guild channel)[m
[32m+[m[32m   * @type {?Guild}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get guild() {[m
[32m+[m[32m    return this.channel.guild || null;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The url to jump to the message[m
[32m+[m[32m   * @type {string}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get url() {[m
[32m+[m[32m    return `https://discordapp.com/channels/${this.guild ? this.guild.id : '@me'}/${this.channel.id}/${this.id}`;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The message contents with all mentions replaced by the equivalent text.[m
[32m+[m[32m   * If mentions cannot be resolved to a name, the relevant mention in the message content will not be converted.[m
[32m+[m[32m   * @type {string}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get cleanContent() {[m
[32m+[m[32m    return this.content[m
[32m+[m[32m      .replace(/@(everyone|here)/g, '@\u200b$1')[m
[32m+[m[32m      .replace(/<@!?[0-9]+>/g, input => {[m
[32m+[m[32m        const id = input.replace(/<|!|>|@/g, '');[m
[32m+[m[32m        if (this.channel.type === 'dm' || this.channel.type === 'group') {[m
[32m+[m[32m          return this.client.users.has(id) ? `@${this.client.users.get(id).username}` : input;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        const member = this.channel.guild.members.get(id);[m
[32m+[m[32m        if (member) {[m
[32m+[m[32m          if (member.nickname) return `@${member.nickname}`;[m
[32m+[m[32m          return `@${member.user.username}`;[m
[32m+[m[32m        } else {[m
[32m+[m[32m          const user = this.client.users.get(id);[m
[32m+[m[32m          if (user) return `@${user.username}`;[m
[32m+[m[32m          return input;[m
[32m+[m[32m        }[m
[32m+[m[32m      })[m
[32m+[m[32m      .replace(/<#[0-9]+>/g, input => {[m
[32m+[m[32m        const channel = this.client.channels.get(input.replace(/<|#|>/g, ''));[m
[32m+[m[32m        if (channel) return `#${channel.name}`;[m
[32m+[m[32m        return input;[m
[32m+[m[32m      })[m
[32m+[m[32m      .replace(/<@&[0-9]+>/g, input => {[m
[32m+[m[32m        if (this.channel.type === 'dm' || this.channel.type === 'group') return input;[m
[32m+[m[32m        const role = this.guild.roles.get(input.replace(/<|@|>|&/g, ''));[m
[32m+[m[32m        if (role) return `@${role.name}`;[m
[32m+[m[32m        return input;[m
[32m+[m[32m      });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Creates a reaction collector.[m
[32m+[m[32m   * @param {CollectorFilter} filter The filter to apply[m
[32m+[m[32m   * @param {ReactionCollectorOptions} [options={}] Options to send to the collector[m
[32m+[m[32m   * @returns {ReactionCollector}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Create a reaction collector[m
[32m+[m[32m   * const filter = (reaction, user) => reaction.emoji.name === '👌' && user.id === 'someID'[m
[32m+[m[32m   * const collector = message.createReactionCollector(filter, { time: 15000 });[m
[32m+[m[32m   * collector.on('collect', r => console.log(`Collected ${r.emoji.name}`));[m
[32m+[m[32m   * collector.on('end', collected => console.log(`Collected ${collected.size} items`));[m
[32m+[m[32m   */[m
[32m+[m[32m  createReactionCollector(filter, options = {}) {[m
[32m+[m[32m    return new ReactionCollector(this, filter, options);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * An object containing the same properties as CollectorOptions, but a few more:[m
[32m+[m[32m   * @typedef {ReactionCollectorOptions} AwaitReactionsOptions[m
[32m+[m[32m   * @property {string[]} [errors] Stop/end reasons that cause the promise to reject[m
[32m+[m[32m   */[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Similar to createMessageCollector but in promise form.[m
[32m+[m[32m   * Resolves with a collection of reactions that pass the specified filter.[m
[32m+[m[32m   * @param {CollectorFilter} filter The filter function to use[m
[32m+[m[32m   * @param {AwaitReactionsOptions} [options={}] Optional options to pass to the internal collector[m
[32m+[m[32m   * @returns {Promise<Collection<string, MessageReaction>>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Create a reaction collector[m
[32m+[m[32m   * const filter = (reaction, user) => reaction.emoji.name === '👌' && user.id === 'someID'[m
[32m+[m[32m   * message.awaitReactions(filter, { time: 15000 })[m
[32m+[m[32m   *   .then(collected => console.log(`Collected ${collected.size} reactions`))[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  awaitReactions(filter, options = {}) {[m
[32m+[m[32m    return new Promise((resolve, reject) => {[m
[32m+[m[32m      const collector = this.createReactionCollector(filter, options);[m
[32m+[m[32m      collector.once('end', (reactions, reason) => {[m
[32m+[m[32m        if (options.errors && options.errors.includes(reason)) reject(reactions);[m
[32m+[m[32m        else resolve(reactions);[m
[32m+[m[32m      });[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * An array of cached versions of the message, including the current version[m
[32m+[m[32m   * Sorted from latest (first) to oldest (last)[m
[32m+[m[32m   * @type {Message[]}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get edits() {[m
[32m+[m[32m    const copy = this._edits.slice();[m
[32m+[m[32m    copy.unshift(this);[m
[32m+[m[32m    return copy;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Whether the message is editable by the client user[m
[32m+[m[32m   * @type {boolean}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get editable() {[m
[32m+[m[32m    return this.author.id === this.client.user.id;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Whether the message is deletable by the client user[m
[32m+[m[32m   * @type {boolean}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get deletable() {[m
[32m+[m[32m    return !this.deleted && (this.author.id === this.client.user.id || (this.guild &&[m
[32m+[m[32m      this.channel.permissionsFor(this.client.user).has(Permissions.FLAGS.MANAGE_MESSAGES)[m
[32m+[m[32m    ));[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Whether the message is pinnable by the client user[m
[32m+[m[32m   * @type {boolean}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get pinnable() {[m
[32m+[m[32m    return this.type === 'DEFAULT' && (!this.guild ||[m
[32m+[m[32m      this.channel.permissionsFor(this.client.user).has(Permissions.FLAGS.MANAGE_MESSAGES));[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Whether or not a user, channel or role is mentioned in this message.[m
[32m+[m[32m   * @param {GuildChannel|User|Role|string} data Either a guild channel, user or a role object, or a string representing[m
[32m+[m[32m   * the ID of any of these[m
[32m+[m[32m   * @returns {boolean}[m
[32m+[m[32m   */[m
[32m+[m[32m  isMentioned(data) {[m
[32m+[m[32m    data = data && data.id ? data.id : data;[m
[32m+[m[32m    return this.mentions.users.has(data) || this.mentions.channels.has(data) || this.mentions.roles.has(data);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Whether or not a guild member is mentioned in this message. Takes into account[m
[32m+[m[32m   * user mentions, role mentions, and @everyone/@here mentions.[m
[32m+[m[32m   * @param {GuildMember|User} member The member/user to check for a mention of[m
[32m+[m[32m   * @returns {boolean}[m
[32m+[m[32m   */[m
[32m+[m[32m  isMemberMentioned(member) {[m
[32m+[m[32m    // Lazy-loading is used here to get around a circular dependency that breaks things[m
[32m+[m[32m    if (!GuildMember) GuildMember = require('./GuildMember');[m
[32m+[m[32m    if (this.mentions.everyone) return true;[m
[32m+[m[32m    if (this.mentions.users.has(member.id)) return true;[m
[32m+[m[32m    if (member instanceof GuildMember && member.roles.some(r => this.mentions.roles.has(r.id))) return true;[m
[32m+[m[32m    return false;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Options that can be passed into editMessage.[m
[32m+[m[32m   * @typedef {Object} MessageEditOptions[m
[32m+[m[32m   * @property {Object} [embed] An embed to be added/edited[m
[32m+[m[32m   * @property {string|boolean} [code] Language for optional codeblock formatting to apply[m
[32m+[m[32m   */[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Edit the content of the message.[m
[32m+[m[32m   * @param {StringResolvable} [content] The new content for the message[m
[32m+[m[32m   * @param {MessageEditOptions|RichEmbed} [options] The options to provide[m
[32m+[m[32m   * @returns {Promise<Message>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Update the content of a message[m
[32m+[m[32m   * message.edit('This is my new content!')[m
[32m+[m[32m   *   .then(msg => console.log(`New message content: ${msg}`))[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  edit(content, options) {[m
[32m+[m[32m    if (!options && typeof content === 'object' && !(content instanceof Array)) {[m
[32m+[m[32m      options = content;[m
[32m+[m[32m      content = '';[m
[32m+[m[32m    } else if (!options) {[m
[32m+[m[32m      options = {};[m
[32m+[m[32m    }[m
[32m+[m[32m    if (options instanceof RichEmbed) options = { embed: options };[m
[32m+[m[32m    return this.client.rest.methods.updateMessage(this, content, options);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Edit the content of the message, with a code block.[m
[32m+[m[32m   * @param {string} lang The language for the code block[m
[32m+[m[32m   * @param {StringResolvable} content The new content for the message[m
[32m+[m[32m   * @returns {Promise<Message>}[m
[32m+[m[32m   * @deprecated[m
[32m+[m[32m   */[m
[32m+[m[32m  editCode(lang, content) {[m
[32m+[m[32m    content = Util.escapeMarkdown(this.client.resolver.resolveString(content), true);[m
[32m+[m[32m    return this.edit(`\`\`\`${lang || ''}\n${content}\n\`\`\``);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Pins this message to the channel's pinned messages.[m
[32m+[m[32m   * @returns {Promise<Message>}[m
[32m+[m[32m   */[m
[32m+[m[32m  pin() {[m
[32m+[m[32m    return this.client.rest.methods.pinMessage(this);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Unpins this message from the channel's pinned messages.[m
[32m+[m[32m   * @returns {Promise<Message>}[m
[32m+[m[32m   */[m
[32m+[m[32m  unpin() {[m
[32m+[m[32m    return this.client.rest.methods.unpinMessage(this);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Add a reaction to the message.[m
[32m+[m[32m   * @param {string|Emoji|ReactionEmoji} emoji The emoji to react with[m
[32m+[m[32m   * @returns {Promise<MessageReaction>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // React to a message with a unicode emoji[m
[32m+[m[32m   * message.react('🤔')[m
[32m+[m[32m   *   .then(console.log)[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // React to a message with a custom emoji[m
[32m+[m[32m   * message.react(message.guild.emojis.get('123456789012345678'))[m
[32m+[m[32m   *   .then(console.log)[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  react(emoji) {[m
[32m+[m[32m    emoji = this.client.resolver.resolveEmojiIdentifier(emoji);[m
[32m+[m[32m    if (!emoji) throw new TypeError('Emoji must be a string or Emoji/ReactionEmoji');[m
[32m+[m
[32m+[m[32m    return this.client.rest.methods.addMessageReaction(this, emoji);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Remove all reactions from a message.[m
[32m+[m[32m   * @returns {Promise<Message>}[m
[32m+[m[32m   */[m
[32m+[m[32m  clearReactions() {[m
[32m+[m[32m    return this.client.rest.methods.removeMessageReactions(this);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Deletes the message.[m
[32m+[m[32m   * @param {number} [timeout=0] How long to wait to delete the message in milliseconds[m
[32m+[m[32m   * @returns {Promise<Message>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Delete a message[m
[32m+[m[32m   * message.delete()[m
[32m+[m[32m   *   .then(msg => console.log(`Deleted message from ${msg.author.username}`))[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  delete(timeout = 0) {[m
[32m+[m[32m    if (timeout <= 0) {[m
[32m+[m[32m      return this.client.rest.methods.deleteMessage(this);[m
[32m+[m[32m    } else {[m
[32m+[m[32m      return new Promise(resolve => {[m
[32m+[m[32m        this.client.setTimeout(() => {[m
[32m+[m[32m          resolve(this.delete());[m
[32m+[m[32m        }, timeout);[m
[32m+[m[32m      });[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Reply to the message.[m
[32m+[m[32m   * @param {StringResolvable} [content] The content for the message[m
[32m+[m[32m   * @param {MessageOptions} [options] The options to provide[m
[32m+[m[32m   * @returns {Promise<Message|Message[]>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Reply to a message[m
[32m+[m[32m   * message.reply('Hey, I\'m a reply!')[m
[32m+[m[32m   *   .then(sent => console.log(`Sent a reply to ${sent.author.username}`))[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  reply(content, options) {[m
[32m+[m[32m    if (!options && typeof content === 'object' && !(content instanceof Array)) {[m
[32m+[m[32m      options = content;[m
[32m+[m[32m      content = '';[m
[32m+[m[32m    } else if (!options) {[m
[32m+[m[32m      options = {};[m
[32m+[m[32m    }[m
[32m+[m[32m    return this.channel.send(content, Object.assign(options, { reply: this.member || this.author }));[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Marks the message as read.[m
[32m+[m[32m   * <warn>This is only available when using a user account.</warn>[m
[32m+[m[32m   * @returns {Promise<Message>}[m
[32m+[m[32m   * @deprecated[m
[32m+[m[32m   */[m
[32m+[m[32m  acknowledge() {[m
[32m+[m[32m    return this.client.rest.methods.ackMessage(this);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Fetches the webhook used to create this message.[m
[32m+[m[32m   * @returns {Promise<?Webhook>}[m
[32m+[m[32m   */[m
[32m+[m[32m  fetchWebhook() {[m
[32m+[m[32m    if (!this.webhookID) return Promise.reject(new Error('The message was not sent by a webhook.'));[m
[32m+[m[32m    return this.client.fetchWebhook(this.webhookID);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Used mainly internally. Whether two messages are identical in properties. If you want to compare messages[m
[32m+[m[32m   * without checking all the properties, use `message.id === message2.id`, which is much more efficient. This[m
[32m+[m[32m   * method allows you to see if there are differences in content, embeds, attachments, nonce and tts properties.[m
[32m+[m[32m   * @param {Message} message The message to compare it to[m
[32m+[m[32m   * @param {Object} rawData Raw data passed through the WebSocket about this message[m
[32m+[m[32m   * @returns {boolean}[m
[32m+[m[32m   */[m
[32m+[m[32m  equals(message, rawData) {[m
[32m+[m[32m    if (!message) return false;[m
[32m+[m[32m    const embedUpdate = !message.author && !message.attachments;[m
[32m+[m[32m    if (embedUpdate) return this.id === message.id && this.embeds.length === message.embeds.length;[m
[32m+[m
[32m+[m[32m    let equal = this.id === message.id &&[m
[32m+[m[32m        this.author.id === message.author.id &&[m
[32m+[m[32m        this.content === message.content &&[m
[32m+[m[32m        this.tts === message.tts &&[m
[32m+[m[32m        this.nonce === message.nonce &&[m
[32m+[m[32m        this.embeds.length === message.embeds.length &&[m
[32m+[m[32m        this.attachments.length === message.attachments.length;[m
[32m+[m
[32m+[m[32m    if (equal && rawData) {[m
[32m+[m[32m      equal = this.mentions.everyone === message.mentions.everyone &&[m
[32m+[m[32m        this.createdTimestamp === new Date(rawData.timestamp).getTime() &&[m
[32m+[m[32m        this.editedTimestamp === new Date(rawData.edited_timestamp).getTime();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return equal;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * When concatenated with a string, this automatically concatenates the message's content instead of the object.[m
[32m+[m[32m   * @returns {string}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Logs: Message: This is a message![m
[32m+[m[32m   * console.log(`Message: ${message}`);[m
[32m+[m[32m   */[m
[32m+[m[32m  toString() {[m
[32m+[m[32m    return this.content;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  _addReaction(emoji, user) {[m
[32m+[m[32m    const emojiID = emoji.id ? `${emoji.name}:${emoji.id}` : emoji.name;[m
[32m+[m[32m    let reaction;[m
[32m+[m[32m    if (this.reactions.has(emojiID)) {[m
[32m+[m[32m      reaction = this.reactions.get(emojiID);[m
[32m+[m[32m      if (!reaction.me) reaction.me = user.id === this.client.user.id;[m
[32m+[m[32m    } else {[m
[32m+[m[32m      reaction = new MessageReaction(this, emoji, 0, user.id === this.client.user.id);[m
[32m+[m[32m      this.reactions.set(emojiID, reaction);[m
[32m+[m[32m    }[m
[32m+[m[32m    if (!reaction.users.has(user.id)) {[m
[32m+[m[32m      reaction.users.set(user.id, user);[m
[32m+[m[32m      reaction.count++;[m
[32m+[m[32m    }[m
[32m+[m[32m    return reaction;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  _removeReaction(emoji, user) {[m
[32m+[m[32m    const emojiID = emoji.id ? `${emoji.name}:${emoji.id}` : emoji.name;[m
[32m+[m[32m    if (this.reactions.has(emojiID)) {[m
[32m+[m[32m      const reaction = this.reactions.get(emojiID);[m
[32m+[m[32m      if (reaction.users.has(user.id)) {[m
[32m+[m[32m        reaction.users.delete(user.id);[m
[32m+[m[32m        reaction.count--;[m
[32m+[m[32m        if (user.id === this.client.user.id) reaction.me = false;[m
[32m+[m[32m        if (reaction.count <= 0) this.reactions.delete(emojiID);[m
[32m+[m[32m        return reaction;[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m    return null;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  _clearReactions() {[m
[32m+[m[32m    this.reactions.clear();[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = Message;[m
[1mdiff --git a/node_modules/discord.js/src/structures/MessageAttachment.js b/node_modules/discord.js/src/structures/MessageAttachment.js[m
[1mnew file mode 100644[m
[1mindex 0000000..dd8b8a3[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/structures/MessageAttachment.js[m
[36m@@ -0,0 +1,68 @@[m
[32m+[m[32m/**[m
[32m+[m[32m * Represents an attachment in a message.[m
[32m+[m[32m */[m
[32m+[m[32mclass MessageAttachment {[m
[32m+[m[32m  constructor(message, data) {[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The client that instantiated this MessageAttachment[m
[32m+[m[32m     * @name MessageAttachment#client[m
[32m+[m[32m     * @type {Client}[m
[32m+[m[32m     * @readonly[m
[32m+[m[32m     */[m
[32m+[m[32m    Object.defineProperty(this, 'client', { value: message.client });[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The message this attachment is part of[m
[32m+[m[32m     * @type {Message}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.message = message;[m
[32m+[m
[32m+[m[32m    this.setup(data);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  setup(data) {[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The ID of this attachment[m
[32m+[m[32m     * @type {Snowflake}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.id = data.id;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The file name of this attachment[m
[32m+[m[32m     * @type {string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.filename = data.filename;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The size of this attachment in bytes[m
[32m+[m[32m     * @type {number}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.filesize = data.size;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The URL to this attachment[m
[32m+[m[32m     * @type {string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.url = data.url;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The Proxy URL to this attachment[m
[32m+[m[32m     * @type {string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.proxyURL = data.proxy_url;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The height of this attachment (if an image)[m
[32m+[m[32m     * @type {?number}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.height = data.height;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The width of this attachment (if an image)[m
[32m+[m[32m     * @type {?number}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.width = data.width;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = MessageAttachment;[m
[1mdiff --git a/node_modules/discord.js/src/structures/MessageCollector.js b/node_modules/discord.js/src/structures/MessageCollector.js[m
[1mnew file mode 100644[m
[1mindex 0000000..1e93e91[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/structures/MessageCollector.js[m
[36m@@ -0,0 +1,100 @@[m
[32m+[m[32mconst Collector = require('./interfaces/Collector');[m
[32m+[m[32mconst util = require('util');[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * @typedef {CollectorOptions} MessageCollectorOptions[m
[32m+[m[32m * @property {number} max The maximum amount of messages to process[m
[32m+[m[32m * @property {number} maxMatches The maximum amount of messages to collect[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Collects messages on a channel.[m
[32m+[m[32m * @extends {Collector}[m
[32m+[m[32m */[m
[32m+[m[32mclass MessageCollector extends Collector {[m
[32m+[m[32m  /**[m
[32m+[m[32m   * @param {TextChannel|DMChannel|GroupDMChannel} channel The channel[m
[32m+[m[32m   * @param {CollectorFilter} filter The filter to be applied to this collector[m
[32m+[m[32m   * @param {MessageCollectorOptions} options The options to be applied to this collector[m
[32m+[m[32m   * @emits MessageCollector#message[m
[32m+[m[32m   */[m
[32m+[m[32m  constructor(channel, filter, options = {}) {[m
[32m+[m[32m    super(channel.client, filter, options);[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The channel[m
[32m+[m[32m     * @type {TextBasedChannel}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.channel = channel;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Total number of messages that were received in the channel during message collection[m
[32m+[m[32m     * @type {number}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.received = 0;[m
[32m+[m
[32m+[m[32m    this.client.setMaxListeners(this.client.getMaxListeners() + 1);[m
[32m+[m[32m    this.client.on('message', this.listener);[m
[32m+[m
[32m+[m[32m    // For backwards compatibility (remove in v12)[m
[32m+[m[32m    if (this.options.max) this.options.maxProcessed = this.options.max;[m
[32m+[m[32m    if (this.options.maxMatches) this.options.max = this.options.maxMatches;[m
[32m+[m[32m    this._reEmitter = message => {[m
[32m+[m[32m      /**[m
[32m+[m[32m       * Emitted when the collector receives a message.[m
[32m+[m[32m       * @event MessageCollector#message[m
[32m+[m[32m       * @param {Message} message The message[m
[32m+[m[32m       * @deprecated[m
[32m+[m[32m       */[m
[32m+[m[32m      this.emit('message', message);[m
[32m+[m[32m    };[m
[32m+[m[32m    this.on('collect', this._reEmitter);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  // Remove in v12[m
[32m+[m[32m  on(eventName, listener) {[m
[32m+[m[32m    if (eventName === 'message') {[m
[32m+[m[32m      listener = util.deprecate(listener, 'MessageCollector will soon no longer emit "message", use "collect" instead');[m
[32m+[m[32m    }[m
[32m+[m[32m    super.on(eventName, listener);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Handle an incoming message for possible collection.[m
[32m+[m[32m   * @param {Message} message The message that could be collected[m
[32m+[m[32m   * @returns {?{key: Snowflake, value: Message}}[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  handle(message) {[m
[32m+[m[32m    if (message.channel.id !== this.channel.id) return null;[m
[32m+[m[32m    this.received++;[m
[32m+[m[32m    return {[m
[32m+[m[32m      key: message.id,[m
[32m+[m[32m      value: message,[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Check after collection to see if the collector is done.[m
[32m+[m[32m   * @returns {?string} Reason to end the collector, if any[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  postCheck() {[m
[32m+[m[32m    // Consider changing the end reasons for v12[m
[32m+[m[32m    if (this.options.maxMatches && this.collected.size >= this.options.max) return 'matchesLimit';[m
[32m+[m[32m    if (this.options.max && this.received >= this.options.maxProcessed) return 'limit';[m
[32m+[m[32m    return null;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Removes event listeners.[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  cleanup() {[m
[32m+[m[32m    this.removeListener('collect', this._reEmitter);[m
[32m+[m[32m    this.client.removeListener('message', this.listener);[m
[32m+[m[32m    this.client.setMaxListeners(this.client.getMaxListeners() - 1);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = MessageCollector;[m
[1mdiff --git a/node_modules/discord.js/src/structures/MessageEmbed.js b/node_modules/discord.js/src/structures/MessageEmbed.js[m
[1mnew file mode 100644[m
[1mindex 0000000..2a87679[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/structures/MessageEmbed.js[m
[36m@@ -0,0 +1,386 @@[m
[32m+[m[32m/**[m
[32m+[m[32m * Represents an embed in a message (image/video preview, rich embed, etc.)[m
[32m+[m[32m * <info>This class is only used for *received* embeds. If you wish to send one, use the {@link RichEmbed} class.</info>[m
[32m+[m[32m */[m
[32m+[m[32mclass MessageEmbed {[m
[32m+[m[32m  constructor(message, data) {[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The client that instantiated this embed[m
[32m+[m[32m     * @name MessageEmbed#client[m
[32m+[m[32m     * @type {Client}[m
[32m+[m[32m     * @readonly[m
[32m+[m[32m     */[m
[32m+[m[32m    Object.defineProperty(this, 'client', { value: message.client });[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The message this embed is part of[m
[32m+[m[32m     * @type {Message}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.message = message;[m
[32m+[m
[32m+[m[32m    this.setup(data);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  setup(data) {[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The type of this embed[m
[32m+[m[32m     * @type {string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.type = data.type;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The title of this embed[m
[32m+[m[32m     * @type {?string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.title = data.title;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The description of this embed[m
[32m+[m[32m     * @type {?string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.description = data.description;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The URL of this embed[m
[32m+[m[32m     * @type {string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.url = data.url;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The color of the embed[m
[32m+[m[32m     * @type {number}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.color = data.color;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The fields of this embed[m
[32m+[m[32m     * @type {MessageEmbedField[]}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.fields = [];[m
[32m+[m[32m    if (data.fields) for (const field of data.fields) this.fields.push(new MessageEmbedField(this, field));[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The timestamp of this embed[m
[32m+[m[32m     * @type {number}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.timestamp = data.timestamp;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The thumbnail of this embed[m
[32m+[m[32m     * @type {?MessageEmbedThumbnail}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.thumbnail = data.thumbnail ? new MessageEmbedThumbnail(this, data.thumbnail) : null;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The image of this embed[m
[32m+[m[32m     * @type {?MessageEmbedImage}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.image = data.image ? new MessageEmbedImage(this, data.image) : null;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The video of this embed[m
[32m+[m[32m     * @type {?MessageEmbedVideo}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.video = data.video ? new MessageEmbedVideo(this, data.video) : null;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The author of this embed[m
[32m+[m[32m     * @type {?MessageEmbedAuthor}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.author = data.author ? new MessageEmbedAuthor(this, data.author) : null;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The provider of this embed[m
[32m+[m[32m     * @type {?MessageEmbedProvider}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.provider = data.provider ? new MessageEmbedProvider(this, data.provider) : null;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The footer of this embed[m
[32m+[m[32m     * @type {?MessageEmbedFooter}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.footer = data.footer ? new MessageEmbedFooter(this, data.footer) : null;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The date this embed was created[m
[32m+[m[32m   * @type {Date}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get createdAt() {[m
[32m+[m[32m    return new Date(this.createdTimestamp);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The hexadecimal version of the embed color, with a leading hash[m
[32m+[m[32m   * @type {?string}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get hexColor() {[m
[32m+[m[32m    if (!this.color) return null;[m
[32m+[m[32m    let col = this.color.toString(16);[m
[32m+[m[32m    while (col.length < 6) col = `0${col}`;[m
[32m+[m[32m    return `#${col}`;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Represents a thumbnail for a message embed.[m
[32m+[m[32m */[m
[32m+[m[32mclass MessageEmbedThumbnail {[m
[32m+[m[32m  constructor(embed, data) {[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The embed this thumbnail is part of[m
[32m+[m[32m     * @type {MessageEmbed}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.embed = embed;[m
[32m+[m
[32m+[m[32m    this.setup(data);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  setup(data) {[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The URL for this thumbnail[m
[32m+[m[32m     * @type {string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.url = data.url;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The Proxy URL for this thumbnail[m
[32m+[m[32m     * @type {string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.proxyURL = data.proxy_url;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The height of the thumbnail[m
[32m+[m[32m     * @type {number}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.height = data.height;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The width of the thumbnail[m
[32m+[m[32m     * @type {number}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.width = data.width;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Represents an image for a message embed.[m
[32m+[m[32m */[m
[32m+[m[32mclass MessageEmbedImage {[m
[32m+[m[32m  constructor(embed, data) {[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The embed this image is part of[m
[32m+[m[32m     * @type {MessageEmbed}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.embed = embed;[m
[32m+[m
[32m+[m[32m    this.setup(data);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  setup(data) {[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The URL for this image[m
[32m+[m[32m     * @type {string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.url = data.url;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The Proxy URL for this image[m
[32m+[m[32m     * @type {string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.proxyURL = data.proxy_url;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The height of the image[m
[32m+[m[32m     * @type {number}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.height = data.height;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The width of the image[m
[32m+[m[32m     * @type {number}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.width = data.width;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Represents a video for a message embed.[m
[32m+[m[32m */[m
[32m+[m[32mclass MessageEmbedVideo {[m
[32m+[m[32m  constructor(embed, data) {[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The embed this video is part of[m
[32m+[m[32m     * @type {MessageEmbed}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.embed = embed;[m
[32m+[m
[32m+[m[32m    this.setup(data);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  setup(data) {[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The source URL for this video[m
[32m+[m[32m     * @type {string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.url = data.url;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The height of the video[m
[32m+[m[32m     * @type {number}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.height = data.height;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The width of the video[m
[32m+[m[32m     * @type {number}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.width = data.width;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Represents a provider for a message embed.[m
[32m+[m[32m */[m
[32m+[m[32mclass MessageEmbedProvider {[m
[32m+[m[32m  constructor(embed, data) {[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The embed this provider is part of[m
[32m+[m[32m     * @type {MessageEmbed}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.embed = embed;[m
[32m+[m
[32m+[m[32m    this.setup(data);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  setup(data) {[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The name of this provider[m
[32m+[m[32m     * @type {string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.name = data.name;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The URL of this provider[m
[32m+[m[32m     * @type {string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.url = data.url;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Represents an author for a message embed.[m
[32m+[m[32m */[m
[32m+[m[32mclass MessageEmbedAuthor {[m
[32m+[m[32m  constructor(embed, data) {[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The embed this author is part of[m
[32m+[m[32m     * @type {MessageEmbed}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.embed = embed;[m
[32m+[m
[32m+[m[32m    this.setup(data);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  setup(data) {[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The name of this author[m
[32m+[m[32m     * @type {string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.name = data.name;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The URL of this author[m
[32m+[m[32m     * @type {string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.url = data.url;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The icon URL of this author[m
[32m+[m[32m     * @type {string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.iconURL = data.icon_url;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Represents a field for a message embed.[m
[32m+[m[32m */[m
[32m+[m[32mclass MessageEmbedField {[m
[32m+[m[32m  constructor(embed, data) {[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The embed this footer is part of[m
[32m+[m[32m     * @type {MessageEmbed}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.embed = embed;[m
[32m+[m
[32m+[m[32m    this.setup(data);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  setup(data) {[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The name of this field[m
[32m+[m[32m     * @type {string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.name = data.name;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The value of this field[m
[32m+[m[32m     * @type {string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.value = data.value;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * If this field is displayed inline[m
[32m+[m[32m     * @type {boolean}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.inline = data.inline;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Represents the footer of a message embed.[m
[32m+[m[32m */[m
[32m+[m[32mclass MessageEmbedFooter {[m
[32m+[m[32m  constructor(embed, data) {[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The embed this footer is part of[m
[32m+[m[32m     * @type {MessageEmbed}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.embed = embed;[m
[32m+[m
[32m+[m[32m    this.setup(data);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  setup(data) {[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The text in this footer[m
[32m+[m[32m     * @type {string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.text = data.text;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The icon URL of this footer[m
[32m+[m[32m     * @type {string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.iconURL = data.icon_url;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The proxy icon URL of this footer[m
[32m+[m[32m     * @type {string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.proxyIconUrl = data.proxy_icon_url;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mMessageEmbed.Thumbnail = MessageEmbedThumbnail;[m
[32m+[m[32mMessageEmbed.Image = MessageEmbedImage;[m
[32m+[m[32mMessageEmbed.Video = MessageEmbedVideo;[m
[32m+[m[32mMessageEmbed.Provider = MessageEmbedProvider;[m
[32m+[m[32mMessageEmbed.Author = MessageEmbedAuthor;[m
[32m+[m[32mMessageEmbed.Field = MessageEmbedField;[m
[32m+[m[32mMessageEmbed.Footer = MessageEmbedFooter;[m
[32m+[m
[32m+[m[32mmodule.exports = MessageEmbed;[m
[1mdiff --git a/node_modules/discord.js/src/structures/MessageMentions.js b/node_modules/discord.js/src/structures/MessageMentions.js[m
[1mnew file mode 100644[m
[1mindex 0000000..99d4591[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/structures/MessageMentions.js[m
[36m@@ -0,0 +1,144 @@[m
[32m+[m[32mconst Collection = require('../util/Collection');[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Keeps track of mentions in a {@link Message}.[m
[32m+[m[32m */[m
[32m+[m[32mclass MessageMentions {[m
[32m+[m[32m  constructor(message, users, roles, everyone) {[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Whether `@everyone` or `@here` were mentioned[m
[32m+[m[32m     * @type {boolean}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.everyone = Boolean(everyone);[m
[32m+[m
[32m+[m[32m    if (users) {[m
[32m+[m[32m      if (users instanceof Collection) {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Any users that were mentioned[m
[32m+[m[32m         * @type {Collection<Snowflake, User>}[m
[32m+[m[32m         */[m
[32m+[m[32m        this.users = new Collection(users);[m
[32m+[m[32m      } else {[m
[32m+[m[32m        this.users = new Collection();[m
[32m+[m[32m        for (const mention of users) {[m
[32m+[m[32m          let user = message.client.users.get(mention.id);[m
[32m+[m[32m          if (!user) user = message.client.dataManager.newUser(mention);[m
[32m+[m[32m          this.users.set(user.id, user);[m
[32m+[m[32m        }[m
[32m+[m[32m      }[m
[32m+[m[32m    } else {[m
[32m+[m[32m      this.users = new Collection();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (roles) {[m
[32m+[m[32m      if (roles instanceof Collection) {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Any roles that were mentioned[m
[32m+[m[32m         * @type {Collection<Snowflake, Role>}[m
[32m+[m[32m         */[m
[32m+[m[32m        this.roles = new Collection(roles);[m
[32m+[m[32m      } else {[m
[32m+[m[32m        this.roles = new Collection();[m
[32m+[m[32m        for (const mention of roles) {[m
[32m+[m[32m          const role = message.channel.guild.roles.get(mention);[m
[32m+[m[32m          if (role) this.roles.set(role.id, role);[m
[32m+[m[32m        }[m
[32m+[m[32m      }[m
[32m+[m[32m    } else {[m
[32m+[m[32m      this.roles = new Collection();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Content of the message[m
[32m+[m[32m     * @type {Message}[m
[32m+[m[32m     * @private[m
[32m+[m[32m     */[m
[32m+[m[32m    this._content = message.content;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The client the message is from[m
[32m+[m[32m     * @type {Client}[m
[32m+[m[32m     * @private[m
[32m+[m[32m     */[m
[32m+[m[32m    this._client = message.client;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The guild the message is in[m
[32m+[m[32m     * @type {?Guild}[m
[32m+[m[32m     * @private[m
[32m+[m[32m     */[m
[32m+[m[32m    this._guild = message.channel.guild;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Cached members for {@MessageMention#members}[m
[32m+[m[32m     * @type {?Collection<Snowflake, GuildMember>}[m
[32m+[m[32m     * @private[m
[32m+[m[32m     */[m
[32m+[m[32m    this._members = null;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Cached channels for {@MessageMention#channels}[m
[32m+[m[32m     * @type {?Collection<Snowflake, GuildChannel>}[m
[32m+[m[32m     * @private[m
[32m+[m[32m     */[m
[32m+[m[32m    this._channels = null;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Any members that were mentioned (only in {@link TextChannel}s)[m
[32m+[m[32m   * @type {?Collection<Snowflake, GuildMember>}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get members() {[m
[32m+[m[32m    if (this._members) return this._members;[m
[32m+[m[32m    if (!this._guild) return null;[m
[32m+[m[32m    this._members = new Collection();[m
[32m+[m[32m    this.users.forEach(user => {[m
[32m+[m[32m      const member = this._guild.member(user);[m
[32m+[m[32m      if (member) this._members.set(member.user.id, member);[m
[32m+[m[32m    });[m
[32m+[m[32m    return this._members;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Any channels that were mentioned[m
[32m+[m[32m   * @type {Collection<Snowflake, GuildChannel>}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get channels() {[m
[32m+[m[32m    if (this._channels) return this._channels;[m
[32m+[m[32m    this._channels = new Collection();[m
[32m+[m[32m    let matches;[m
[32m+[m[32m    while ((matches = this.constructor.CHANNELS_PATTERN.exec(this._content)) !== null) {[m
[32m+[m[32m      const chan = this._client.channels.get(matches[1]);[m
[32m+[m[32m      if (chan) this._channels.set(chan.id, chan);[m
[32m+[m[32m    }[m
[32m+[m[32m    return this._channels;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Regular expression that globally matches `@everyone` and `@here`[m
[32m+[m[32m * @type {RegExp}[m
[32m+[m[32m */[m
[32m+[m[32mMessageMentions.EVERYONE_PATTERN = /@(everyone|here)/g;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Regular expression that globally matches user mentions like `<@81440962496172032>`[m
[32m+[m[32m * @type {RegExp}[m
[32m+[m[32m */[m
[32m+[m[32mMessageMentions.USERS_PATTERN = /<@!?[0-9]+>/g;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Regular expression that globally matches role mentions like `<@&297577916114403338>`[m
[32m+[m[32m * @type {RegExp}[m
[32m+[m[32m */[m
[32m+[m[32mMessageMentions.ROLES_PATTERN = /<@&[0-9]+>/g;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Regular expression that globally matches channel mentions like `<#222079895583457280>`[m
[32m+[m[32m * @type {RegExp}[m
[32m+[m[32m */[m
[32m+[m[32mMessageMentions.CHANNELS_PATTERN = /<#([0-9]+)>/g;[m
[32m+[m
[32m+[m[32mmodule.exports = MessageMentions;[m
[1mdiff --git a/node_modules/discord.js/src/structures/MessageReaction.js b/node_modules/discord.js/src/structures/MessageReaction.js[m
[1mnew file mode 100644[m
[1mindex 0000000..29a03c7[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/structures/MessageReaction.js[m
[36m@@ -0,0 +1,96 @@[m
[32m+[m[32mconst Collection = require('../util/Collection');[m
[32m+[m[32mconst Emoji = require('./Emoji');[m
[32m+[m[32mconst ReactionEmoji = require('./ReactionEmoji');[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Represents a reaction to a message.[m
[32m+[m[32m */[m
[32m+[m[32mclass MessageReaction {[m
[32m+[m[32m  constructor(message, emoji, count, me) {[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The message that this reaction refers to[m
[32m+[m[32m     * @type {Message}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.message = message;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Whether the client has given this reaction[m
[32m+[m[32m     * @type {boolean}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.me = me;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The number of people that have given the same reaction[m
[32m+[m[32m     * @type {number}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.count = count || 0;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The users that have given this reaction, mapped by their ID[m
[32m+[m[32m     * @type {Collection<Snowflake, User>}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.users = new Collection();[m
[32m+[m
[32m+[m[32m    this._emoji = new ReactionEmoji(this, emoji.name, emoji.id);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The emoji of this reaction, either an Emoji object for known custom emojis, or a ReactionEmoji[m
[32m+[m[32m   * object which has fewer properties. Whatever the prototype of the emoji, it will still have[m
[32m+[m[32m   * `name`, `id`, `identifier` and `toString()`[m
[32m+[m[32m   * @type {Emoji|ReactionEmoji}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get emoji() {[m
[32m+[m[32m    if (this._emoji instanceof Emoji) return this._emoji;[m
[32m+[m[32m    // Check to see if the emoji has become known to the client[m
[32m+[m[32m    if (this._emoji.id) {[m
[32m+[m[32m      const emojis = this.message.client.emojis;[m
[32m+[m[32m      if (emojis.has(this._emoji.id)) {[m
[32m+[m[32m        const emoji = emojis.get(this._emoji.id);[m
[32m+[m[32m        this._emoji = emoji;[m
[32m+[m[32m        return emoji;[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m    return this._emoji;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Removes a user from this reaction.[m
[32m+[m[32m   * @param {UserResolvable} [user=this.message.client.user] The user to remove the reaction of[m
[32m+[m[32m   * @returns {Promise<MessageReaction>}[m
[32m+[m[32m   */[m
[32m+[m[32m  remove(user = this.message.client.user) {[m
[32m+[m[32m    const message = this.message;[m
[32m+[m[32m    const userID = this.message.client.resolver.resolveUserID(user);[m
[32m+[m[32m    if (!userID) return Promise.reject(new Error('Couldn\'t resolve the user ID to remove from the reaction.'));[m
[32m+[m[32m    return message.client.rest.methods.removeMessageReaction([m
[32m+[m[32m      message, this.emoji.identifier, userID[m
[32m+[m[32m    );[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Fetch all the users that gave this reaction. Resolves with a collection of users, mapped by their IDs.[m
[32m+[m[32m   * @param {number} [limit=100] The maximum amount of users to fetch, defaults to 100[m
[32m+[m[32m   * @param {Object} [options] Options to fetch users[m
[32m+[m[32m   * @param {Snowflake} [options.before] Limit fetching users to those with an id lower than the supplied id[m
[32m+[m[32m   * @param {Snowflake} [options.after] Limit fetching users to those with an id greater than the supplied id[m
[32m+[m[32m   * @returns {Promise<Collection<Snowflake, User>>}[m
[32m+[m[32m   */[m
[32m+[m[32m  fetchUsers(limit = 100, { after, before } = {}) {[m
[32m+[m[32m    const message = this.message;[m
[32m+[m[32m    return message.client.rest.methods.getMessageReactionUsers([m
[32m+[m[32m      message, this.emoji.identifier, { after, before, limit }[m
[32m+[m[32m    ).then(data => {[m
[32m+[m[32m      const users = new Collection();[m
[32m+[m[32m      for (const rawUser of data) {[m
[32m+[m[32m        const user = this.message.client.dataManager.newUser(rawUser);[m
[32m+[m[32m        this.users.set(user.id, user);[m
[32m+[m[32m        users.set(user.id, user);[m
[32m+[m[32m      }[m
[32m+[m[32m      return users;[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = MessageReaction;[m
[1mdiff --git a/node_modules/discord.js/src/structures/NewsChannel.js b/node_modules/discord.js/src/structures/NewsChannel.js[m
[1mnew file mode 100644[m
[1mindex 0000000..bcbfbf3[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/structures/NewsChannel.js[m
[36m@@ -0,0 +1,24 @@[m
[32m+[m[32mconst TextChannel = require('./TextChannel');[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Represents a guild news channel on Discord.[m
[32m+[m[32m * @extends {TextChannel}[m
[32m+[m[32m */[m
[32m+[m[32mclass NewsChannel extends TextChannel {[m
[32m+[m[32m  constructor(guild, data) {[m
[32m+[m[32m    super(guild, data);[m
[32m+[m[32m    this.type = 'news';[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  setup(data) {[m
[32m+[m[32m    super.setup(data);[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The ratelimit per user for this channel (always 0)[m
[32m+[m[32m     * @type {number}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.rateLimitPerUser = 0;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = NewsChannel;[m
[1mdiff --git a/node_modules/discord.js/src/structures/OAuth2Application.js b/node_modules/discord.js/src/structures/OAuth2Application.js[m
[1mnew file mode 100644[m
[1mindex 0000000..2cdcb8b[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/structures/OAuth2Application.js[m
[36m@@ -0,0 +1,148 @@[m
[32m+[m[32mconst Snowflake = require('../util/Snowflake');[m
[32m+[m[32mconst util = require('util');[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Represents an OAuth2 Application.[m
[32m+[m[32m */[m
[32m+[m[32mclass OAuth2Application {[m
[32m+[m[32m  constructor(client, data) {[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The client that instantiated the application[m
[32m+[m[32m     * @name OAuth2Application#client[m
[32m+[m[32m     * @type {Client}[m
[32m+[m[32m     * @readonly[m
[32m+[m[32m     */[m
[32m+[m[32m    Object.defineProperty(this, 'client', { value: client });[m
[32m+[m
[32m+[m[32m    this.setup(data);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  setup(data) {[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The ID of the app[m
[32m+[m[32m     * @type {Snowflake}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.id = data.id;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The name of the app[m
[32m+[m[32m     * @type {string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.name = data.name;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The app's description[m
[32m+[m[32m     * @type {string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.description = data.description;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The app's icon hash[m
[32m+[m[32m     * @type {?string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.icon = data.icon;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The app's icon URL[m
[32m+[m[32m     * @type {string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.iconURL = `https://cdn.discordapp.com/app-icons/${this.id}/${this.icon}.jpg`;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The app's RPC origins[m
[32m+[m[32m     * @type {?string[]}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.rpcOrigins = data.rpc_origins;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The app's redirect URIs[m
[32m+[m[32m     * @type {string[]}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.redirectURIs = data.redirect_uris;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * If this app's bot requires a code grant when using the OAuth2 flow[m
[32m+[m[32m     * @type {boolean}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.botRequireCodeGrant = data.bot_require_code_grant;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * If this app's bot is public[m
[32m+[m[32m     * @type {boolean}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.botPublic = data.bot_public;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * If this app can use rpc[m
[32m+[m[32m     * @type {boolean}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.rpcApplicationState = data.rpc_application_state;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Object containing basic info about this app's bot[m
[32m+[m[32m     * @type {Object}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.bot = data.bot;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The flags for the app[m
[32m+[m[32m     * @type {number}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.flags = data.flags;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * OAuth2 secret for the application[m
[32m+[m[32m     * @type {boolean}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.secret = data.secret;[m
[32m+[m
[32m+[m[32m    if (data.owner) {[m
[32m+[m[32m      /**[m
[32m+[m[32m       * The owner of this OAuth application[m
[32m+[m[32m       * @type {?User}[m
[32m+[m[32m       */[m
[32m+[m[32m      this.owner = this.client.dataManager.newUser(data.owner);[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The timestamp the app was created at[m
[32m+[m[32m   * @type {number}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get createdTimestamp() {[m
[32m+[m[32m    return Snowflake.deconstruct(this.id).timestamp;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The time the app was created[m
[32m+[m[32m   * @type {Date}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get createdAt() {[m
[32m+[m[32m    return new Date(this.createdTimestamp);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Reset the app's secret and bot token.[m
[32m+[m[32m   * <warn>This is only available when using a user account.</warn>[m
[32m+[m[32m   * @returns {OAuth2Application}[m
[32m+[m[32m   * @deprecated[m
[32m+[m[32m   */[m
[32m+[m[32m  reset() {[m
[32m+[m[32m    return this.client.rest.methods.resetApplication(this.id);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * When concatenated with a string, this automatically concatenates the app name rather than the app object.[m
[32m+[m[32m   * @returns {string}[m
[32m+[m[32m   */[m
[32m+[m[32m  toString() {[m
[32m+[m[32m    return this.name;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mOAuth2Application.prototype.reset =[m
[32m+[m[32m  util.deprecate(OAuth2Application.prototype.reset, 'OAuth2Application#reset: userbot methods will be removed');[m
[32m+[m
[32m+[m[32mmodule.exports = OAuth2Application;[m
[1mdiff --git a/node_modules/discord.js/src/structures/PartialGuild.js b/node_modules/discord.js/src/structures/PartialGuild.js[m
[1mnew file mode 100644[m
[1mindex 0000000..3eb64f2[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/structures/PartialGuild.js[m
[36m@@ -0,0 +1,51 @@[m
[32m+[m[32m/*[m
[32m+[m[32m{ splash: null,[m
[32m+[m[32m     id: '123123123',[m
[32m+[m[32m     icon: '123123123',[m
[32m+[m[32m     name: 'name' }[m
[32m+[m[32m*/[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Represents a guild that the client only has limited information for - e.g. from invites.[m
[32m+[m[32m */[m
[32m+[m[32mclass PartialGuild {[m
[32m+[m[32m  constructor(client, data) {[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The client that instantiated this PartialGuild[m
[32m+[m[32m     * @name PartialGuild#client[m
[32m+[m[32m     * @type {Client}[m
[32m+[m[32m     * @readonly[m
[32m+[m[32m     */[m
[32m+[m[32m    Object.defineProperty(this, 'client', { value: client });[m
[32m+[m
[32m+[m[32m    this.setup(data);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  setup(data) {[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The ID of this guild[m
[32m+[m[32m     * @type {Snowflake}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.id = data.id;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The name of this guild[m
[32m+[m[32m     * @type {string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.name = data.name;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The hash of this guild's icon[m
[32m+[m[32m     * @type {?string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.icon = data.icon;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The hash of the guild splash image (VIP only)[m
[32m+[m[32m     * @type {?string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.splash = data.splash;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = PartialGuild;[m
[1mdiff --git a/node_modules/discord.js/src/structures/PartialGuildChannel.js b/node_modules/discord.js/src/structures/PartialGuildChannel.js[m
[1mnew file mode 100644[m
[1mindex 0000000..c30c054[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/structures/PartialGuildChannel.js[m
[36m@@ -0,0 +1,44 @@[m
[32m+[m[32mconst Constants = require('../util/Constants');[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m{ type: 0, id: '123123', name: 'heavy-testing' } }[m
[32m+[m[32m*/[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Represents a guild channel that the client only has limited information for - e.g. from invites.[m
[32m+[m[32m */[m
[32m+[m[32mclass PartialGuildChannel {[m
[32m+[m[32m  constructor(client, data) {[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The client that instantiated this PartialGuildChannel[m
[32m+[m[32m     * @name PartialGuildChannel#client[m
[32m+[m[32m     * @type {Client}[m
[32m+[m[32m     * @readonly[m
[32m+[m[32m     */[m
[32m+[m[32m    Object.defineProperty(this, 'client', { value: client });[m
[32m+[m
[32m+[m[32m    this.setup(data);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  setup(data) {[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The ID of this guild channel[m
[32m+[m[32m     * @type {Snowflake}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.id = data.id;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The name of this guild channel[m
[32m+[m[32m     * @type {string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.name = data.name;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The type of this guild channel - `text` or `voice`[m
[32m+[m[32m     * @type {string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.type = Constants.ChannelTypes.TEXT === data.type ? 'text' : 'voice';[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = PartialGuildChannel;[m
[1mdiff --git a/node_modules/discord.js/src/structures/PermissionOverwrites.js b/node_modules/discord.js/src/structures/PermissionOverwrites.js[m
[1mnew file mode 100644[m
[1mindex 0000000..ebb78fb[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/structures/PermissionOverwrites.js[m
[36m@@ -0,0 +1,69 @@[m
[32m+[m[32mconst Permissions = require('../util/Permissions');[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Represents a permission overwrite for a role or member in a guild channel.[m
[32m+[m[32m */[m
[32m+[m[32mclass PermissionOverwrites {[m
[32m+[m[32m  constructor(guildChannel, data) {[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The GuildChannel this overwrite is for[m
[32m+[m[32m     * @name PermissionOverwrites#channel[m
[32m+[m[32m     * @type {GuildChannel}[m
[32m+[m[32m     * @readonly[m
[32m+[m[32m     */[m
[32m+[m[32m    Object.defineProperty(this, 'channel', { value: guildChannel });[m
[32m+[m
[32m+[m[32m    if (data) this.setup(data);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  setup(data) {[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The ID of this overwrite, either a user ID or a role ID[m
[32m+[m[32m     * @type {Snowflake}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.id = data.id;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The type of this overwrite[m
[32m+[m[32m     * @type {string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.type = data.type;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The permissions that are denied for the user or role as a bitfield.[m
[32m+[m[32m     * @type {number}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.deny = data.deny;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The permissions that are allowed for the user or role as a bitfield.[m
[32m+[m[32m     * @type {number}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.allow = data.allow;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The permissions that are denied for the user or role.[m
[32m+[m[32m     * @type {Permissions}[m
[32m+[m[32m     * @deprecated[m
[32m+[m[32m     */[m
[32m+[m[32m    this.denied = new Permissions(data.deny).freeze();[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The permissions that are allowed for the user or role.[m
[32m+[m[32m     * @type {Permissions}[m
[32m+[m[32m     * @deprecated[m
[32m+[m[32m     */[m
[32m+[m[32m    this.allowed = new Permissions(data.allow).freeze();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Delete this Permission Overwrite.[m
[32m+[m[32m   * @param {string} [reason] Reason for deleting this overwrite[m
[32m+[m[32m   * @returns {Promise<PermissionOverwrites>}[m
[32m+[m[32m   */[m
[32m+[m[32m  delete(reason) {[m
[32m+[m[32m    return this.channel.client.rest.methods.deletePermissionOverwrites(this, reason);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = PermissionOverwrites;[m
[1mdiff --git a/node_modules/discord.js/src/structures/Presence.js b/node_modules/discord.js/src/structures/Presence.js[m
[1mnew file mode 100644[m
[1mindex 0000000..47cf0a7[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/structures/Presence.js[m
[36m@@ -0,0 +1,241 @@[m
[32m+[m[32mconst { ActivityFlags, Endpoints } = require('../util/Constants');[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * The status of this presence:[m
[32m+[m[32m *[m
[32m+[m[32m * * **`online`** - user is online[m
[32m+[m[32m * * **`idle`** - user is AFK[m
[32m+[m[32m * * **`offline`** - user is offline or invisible[m
[32m+[m[32m * * **`dnd`** - user is in Do Not Disturb[m
[32m+[m[32m * @typedef {string} PresenceStatus[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Represents a user's presence.[m
[32m+[m[32m */[m
[32m+[m[32mclass Presence {[m
[32m+[m[32m  constructor(data = {}, client) {[m
[32m+[m[32m    Object.defineProperty(this, 'client', { value: client });[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The status of this presence:[m
[32m+[m[32m     * @type {PresenceStatus}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.status = data.status || 'offline';[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The game that the user is playing[m
[32m+[m[32m     * @type {?Game}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.game = data.game ? new Game(data.game, this) : null;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The devices this presence is on[m
[32m+[m[32m     * @type {?object}[m
[32m+[m[32m     * @property {PresenceStatus} web[m
[32m+[m[32m     * @property {PresenceStatus} mobile[m
[32m+[m[32m     * @property {PresenceStatus} desktop[m
[32m+[m[32m     */[m
[32m+[m[32m    this.clientStatus = data.client_status || null;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  update(data) {[m
[32m+[m[32m    this.status = data.status || this.status;[m
[32m+[m[32m    this.game = data.game ? new Game(data.game, this) : null;[m
[32m+[m[32m    this.clientStatus = data.client_status || null;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Whether this presence is equal to another[m
[32m+[m[32m   * @param {Presence} presence The presence to compare with[m
[32m+[m[32m   * @returns {boolean}[m
[32m+[m[32m   */[m
[32m+[m[32m  equals(presence) {[m
[32m+[m[32m    return this === presence || ([m
[32m+[m[32m      presence &&[m
[32m+[m[32m      this.status === presence.status &&[m
[32m+[m[32m      (this.game ? this.game.equals(presence.game) : !presence.game) &&[m
[32m+[m[32m      this.clientStatus.web === presence.clientStatus.web &&[m
[32m+[m[32m      this.clientStatus.mobile === presence.clientStatus.mobile &&[m
[32m+[m[32m      this.clientStatus.desktop === presence.clientStatus.desktop[m
[32m+[m[32m    );[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Represents a game that is part of a user's presence.[m
[32m+[m[32m */[m
[32m+[m[32mclass Game {[m
[32m+[m[32m  constructor(data, presence) {[m
[32m+[m[32m    Object.defineProperty(this, 'presence', { value: presence });[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The name of the game being played[m
[32m+[m[32m     * @type {string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.name = data.name;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The type of the game status, its possible values:[m
[32m+[m[32m     * - 0: Playing[m
[32m+[m[32m     * - 1: Streaming[m
[32m+[m[32m     * - 2: Listening[m
[32m+[m[32m     * - 3: Watching[m
[32m+[m[32m     * @type {number}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.type = data.type;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * If the game is being streamed, a link to the stream[m
[32m+[m[32m     * @type {?string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.url = data.url || null;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Details about the activity[m
[32m+[m[32m     * @type {?string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.details = data.details || null;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * State of the activity[m
[32m+[m[32m     * @type {?string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.state = data.state || null;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Application ID associated with this activity[m
[32m+[m[32m     * @type {?Snowflake}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.applicationID = data.application_id || null;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Timestamps for the activity[m
[32m+[m[32m     * @type {?Object}[m
[32m+[m[32m     * @prop {?Date} start When the activity started[m
[32m+[m[32m     * @prop {?Date} end When the activity will end[m
[32m+[m[32m     */[m
[32m+[m[32m    this.timestamps = data.timestamps ? {[m
[32m+[m[32m      start: data.timestamps.start ? new Date(Number(data.timestamps.start)) : null,[m
[32m+[m[32m      end: data.timestamps.end ? new Date(Number(data.timestamps.end)) : null,[m
[32m+[m[32m    } : null;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Party of the activity[m
[32m+[m[32m     * @type {?Object}[m
[32m+[m[32m     * @prop {?string} id ID of the party[m
[32m+[m[32m     * @prop {number[]} size Size of the party as `[current, max]`[m
[32m+[m[32m     */[m
[32m+[m[32m    this.party = data.party || null;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Assets for rich presence[m
[32m+[m[32m     * @type {?RichPresenceAssets}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.assets = data.assets ? new RichPresenceAssets(this, data.assets) : null;[m
[32m+[m
[32m+[m[32m    this.syncID = data.sync_id;[m
[32m+[m[32m    this._flags = data.flags;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  get flags() {[m
[32m+[m[32m    const flags = [];[m
[32m+[m[32m    for (const [name, flag] of Object.entries(ActivityFlags)) {[m
[32m+[m[32m      if ((this._flags & flag) === flag) flags.push(name);[m
[32m+[m[32m    }[m
[32m+[m[32m    return flags;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Whether or not the game is being streamed[m
[32m+[m[32m   * @type {boolean}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get streaming() {[m
[32m+[m[32m    return this.type === 1;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * When concatenated with a string, this automatically returns the game's name instead of the Game object.[m
[32m+[m[32m   * @returns {string}[m
[32m+[m[32m   */[m
[32m+[m[32m  toString() {[m
[32m+[m[32m    return this.name;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Whether this game is equal to another game[m
[32m+[m[32m   * @param {Game} game The game to compare with[m
[32m+[m[32m   * @returns {boolean}[m
[32m+[m[32m   */[m
[32m+[m[32m  equals(game) {[m
[32m+[m[32m    return this === game || ([m
[32m+[m[32m      game &&[m
[32m+[m[32m      this.name === game.name &&[m
[32m+[m[32m      this.type === game.type &&[m
[32m+[m[32m      this.url === game.url[m
[32m+[m[32m    );[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Assets for a rich presence[m
[32m+[m[32m */[m
[32m+[m[32mclass RichPresenceAssets {[m
[32m+[m[32m  constructor(game, assets) {[m
[32m+[m[32m    Object.defineProperty(this, 'game', { value: game });[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Hover text for the large image[m
[32m+[m[32m     * @type {?string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.largeText = assets.large_text || null;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Hover text for the small image[m
[32m+[m[32m     * @type {?string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.smallText = assets.small_text || null;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * ID of the large image asset[m
[32m+[m[32m     * @type {?Snowflake}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.largeImage = assets.large_image || null;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * ID of the small image asset[m
[32m+[m[32m     * @type {?Snowflake}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.smallImage = assets.small_image || null;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The URL of the small image asset[m
[32m+[m[32m   * @type {?string}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get smallImageURL() {[m
[32m+[m[32m    if (!this.smallImage) return null;[m
[32m+[m[32m    return Endpoints.CDN(this.game.presence.client.options.http.cdn)[m
[32m+[m[32m      .AppAsset(this.game.applicationID, this.smallImage);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The URL of the large image asset[m
[32m+[m[32m   * @type {?string}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get largeImageURL() {[m
[32m+[m[32m    if (!this.largeImage) return null;[m
[32m+[m[32m    if (/^spotify:/.test(this.largeImage)) {[m
[32m+[m[32m      return `https://i.scdn.co/image/${this.largeImage.slice(8)}`;[m
[32m+[m[32m    }[m
[32m+[m[32m    return Endpoints.CDN(this.game.presence.client.options.http.cdn)[m
[32m+[m[32m      .AppAsset(this.game.applicationID, this.largeImage);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mexports.Presence = Presence;[m
[32m+[m[32mexports.Game = Game;[m
[32m+[m[32mexports.RichPresenceAssets = RichPresenceAssets;[m
[1mdiff --git a/node_modules/discord.js/src/structures/ReactionCollector.js b/node_modules/discord.js/src/structures/ReactionCollector.js[m
[1mnew file mode 100644[m
[1mindex 0000000..0be2d89[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/structures/ReactionCollector.js[m
[36m@@ -0,0 +1,85 @@[m
[32m+[m[32mconst Collector = require('./interfaces/Collector');[m
[32m+[m[32mconst Collection = require('../util/Collection');[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * @typedef {CollectorOptions} ReactionCollectorOptions[m
[32m+[m[32m * @property {number} max The maximum total amount of reactions to collect[m
[32m+[m[32m * @property {number} maxEmojis The maximum number of emojis to collect[m
[32m+[m[32m * @property {number} maxUsers The maximum number of users to react[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Collects reactions on messages.[m
[32m+[m[32m * @extends {Collector}[m
[32m+[m[32m */[m
[32m+[m[32mclass ReactionCollector extends Collector {[m
[32m+[m[32m  /**[m
[32m+[m[32m   * @param {Message} message The message upon which to collect reactions[m
[32m+[m[32m   * @param {CollectorFilter} filter The filter to apply to this collector[m
[32m+[m[32m   * @param {ReactionCollectorOptions} [options={}] The options to apply to this collector[m
[32m+[m[32m   */[m
[32m+[m[32m  constructor(message, filter, options = {}) {[m
[32m+[m[32m    super(message.client, filter, options);[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The message[m
[32m+[m[32m     * @type {Message}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.message = message;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The users which have reacted[m
[32m+[m[32m     * @type {Collection}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.users = new Collection();[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The total number of reactions collected[m
[32m+[m[32m     * @type {number}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.total = 0;[m
[32m+[m
[32m+[m[32m    this.client.setMaxListeners(this.client.getMaxListeners() + 1);[m
[32m+[m[32m    this.client.on('messageReactionAdd', this.listener);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Handle an incoming reaction for possible collection.[m
[32m+[m[32m   * @param {MessageReaction} reaction The reaction to possibly collect[m
[32m+[m[32m   * @returns {?{key: Snowflake, value: MessageReaction}}[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  handle(reaction) {[m
[32m+[m[32m    if (reaction.message.id !== this.message.id) return null;[m
[32m+[m[32m    return {[m
[32m+[m[32m      key: reaction.emoji.id || reaction.emoji.name,[m
[32m+[m[32m      value: reaction,[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Check after collection to see if the collector is done.[m
[32m+[m[32m   * @param {MessageReaction} reaction The reaction that was collected[m
[32m+[m[32m   * @param {User} user The user that reacted[m
[32m+[m[32m   * @returns {?string} Reason to end the collector, if any[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  postCheck(reaction, user) {[m
[32m+[m[32m    this.users.set(user.id, user);[m
[32m+[m[32m    if (this.options.max && ++this.total >= this.options.max) return 'limit';[m
[32m+[m[32m    if (this.options.maxEmojis && this.collected.size >= this.options.maxEmojis) return 'emojiLimit';[m
[32m+[m[32m    if (this.options.maxUsers && this.users.size >= this.options.maxUsers) return 'userLimit';[m
[32m+[m[32m    return null;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Remove event listeners.[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  cleanup() {[m
[32m+[m[32m    this.client.removeListener('messageReactionAdd', this.listener);[m
[32m+[m[32m    this.client.setMaxListeners(this.client.getMaxListeners() - 1);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = ReactionCollector;[m
[1mdiff --git a/node_modules/discord.js/src/structures/ReactionEmoji.js b/node_modules/discord.js/src/structures/ReactionEmoji.js[m
[1mnew file mode 100644[m
[1mindex 0000000..f550544[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/structures/ReactionEmoji.js[m
[36m@@ -0,0 +1,49 @@[m
[32m+[m[32m/**[m
[32m+[m[32m * Represents a limited emoji set used for both custom and unicode emojis. Custom emojis[m
[32m+[m[32m * will use this class opposed to the Emoji class when the client doesn't know enough[m
[32m+[m[32m * information about them.[m
[32m+[m[32m */[m
[32m+[m[32mclass ReactionEmoji {[m
[32m+[m[32m  constructor(reaction, name, id) {[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The message reaction this emoji refers to[m
[32m+[m[32m     * @type {MessageReaction}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.reaction = reaction;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The name of this reaction emoji[m
[32m+[m[32m     * @type {string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.name = name;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The ID of this reaction emoji[m
[32m+[m[32m     * @type {?Snowflake}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.id = id;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The identifier of this emoji, used for message reactions[m
[32m+[m[32m   * @type {string}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get identifier() {[m
[32m+[m[32m    if (this.id) return `${this.name}:${this.id}`;[m
[32m+[m[32m    return encodeURIComponent(this.name);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Creates the text required to form a graphical emoji on Discord.[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Send the emoji used in a reaction to the channel the reaction is part of[m
[32m+[m[32m   * reaction.message.channel.send(`The emoji used is ${reaction.emoji}`);[m
[32m+[m[32m   * @returns {string}[m
[32m+[m[32m   */[m
[32m+[m[32m  toString() {[m
[32m+[m[32m    return this.id ? `<:${this.name}:${this.id}>` : this.name;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = ReactionEmoji;[m
[1mdiff --git a/node_modules/discord.js/src/structures/RichEmbed.js b/node_modules/discord.js/src/structures/RichEmbed.js[m
[1mnew file mode 100644[m
[1mindex 0000000..d8e16cc[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/structures/RichEmbed.js[m
[36m@@ -0,0 +1,295 @@[m
[32m+[m[32mconst Attachment = require('./Attachment');[m
[32m+[m[32mconst MessageEmbed = require('./MessageEmbed');[m
[32m+[m[32mlet ClientDataResolver;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * A rich embed to be sent with a message with a fluent interface for creation.[m
[32m+[m[32m * @param {Object} [data] Data to set in the rich embed[m
[32m+[m[32m */[m
[32m+[m[32mclass RichEmbed {[m
[32m+[m[32m  constructor(data = {}) {[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Title for this Embed[m
[32m+[m[32m     * @type {string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.title = data.title;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Description for this Embed[m
[32m+[m[32m     * @type {string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.description = data.description;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * URL for this Embed[m
[32m+[m[32m     * @type {string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.url = data.url;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Color for this Embed[m
[32m+[m[32m     * @type {number}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.color = data.color;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Author for this Embed[m
[32m+[m[32m     * @type {Object}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.author = data.author;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Timestamp for this Embed[m
[32m+[m[32m     * @type {Date}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.timestamp = data.timestamp;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Fields for this Embed[m
[32m+[m[32m     * @type {Object[]}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.fields = data.fields || [];[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Thumbnail for this Embed[m
[32m+[m[32m     * @type {Object}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.thumbnail = data.thumbnail;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Image for this Embed[m
[32m+[m[32m     * @type {Object}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.image = data.image;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Footer for this Embed[m
[32m+[m[32m     * @type {Object}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.footer = data.footer;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * File to upload alongside this Embed[m
[32m+[m[32m     * @type {FileOptions|string|Attachment}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.file = data.file;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The files to upload alongside this Embed[m
[32m+[m[32m     * @type {Array<FileOptions|string|Attachment>}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.files = [];[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets the title of this embed.[m
[32m+[m[32m   * @param {StringResolvable} title The title[m
[32m+[m[32m   * @returns {RichEmbed} This embed[m
[32m+[m[32m   */[m
[32m+[m[32m  setTitle(title) {[m
[32m+[m[32m    title = resolveString(title);[m
[32m+[m[32m    if (title.length > 256) throw new RangeError('RichEmbed titles may not exceed 256 characters.');[m
[32m+[m[32m    this.title = title;[m
[32m+[m[32m    return this;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets the description of this embed.[m
[32m+[m[32m   * @param {StringResolvable} description The description[m
[32m+[m[32m   * @returns {RichEmbed} This embed[m
[32m+[m[32m   */[m
[32m+[m[32m  setDescription(description) {[m
[32m+[m[32m    description = resolveString(description);[m
[32m+[m[32m    if (description.length > 2048) throw new RangeError('RichEmbed descriptions may not exceed 2048 characters.');[m
[32m+[m[32m    this.description = description;[m
[32m+[m[32m    return this;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets the URL of this embed.[m
[32m+[m[32m   * @param {string} url The URL[m
[32m+[m[32m   * @returns {RichEmbed} This embed[m
[32m+[m[32m   */[m
[32m+[m[32m  setURL(url) {[m
[32m+[m[32m    this.url = url;[m
[32m+[m[32m    return this;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets the color of this embed.[m
[32m+[m[32m   * @param {ColorResolvable} color The color of the embed[m
[32m+[m[32m   * @returns {RichEmbed} This embed[m
[32m+[m[32m   */[m
[32m+[m[32m  setColor(color) {[m
[32m+[m[32m    if (!ClientDataResolver) ClientDataResolver = require('../client/ClientDataResolver');[m
[32m+[m[32m    this.color = ClientDataResolver.resolveColor(color);[m
[32m+[m[32m    return this;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets the author of this embed.[m
[32m+[m[32m   * @param {StringResolvable} name The name of the author[m
[32m+[m[32m   * @param {string} [icon] The icon URL of the author[m
[32m+[m[32m   * @param {string} [url] The URL of the author[m
[32m+[m[32m   * @returns {RichEmbed} This embed[m
[32m+[m[32m   */[m
[32m+[m[32m  setAuthor(name, icon, url) {[m
[32m+[m[32m    this.author = { name: resolveString(name), icon_url: icon, url };[m
[32m+[m[32m    return this;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets the timestamp of this embed.[m
[32m+[m[32m   * @param {Date|number} [timestamp=Date.now()] The timestamp or date[m
[32m+[m[32m   * @returns {RichEmbed} This embed[m
[32m+[m[32m   */[m
[32m+[m[32m  setTimestamp(timestamp = Date.now()) {[m
[32m+[m[32m    if (timestamp instanceof Date) timestamp = timestamp.getTime();[m
[32m+[m[32m    this.timestamp = timestamp;[m
[32m+[m[32m    return this;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Adds a field to the embed (max 25).[m
[32m+[m[32m   * @param {StringResolvable} name The name of the field[m
[32m+[m[32m   * @param {StringResolvable} value The value of the field[m
[32m+[m[32m   * @param {boolean} [inline=false] Set the field to display inline[m
[32m+[m[32m   * @returns {RichEmbed} This embed[m
[32m+[m[32m   */[m
[32m+[m[32m  addField(name, value, inline = false) {[m
[32m+[m[32m    if (this.fields.length >= 25) throw new RangeError('RichEmbeds may not exceed 25 fields.');[m
[32m+[m[32m    name = resolveString(name);[m
[32m+[m[32m    if (name.length > 256) throw new RangeError('RichEmbed field names may not exceed 256 characters.');[m
[32m+[m[32m    if (!/\S/.test(name)) throw new RangeError('RichEmbed field names may not be empty.');[m
[32m+[m[32m    value = resolveString(value);[m
[32m+[m[32m    if (value.length > 1024) throw new RangeError('RichEmbed field values may not exceed 1024 characters.');[m
[32m+[m[32m    if (!/\S/.test(value)) throw new RangeError('RichEmbed field values may not be empty.');[m
[32m+[m[32m    this.fields.push({ name, value, inline });[m
[32m+[m[32m    return this;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Convenience function for `<RichEmbed>.addField('\u200B', '\u200B', inline)`.[m
[32m+[m[32m   * @param {boolean} [inline=false] Set the field to display inline[m
[32m+[m[32m   * @returns {RichEmbed} This embed[m
[32m+[m[32m   */[m
[32m+[m[32m  addBlankField(inline = false) {[m
[32m+[m[32m    return this.addField('\u200B', '\u200B', inline);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Set the thumbnail of this embed.[m
[32m+[m[32m   * @param {string} url The URL of the thumbnail[m
[32m+[m[32m   * @returns {RichEmbed} This embed[m
[32m+[m[32m   */[m
[32m+[m[32m  setThumbnail(url) {[m
[32m+[m[32m    this.thumbnail = { url };[m
[32m+[m[32m    return this;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Set the image of this embed.[m
[32m+[m[32m   * @param {string} url The URL of the image[m
[32m+[m[32m   * @returns {RichEmbed} This embed[m
[32m+[m[32m   */[m
[32m+[m[32m  setImage(url) {[m
[32m+[m[32m    this.image = { url };[m
[32m+[m[32m    return this;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets the footer of this embed.[m
[32m+[m[32m   * @param {StringResolvable} text The text of the footer[m
[32m+[m[32m   * @param {string} [icon] The icon URL of the footer[m
[32m+[m[32m   * @returns {RichEmbed} This embed[m
[32m+[m[32m   */[m
[32m+[m[32m  setFooter(text, icon) {[m
[32m+[m[32m    text = resolveString(text);[m
[32m+[m[32m    if (text.length > 2048) throw new RangeError('RichEmbed footer text may not exceed 2048 characters.');[m
[32m+[m[32m    this.footer = { text, icon_url: icon };[m
[32m+[m[32m    return this;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets the file to upload alongside the embed. This file can be accessed via `attachment://fileName.extension` when[m
[32m+[m[32m   * setting an embed image or author/footer icons. Only one file may be attached.[m
[32m+[m[32m   * @param {FileOptions|string|Attachment} file Local path or URL to the file to attach,[m
[32m+[m[32m   * or valid FileOptions for a file to attach[m
[32m+[m[32m   * @returns {RichEmbed} This embed[m
[32m+[m[32m   */[m
[32m+[m[32m  attachFile(file) {[m
[32m+[m[32m    if (this.file) throw new RangeError('You may not upload more than one file at once.');[m
[32m+[m[32m    if (file instanceof Attachment) file = file.file;[m
[32m+[m[32m    this.file = file;[m
[32m+[m[32m    return this;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets the files to upload alongside the embed. A file can be accessed via `attachment://fileName.extension` when[m
[32m+[m[32m   * setting an embed image or author/footer icons. Multiple files can be attached.[m
[32m+[m[32m   * @param {Array<FileOptions|string|Attachment>} files Files to attach[m
[32m+[m[32m   * @returns {RichEmbed}[m
[32m+[m[32m   */[m
[32m+[m[32m  attachFiles(files) {[m
[32m+[m[32m    files = files.map(file => file instanceof Attachment ? file.file : file);[m
[32m+[m[32m    this.files = this.files.concat(files);[m
[32m+[m[32m    return this;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The accumulated length for the embed title, description, fields, author and footer text[m
[32m+[m[32m   * @type {number}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get length() {[m
[32m+[m[32m    return ([m
[32m+[m[32m      (this.title ? this.title.length : 0) +[m
[32m+[m[32m      (this.description ? this.description.length : 0) +[m
[32m+[m[32m      (this.fields.length >= 1 ? this.fields.reduce((prev, curr) =>[m
[32m+[m[32m        prev + curr.name.length + curr.value.length, 0) : 0) +[m
[32m+[m[32m      (this.footer ? this.footer.text.length : 0) +[m
[32m+[m[32m      (this.author ? this.author.name.length : 0));[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Transforms the embed object to be processed.[m
[32m+[m[32m   * @returns {Object} The raw data of this embed[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  _apiTransform() {[m
[32m+[m[32m    return {[m
[32m+[m[32m      title: this.title,[m
[32m+[m[32m      type: 'rich',[m
[32m+[m[32m      description: this.description,[m
[32m+[m[32m      url: this.url,[m
[32m+[m[32m      timestamp: this.timestamp ? new Date(this.timestamp) : null,[m
[32m+[m[32m      color: this.color,[m
[32m+[m[32m      fields: this.fields ?[m
[32m+[m[32m        this.fields.map(field => ({ name: field.name, value: field.value, inline: field.inline })) :[m
[32m+[m[32m        null,[m
[32m+[m[32m      thumbnail: this.thumbnail ? {[m
[32m+[m[32m        url: this.thumbnail.url,[m
[32m+[m[32m      } : null,[m
[32m+[m[32m      image: this.image ? {[m
[32m+[m[32m        url: this.image.url,[m
[32m+[m[32m      } : null,[m
[32m+[m[32m      author: this.author ? {[m
[32m+[m[32m        name: this.author.name,[m
[32m+[m[32m        url: this.author.url,[m
[32m+[m[32m        icon_url: this.author instanceof MessageEmbed.Author ? this.author.iconURL : this.author.icon_url,[m
[32m+[m[32m      } : null,[m
[32m+[m[32m      footer: this.footer ? {[m
[32m+[m[32m        text: this.footer.text,[m
[32m+[m[32m        icon_url: this.footer instanceof MessageEmbed.Footer ? this.footer.iconURL : this.footer.icon_url,[m
[32m+[m[32m      } : null,[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = RichEmbed;[m
[32m+[m
[32m+[m[32mfunction resolveString(data) {[m
[32m+[m[32m  if (typeof data === 'string') return data;[m
[32m+[m[32m  if (data instanceof Array) return data.join('\n');[m
[32m+[m[32m  return String(data);[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/discord.js/src/structures/Role.js b/node_modules/discord.js/src/structures/Role.js[m
[1mnew file mode 100644[m
[1mindex 0000000..056cf98[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/structures/Role.js[m
[36m@@ -0,0 +1,376 @@[m
[32m+[m[32mconst Snowflake = require('../util/Snowflake');[m
[32m+[m[32mconst Permissions = require('../util/Permissions');[m
[32m+[m[32mconst util = require('util');[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Represents a role on Discord.[m
[32m+[m[32m */[m
[32m+[m[32mclass Role {[m
[32m+[m[32m  constructor(guild, data) {[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The client that instantiated the role[m
[32m+[m[32m     * @name Role#client[m
[32m+[m[32m     * @type {Client}[m
[32m+[m[32m     * @readonly[m
[32m+[m[32m     */[m
[32m+[m[32m    Object.defineProperty(this, 'client', { value: guild.client });[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The guild that the role belongs to[m
[32m+[m[32m     * @type {Guild}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.guild = guild;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Whether the role has been deleted[m
[32m+[m[32m     * @type {boolean}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.deleted = false;[m
[32m+[m
[32m+[m[32m    if (data) this.setup(data);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  setup(data) {[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The ID of the role (unique to the guild it is part of)[m
[32m+[m[32m     * @type {Snowflake}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.id = data.id;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The name of the role[m
[32m+[m[32m     * @type {string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.name = data.name;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The base 10 color of the role[m
[32m+[m[32m     * @type {number}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.color = data.color;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * If true, users that are part of this role will appear in a separate category in the users list[m
[32m+[m[32m     * @type {boolean}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.hoist = data.hoist;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The position of the role from the API[m
[32m+[m[32m     * @type {number}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.position = data.position;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The permissions bitfield of the role[m
[32m+[m[32m     * @type {number}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.permissions = data.permissions;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Whether or not the role is managed by an external service[m
[32m+[m[32m     * @type {boolean}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.managed = data.managed;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Whether or not the role can be mentioned by anyone[m
[32m+[m[32m     * @type {boolean}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.mentionable = data.mentionable;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The timestamp the role was created at[m
[32m+[m[32m   * @type {number}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get createdTimestamp() {[m
[32m+[m[32m    return Snowflake.deconstruct(this.id).timestamp;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The time the role was created[m
[32m+[m[32m   * @type {Date}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get createdAt() {[m
[32m+[m[32m    return new Date(this.createdTimestamp);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The hexadecimal version of the role color, with a leading hashtag[m
[32m+[m[32m   * @type {string}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get hexColor() {[m
[32m+[m[32m    let col = this.color.toString(16);[m
[32m+[m[32m    while (col.length < 6) col = `0${col}`;[m
[32m+[m[32m    return `#${col}`;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The cached guild members that have this role[m
[32m+[m[32m   * @type {Collection<Snowflake, GuildMember>}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get members() {[m
[32m+[m[32m    return this.guild.members.filter(m => m.roles.has(this.id));[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Whether the role is editable by the client user[m
[32m+[m[32m   * @type {boolean}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get editable() {[m
[32m+[m[32m    if (this.managed) return false;[m
[32m+[m[32m    const clientMember = this.guild.member(this.client.user);[m
[32m+[m[32m    if (!clientMember.permissions.has(Permissions.FLAGS.MANAGE_ROLES_OR_PERMISSIONS)) return false;[m
[32m+[m[32m    return clientMember.highestRole.comparePositionTo(this) > 0;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The position of the role in the role manager[m
[32m+[m[32m   * @type {number}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get calculatedPosition() {[m
[32m+[m[32m    const sorted = this.guild._sortedRoles;[m
[32m+[m[32m    return sorted.array().indexOf(sorted.get(this.id));[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Get an object mapping permission names to whether or not the role enables that permission.[m
[32m+[m[32m   * @returns {Object<string, boolean>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Print the serialized role permissions[m
[32m+[m[32m   * console.log(role.serialize());[m
[32m+[m[32m   */[m
[32m+[m[32m  serialize() {[m
[32m+[m[32m    return new Permissions(this.permissions).serialize();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Checks if the role has a permission.[m
[32m+[m[32m   * @param {PermissionResolvable} permission Permission(s) to check for[m
[32m+[m[32m   * @param {boolean} [explicit=false] Whether to require the role to explicitly have the exact permission[m
[32m+[m[32m   * **(deprecated)**[m
[32m+[m[32m   * @param {boolean} [checkAdmin] Whether to allow the administrator permission to override[m
[32m+[m[32m   * (takes priority over `explicit`)[m
[32m+[m[32m   * @returns {boolean}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // See if a role can ban a member[m
[32m+[m[32m   * if (role.hasPermission('BAN_MEMBERS')) {[m
[32m+[m[32m   *   console.log('This role can ban members');[m
[32m+[m[32m   * } else {[m
[32m+[m[32m   *   console.log('This role can\'t ban members');[m
[32m+[m[32m   * }[m
[32m+[m[32m   */[m
[32m+[m[32m  hasPermission(permission, explicit = false, checkAdmin) {[m
[32m+[m[32m    return new Permissions(this.permissions).has([m
[32m+[m[32m      permission, typeof checkAdmin !== 'undefined' ? checkAdmin : !explicit[m
[32m+[m[32m    );[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Checks if the role has all specified permissions.[m
[32m+[m[32m   * @param {PermissionResolvable} permissions The permissions to check for[m
[32m+[m[32m   * @param {boolean} [explicit=false] Whether to require the role to explicitly have the exact permissions[m
[32m+[m[32m   * @returns {boolean}[m
[32m+[m[32m   * @deprecated[m
[32m+[m[32m   */[m
[32m+[m[32m  hasPermissions(permissions, explicit = false) {[m
[32m+[m[32m    return new Permissions(this.permissions).has(permissions, !explicit);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Compares this role's position to another role's.[m
[32m+[m[32m   * @param {Role} role Role to compare to this one[m
[32m+[m[32m   * @returns {number} Negative number if this role's position is lower (other role's is higher),[m
[32m+[m[32m   * positive number if this one is higher (other's is lower), 0 if equal[m
[32m+[m[32m   */[m
[32m+[m[32m  comparePositionTo(role) {[m
[32m+[m[32m    return this.constructor.comparePositions(this, role);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The data for a role.[m
[32m+[m[32m   * @typedef {Object} RoleData[m
[32m+[m[32m   * @property {string} [name] The name of the role[m
[32m+[m[32m   * @property {ColorResolvable} [color] The color of the role, either a hex string or a base 10 number[m
[32m+[m[32m   * @property {boolean} [hoist] Whether or not the role should be hoisted[m
[32m+[m[32m   * @property {number} [position] The position of the role[m
[32m+[m[32m   * @property {PermissionResolvable|number} [permissions] The permissions of the role[m
[32m+[m[32m   * @property {boolean} [mentionable] Whether or not the role should be mentionable[m
[32m+[m[32m   */[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Edits the role.[m
[32m+[m[32m   * @param {RoleData} data The new data for the role[m
[32m+[m[32m   * @param {string} [reason] The reason for editing this role[m
[32m+[m[32m   * @returns {Promise<Role>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Edit name of a role[m
[32m+[m[32m   * role.edit({ name: 'New Name' })[m
[32m+[m[32m   *   .then(updated => console.log(`Edited role name from ${role.name} to ${updated.name}`))[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  edit(data, reason) {[m
[32m+[m[32m    return this.client.rest.methods.updateGuildRole(this, data, reason);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Set a new name for the role.[m
[32m+[m[32m   * @param {string} name The new name of the role[m
[32m+[m[32m   * @param {string} [reason] Reason for changing the role's name[m
[32m+[m[32m   * @returns {Promise<Role>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Set the name of the role[m
[32m+[m[32m   * role.setName('New Name')[m
[32m+[m[32m   *   .then(updated => console.log(`Edited role name from ${role.name} to ${updated.name}`))[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  setName(name, reason) {[m
[32m+[m[32m    return this.edit({ name }, reason);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Set a new color for the role.[m
[32m+[m[32m   * @param {ColorResolvable} color The color of the role[m
[32m+[m[32m   * @param {string} [reason] Reason for changing the role's color[m
[32m+[m[32m   * @returns {Promise<Role>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Set the color of a role[m
[32m+[m[32m   * role.setColor('#FF0000')[m
[32m+[m[32m   *   .then(updated => console.log(`Set color of role to ${role.color}`))[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  setColor(color, reason) {[m
[32m+[m[32m    return this.edit({ color }, reason);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Set whether or not the role should be hoisted.[m
[32m+[m[32m   * @param {boolean} hoist Whether or not to hoist the role[m
[32m+[m[32m   * @param {string} [reason] Reason for setting whether or not the role should be hoisted[m
[32m+[m[32m   * @returns {Promise<Role>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Set the hoist of the role[m
[32m+[m[32m   * role.setHoist(true)[m
[32m+[m[32m   *   .then(updated => console.log(`Role hoisted: ${updated.hoist}`))[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  setHoist(hoist, reason) {[m
[32m+[m[32m    return this.edit({ hoist }, reason);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Set the position of the role.[m
[32m+[m[32m   * @param {number} position The position of the role[m
[32m+[m[32m   * @param {boolean} [relative=false] Move the position relative to its current value[m
[32m+[m[32m   * @returns {Promise<Role>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Set the position of the role[m
[32m+[m[32m   * role.setPosition(1)[m
[32m+[m[32m   *   .then(updated => console.log(`Role position: ${updated.position}`))[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  setPosition(position, relative) {[m
[32m+[m[32m    return this.guild.setRolePosition(this, position, relative).then(() => this);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Set the permissions of the role.[m
[32m+[m[32m   * @param {PermissionResolvable} permissions The permissions of the role[m
[32m+[m[32m   * @param {string} [reason] Reason for changing the role's permissions[m
[32m+[m[32m   * @returns {Promise<Role>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Set the permissions of the role[m
[32m+[m[32m   * role.setPermissions(['KICK_MEMBERS', 'BAN_MEMBERS'])[m
[32m+[m[32m   *   .then(updated => console.log(`Updated permissions to ${updated.permissions.bitfield}`))[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Remove all permissions from a role[m
[32m+[m[32m   * role.setPermissions(0)[m
[32m+[m[32m   *   .then(updated => console.log(`Updated permissions to ${updated.permissions.bitfield}`))[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  setPermissions(permissions, reason) {[m
[32m+[m[32m    return this.edit({ permissions }, reason);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Set whether this role is mentionable.[m
[32m+[m[32m   * @param {boolean} mentionable Whether this role should be mentionable[m
[32m+[m[32m   * @param {string} [reason] Reason for setting whether or not this role should be mentionable[m
[32m+[m[32m   * @returns {Promise<Role>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Make the role mentionable[m
[32m+[m[32m   * role.setMentionable(true, 'Role needs to be pinged')[m
[32m+[m[32m   *   .then(updated => console.log(`Role mentionable: ${updated.mentionable}`))[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  setMentionable(mentionable, reason) {[m
[32m+[m[32m    return this.edit({ mentionable }, reason);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Deletes the role.[m
[32m+[m[32m   * @param {string} [reason] Reason for deleting the role[m
[32m+[m[32m   * @returns {Promise<Role>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Delete a role[m
[32m+[m[32m   * role.delete('The role needed to go')[m
[32m+[m[32m   *   .then(deleted => console.log(`Deleted role ${deleted.name}`))[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  delete(reason) {[m
[32m+[m[32m    return this.client.rest.methods.deleteGuildRole(this, reason);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Whether this role equals another role. It compares all properties, so for most operations[m
[32m+[m[32m   * it is advisable to just compare `role.id === role2.id` as it is much faster and is often[m
[32m+[m[32m   * what most users need.[m
[32m+[m[32m   * @param {Role} role Role to compare with[m
[32m+[m[32m   * @returns {boolean}[m
[32m+[m[32m   */[m
[32m+[m[32m  equals(role) {[m
[32m+[m[32m    return role &&[m
[32m+[m[32m      this.id === role.id &&[m
[32m+[m[32m      this.name === role.name &&[m
[32m+[m[32m      this.color === role.color &&[m
[32m+[m[32m      this.hoist === role.hoist &&[m
[32m+[m[32m      this.position === role.position &&[m
[32m+[m[32m      this.permissions === role.permissions &&[m
[32m+[m[32m      this.managed === role.managed;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * When concatenated with a string, this automatically concatenates the role mention rather than the Role object.[m
[32m+[m[32m   * @returns {string}[m
[32m+[m[32m   */[m
[32m+[m[32m  toString() {[m
[32m+[m[32m    if (this.id === this.guild.id) return '@everyone';[m
[32m+[m[32m    return `<@&${this.id}>`;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Compares the positions of two roles.[m
[32m+[m[32m   * @param {Role} role1 First role to compare[m
[32m+[m[32m   * @param {Role} role2 Second role to compare[m
[32m+[m[32m   * @returns {number} Negative number if the first role's position is lower (second role's is higher),[m
[32m+[m[32m   * positive number if the first's is higher (second's is lower), 0 if equal[m
[32m+[m[32m   */[m
[32m+[m[32m  static comparePositions(role1, role2) {[m
[32m+[m[32m    if (role1.position === role2.position) return role2.id - role1.id;[m
[32m+[m[32m    return role1.position - role2.position;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mRole.prototype.hasPermissions = util[m
[32m+[m[32m  .deprecate(Role.prototype.hasPermissions,[m
[32m+[m[32m    'Role#hasPermissions is deprecated - use Role#hasPermission instead, it now takes an array');[m
[32m+[m
[32m+[m[32mmodule.exports = Role;[m
[1mdiff --git a/node_modules/discord.js/src/structures/StoreChannel.js b/node_modules/discord.js/src/structures/StoreChannel.js[m
[1mnew file mode 100644[m
[1mindex 0000000..8985c0f[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/structures/StoreChannel.js[m
[36m@@ -0,0 +1,25 @@[m
[32m+[m[32mconst GuildChannel = require('./GuildChannel');[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Represents a guild store channel on Discord.[m
[32m+[m[32m * @extends {GuildChannel}[m
[32m+[m[32m */[m
[32m+[m[32mclass StoreChannel extends GuildChannel {[m
[32m+[m[32m  constructor(guild, data) {[m
[32m+[m[32m    super(guild, data);[m
[32m+[m[32m    this.type = 'store';[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  setup(data) {[m
[32m+[m[32m    super.setup(data);[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * If the guild considers this channel NSFW[m
[32m+[m[32m     * @type {boolean}[m
[32m+[m[32m     * @readonly[m
[32m+[m[32m     */[m
[32m+[m[32m    this.nsfw = data.nsfw;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = StoreChannel;[m
[1mdiff --git a/node_modules/discord.js/src/structures/TextChannel.js b/node_modules/discord.js/src/structures/TextChannel.js[m
[1mnew file mode 100644[m
[1mindex 0000000..d16dac8[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/structures/TextChannel.js[m
[36m@@ -0,0 +1,154 @@[m
[32m+[m[32mconst GuildChannel = require('./GuildChannel');[m
[32m+[m[32mconst TextBasedChannel = require('./interfaces/TextBasedChannel');[m
[32m+[m[32mconst Collection = require('../util/Collection');[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Represents a guild text channel on Discord.[m
[32m+[m[32m * @extends {GuildChannel}[m
[32m+[m[32m * @implements {TextBasedChannel}[m
[32m+[m[32m */[m
[32m+[m[32mclass TextChannel extends GuildChannel {[m
[32m+[m[32m  constructor(guild, data) {[m
[32m+[m[32m    super(guild, data);[m
[32m+[m[32m    this.type = 'text';[m
[32m+[m[32m    /**[m
[32m+[m[32m     * A collection containing the messages sent to this channel[m
[32m+[m[32m     * @type {Collection<Snowflake, Message>}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.messages = new Collection();[m
[32m+[m[32m    this._typing = new Map();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  setup(data) {[m
[32m+[m[32m    super.setup(data);[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The topic of the text channel[m
[32m+[m[32m     * @type {?string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.topic = data.topic;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * If the Discord considers this channel NSFW[m
[32m+[m[32m     * @type {boolean}[m
[32m+[m[32m     * @readonly[m
[32m+[m[32m     */[m
[32m+[m[32m    this.nsfw = Boolean(data.nsfw);[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The ID of the last message sent in this channel, if one was sent[m
[32m+[m[32m     * @type {?Snowflake}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.lastMessageID = data.last_message_id;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The timestamp when the last pinned message was pinned, if there was one[m
[32m+[m[32m     * @type {?number}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.lastPinTimestamp = data.last_pin_timestamp ? new Date(data.last_pin_timestamp).getTime() : null;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The ratelimit per user for this channel in seconds[m
[32m+[m[32m     * @type {number}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.rateLimitPerUser = data.rate_limit_per_user || 0;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * A collection of members that can see this channel, mapped by their ID[m
[32m+[m[32m   * @type {Collection<Snowflake, GuildMember>}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get members() {[m
[32m+[m[32m    const members = new Collection();[m
[32m+[m[32m    for (const member of this.guild.members.values()) {[m
[32m+[m[32m      if (this.permissionsFor(member).has('READ_MESSAGES')) {[m
[32m+[m[32m        members.set(member.id, member);[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m    return members;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Fetch all webhooks for the channel.[m
[32m+[m[32m   * @returns {Promise<Collection<Snowflake, Webhook>>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Fetch webhooks[m
[32m+[m[32m   * channel.fetchWebhooks()[m
[32m+[m[32m   *   .then(hooks => console.log(`This channel has ${hooks.size} hooks`))[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  fetchWebhooks() {[m
[32m+[m[32m    return this.client.rest.methods.getChannelWebhooks(this);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets whether this channel is flagged as NSFW.[m
[32m+[m[32m   * @param {boolean} nsfw Whether the channel should be considered NSFW[m
[32m+[m[32m   * @param {string} [reason] Reason for changing the channel's NSFW flag[m
[32m+[m[32m   * @returns {Promise<TextChannel>}[m
[32m+[m[32m   */[m
[32m+[m[32m  setNSFW(nsfw, reason) {[m
[32m+[m[32m    return this.edit({ nsfw }, reason);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Create a webhook for the channel.[m
[32m+[m[32m   * @param {string} name The name of the webhook[m
[32m+[m[32m   * @param {BufferResolvable|Base64Resolvable} [avatar] The avatar for the webhook[m
[32m+[m[32m   * @param {string} [reason] Reason for creating this webhook[m
[32m+[m[32m   * @returns {Promise<Webhook>} webhook The created webhook[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * channel.createWebhook('Snek', 'https://i.imgur.com/mI8XcpG.jpg')[m
[32m+[m[32m   *   .then(webhook => console.log(`Created webhook ${webhook}`))[m
[32m+[m[32m   *   .catch(console.error)[m
[32m+[m[32m   */[m
[32m+[m[32m  createWebhook(name, avatar, reason) {[m
[32m+[m[32m    if (typeof avatar === 'string' && avatar.startsWith('data:')) {[m
[32m+[m[32m      return this.client.rest.methods.createWebhook(this, name, avatar, reason);[m
[32m+[m[32m    } else {[m
[32m+[m[32m      return this.client.resolver.resolveImage(avatar).then(data =>[m
[32m+[m[32m        this.client.rest.methods.createWebhook(this, name, data, reason)[m
[32m+[m[32m      );[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets the rate limit per user for this channel.[m
[32m+[m[32m   * @param {number} rateLimitPerUser The new ratelimit in seconds[m
[32m+[m[32m   * @param {string} [reason] Reason for changing the channel's ratelimits[m
[32m+[m[32m   * @returns {Promise<TextChannel>}[m
[32m+[m[32m   */[m
[32m+[m[32m  setRateLimitPerUser(rateLimitPerUser, reason) {[m
[32m+[m[32m    return this.edit({ rateLimitPerUser }, reason);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  // These are here only for documentation purposes - they are implemented by TextBasedChannel[m
[32m+[m[32m  /* eslint-disable no-empty-function */[m
[32m+[m[32m  get lastMessage() {}[m
[32m+[m[32m  get lastPinAt() {}[m
[32m+[m[32m  send() { }[m
[32m+[m[32m  sendMessage() { }[m
[32m+[m[32m  sendEmbed() { }[m
[32m+[m[32m  sendFile() { }[m
[32m+[m[32m  sendFiles() { }[m
[32m+[m[32m  sendCode() { }[m
[32m+[m[32m  fetchMessage() { }[m
[32m+[m[32m  fetchMessages() { }[m
[32m+[m[32m  fetchPinnedMessages() { }[m
[32m+[m[32m  search() { }[m
[32m+[m[32m  startTyping() { }[m
[32m+[m[32m  stopTyping() { }[m
[32m+[m[32m  get typing() { }[m
[32m+[m[32m  get typingCount() { }[m
[32m+[m[32m  createCollector() { }[m
[32m+[m[32m  createMessageCollector() { }[m
[32m+[m[32m  awaitMessages() { }[m
[32m+[m[32m  bulkDelete() { }[m
[32m+[m[32m  acknowledge() { }[m
[32m+[m[32m  _cacheMessage() { }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mTextBasedChannel.applyToClass(TextChannel, true);[m
[32m+[m
[32m+[m[32mmodule.exports = TextChannel;[m
[1mdiff --git a/node_modules/discord.js/src/structures/User.js b/node_modules/discord.js/src/structures/User.js[m
[1mnew file mode 100644[m
[1mindex 0000000..43adb37[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/structures/User.js[m
[36m@@ -0,0 +1,329 @@[m
[32m+[m[32mconst TextBasedChannel = require('./interfaces/TextBasedChannel');[m
[32m+[m[32mconst Constants = require('../util/Constants');[m
[32m+[m[32mconst Presence = require('./Presence').Presence;[m
[32m+[m[32mconst Snowflake = require('../util/Snowflake');[m
[32m+[m[32mconst util = require('util');[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Represents a user on Discord.[m
[32m+[m[32m * @implements {TextBasedChannel}[m
[32m+[m[32m */[m
[32m+[m[32mclass User {[m
[32m+[m[32m  constructor(client, data) {[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The client that created the instance of the user[m
[32m+[m[32m     * @name User#client[m
[32m+[m[32m     * @type {Client}[m
[32m+[m[32m     * @readonly[m
[32m+[m[32m     */[m
[32m+[m[32m    Object.defineProperty(this, 'client', { value: client });[m
[32m+[m
[32m+[m[32m    if (data) this.setup(data);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  setup(data) {[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The ID of the user[m
[32m+[m[32m     * @type {Snowflake}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.id = data.id;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The username of the user[m
[32m+[m[32m     * @type {string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.username = data.username;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * A discriminator based on username for the user[m
[32m+[m[32m     * @type {string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.discriminator = data.discriminator;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The ID of the user's avatar[m
[32m+[m[32m     * @type {string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.avatar = data.avatar;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Whether or not the user is a bot[m
[32m+[m[32m     * @type {boolean}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.bot = Boolean(data.bot);[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The ID of the last message sent by the user, if one was sent[m
[32m+[m[32m     * @type {?Snowflake}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.lastMessageID = null;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The Message object of the last message sent by the user, if one was sent[m
[32m+[m[32m     * @type {?Message}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.lastMessage = null;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  patch(data) {[m
[32m+[m[32m    for (const prop of ['id', 'username', 'discriminator', 'avatar', 'bot']) {[m
[32m+[m[32m      if (typeof data[prop] !== 'undefined') this[prop] = data[prop];[m
[32m+[m[32m    }[m
[32m+[m[32m    if (data.token) this.client.token = data.token;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The timestamp the user was created at[m
[32m+[m[32m   * @type {number}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get createdTimestamp() {[m
[32m+[m[32m    return Snowflake.deconstruct(this.id).timestamp;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The time the user was created[m
[32m+[m[32m   * @type {Date}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get createdAt() {[m
[32m+[m[32m    return new Date(this.createdTimestamp);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The presence of this user[m
[32m+[m[32m   * @type {Presence}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get presence() {[m
[32m+[m[32m    if (this.client.presences.has(this.id)) return this.client.presences.get(this.id);[m
[32m+[m[32m    for (const guild of this.client.guilds.values()) {[m
[32m+[m[32m      if (guild.presences.has(this.id)) return guild.presences.get(this.id);[m
[32m+[m[32m    }[m
[32m+[m[32m    return new Presence(undefined, this.client);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * A link to the user's avatar[m
[32m+[m[32m   * @type {?string}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get avatarURL() {[m
[32m+[m[32m    if (!this.avatar) return null;[m
[32m+[m[32m    return Constants.Endpoints.User(this).Avatar(this.client.options.http.cdn, this.avatar);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * A link to the user's default avatar[m
[32m+[m[32m   * @type {string}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get defaultAvatarURL() {[m
[32m+[m[32m    const avatars = Object.keys(Constants.DefaultAvatars);[m
[32m+[m[32m    const avatar = avatars[this.discriminator % avatars.length];[m
[32m+[m[32m    return Constants.Endpoints.CDN(this.client.options.http.host).Asset(`${Constants.DefaultAvatars[avatar]}.png`);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * A link to the user's avatar if they have one. Otherwise a link to their default avatar will be returned[m
[32m+[m[32m   * @type {string}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get displayAvatarURL() {[m
[32m+[m[32m    return this.avatarURL || this.defaultAvatarURL;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The Discord "tag" (e.g. `hydrabolt#0001`) for this user[m
[32m+[m[32m   * @type {string}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get tag() {[m
[32m+[m[32m    return `${this.username}#${this.discriminator}`;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The note that is set for the user[m
[32m+[m[32m   * <warn>This is only available when using a user account.</warn>[m
[32m+[m[32m   * @type {?string}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   * @deprecated[m
[32m+[m[32m   */[m
[32m+[m[32m  get note() {[m
[32m+[m[32m    return this.client.user.notes.get(this.id) || null;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Check whether the user is typing in a channel.[m
[32m+[m[32m   * @param {ChannelResolvable} channel The channel to check in[m
[32m+[m[32m   * @returns {boolean}[m
[32m+[m[32m   */[m
[32m+[m[32m  typingIn(channel) {[m
[32m+[m[32m    channel = this.client.resolver.resolveChannel(channel);[m
[32m+[m[32m    return channel._typing.has(this.id);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Get the time that the user started typing.[m
[32m+[m[32m   * @param {ChannelResolvable} channel The channel to get the time in[m
[32m+[m[32m   * @returns {?Date}[m
[32m+[m[32m   */[m
[32m+[m[32m  typingSinceIn(channel) {[m
[32m+[m[32m    channel = this.client.resolver.resolveChannel(channel);[m
[32m+[m[32m    return channel._typing.has(this.id) ? new Date(channel._typing.get(this.id).since) : null;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Get the amount of time the user has been typing in a channel for (in milliseconds), or -1 if they're not typing.[m
[32m+[m[32m   * @param {ChannelResolvable} channel The channel to get the time in[m
[32m+[m[32m   * @returns {number}[m
[32m+[m[32m   */[m
[32m+[m[32m  typingDurationIn(channel) {[m
[32m+[m[32m    channel = this.client.resolver.resolveChannel(channel);[m
[32m+[m[32m    return channel._typing.has(this.id) ? channel._typing.get(this.id).elapsedTime : -1;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The DM between the client's user and this user[m
[32m+[m[32m   * @type {?DMChannel}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get dmChannel() {[m
[32m+[m[32m    return this.client.channels.find(c => c.type === 'dm' && c.recipient.id === this.id);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Creates a DM channel between the client and the user.[m
[32m+[m[32m   * @returns {Promise<DMChannel>}[m
[32m+[m[32m   */[m
[32m+[m[32m  createDM() {[m
[32m+[m[32m    return this.client.rest.methods.createDM(this);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Deletes a DM channel (if one exists) between the client and the user. Resolves with the channel if successful.[m
[32m+[m[32m   * @returns {Promise<DMChannel>}[m
[32m+[m[32m   */[m
[32m+[m[32m  deleteDM() {[m
[32m+[m[32m    return this.client.rest.methods.deleteChannel(this);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sends a friend request to the user.[m
[32m+[m[32m   * <warn>This is only available when using a user account.</warn>[m
[32m+[m[32m   * @returns {Promise<User>}[m
[32m+[m[32m   * @deprecated[m
[32m+[m[32m   */[m
[32m+[m[32m  addFriend() {[m
[32m+[m[32m    return this.client.rest.methods.addFriend(this);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Removes the user from your friends.[m
[32m+[m[32m   * <warn>This is only available when using a user account.</warn>[m
[32m+[m[32m   * @returns {Promise<User>}[m
[32m+[m[32m   * @deprecated[m
[32m+[m[32m   */[m
[32m+[m[32m  removeFriend() {[m
[32m+[m[32m    return this.client.rest.methods.removeFriend(this);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Blocks the user.[m
[32m+[m[32m   * <warn>This is only available when using a user account.</warn>[m
[32m+[m[32m   * @returns {Promise<User>}[m
[32m+[m[32m   * @deprecated[m
[32m+[m[32m   */[m
[32m+[m[32m  block() {[m
[32m+[m[32m    return this.client.rest.methods.blockUser(this);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Unblocks the user.[m
[32m+[m[32m   * <warn>This is only available when using a user account.</warn>[m
[32m+[m[32m   * @returns {Promise<User>}[m
[32m+[m[32m   * @deprecated[m
[32m+[m[32m   */[m
[32m+[m[32m  unblock() {[m
[32m+[m[32m    return this.client.rest.methods.unblockUser(this);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Get the profile of the user.[m
[32m+[m[32m   * <warn>This is only available when using a user account.</warn>[m
[32m+[m[32m   * @returns {Promise<UserProfile>}[m
[32m+[m[32m   * @deprecated[m
[32m+[m[32m   */[m
[32m+[m[32m  fetchProfile() {[m
[32m+[m[32m    return this.client.rest.methods.fetchUserProfile(this);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets a note for the user.[m
[32m+[m[32m   * <warn>This is only available when using a user account.</warn>[m
[32m+[m[32m   * @param {string} note The note to set for the user[m
[32m+[m[32m   * @returns {Promise<User>}[m
[32m+[m[32m   * @deprecated[m
[32m+[m[32m   */[m
[32m+[m[32m  setNote(note) {[m
[32m+[m[32m    return this.client.rest.methods.setNote(this, note);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Checks if the user is equal to another. It compares ID, username, discriminator, avatar, and bot flags.[m
[32m+[m[32m   * It is recommended to compare equality by using `user.id === user2.id` unless you want to compare all properties.[m
[32m+[m[32m   * @param {User} user User to compare with[m
[32m+[m[32m   * @returns {boolean}[m
[32m+[m[32m   */[m
[32m+[m[32m  equals(user) {[m
[32m+[m[32m    let equal = user &&[m
[32m+[m[32m      this.id === user.id &&[m
[32m+[m[32m      this.username === user.username &&[m
[32m+[m[32m      this.discriminator === user.discriminator &&[m
[32m+[m[32m      this.avatar === user.avatar &&[m
[32m+[m[32m      this.bot === Boolean(user.bot);[m
[32m+[m
[32m+[m[32m    return equal;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * When concatenated with a string, this automatically concatenates the user's mention instead of the User object.[m
[32m+[m[32m   * @returns {string}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // logs: Hello from <@123456789>![m
[32m+[m[32m   * console.log(`Hello from ${user}!`);[m
[32m+[m[32m   */[m
[32m+[m[32m  toString() {[m
[32m+[m[32m    return `<@${this.id}>`;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  // These are here only for documentation purposes - they are implemented by TextBasedChannel[m
[32m+[m[32m  /* eslint-disable no-empty-function */[m
[32m+[m[32m  send() {}[m
[32m+[m[32m  sendMessage() {}[m
[32m+[m[32m  sendEmbed() {}[m
[32m+[m[32m  sendFile() {}[m
[32m+[m[32m  sendCode() {}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mTextBasedChannel.applyToClass(User);[m
[32m+[m
[32m+[m[32mUser.prototype.block =[m
[32m+[m[32m  util.deprecate(User.prototype.block, 'User#block: userbot methods will be removed');[m
[32m+[m
[32m+[m[32mUser.prototype.unblock =[m
[32m+[m[32m  util.deprecate(User.prototype.unblock, 'User#unblock: userbot methods will be removed');[m
[32m+[m
[32m+[m[32mUser.prototype.addFriend =[m
[32m+[m[32m  util.deprecate(User.prototype.addFriend, 'User#addFriend: userbot methods will be removed');[m
[32m+[m
[32m+[m[32mUser.prototype.removeFriend =[m
[32m+[m[32m  util.deprecate(User.prototype.removeFriend, 'User#removeFriend: userbot methods will be removed');[m
[32m+[m
[32m+[m[32mUser.prototype.setNote =[m
[32m+[m[32m  util.deprecate(User.prototype.setNote, 'User#setNote, userbot methods will be removed');[m
[32m+[m
[32m+[m[32mUser.prototype.fetchProfile =[m
[32m+[m[32m  util.deprecate(User.prototype.fetchProfile, 'User#fetchProfile: userbot methods will be removed');[m
[32m+[m
[32m+[m[32mmodule.exports = User;[m
[1mdiff --git a/node_modules/discord.js/src/structures/UserConnection.js b/node_modules/discord.js/src/structures/UserConnection.js[m
[1mnew file mode 100644[m
[1mindex 0000000..ea6c65f[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/structures/UserConnection.js[m
[36m@@ -0,0 +1,48 @@[m
[32m+[m[32m/**[m
[32m+[m[32m * Represents a user connection (or "platform identity").[m
[32m+[m[32m */[m
[32m+[m[32mclass UserConnection {[m
[32m+[m[32m  constructor(user, data) {[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The user that owns the connection[m
[32m+[m[32m     * @type {User}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.user = user;[m
[32m+[m
[32m+[m[32m    this.setup(data);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  setup(data) {[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The type of the connection[m
[32m+[m[32m     * @type {string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.type = data.type;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The username of the connection account[m
[32m+[m[32m     * @type {string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.name = data.name;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The id of the connection account[m
[32m+[m[32m     * @type {string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.id = data.id;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Whether the connection is revoked[m
[32m+[m[32m     * @type {boolean}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.revoked = data.revoked;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Partial server integrations (not yet implemented)[m
[32m+[m[32m     * @type {Object[]}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.integrations = data.integrations;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = UserConnection;[m
[1mdiff --git a/node_modules/discord.js/src/structures/UserProfile.js b/node_modules/discord.js/src/structures/UserProfile.js[m
[1mnew file mode 100644[m
[1mindex 0000000..a27d4d0[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/structures/UserProfile.js[m
[36m@@ -0,0 +1,62 @@[m
[32m+[m[32mconst Collection = require('../util/Collection');[m
[32m+[m[32mconst UserConnection = require('./UserConnection');[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Represents a user's profile on Discord.[m
[32m+[m[32m */[m
[32m+[m[32mclass UserProfile {[m
[32m+[m[32m  constructor(user, data) {[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The owner of the profile[m
[32m+[m[32m     * @type {User}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.user = user;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The client that created the instance of the UserProfile[m
[32m+[m[32m     * @name UserProfile#client[m
[32m+[m[32m     * @type {Client}[m
[32m+[m[32m     * @readonly[m
[32m+[m[32m     */[m
[32m+[m[32m    Object.defineProperty(this, 'client', { value: user.client });[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The guilds that the client user and the user share[m
[32m+[m[32m     * @type {Collection<Snowflake, Guild>}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.mutualGuilds = new Collection();[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The user's connections[m
[32m+[m[32m     * @type {Collection<Snowflake, UserConnection>}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.connections = new Collection();[m
[32m+[m
[32m+[m[32m    this.setup(data);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  setup(data) {[m
[32m+[m[32m    /**[m
[32m+[m[32m     * If the user has Discord Premium[m
[32m+[m[32m     * @type {boolean}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.premium = data.premium;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The date since which the user has had Discord Premium[m
[32m+[m[32m     * @type {?Date}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.premiumSince = data.premium_since ? new Date(data.premium_since) : null;[m
[32m+[m
[32m+[m[32m    for (const guild of data.mutual_guilds) {[m
[32m+[m[32m      if (this.client.guilds.has(guild.id)) {[m
[32m+[m[32m        this.mutualGuilds.set(guild.id, this.client.guilds.get(guild.id));[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m    for (const connection of data.connected_accounts) {[m
[32m+[m[32m      this.connections.set(connection.id, new UserConnection(this.user, connection));[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = UserProfile;[m
[1mdiff --git a/node_modules/discord.js/src/structures/VoiceChannel.js b/node_modules/discord.js/src/structures/VoiceChannel.js[m
[1mnew file mode 100644[m
[1mindex 0000000..a89dafa[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/structures/VoiceChannel.js[m
[36m@@ -0,0 +1,146 @@[m
[32m+[m[32mconst GuildChannel = require('./GuildChannel');[m
[32m+[m[32mconst Collection = require('../util/Collection');[m
[32m+[m[32mconst Permissions = require('../util/Permissions');[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Represents a guild voice channel on Discord.[m
[32m+[m[32m * @extends {GuildChannel}[m
[32m+[m[32m */[m
[32m+[m[32mclass VoiceChannel extends GuildChannel {[m
[32m+[m[32m  constructor(guild, data) {[m
[32m+[m[32m    super(guild, data);[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The members in this voice channel[m
[32m+[m[32m     * @type {Collection<Snowflake, GuildMember>}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.members = new Collection();[m
[32m+[m
[32m+[m[32m    this.type = 'voice';[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  setup(data) {[m
[32m+[m[32m    super.setup(data);[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The bitrate of this voice channel[m
[32m+[m[32m     * @type {number}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.bitrate = data.bitrate * 0.001;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The maximum amount of users allowed in this channel - 0 means unlimited.[m
[32m+[m[32m     * @type {number}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.userLimit = data.user_limit;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The voice connection for this voice channel, if the client is connected[m
[32m+[m[32m   * @type {?VoiceConnection}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get connection() {[m
[32m+[m[32m    const connection = this.guild.voiceConnection;[m
[32m+[m[32m    if (connection && connection.channel.id === this.id) return connection;[m
[32m+[m[32m    return null;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Checks if the voice channel is full[m
[32m+[m[32m   * @type {boolean}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get full() {[m
[32m+[m[32m    return this.userLimit > 0 && this.members.size >= this.userLimit;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Whether the channel is deletable by the client user[m
[32m+[m[32m   * @type {boolean}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get deletable() {[m
[32m+[m[32m    return super.deletable && this.permissionsFor(this.client.user).has(Permissions.FLAGS.CONNECT);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Checks if the client has permission join the voice channel[m
[32m+[m[32m   * @type {boolean}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get joinable() {[m
[32m+[m[32m    if (this.client.browser) return false;[m
[32m+[m[32m    if (!this.permissionsFor(this.client.user).has('CONNECT')) return false;[m
[32m+[m[32m    if (this.full && !this.permissionsFor(this.client.user).has('MOVE_MEMBERS')) return false;[m
[32m+[m[32m    return true;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Checks if the client has permission to send audio to the voice channel[m
[32m+[m[32m   * @type {boolean}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get speakable() {[m
[32m+[m[32m    return this.permissionsFor(this.client.user).has('SPEAK');[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets the bitrate of the channel (in kbps).[m
[32m+[m[32m   * @param {number} bitrate The new bitrate[m
[32m+[m[32m   * @param {string} [reason] Reason for changing the channel's bitrate[m
[32m+[m[32m   * @returns {Promise<VoiceChannel>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Set the bitrate of a voice channel[m
[32m+[m[32m   * voiceChannel.setBitrate(48)[m
[32m+[m[32m   *   .then(vc => console.log(`Set bitrate to ${vc.bitrate}kbps for ${vc.name}`))[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  setBitrate(bitrate, reason) {[m
[32m+[m[32m    bitrate *= 1000;[m
[32m+[m[32m    return this.edit({ bitrate }, reason);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets the user limit of the channel.[m
[32m+[m[32m   * @param {number} userLimit The new user limit[m
[32m+[m[32m   * @param {string} [reason] Reason for changing the user limit[m
[32m+[m[32m   * @returns {Promise<VoiceChannel>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Set the user limit of a voice channel[m
[32m+[m[32m   * voiceChannel.setUserLimit(42)[m
[32m+[m[32m   *   .then(vc => console.log(`Set user limit to ${vc.userLimit} for ${vc.name}`))[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  setUserLimit(userLimit, reason) {[m
[32m+[m[32m    return this.edit({ userLimit }, reason);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Attempts to join this voice channel.[m
[32m+[m[32m   * @returns {Promise<VoiceConnection>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Join a voice channel[m
[32m+[m[32m   * voiceChannel.join()[m
[32m+[m[32m   *   .then(connection => console.log('Connected!'))[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  join() {[m
[32m+[m[32m    if (this.client.browser) return Promise.reject(new Error('Voice connections are not available in browsers.'));[m
[32m+[m[32m    return this.client.voice.joinChannel(this);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Leaves this voice channel.[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Leave a voice channel[m
[32m+[m[32m   * voiceChannel.leave();[m
[32m+[m[32m   */[m
[32m+[m[32m  leave() {[m
[32m+[m[32m    if (this.client.browser) return;[m
[32m+[m[32m    const connection = this.client.voice.connections.get(this.guild.id);[m
[32m+[m[32m    if (connection && connection.channel.id === this.id) connection.disconnect();[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = VoiceChannel;[m
[1mdiff --git a/node_modules/discord.js/src/structures/VoiceRegion.js b/node_modules/discord.js/src/structures/VoiceRegion.js[m
[1mnew file mode 100644[m
[1mindex 0000000..dc6b461[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/structures/VoiceRegion.js[m
[36m@@ -0,0 +1,50 @@[m
[32m+[m[32m/**[m
[32m+[m[32m * Represents a Discord voice region for guilds.[m
[32m+[m[32m */[m
[32m+[m[32mclass VoiceRegion {[m
[32m+[m[32m  constructor(data) {[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The ID of the region[m
[32m+[m[32m     * @type {string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.id = data.id;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Name of the region[m
[32m+[m[32m     * @type {string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.name = data.name;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Whether the region is VIP-only[m
[32m+[m[32m     * @type {boolean}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.vip = data.vip;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Whether the region is deprecated[m
[32m+[m[32m     * @type {boolean}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.deprecated = data.deprecated;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Whether the region is optimal[m
[32m+[m[32m     * @type {boolean}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.optimal = data.optimal;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Whether the region is custom[m
[32m+[m[32m     * @type {boolean}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.custom = data.custom;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * A sample hostname for what a connection might look like[m
[32m+[m[32m     * @type {string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.sampleHostname = data.sample_hostname;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = VoiceRegion;[m
[1mdiff --git a/node_modules/discord.js/src/structures/Webhook.js b/node_modules/discord.js/src/structures/Webhook.js[m
[1mnew file mode 100644[m
[1mindex 0000000..cf8f4f2[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/structures/Webhook.js[m
[36m@@ -0,0 +1,304 @@[m
[32m+[m[32mconst EventEmitter = require('events');[m
[32m+[m[32mconst path = require('path');[m
[32m+[m[32mconst Util = require('../util/Util');[m
[32m+[m[32mconst Attachment = require('./Attachment');[m
[32m+[m[32mconst RichEmbed = require('./RichEmbed');[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Represents a webhook.[m
[32m+[m[32m */[m
[32m+[m[32mclass Webhook extends EventEmitter {[m
[32m+[m[32m  constructor(client, dataOrID, token) {[m
[32m+[m[32m    super();[m
[32m+[m[32m    if (client) {[m
[32m+[m[32m      /**[m
[32m+[m[32m       * The client that instantiated the webhook[m
[32m+[m[32m       * @name Webhook#client[m
[32m+[m[32m       * @type {Client}[m
[32m+[m[32m       * @readonly[m
[32m+[m[32m       */[m
[32m+[m[32m      Object.defineProperty(this, 'client', { value: client });[m
[32m+[m[32m      if (dataOrID) this.setup(dataOrID);[m
[32m+[m[32m    } else {[m
[32m+[m[32m      this.id = dataOrID;[m
[32m+[m[32m      this.token = token;[m
[32m+[m[32m      Object.defineProperty(this, 'client', { value: this });[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  setup(data) {[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The name of the webhook[m
[32m+[m[32m     * @type {string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.name = data.name;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The token for the webhook[m
[32m+[m[32m     * @name Webhook#token[m
[32m+[m[32m     * @type {string}[m
[32m+[m[32m     */[m
[32m+[m[32m    Object.defineProperty(this, 'token', { value: data.token, writable: true, configurable: true });[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The avatar for the webhook[m
[32m+[m[32m     * @type {?string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.avatar = data.avatar;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The ID of the webhook[m
[32m+[m[32m     * @type {Snowflake}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.id = data.id;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The guild the webhook belongs to[m
[32m+[m[32m     * @type {Snowflake}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.guildID = data.guild_id;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The channel the webhook belongs to[m
[32m+[m[32m     * @type {Snowflake}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.channelID = data.channel_id;[m
[32m+[m
[32m+[m[32m    if (data.user) {[m
[32m+[m[32m      /**[m
[32m+[m[32m       * The owner of the webhook[m
[32m+[m[32m       * @type {?User|Object}[m
[32m+[m[32m       */[m
[32m+[m[32m      this.owner = this.client.users ? this.client.users.get(data.user.id) : data.user;[m
[32m+[m[32m    } else {[m
[32m+[m[32m      this.owner = null;[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Options that can be passed into send, sendMessage, sendFile, sendEmbed, and sendCode.[m
[32m+[m[32m   * @typedef {Object} WebhookMessageOptions[m
[32m+[m[32m   * @property {string} [username=this.name] Username override for the message[m
[32m+[m[32m   * @property {string} [avatarURL] Avatar URL override for the message[m
[32m+[m[32m   * @property {boolean} [tts=false] Whether or not the message should be spoken aloud[m
[32m+[m[32m   * @property {string} [nonce=''] The nonce for the message[m
[32m+[m[32m   * @property {Array<RichEmbed|Object>} [embeds] An array of embeds for the message[m
[32m+[m[32m   * (see [here](https://discordapp.com/developers/docs/resources/channel#embed-object) for more details)[m
[32m+[m[32m   * @property {boolean} [disableEveryone=this.client.options.disableEveryone] Whether or not @everyone and @here[m
[32m+[m[32m   * should be replaced with plain-text[m
[32m+[m[32m   * @property {FileOptions|BufferResolvable|Attachment} [file] A file to send with the message **(deprecated)**[m
[32m+[m[32m   * @property {FileOptions[]|BufferResolvable[]|Attachment[]} [files] Files to send with the message[m
[32m+[m[32m   * @property {string|boolean} [code] Language for optional codeblock formatting to apply[m
[32m+[m[32m   * @property {boolean|SplitOptions} [split=false] Whether or not the message should be split into multiple messages if[m
[32m+[m[32m   * it exceeds the character limit. If an object is provided, these are the options for splitting the message.[m
[32m+[m[32m   */[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Send a message with this webhook.[m
[32m+[m[32m   * @param {StringResolvable} content The content to send[m
[32m+[m[32m   * @param {WebhookMessageOptions|Attachment|RichEmbed} [options] The options to provide,[m
[32m+[m[32m   * can also be just a RichEmbed or Attachment[m
[32m+[m[32m   * @returns {Promise<Message|Message[]|Object|Object[]>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Send a basic message[m
[32m+[m[32m   * webhook.send('hello!')[m
[32m+[m[32m   *   .then(message => console.log(`Sent message: ${message.content}`))[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Send a remote file[m
[32m+[m[32m   * webhook.send({[m
[32m+[m[32m   *   files: ['https://cdn.discordapp.com/icons/222078108977594368/6e1019b3179d71046e463a75915e7244.png?size=2048'][m
[32m+[m[32m   * })[m
[32m+[m[32m   *   .then(console.log)[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Send a local file[m
[32m+[m[32m   * webhook.send({[m
[32m+[m[32m   *   files: [{[m
[32m+[m[32m   *     attachment: 'entire/path/to/file.jpg',[m
[32m+[m[32m   *     name: 'file.jpg'[m
[32m+[m[32m   *   }][m
[32m+[m[32m   * })[m
[32m+[m[32m   *   .then(console.log)[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Send an embed with a local image inside[m
[32m+[m[32m   * webhook.send('This is an embed', {[m
[32m+[m[32m   *   embeds: [{[m
[32m+[m[32m   *     thumbnail: {[m
[32m+[m[32m   *          url: 'attachment://file.jpg'[m
[32m+[m[32m   *       }[m
[32m+[m[32m   *    }],[m
[32m+[m[32m   *    files: [{[m
[32m+[m[32m   *       attachment: 'entire/path/to/file.jpg',[m
[32m+[m[32m   *       name: 'file.jpg'[m
[32m+[m[32m   *    }][m
[32m+[m[32m   * })[m
[32m+[m[32m   *   .then(console.log)[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  send(content, options) { // eslint-disable-line complexity[m
[32m+[m[32m    if (!options && typeof content === 'object' && !(content instanceof Array)) {[m
[32m+[m[32m      options = content;[m
[32m+[m[32m      content = '';[m
[32m+[m[32m    } else if (!options) {[m
[32m+[m[32m      options = {};[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (options instanceof Attachment) options = { files: [options] };[m
[32m+[m[32m    if (options instanceof RichEmbed) options = { embeds: [options] };[m
[32m+[m
[32m+[m[32m    if (content) {[m
[32m+[m[32m      content = this.client.resolver.resolveString(content);[m
[32m+[m[32m      let { split, code, disableEveryone } = options;[m
[32m+[m[32m      if (split && typeof split !== 'object') split = {};[m
[32m+[m[32m      if (typeof code !== 'undefined' && (typeof code !== 'boolean' || code === true)) {[m
[32m+[m[32m        content = Util.escapeMarkdown(content, true);[m
[32m+[m[32m        content = `\`\`\`${typeof code !== 'boolean' ? code || '' : ''}\n${content}\n\`\`\``;[m
[32m+[m[32m        if (split) {[m
[32m+[m[32m          split.prepend = `\`\`\`${typeof code !== 'boolean' ? code || '' : ''}\n`;[m
[32m+[m[32m          split.append = '\n```';[m
[32m+[m[32m        }[m
[32m+[m[32m      }[m
[32m+[m[32m      if (disableEveryone || (typeof disableEveryone === 'undefined' && this.client.options.disableEveryone)) {[m
[32m+[m[32m        content = content.replace(/@(everyone|here)/g, '@\u200b$1');[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      if (split) content = Util.splitMessage(content, split);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (options.file) {[m
[32m+[m[32m      if (options.files) options.files.push(options.file);[m
[32m+[m[32m      else options.files = [options.file];[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (options.embeds) {[m
[32m+[m[32m      const files = [];[m
[32m+[m[32m      for (const embed of options.embeds) {[m
[32m+[m[32m        if (embed.file) files.push(embed.file);[m
[32m+[m[32m      }[m
[32m+[m[32m      if (options.files) options.files.push(...files);[m
[32m+[m[32m      else options.files = files;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (options.embeds) options.embeds = options.embeds.map(e => new RichEmbed(e)._apiTransform());[m
[32m+[m
[32m+[m[32m    if (options.files) {[m
[32m+[m[32m      for (let i = 0; i < options.files.length; i++) {[m
[32m+[m[32m        let file = options.files[i];[m
[32m+[m[32m        if (typeof file === 'string' || Buffer.isBuffer(file)) file = { attachment: file };[m
[32m+[m[32m        if (!file.name) {[m
[32m+[m[32m          if (typeof file.attachment === 'string') {[m
[32m+[m[32m            file.name = path.basename(file.attachment);[m
[32m+[m[32m          } else if (file.attachment && file.attachment.path) {[m
[32m+[m[32m            file.name = path.basename(file.attachment.path);[m
[32m+[m[32m          } else if (file instanceof Attachment) {[m
[32m+[m[32m            file = { attachment: file.file, name: path.basename(file.file) || 'file.jpg' };[m
[32m+[m[32m          } else {[m
[32m+[m[32m            file.name = 'file.jpg';[m
[32m+[m[32m          }[m
[32m+[m[32m        } else if (file instanceof Attachment) {[m
[32m+[m[32m          file = file.file;[m
[32m+[m[32m        }[m
[32m+[m[32m        options.files[i] = file;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      return Promise.all(options.files.map(file =>[m
[32m+[m[32m        this.client.resolver.resolveFile(file.attachment).then(resource => {[m
[32m+[m[32m          file.file = resource;[m
[32m+[m[32m          return file;[m
[32m+[m[32m        })[m
[32m+[m[32m      )).then(files => this.client.rest.methods.sendWebhookMessage(this, content, options, files));[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return this.client.rest.methods.sendWebhookMessage(this, content, options);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Send a message with this webhook[m
[32m+[m[32m   * @param {StringResolvable} content The content to send[m
[32m+[m[32m   * @param {WebhookMessageOptions} [options={}] The options to provide[m
[32m+[m[32m   * @returns {Promise<Message|Message[]>}[m
[32m+[m[32m   * @deprecated[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Send a message[m
[32m+[m[32m   * webhook.sendMessage('hello!')[m
[32m+[m[32m   *  .then(message => console.log(`Sent message: ${message.content}`))[m
[32m+[m[32m   *  .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  sendMessage(content, options = {}) {[m
[32m+[m[32m    return this.send(content, options);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Send a file with this webhook.[m
[32m+[m[32m   * @param {BufferResolvable} attachment The file to send[m
[32m+[m[32m   * @param {string} [name='file.jpg'] The name and extension of the file[m
[32m+[m[32m   * @param {StringResolvable} [content] Text message to send with the attachment[m
[32m+[m[32m   * @param {WebhookMessageOptions} [options] The options to provide[m
[32m+[m[32m   * @returns {Promise<Message>}[m
[32m+[m[32m   * @deprecated[m
[32m+[m[32m   */[m
[32m+[m[32m  sendFile(attachment, name, content, options = {}) {[m
[32m+[m[32m    return this.send(content, Object.assign(options, { file: { attachment, name } }));[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Send a code block with this webhook.[m
[32m+[m[32m   * @param {string} lang Language for the code block[m
[32m+[m[32m   * @param {StringResolvable} content Content of the code block[m
[32m+[m[32m   * @param {WebhookMessageOptions} options The options to provide[m
[32m+[m[32m   * @returns {Promise<Message|Message[]>}[m
[32m+[m[32m   * @deprecated[m
[32m+[m[32m   */[m
[32m+[m[32m  sendCode(lang, content, options = {}) {[m
[32m+[m[32m    return this.send(content, Object.assign(options, { code: lang }));[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Send a raw slack message with this webhook.[m
[32m+[m[32m   * @param {Object} body The raw body to send[m
[32m+[m[32m   * @returns {Promise}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Send a slack message[m
[32m+[m[32m   * webhook.sendSlackMessage({[m
[32m+[m[32m   *   'username': 'Wumpus',[m
[32m+[m[32m   *   'attachments': [{[m
[32m+[m[32m   *     'pretext': 'this looks pretty cool',[m
[32m+[m[32m   *     'color': '#F0F',[m
[32m+[m[32m   *     'footer_icon': 'http://snek.s3.amazonaws.com/topSnek.png',[m
[32m+[m[32m   *     'footer': 'Powered by sneks',[m
[32m+[m[32m   *     'ts': Date.now() / 1000[m
[32m+[m[32m   *   }][m
[32m+[m[32m   * }).catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  sendSlackMessage(body) {[m
[32m+[m[32m    return this.client.rest.methods.sendSlackWebhookMessage(this, body);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Edit the webhook.[m
[32m+[m[32m   * @param {string} name The new name for the webhook[m
[32m+[m[32m   * @param {BufferResolvable} [avatar] The new avatar for the webhook[m
[32m+[m[32m   * @returns {Promise<Webhook>}[m
[32m+[m[32m   */[m
[32m+[m[32m  edit(name = this.name, avatar) {[m
[32m+[m[32m    if (avatar) {[m
[32m+[m[32m      return this.client.resolver.resolveImage(avatar).then(data =>[m
[32m+[m[32m        this.client.rest.methods.editWebhook(this, name, data)[m
[32m+[m[32m      );[m
[32m+[m[32m    }[m
[32m+[m[32m    return this.client.rest.methods.editWebhook(this, name);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Delete the webhook.[m
[32m+[m[32m   * @param {string} [reason] Reason for deleting the webhook[m
[32m+[m[32m   * @returns {Promise}[m
[32m+[m[32m   */[m
[32m+[m[32m  delete(reason) {[m
[32m+[m[32m    return this.client.rest.methods.deleteWebhook(this, reason);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = Webhook;[m
[1mdiff --git a/node_modules/discord.js/src/structures/interfaces/Collector.js b/node_modules/discord.js/src/structures/interfaces/Collector.js[m
[1mnew file mode 100644[m
[1mindex 0000000..1c69a81[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/structures/interfaces/Collector.js[m
[36m@@ -0,0 +1,179 @@[m
[32m+[m[32mconst Collection = require('../../util/Collection');[m
[32m+[m[32mconst EventEmitter = require('events').EventEmitter;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Filter to be applied to the collector.[m
[32m+[m[32m * @typedef {Function} CollectorFilter[m
[32m+[m[32m * @param {...*} args Any arguments received by the listener[m
[32m+[m[32m * @param {Collection} collection The items collected by this collector[m
[32m+[m[32m * @returns {boolean}[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Options to be applied to the collector.[m
[32m+[m[32m * @typedef {Object} CollectorOptions[m
[32m+[m[32m * @property {number} [time] How long to run the collector for[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Abstract class for defining a new Collector.[m
[32m+[m[32m * @abstract[m
[32m+[m[32m */[m
[32m+[m[32mclass Collector extends EventEmitter {[m
[32m+[m[32m  constructor(client, filter, options = {}) {[m
[32m+[m[32m    super();[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The client[m
[32m+[m[32m     * @name Collector#client[m
[32m+[m[32m     * @type {Client}[m
[32m+[m[32m     * @readonly[m
[32m+[m[32m     */[m
[32m+[m[32m    Object.defineProperty(this, 'client', { value: client });[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The filter applied to this collector[m
[32m+[m[32m     * @type {CollectorFilter}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.filter = filter;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The options of this collector[m
[32m+[m[32m     * @type {CollectorOptions}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.options = options;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The items collected by this collector[m
[32m+[m[32m     * @type {Collection}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.collected = new Collection();[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Whether this collector has finished collecting[m
[32m+[m[32m     * @type {boolean}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.ended = false;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Timeout for cleanup[m
[32m+[m[32m     * @type {?Timeout}[m
[32m+[m[32m     * @private[m
[32m+[m[32m     */[m
[32m+[m[32m    this._timeout = null;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Call this to handle an event as a collectable element[m
[32m+[m[32m     * Accepts any event data as parameters[m
[32m+[m[32m     * @type {Function}[m
[32m+[m[32m     * @private[m
[32m+[m[32m     */[m
[32m+[m[32m    this.listener = this._handle.bind(this);[m
[32m+[m[32m    if (options.time) this._timeout = this.client.setTimeout(() => this.stop('time'), options.time);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * @param {...*} args The arguments emitted by the listener[m
[32m+[m[32m   * @emits Collector#collect[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  _handle(...args) {[m
[32m+[m[32m    const collect = this.handle(...args);[m
[32m+[m[32m    if (!collect || !this.filter(...args, this.collected)) return;[m
[32m+[m
[32m+[m[32m    this.collected.set(collect.key, collect.value);[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Emitted whenever an element is collected.[m
[32m+[m[32m     * @event Collector#collect[m
[32m+[m[32m     * @param {*} element The element that got collected[m
[32m+[m[32m     * @param {Collector} collector The collector[m
[32m+[m[32m     */[m
[32m+[m[32m    this.emit('collect', collect.value, this);[m
[32m+[m
[32m+[m[32m    const post = this.postCheck(...args);[m
[32m+[m[32m    if (post) this.stop(post);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Return a promise that resolves with the next collected element;[m
[32m+[m[32m   * rejects with collected elements if the collector finishes without receiving a next element[m
[32m+[m[32m   * @type {Promise}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get next() {[m
[32m+[m[32m    return new Promise((resolve, reject) => {[m
[32m+[m[32m      if (this.ended) {[m
[32m+[m[32m        reject(this.collected);[m
[32m+[m[32m        return;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      const cleanup = () => {[m
[32m+[m[32m        this.removeListener('collect', onCollect);[m
[32m+[m[32m        this.removeListener('end', onEnd);[m
[32m+[m[32m      };[m
[32m+[m
[32m+[m[32m      const onCollect = item => {[m
[32m+[m[32m        cleanup();[m
[32m+[m[32m        resolve(item);[m
[32m+[m[32m      };[m
[32m+[m
[32m+[m[32m      const onEnd = () => {[m
[32m+[m[32m        cleanup();[m
[32m+[m[32m        reject(this.collected); // eslint-disable-line prefer-promise-reject-errors[m
[32m+[m[32m      };[m
[32m+[m
[32m+[m[32m      this.on('collect', onCollect);[m
[32m+[m[32m      this.on('end', onEnd);[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Stop this collector and emit the `end` event.[m
[32m+[m[32m   * @param {string} [reason='user'] The reason this collector is ending[m
[32m+[m[32m   * @emits Collector#end[m
[32m+[m[32m   */[m
[32m+[m[32m  stop(reason = 'user') {[m
[32m+[m[32m    if (this.ended) return;[m
[32m+[m
[32m+[m[32m    if (this._timeout) this.client.clearTimeout(this._timeout);[m
[32m+[m[32m    this.ended = true;[m
[32m+[m[32m    this.cleanup();[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Emitted when the collector is finished collecting.[m
[32m+[m[32m     * @event Collector#end[m
[32m+[m[32m     * @param {Collection} collected The elements collected by the collector[m
[32m+[m[32m     * @param {string} reason The reason the collector ended[m
[32m+[m[32m     */[m
[32m+[m[32m    this.emit('end', this.collected, reason);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /* eslint-disable no-empty-function, valid-jsdoc */[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Handles incoming events from the `listener` function. Returns null if the event should not be collected,[m
[32m+[m[32m   * or returns an object describing the data that should be stored.[m
[32m+[m[32m   * @see Collector#listener[m
[32m+[m[32m   * @param {...*} args Any args the event listener emits[m
[32m+[m[32m   * @returns {?{key: string, value}} Data to insert into collection, if any[m
[32m+[m[32m   * @abstract[m
[32m+[m[32m   */[m
[32m+[m[32m  handle() {}[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * This method runs after collection to see if the collector should finish.[m
[32m+[m[32m   * @param {...*} args Any args the event listener emits[m
[32m+[m[32m   * @returns {?string} Reason to end the collector, if any[m
[32m+[m[32m   * @abstract[m
[32m+[m[32m   */[m
[32m+[m[32m  postCheck() {}[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Called when the collector is ending.[m
[32m+[m[32m   * @abstract[m
[32m+[m[32m   */[m
[32m+[m[32m  cleanup() {}[m
[32m+[m[32m  /* eslint-enable no-empty-function, valid-jsdoc */[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = Collector;[m
[1mdiff --git a/node_modules/discord.js/src/structures/interfaces/TextBasedChannel.js b/node_modules/discord.js/src/structures/interfaces/TextBasedChannel.js[m
[1mnew file mode 100644[m
[1mindex 0000000..2023030[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/structures/interfaces/TextBasedChannel.js[m
[36m@@ -0,0 +1,635 @@[m
[32m+[m[32mconst path = require('path');[m
[32m+[m[32mconst Message = require('../Message');[m
[32m+[m[32mconst MessageCollector = require('../MessageCollector');[m
[32m+[m[32mconst Collection = require('../../util/Collection');[m
[32m+[m[32mconst Attachment = require('../../structures/Attachment');[m
[32m+[m[32mconst RichEmbed = require('../../structures/RichEmbed');[m
[32m+[m[32mconst Snowflake = require('../../util/Snowflake');[m
[32m+[m[32mconst util = require('util');[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Interface for classes that have text-channel-like features.[m
[32m+[m[32m * @interface[m
[32m+[m[32m */[m
[32m+[m[32mclass TextBasedChannel {[m
[32m+[m[32m  constructor() {[m
[32m+[m[32m    /**[m
[32m+[m[32m     * A collection containing the messages sent to this channel[m
[32m+[m[32m     * @type {Collection<Snowflake, Message>}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.messages = new Collection();[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The ID of the last message in the channel, if one was sent[m
[32m+[m[32m     * @type {?Snowflake}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.lastMessageID = null;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The Message object of the last message in the channel, if one was sent[m
[32m+[m[32m     * @type {?Message}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.lastMessage = null;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The timestamp when the last pinned message was pinned, if there was one[m
[32m+[m[32m     * @type {?number}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.lastPinTimestamp = null;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Options provided when sending or editing a message.[m
[32m+[m[32m   * @typedef {Object} MessageOptions[m
[32m+[m[32m   * @property {boolean} [tts=false] Whether or not the message should be spoken aloud[m
[32m+[m[32m   * @property {string} [nonce=''] The nonce for the message[m
[32m+[m[32m   * @property {RichEmbed|Object} [embed] An embed for the message[m
[32m+[m[32m   * (see [here](https://discordapp.com/developers/docs/resources/channel#embed-object) for more details)[m
[32m+[m[32m   * @property {boolean} [disableEveryone=this.client.options.disableEveryone] Whether or not @everyone and @here[m
[32m+[m[32m   * should be replaced with plain-text[m
[32m+[m[32m   * @property {FileOptions|BufferResolvable|Attachment} [file] A file to send with the message **(deprecated)**[m
[32m+[m[32m   * @property {FileOptions[]|BufferResolvable[]|Attachment[]} [files] Files to send with the message[m
[32m+[m[32m   * @property {string|boolean} [code] Language for optional codeblock formatting to apply[m
[32m+[m[32m   * @property {boolean|SplitOptions} [split=false] Whether or not the message should be split into multiple messages if[m
[32m+[m[32m   * it exceeds the character limit. If an object is provided, these are the options for splitting the message[m
[32m+[m[32m   * @property {UserResolvable} [reply] User to reply to (prefixes the message with a mention, except in DMs)[m
[32m+[m[32m   */[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * @typedef {Object} FileOptions[m
[32m+[m[32m   * @property {BufferResolvable} attachment File to attach[m
[32m+[m[32m   * @property {string} [name='file.jpg'] Filename of the attachment[m
[32m+[m[32m   */[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Options for splitting a message.[m
[32m+[m[32m   * @typedef {Object} SplitOptions[m
[32m+[m[32m   * @property {number} [maxLength=1950] Maximum character length per message piece[m
[32m+[m[32m   * @property {string} [char='\n'] Character to split the message with[m
[32m+[m[32m   * @property {string} [prepend=''] Text to prepend to every piece except the first[m
[32m+[m[32m   * @property {string} [append=''] Text to append to every piece except the last[m
[32m+[m[32m   */[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Send a message to this channel.[m
[32m+[m[32m   * @param {StringResolvable} [content] Text for the message[m
[32m+[m[32m   * @param {MessageOptions|Attachment|RichEmbed} [options] Options for the message,[m
[32m+[m[32m   * can also be just a RichEmbed or Attachment[m
[32m+[m[32m   * @returns {Promise<Message|Message[]>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Send a basic message[m
[32m+[m[32m   * channel.send('hello!')[m
[32m+[m[32m   *   .then(message => console.log(`Sent message: ${message.content}`))[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Send a remote file[m
[32m+[m[32m   * channel.send({[m
[32m+[m[32m   *   files: ['https://cdn.discordapp.com/icons/222078108977594368/6e1019b3179d71046e463a75915e7244.png?size=2048'][m
[32m+[m[32m   * })[m
[32m+[m[32m   *   .then(console.log)[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Send a local file[m
[32m+[m[32m   * channel.send({[m
[32m+[m[32m   *   files: [{[m
[32m+[m[32m   *     attachment: 'entire/path/to/file.jpg',[m
[32m+[m[32m   *     name: 'file.jpg'[m
[32m+[m[32m   *   }][m
[32m+[m[32m   * })[m
[32m+[m[32m   *   .then(console.log)[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Send an embed with a local image inside[m
[32m+[m[32m   * channel.send('This is an embed', {[m
[32m+[m[32m   *   embed: {[m
[32m+[m[32m   *     thumbnail: {[m
[32m+[m[32m   *          url: 'attachment://file.jpg'[m
[32m+[m[32m   *       }[m
[32m+[m[32m   *    },[m
[32m+[m[32m   *    files: [{[m
[32m+[m[32m   *       attachment: 'entire/path/to/file.jpg',[m
[32m+[m[32m   *       name: 'file.jpg'[m
[32m+[m[32m   *    }][m
[32m+[m[32m   * })[m
[32m+[m[32m   *   .then(console.log)[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  // eslint-disable-next-line complexity[m
[32m+[m[32m  send(content, options) {[m
[32m+[m[32m    if (!options && typeof content === 'object' && !(content instanceof Array)) {[m
[32m+[m[32m      options = content;[m
[32m+[m[32m      content = '';[m
[32m+[m[32m    } else if (!options) {[m
[32m+[m[32m      options = {};[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    const { reply } = options;[m
[32m+[m[32m    if (options instanceof Attachment) options = { files: [options.file] };[m
[32m+[m[32m    if (options instanceof RichEmbed) {[m
[32m+[m[32m      if (options.reply) options.reply = undefined;[m
[32m+[m[32m      options = { embed: options };[m
[32m+[m[32m    }[m
[32m+[m[32m    options.reply = reply;[m
[32m+[m
[32m+[m[32m    if (options.embed) {[m
[32m+[m[32m      if (options.embed.file) {[m
[32m+[m[32m        if (options.files) options.files.push(options.embed.file);[m
[32m+[m[32m        else options.files = [options.embed.file];[m
[32m+[m[32m      }[m
[32m+[m[32m      if (options.embed.files) {[m
[32m+[m[32m        if (options.files) options.files = options.files.concat(options.embed.files);[m
[32m+[m[32m        else options.files = options.embed.files;[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (options.file) {[m
[32m+[m[32m      if (options.files) options.files.push(options.file);[m
[32m+[m[32m      else options.files = [options.file];[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (options.embed) options.embed = new RichEmbed(options.embed)._apiTransform();[m
[32m+[m
[32m+[m[32m    if (options.files) {[m
[32m+[m[32m      for (let i = 0; i < options.files.length; i++) {[m
[32m+[m[32m        let file = options.files[i];[m
[32m+[m[32m        if (!file || typeof file === 'string' || Buffer.isBuffer(file)) file = { attachment: file };[m
[32m+[m[32m        if (!file.name) {[m
[32m+[m[32m          if (typeof file.attachment === 'string') {[m
[32m+[m[32m            file.name = path.basename(file.attachment);[m
[32m+[m[32m          } else if (file.attachment && file.attachment.path) {[m
[32m+[m[32m            file.name = path.basename(file.attachment.path);[m
[32m+[m[32m          } else if (file instanceof Attachment) {[m
[32m+[m[32m            file = { attachment: file.file, name: path.basename(file.file) || 'file.jpg' };[m
[32m+[m[32m          } else {[m
[32m+[m[32m            file.name = 'file.jpg';[m
[32m+[m[32m          }[m
[32m+[m[32m        } else if (file instanceof Attachment) {[m
[32m+[m[32m          file = file.file;[m
[32m+[m[32m        }[m
[32m+[m[32m        options.files[i] = file;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      return Promise.all(options.files.map(file =>[m
[32m+[m[32m        this.client.resolver.resolveFile(file.attachment).then(resource => {[m
[32m+[m[32m          file.file = resource;[m
[32m+[m[32m          return file;[m
[32m+[m[32m        })[m
[32m+[m[32m      )).then(files => this.client.rest.methods.sendMessage(this, content, options, files));[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return this.client.rest.methods.sendMessage(this, content, options);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Gets a single message from this channel, regardless of it being cached or not.[m
[32m+[m[32m   * @param {Snowflake} messageID ID of the message to get[m
[32m+[m[32m   * @returns {Promise<Message>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Get message[m
[32m+[m[32m   * channel.fetchMessage('99539446449315840')[m
[32m+[m[32m   *   .then(message => console.log(message.content))[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  fetchMessage(messageID) {[m
[32m+[m[32m    if (!this.client.user.bot) {[m
[32m+[m[32m      return this.fetchMessages({ limit: 1, around: messageID }).then(messages => {[m
[32m+[m[32m        const msg = messages.get(messageID);[m
[32m+[m[32m        if (!msg) throw new Error('Message not found.');[m
[32m+[m[32m        return msg;[m
[32m+[m[32m      });[m
[32m+[m[32m    }[m
[32m+[m[32m    return this.client.rest.methods.getChannelMessage(this, messageID).then(data => {[m
[32m+[m[32m      const msg = data instanceof Message ? data : new Message(this, data, this.client);[m
[32m+[m[32m      this._cacheMessage(msg);[m
[32m+[m[32m      return msg;[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The parameters to pass in when requesting previous messages from a channel. `around`, `before` and[m
[32m+[m[32m   * `after` are mutually exclusive. All the parameters are optional.[m
[32m+[m[32m   * @typedef {Object} ChannelLogsQueryOptions[m
[32m+[m[32m   * @property {number} [limit=50] Number of messages to acquire[m
[32m+[m[32m   * @property {Snowflake} [before] ID of a message to get the messages that were posted before it[m
[32m+[m[32m   * @property {Snowflake} [after] ID of a message to get the messages that were posted after it[m
[32m+[m[32m   * @property {Snowflake} [around] ID of a message to get the messages that were posted around it[m
[32m+[m[32m   */[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Gets the past messages sent in this channel. Resolves with a collection mapping message ID's to Message objects.[m
[32m+[m[32m   * <info>The returned Collection does not contain reaction users of the messages if they were not cached.[m
[32m+[m[32m   * Those need to be fetched separately in such a case.</info>[m
[32m+[m[32m   * @param {ChannelLogsQueryOptions} [options={}] Query parameters to pass in[m
[32m+[m[32m   * @returns {Promise<Collection<Snowflake, Message>>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Get messages[m
[32m+[m[32m   * channel.fetchMessages({ limit: 10 })[m
[32m+[m[32m   *   .then(messages => console.log(`Received ${messages.size} messages`))[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Get messages and filter by user ID[m
[32m+[m[32m   * channel.fetchMessages()[m
[32m+[m[32m   *   .then(messages => console.log(`${messages.filter(m => m.author.id === '84484653687267328').size} messages`))[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  fetchMessages(options = {}) {[m
[32m+[m[32m    return this.client.rest.methods.getChannelMessages(this, options).then(data => {[m
[32m+[m[32m      const messages = new Collection();[m
[32m+[m[32m      for (const message of data) {[m
[32m+[m[32m        const msg = new Message(this, message, this.client);[m
[32m+[m[32m        messages.set(message.id, msg);[m
[32m+[m[32m        this._cacheMessage(msg);[m
[32m+[m[32m      }[m
[32m+[m[32m      return messages;[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Fetches the pinned messages of this channel and returns a collection of them.[m
[32m+[m[32m   * <info>The returned Collection does not contain any reaction data of the messages.[m
[32m+[m[32m   * Those need to be fetched separately.</info>[m
[32m+[m[32m   * @returns {Promise<Collection<Snowflake, Message>>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Get pinned messages[m
[32m+[m[32m   * channel.fetchPinnedMessages()[m
[32m+[m[32m   *   .then(messages => console.log(`Received ${messages.size} messages`))[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  fetchPinnedMessages() {[m
[32m+[m[32m    return this.client.rest.methods.getChannelPinnedMessages(this).then(data => {[m
[32m+[m[32m      const messages = new Collection();[m
[32m+[m[32m      for (const message of data) {[m
[32m+[m[32m        const msg = new Message(this, message, this.client);[m
[32m+[m[32m        messages.set(message.id, msg);[m
[32m+[m[32m        this._cacheMessage(msg);[m
[32m+[m[32m      }[m
[32m+[m[32m      return messages;[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * @typedef {Object} MessageSearchOptions[m
[32m+[m[32m   * @property {string} [content] Message content[m
[32m+[m[32m   * @property {Snowflake} [maxID] Maximum ID for the filter[m
[32m+[m[32m   * @property {Snowflake} [minID] Minimum ID for the filter[m
[32m+[m[32m   * @property {string} [has] One of `link`, `embed`, `file`, `video`, `image`, or `sound`,[m
[32m+[m[32m   * or add `-` to negate (e.g. `-file`)[m
[32m+[m[32m   * @property {ChannelResolvable} [channel] Channel to limit search to (only for guild search endpoint)[m
[32m+[m[32m   * @property {UserResolvable} [author] Author to limit search[m
[32m+[m[32m   * @property {string} [authorType] One of `user`, `bot`, `webhook`, or add `-` to negate (e.g. `-webhook`)[m
[32m+[m[32m   * @property {string} [sortBy='recent'] `recent` or `relevant`[m
[32m+[m[32m   * @property {string} [sortOrder='desc'] `asc` or `desc`[m
[32m+[m[32m   * @property {number} [contextSize=2] How many messages to get around the matched message (0 to 2)[m
[32m+[m[32m   * @property {number} [limit=25] Maximum number of results to get (1 to 25)[m
[32m+[m[32m   * @property {number} [offset=0] Offset the "pages" of results (since you can only see 25 at a time)[m
[32m+[m[32m   * @property {UserResolvable} [mentions] Mentioned user filter[m
[32m+[m[32m   * @property {boolean} [mentionsEveryone] If everyone is mentioned[m
[32m+[m[32m   * @property {string} [linkHostname] Filter links by hostname[m
[32m+[m[32m   * @property {string} [embedProvider] The name of an embed provider[m
[32m+[m[32m   * @property {string} [embedType] one of `image`, `video`, `url`, `rich`[m
[32m+[m[32m   * @property {string} [attachmentFilename] The name of an attachment[m
[32m+[m[32m   * @property {string} [attachmentExtension] The extension of an attachment[m
[32m+[m[32m   * @property {Date} [before] Date to find messages before[m
[32m+[m[32m   * @property {Date} [after] Date to find messages before[m
[32m+[m[32m   * @property {Date} [during] Date to find messages during (range of date to date + 24 hours)[m
[32m+[m[32m   * @property {boolean} [nsfw=false] Include results from NSFW channels[m
[32m+[m[32m   */[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * @typedef {Object} MessageSearchResult[m
[32m+[m[32m   * @property {number} totalResults Total result count[m
[32m+[m[32m   * @property {Message[][]} messages Array of message results[m
[32m+[m[32m   * The message which has triggered the result will have the `hit` property set to `true`[m
[32m+[m[32m   */[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Performs a search within the channel.[m
[32m+[m[32m   * <warn>This is only available when using a user account.</warn>[m
[32m+[m[32m   * @param {MessageSearchOptions} [options={}] Options to pass to the search[m
[32m+[m[32m   * @returns {Promise<MessageSearchResult>}[m
[32m+[m[32m   * @deprecated[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * channel.search({[m
[32m+[m[32m   *   content: 'discord.js',[m
[32m+[m[32m   *   before: '2016-11-17'[m
[32m+[m[32m   * }).then(res => {[m
[32m+[m[32m   *   const hit = res.messages[0].find(m => m.hit).content;[m
[32m+[m[32m   *   console.log(`I found: **${hit}**, total results: ${res.totalResults}`);[m
[32m+[m[32m   * }).catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  search(options = {}) {[m
[32m+[m[32m    return this.client.rest.methods.search(this, options);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Starts a typing indicator in the channel.[m
[32m+[m[32m   * @param {number} [count] The number of times startTyping should be considered to have been called[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Start typing in a channel[m
[32m+[m[32m   * channel.startTyping();[m
[32m+[m[32m   */[m
[32m+[m[32m  startTyping(count) {[m
[32m+[m[32m    if (typeof count !== 'undefined' && count < 1) throw new RangeError('Count must be at least 1.');[m
[32m+[m[32m    if (this.client.user._typing.has(this.id)) {[m
[32m+[m[32m      const entry = this.client.user._typing.get(this.id);[m
[32m+[m[32m      entry.count = count || entry.count + 1;[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    const entry = {[m
[32m+[m[32m      count: count || 1,[m
[32m+[m[32m      interval: this.client.setInterval(() => {[m
[32m+[m[32m        this.client.rest.methods.sendTyping(this.id).catch(() => {[m
[32m+[m[32m          this.client.clearInterval(entry.interval);[m
[32m+[m[32m          this.client.user._typing.delete(this.id);[m
[32m+[m[32m        });[m
[32m+[m[32m      }, 9000),[m
[32m+[m[32m    };[m
[32m+[m[32m    this.client.rest.methods.sendTyping(this.id).catch(() => {[m
[32m+[m[32m      this.client.clearInterval(entry.interval);[m
[32m+[m[32m      this.client.user._typing.delete(this.id);[m
[32m+[m[32m    });[m
[32m+[m[32m    this.client.user._typing.set(this.id, entry);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Stops the typing indicator in the channel.[m
[32m+[m[32m   * The indicator will only stop if this is called as many times as startTyping().[m
[32m+[m[32m   * <info>It can take a few seconds for the client user to stop typing.</info>[m
[32m+[m[32m   * @param {boolean} [force=false] Whether or not to reset the call count and force the indicator to stop[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Reduce the typing count by one and stop typing if it reached 0[m
[32m+[m[32m   * channel.stopTyping();[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Force typing to fully stop in a channel[m
[32m+[m[32m   * channel.stopTyping(true);[m
[32m+[m[32m   */[m
[32m+[m[32m  stopTyping(force = false) {[m
[32m+[m[32m    if (this.client.user._typing.has(this.id)) {[m
[32m+[m[32m      const entry = this.client.user._typing.get(this.id);[m
[32m+[m[32m      entry.count--;[m
[32m+[m[32m      if (entry.count <= 0 || force) {[m
[32m+[m[32m        this.client.clearInterval(entry.interval);[m
[32m+[m[32m        this.client.user._typing.delete(this.id);[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Whether or not the typing indicator is being shown in the channel[m
[32m+[m[32m   * @type {boolean}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get typing() {[m
[32m+[m[32m    return this.client.user._typing.has(this.id);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Number of times `startTyping` has been called[m
[32m+[m[32m   * @type {number}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get typingCount() {[m
[32m+[m[32m    if (this.client.user._typing.has(this.id)) return this.client.user._typing.get(this.id).count;[m
[32m+[m[32m    return 0;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The Message object of the last message in the channel, if one was sent[m
[32m+[m[32m   * @type {?Message}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get lastMessage() {[m
[32m+[m[32m    return this.messages.get(this.lastMessageID) || null;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The date when the last pinned message was pinned, if there was one[m
[32m+[m[32m   * @type {?Date}[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get lastPinAt() {[m
[32m+[m[32m    return this.lastPinTimestamp ? new Date(this.lastPinTimestamp) : null;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Creates a Message Collector[m
[32m+[m[32m   * @param {CollectorFilter} filter The filter to create the collector with[m
[32m+[m[32m   * @param {MessageCollectorOptions} [options={}] The options to pass to the collector[m
[32m+[m[32m   * @returns {MessageCollector}[m
[32m+[m[32m   * @deprecated[m
[32m+[m[32m   */[m
[32m+[m[32m  createCollector(filter, options) {[m
[32m+[m[32m    return this.createMessageCollector(filter, options);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Creates a Message Collector.[m
[32m+[m[32m   * @param {CollectorFilter} filter The filter to create the collector with[m
[32m+[m[32m   * @param {MessageCollectorOptions} [options={}] The options to pass to the collector[m
[32m+[m[32m   * @returns {MessageCollector}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Create a message collector[m
[32m+[m[32m   * const filter = m => m.content.includes('discord');[m
[32m+[m[32m   * const collector = channel.createMessageCollector(filter, { time: 15000 });[m
[32m+[m[32m   * collector.on('collect', m => console.log(`Collected ${m.content}`));[m
[32m+[m[32m   * collector.on('end', collected => console.log(`Collected ${collected.size} items`));[m
[32m+[m[32m   */[m
[32m+[m[32m  createMessageCollector(filter, options = {}) {[m
[32m+[m[32m    return new MessageCollector(this, filter, options);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * An object containing the same properties as CollectorOptions, but a few more:[m
[32m+[m[32m   * @typedef {MessageCollectorOptions} AwaitMessagesOptions[m
[32m+[m[32m   * @property {string[]} [errors] Stop/end reasons that cause the promise to reject[m
[32m+[m[32m   */[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Similar to createCollector but in promise form. Resolves with a collection of messages that pass the specified[m
[32m+[m[32m   * filter.[m
[32m+[m[32m   * @param {CollectorFilter} filter The filter function to use[m
[32m+[m[32m   * @param {AwaitMessagesOptions} [options={}] Optional options to pass to the internal collector[m
[32m+[m[32m   * @returns {Promise<Collection<Snowflake, Message>>}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Await !vote messages[m
[32m+[m[32m   * const filter = m => m.content.startsWith('!vote');[m
[32m+[m[32m   * // Errors: ['time'] treats ending because of the time limit as an error[m
[32m+[m[32m   * channel.awaitMessages(filter, { max: 4, time: 60000, errors: ['time'] })[m
[32m+[m[32m   *   .then(collected => console.log(collected.size))[m
[32m+[m[32m   *   .catch(collected => console.log(`After a minute, only ${collected.size} out of 4 voted.`));[m
[32m+[m[32m   */[m
[32m+[m[32m  awaitMessages(filter, options = {}) {[m
[32m+[m[32m    return new Promise((resolve, reject) => {[m
[32m+[m[32m      const collector = this.createCollector(filter, options);[m
[32m+[m[32m      collector.once('end', (collection, reason) => {[m
[32m+[m[32m        if (options.errors && options.errors.includes(reason)) {[m
[32m+[m[32m          reject(collection);[m
[32m+[m[32m        } else {[m
[32m+[m[32m          resolve(collection);[m
[32m+[m[32m        }[m
[32m+[m[32m      });[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Bulk delete given messages that are newer than two weeks.[m
[32m+[m[32m   * <warn>This is only available when using a bot account.</warn>[m
[32m+[m[32m   * @param {Collection<Snowflake, Message>|Message[]|Snowflake[]|number} messages[m
[32m+[m[32m   * Messages or number of messages to delete[m
[32m+[m[32m   * @param {boolean} [filterOld=false] Filter messages to remove those which are older than two weeks automatically[m
[32m+[m[32m   * @returns {Promise<Collection<Snowflake, Message>>} Deleted messages[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Bulk delete messages[m
[32m+[m[32m   * channel.bulkDelete(5)[m
[32m+[m[32m   *   .then(messages => console.log(`Bulk deleted ${messages.size} messages`))[m
[32m+[m[32m   *   .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  bulkDelete(messages, filterOld = false) {[m
[32m+[m[32m    if (messages instanceof Array || messages instanceof Collection) {[m
[32m+[m[32m      let messageIDs = messages instanceof Collection ? messages.keyArray() : messages.map(m => m.id || m);[m
[32m+[m[32m      if (filterOld) {[m
[32m+[m[32m        messageIDs = messageIDs.filter(id => Date.now() - Snowflake.deconstruct(id).date.getTime() < 1209600000);[m
[32m+[m[32m      }[m
[32m+[m[32m      if (messageIDs.length === 0) return Promise.resolve(new Collection());[m
[32m+[m[32m      if (messageIDs.length === 1) {[m
[32m+[m[32m        return this.fetchMessage(messageIDs[0]).then(m => m.delete()).then(m => new Collection([[m.id, m]]));[m
[32m+[m[32m      }[m
[32m+[m[32m      return this.client.rest.methods.bulkDeleteMessages(this, messageIDs);[m
[32m+[m[32m    }[m
[32m+[m[32m    if (!isNaN(messages)) return this.fetchMessages({ limit: messages }).then(msgs => this.bulkDelete(msgs, filterOld));[m
[32m+[m[32m    throw new TypeError('The messages must be an Array, Collection, or number.');[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Marks all messages in this channel as read.[m
[32m+[m[32m   * <warn>This is only available when using a user account.</warn>[m
[32m+[m[32m   * @returns {Promise<TextChannel|GroupDMChannel|DMChannel>}[m
[32m+[m[32m   * @deprecated[m
[32m+[m[32m   */[m
[32m+[m[32m  acknowledge() {[m
[32m+[m[32m    if (!this.lastMessageID) return Promise.resolve(this);[m
[32m+[m[32m    return this.client.rest.methods.ackTextChannel(this);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  _cacheMessage(message) {[m
[32m+[m[32m    const maxSize = this.client.options.messageCacheMaxSize;[m
[32m+[m[32m    if (maxSize === 0) return null;[m
[32m+[m[32m    if (this.messages.size >= maxSize && maxSize > 0) this.messages.delete(this.messages.firstKey());[m
[32m+[m[32m    this.messages.set(message.id, message);[m
[32m+[m[32m    return message;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/** @lends TextBasedChannel.prototype */[m
[32m+[m[32mconst Deprecated = {[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Send a message to this channel.[m
[32m+[m[32m   * @param {StringResolvable} [content] Text for the message[m
[32m+[m[32m   * @param {MessageOptions} [options={}] Options for the message[m
[32m+[m[32m   * @returns {Promise<Message|Message[]>}[m
[32m+[m[32m   * @deprecated[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * // Send a message[m
[32m+[m[32m   * channel.sendMessage('hello!')[m
[32m+[m[32m   *  .then(message => console.log(`Sent message: ${message.content}`))[m
[32m+[m[32m   *  .catch(console.error);[m
[32m+[m[32m   */[m
[32m+[m[32m  sendMessage(content, options) {[m
[32m+[m[32m    return this.send(content, options);[m
[32m+[m[32m  },[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Send an embed to this channel.[m
[32m+[m[32m   * @param {RichEmbed|Object} embed Embed for the message[m
[32m+[m[32m   * @param {string} [content] Text for the message[m
[32m+[m[32m   * @param {MessageOptions} [options] Options for the message[m
[32m+[m[32m   * @returns {Promise<Message>}[m
[32m+[m[32m   * @deprecated[m
[32m+[m[32m   */[m
[32m+[m[32m  sendEmbed(embed, content, options) {[m
[32m+[m[32m    if (!options && typeof content === 'object' && !(content instanceof Array)) {[m
[32m+[m[32m      options = content;[m
[32m+[m[32m      content = '';[m
[32m+[m[32m    } else if (!options) {[m
[32m+[m[32m      options = {};[m
[32m+[m[32m    }[m
[32m+[m[32m    return this.send(content, Object.assign(options, { embed }));[m
[32m+[m[32m  },[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Send files to this channel.[m
[32m+[m[32m   * @param {FileOptions[]|string[]} files Files to send with the message[m
[32m+[m[32m   * @param {StringResolvable} [content] Text for the message[m
[32m+[m[32m   * @param {MessageOptions} [options] Options for the message[m
[32m+[m[32m   * @returns {Promise<Message>}[m
[32m+[m[32m   * @deprecated[m
[32m+[m[32m   */[m
[32m+[m[32m  sendFiles(files, content, options = {}) {[m
[32m+[m[32m    return this.send(content, Object.assign(options, { files }));[m
[32m+[m[32m  },[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Send a file to this channel.[m
[32m+[m[32m   * @param {BufferResolvable} attachment File to send[m
[32m+[m[32m   * @param {string} [name='file.jpg'] Name and extension of the file[m
[32m+[m[32m   * @param {StringResolvable} [content] Text for the message[m
[32m+[m[32m   * @param {MessageOptions} [options] Options for the message[m
[32m+[m[32m   * @returns {Promise<Message>}[m
[32m+[m[32m   * @deprecated[m
[32m+[m[32m   */[m
[32m+[m[32m  sendFile(attachment, name, content, options = {}) {[m
[32m+[m[32m    return this.send({ files: [{ attachment, name }], content, options });[m
[32m+[m[32m  },[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Send a code block to this channel.[m
[32m+[m[32m   * @param {string} lang Language for the code block[m
[32m+[m[32m   * @param {StringResolvable} content Content of the code block[m
[32m+[m[32m   * @param {MessageOptions} [options] Options for the message[m
[32m+[m[32m   * @returns {Promise<Message|Message[]>}[m
[32m+[m[32m   * @deprecated[m
[32m+[m[32m   */[m
[32m+[m[32m  sendCode(lang, content, options = {}) {[m
[32m+[m[32m    return this.send(content, Object.assign(options, { code: lang }));[m
[32m+[m[32m  },[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mfor (const key of Object.keys(Deprecated)) {[m
[32m+[m[32m  TextBasedChannel.prototype[key] = util.deprecate(Deprecated[key], `TextChannel#${key}: use TextChannel#send instead`);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mexports.applyToClass = (structure, full = false, ignore = []) => {[m
[32m+[m[32m  const props = ['send', 'sendMessage', 'sendEmbed', 'sendFile', 'sendFiles', 'sendCode'];[m
[32m+[m[32m  if (full) {[m
[32m+[m[32m    props.push([m
[32m+[m[32m      '_cacheMessage',[m
[32m+[m[32m      'acknowledge',[m
[32m+[m[32m      'fetchMessages',[m
[32m+[m[32m      'fetchMessage',[m
[32m+[m[32m      'search',[m
[32m+[m[32m      'lastMessage',[m
[32m+[m[32m      'lastPinAt',[m
[32m+[m[32m      'bulkDelete',[m
[32m+[m[32m      'startTyping',[m
[32m+[m[32m      'stopTyping',[m
[32m+[m[32m      'typing',[m
[32m+[m[32m      'typingCount',[m
[32m+[m[32m      'fetchPinnedMessages',[m
[32m+[m[32m      'createCollector',[m
[32m+[m[32m      'createMessageCollector',[m
[32m+[m[32m      'awaitMessages'[m
[32m+[m[32m    );[m
[32m+[m[32m  }[m
[32m+[m[32m  for (const prop of props) {[m
[32m+[m[32m    if (ignore.includes(prop)) continue;[m
[32m+[m[32m    Object.defineProperty(structure.prototype, prop, Object.getOwnPropertyDescriptor(TextBasedChannel.prototype, prop));[m
[32m+[m[32m  }[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mTextBasedChannel.prototype.acknowledge = util.deprecate([m
[32m+[m[32m  TextBasedChannel.prototype.acknowledge, 'TextBasedChannel#acknowledge: userbot methods will be removed'[m
[32m+[m[32m);[m
[32m+[m
[32m+[m[32mTextBasedChannel.prototype.search =[m
[32m+[m[32m  util.deprecate(TextBasedChannel.prototype.search, 'TextBasedChannel#search: userbot methods will be removed');[m
[1mdiff --git a/node_modules/discord.js/src/structures/shared/resolvePermissions.js b/node_modules/discord.js/src/structures/shared/resolvePermissions.js[m
[1mnew file mode 100644[m
[1mindex 0000000..c266d46[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/structures/shared/resolvePermissions.js[m
[36m@@ -0,0 +1,26 @@[m
[32m+[m[32mconst Permissions = require('../../util/Permissions');[m
[32m+[m[32mconst Collection = require('../../util/Collection');[m
[32m+[m
[32m+[m[32mmodule.exports = function resolvePermissions(overwrites, guild) {[m
[32m+[m[32m  if (overwrites instanceof Collection || overwrites instanceof Array) {[m
[32m+[m[32m    overwrites = overwrites.map(overwrite => {[m
[32m+[m[32m      const role = this.client.resolver.resolveRole(guild, overwrite.id);[m
[32m+[m[32m      if (role) {[m
[32m+[m[32m        overwrite.id = role.id;[m
[32m+[m[32m        overwrite.type = 'role';[m
[32m+[m[32m      } else {[m
[32m+[m[32m        overwrite.id = this.client.resolver.resolveUserID(overwrite.id);[m
[32m+[m[32m        overwrite.type = 'member';[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      return {[m
[32m+[m[32m        allow: Permissions.resolve(overwrite.allow || overwrite.allowed || 0),[m
[32m+[m[32m        deny: Permissions.resolve(overwrite.deny || overwrite.denied || 0),[m
[32m+[m[32m        type: overwrite.type,[m
[32m+[m[32m        id: overwrite.id,[m
[32m+[m[32m      };[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  return overwrites;[m
[32m+[m[32m};[m
[1mdiff --git a/node_modules/discord.js/src/util/Collection.js b/node_modules/discord.js/src/util/Collection.js[m
[1mnew file mode 100644[m
[1mindex 0000000..612b67c[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/util/Collection.js[m
[36m@@ -0,0 +1,532 @@[m
[32m+[m[32mconst util = require('util');[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * A Map with additional utility methods. This is used throughout discord.js rather than Arrays for anything that has[m
[32m+[m[32m * an ID, for significantly improved performance and ease-of-use.[m
[32m+[m[32m * @extends {Map}[m
[32m+[m[32m */[m
[32m+[m[32mclass Collection extends Map {[m
[32m+[m[32m  constructor(iterable) {[m
[32m+[m[32m    super(iterable);[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Cached array for the `array()` method - will be reset to `null` whenever `set()` or `delete()` are called[m
[32m+[m[32m     * @name Collection#_array[m
[32m+[m[32m     * @type {?Array}[m
[32m+[m[32m     * @private[m
[32m+[m[32m     */[m
[32m+[m[32m    Object.defineProperty(this, '_array', { value: null, writable: true, configurable: true });[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Cached array for the `keyArray()` method - will be reset to `null` whenever `set()` or `delete()` are called[m
[32m+[m[32m     * @name Collection#_keyArray[m
[32m+[m[32m     * @type {?Array}[m
[32m+[m[32m     * @private[m
[32m+[m[32m     */[m
[32m+[m[32m    Object.defineProperty(this, '_keyArray', { value: null, writable: true, configurable: true });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  set(key, val) {[m
[32m+[m[32m    this._array = null;[m
[32m+[m[32m    this._keyArray = null;[m
[32m+[m[32m    return super.set(key, val);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  delete(key) {[m
[32m+[m[32m    this._array = null;[m
[32m+[m[32m    this._keyArray = null;[m
[32m+[m[32m    return super.delete(key);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Creates an ordered array of the values of this collection, and caches it internally. The array will only be[m
[32m+[m[32m   * reconstructed if an item is added to or removed from the collection, or if you change the length of the array[m
[32m+[m[32m   * itself. If you don't want this caching behavior, use `[...collection.values()]` or[m
[32m+[m[32m   * `Array.from(collection.values())` instead.[m
[32m+[m[32m   * @returns {Array}[m
[32m+[m[32m   */[m
[32m+[m[32m  array() {[m
[32m+[m[32m    if (!this._array || this._array.length !== this.size) this._array = [...this.values()];[m
[32m+[m[32m    return this._array;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Creates an ordered array of the keys of this collection, and caches it internally. The array will only be[m
[32m+[m[32m   * reconstructed if an item is added to or removed from the collection, or if you change the length of the array[m
[32m+[m[32m   * itself. If you don't want this caching behavior, use `[...collection.keys()]` or[m
[32m+[m[32m   * `Array.from(collection.keys())` instead.[m
[32m+[m[32m   * @returns {Array}[m
[32m+[m[32m   */[m
[32m+[m[32m  keyArray() {[m
[32m+[m[32m    if (!this._keyArray || this._keyArray.length !== this.size) this._keyArray = [...this.keys()];[m
[32m+[m[32m    return this._keyArray;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Obtains the first value(s) in this collection.[m
[32m+[m[32m   * @param {number} [count] Number of values to obtain from the beginning[m
[32m+[m[32m   * @returns {*|Array<*>} The single value if `count` is undefined, or an array of values of `count` length[m
[32m+[m[32m   */[m
[32m+[m[32m  first(count) {[m
[32m+[m[32m    if (count === undefined) return this.values().next().value;[m
[32m+[m[32m    if (typeof count !== 'number') throw new TypeError('The count must be a number.');[m
[32m+[m[32m    if (!Number.isInteger(count) || count < 1) throw new RangeError('The count must be an integer greater than 0.');[m
[32m+[m[32m    count = Math.min(this.size, count);[m
[32m+[m[32m    const arr = new Array(count);[m
[32m+[m[32m    const iter = this.values();[m
[32m+[m[32m    for (let i = 0; i < count; i++) arr[i] = iter.next().value;[m
[32m+[m[32m    return arr;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Obtains the first key(s) in this collection.[m
[32m+[m[32m   * @param {number} [count] Number of keys to obtain from the beginning[m
[32m+[m[32m   * @returns {*|Array<*>} The single key if `count` is undefined, or an array of keys of `count` length[m
[32m+[m[32m   */[m
[32m+[m[32m  firstKey(count) {[m
[32m+[m[32m    if (count === undefined) return this.keys().next().value;[m
[32m+[m[32m    if (typeof count !== 'number') throw new TypeError('The count must be a number.');[m
[32m+[m[32m    if (!Number.isInteger(count) || count < 1) throw new RangeError('The count must be an integer greater than 0.');[m
[32m+[m[32m    count = Math.min(this.size, count);[m
[32m+[m[32m    const arr = new Array(count);[m
[32m+[m[32m    const iter = this.keys();[m
[32m+[m[32m    for (let i = 0; i < count; i++) arr[i] = iter.next().value;[m
[32m+[m[32m    return arr;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Obtains the last value(s) in this collection. This relies on {@link Collection#array}, and thus the caching[m
[32m+[m[32m   * mechanism applies here as well.[m
[32m+[m[32m   * @param {number} [count] Number of values to obtain from the end[m
[32m+[m[32m   * @returns {*|Array<*>} The single value if `count` is undefined, or an array of values of `count` length[m
[32m+[m[32m   */[m
[32m+[m[32m  last(count) {[m
[32m+[m[32m    const arr = this.array();[m
[32m+[m[32m    if (count === undefined) return arr[arr.length - 1];[m
[32m+[m[32m    if (typeof count !== 'number') throw new TypeError('The count must be a number.');[m
[32m+[m[32m    if (!Number.isInteger(count) || count < 1) throw new RangeError('The count must be an integer greater than 0.');[m
[32m+[m[32m    return arr.slice(-count);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Obtains the last key(s) in this collection. This relies on {@link Collection#keyArray}, and thus the caching[m
[32m+[m[32m   * mechanism applies here as well.[m
[32m+[m[32m   * @param {number} [count] Number of keys to obtain from the end[m
[32m+[m[32m   * @returns {*|Array<*>} The single key if `count` is undefined, or an array of keys of `count` length[m
[32m+[m[32m   */[m
[32m+[m[32m  lastKey(count) {[m
[32m+[m[32m    const arr = this.keyArray();[m
[32m+[m[32m    if (count === undefined) return arr[arr.length - 1];[m
[32m+[m[32m    if (typeof count !== 'number') throw new TypeError('The count must be a number.');[m
[32m+[m[32m    if (!Number.isInteger(count) || count < 1) throw new RangeError('The count must be an integer greater than 0.');[m
[32m+[m[32m    return arr.slice(-count);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Obtains random value(s) from this collection. This relies on {@link Collection#array}, and thus the caching[m
[32m+[m[32m   * mechanism applies here as well.[m
[32m+[m[32m   * @param {number} [count] Number of values to obtain randomly[m
[32m+[m[32m   * @returns {*|Array<*>} The single value if `count` is undefined, or an array of values of `count` length[m
[32m+[m[32m   */[m
[32m+[m[32m  random(count) {[m
[32m+[m[32m    let arr = this.array();[m
[32m+[m[32m    if (count === undefined) return arr[Math.floor(Math.random() * arr.length)];[m
[32m+[m[32m    if (typeof count !== 'number') throw new TypeError('The count must be a number.');[m
[32m+[m[32m    if (!Number.isInteger(count) || count < 1) throw new RangeError('The count must be an integer greater than 0.');[m
[32m+[m[32m    if (arr.length === 0) return [];[m
[32m+[m[32m    const rand = new Array(count);[m
[32m+[m[32m    arr = arr.slice();[m
[32m+[m[32m    for (let i = 0; i < count; i++) rand[i] = arr.splice(Math.floor(Math.random() * arr.length), 1)[0];[m
[32m+[m[32m    return rand;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Obtains random key(s) from this collection. This relies on {@link Collection#keyArray}, and thus the caching[m
[32m+[m[32m   * mechanism applies here as well.[m
[32m+[m[32m   * @param {number} [count] Number of keys to obtain randomly[m
[32m+[m[32m   * @returns {*|Array<*>} The single key if `count` is undefined, or an array of keys of `count` length[m
[32m+[m[32m   */[m
[32m+[m[32m  randomKey(count) {[m
[32m+[m[32m    let arr = this.keyArray();[m
[32m+[m[32m    if (count === undefined) return arr[Math.floor(Math.random() * arr.length)];[m
[32m+[m[32m    if (typeof count !== 'number') throw new TypeError('The count must be a number.');[m
[32m+[m[32m    if (!Number.isInteger(count) || count < 1) throw new RangeError('The count must be an integer greater than 0.');[m
[32m+[m[32m    if (arr.length === 0) return [];[m
[32m+[m[32m    const rand = new Array(count);[m
[32m+[m[32m    arr = arr.slice();[m
[32m+[m[32m    for (let i = 0; i < count; i++) rand[i] = arr.splice(Math.floor(Math.random() * arr.length), 1)[0];[m
[32m+[m[32m    return rand;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Searches for all items where their specified property's value is identical to the given value[m
[32m+[m[32m   * (`item[prop] === value`).[m
[32m+[m[32m   * @param {string} prop The property to test against[m
[32m+[m[32m   * @param {*} value The expected value[m
[32m+[m[32m   * @returns {Array}[m
[32m+[m[32m   * @deprecated[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * collection.findAll('username', 'Bob');[m
[32m+[m[32m   */[m
[32m+[m[32m  findAll(prop, value) {[m
[32m+[m[32m    if (typeof prop !== 'string') throw new TypeError('Key must be a string.');[m
[32m+[m[32m    if (typeof value === 'undefined') throw new Error('Value must be specified.');[m
[32m+[m[32m    const results = [];[m
[32m+[m[32m    for (const item of this.values()) {[m
[32m+[m[32m      if (item[prop] === value) results.push(item);[m
[32m+[m[32m    }[m
[32m+[m[32m    return results;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Searches for a single item where its specified property's value is identical to the given value[m
[32m+[m[32m   * (`item[prop] === value`), or the given function returns a truthy value. In the latter case, this is identical to[m
[32m+[m[32m   * [Array.find()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find).[m
[32m+[m[32m   * <warn>All collections used in Discord.js are mapped using their `id` property, and if you want to find by id you[m
[32m+[m[32m   * should use the `get` method. See[m
[32m+[m[32m   * [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/get) for details.</warn>[m
[32m+[m[32m   * @param {string|Function} propOrFn The property to test against, or the function to test with[m
[32m+[m[32m   * @param {*} [value] The expected value - only applicable and required if using a property for the first argument[m
[32m+[m[32m   * @returns {*}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * collection.find('username', 'Bob');[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * collection.find(val => val.username === 'Bob');[m
[32m+[m[32m   */[m
[32m+[m[32m  find(propOrFn, value) {[m
[32m+[m[32m    if (typeof propOrFn === 'string') {[m
[32m+[m[32m      if (typeof value === 'undefined') throw new Error('Value must be specified.');[m
[32m+[m[32m      for (const item of this.values()) {[m
[32m+[m[32m        if (item[propOrFn] === value) return item;[m
[32m+[m[32m      }[m
[32m+[m[32m      return null;[m
[32m+[m[32m    } else if (typeof propOrFn === 'function') {[m
[32m+[m[32m      for (const [key, val] of this) {[m
[32m+[m[32m        if (propOrFn(val, key, this)) return val;[m
[32m+[m[32m      }[m
[32m+[m[32m      return null;[m
[32m+[m[32m    } else {[m
[32m+[m[32m      throw new Error('First argument must be a property string or a function.');[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /* eslint-disable max-len */[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Searches for the key of a single item where its specified property's value is identical to the given value[m
[32m+[m[32m   * (`item[prop] === value`), or the given function returns a truthy value. In the latter case, this is identical to[m
[32m+[m[32m   * [Array.findIndex()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex).[m
[32m+[m[32m   * @param {string|Function} propOrFn The property to test against, or the function to test with[m
[32m+[m[32m   * @param {*} [value] The expected value - only applicable and required if using a property for the first argument[m
[32m+[m[32m   * @returns {*}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * collection.findKey('username', 'Bob');[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * collection.findKey(val => val.username === 'Bob');[m
[32m+[m[32m   */[m
[32m+[m[32m  findKey(propOrFn, value) {[m
[32m+[m[32m    /* eslint-enable max-len */[m
[32m+[m[32m    if (typeof propOrFn === 'string') {[m
[32m+[m[32m      if (typeof value === 'undefined') throw new Error('Value must be specified.');[m
[32m+[m[32m      for (const [key, val] of this) {[m
[32m+[m[32m        if (val[propOrFn] === value) return key;[m
[32m+[m[32m      }[m
[32m+[m[32m      return null;[m
[32m+[m[32m    } else if (typeof propOrFn === 'function') {[m
[32m+[m[32m      for (const [key, val] of this) {[m
[32m+[m[32m        if (propOrFn(val, key, this)) return key;[m
[32m+[m[32m      }[m
[32m+[m[32m      return null;[m
[32m+[m[32m    } else {[m
[32m+[m[32m      throw new Error('First argument must be a property string or a function.');[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Searches for the existence of a single item where its specified property's value is identical to the given value[m
[32m+[m[32m   * (`item[prop] === value`).[m
[32m+[m[32m   * <warn>Do not use this to check for an item by its ID. Instead, use `collection.has(id)`. See[m
[32m+[m[32m   * [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/has) for details.</warn>[m
[32m+[m[32m   * @param {string} prop The property to test against[m
[32m+[m[32m   * @param {*} value The expected value[m
[32m+[m[32m   * @returns {boolean}[m
[32m+[m[32m   * @deprecated[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * if (collection.exists('username', 'Bob')) {[m
[32m+[m[32m   *  console.log('user here!');[m
[32m+[m[32m   * }[m
[32m+[m[32m   */[m
[32m+[m[32m  exists(prop, value) {[m
[32m+[m[32m    return Boolean(this.find(prop, value));[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Removes entries that satisfy the provided filter function.[m
[32m+[m[32m   * @param {Function} fn Function used to test (should return a boolean)[m
[32m+[m[32m   * @param {Object} [thisArg] Value to use as `this` when executing function[m
[32m+[m[32m   * @returns {number} The number of removed entries[m
[32m+[m[32m   */[m
[32m+[m[32m  sweep(fn, thisArg) {[m
[32m+[m[32m    if (thisArg) fn = fn.bind(thisArg);[m
[32m+[m[32m    const previousSize = this.size;[m
[32m+[m[32m    for (const [key, val] of this) {[m
[32m+[m[32m      if (fn(val, key, this)) this.delete(key);[m
[32m+[m[32m    }[m
[32m+[m[32m    return previousSize - this.size;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Identical to[m
[32m+[m[32m   * [Array.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),[m
[32m+[m[32m   * but returns a Collection instead of an Array.[m
[32m+[m[32m   * @param {Function} fn Function used to test (should return a boolean)[m
[32m+[m[32m   * @param {Object} [thisArg] Value to use as `this` when executing function[m
[32m+[m[32m   * @returns {Collection}[m
[32m+[m[32m   */[m
[32m+[m[32m  filter(fn, thisArg) {[m
[32m+[m[32m    if (thisArg) fn = fn.bind(thisArg);[m
[32m+[m[32m    const results = new Collection();[m
[32m+[m[32m    for (const [key, val] of this) {[m
[32m+[m[32m      if (fn(val, key, this)) results.set(key, val);[m
[32m+[m[32m    }[m
[32m+[m[32m    return results;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Identical to[m
[32m+[m[32m   * [Array.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter).[m
[32m+[m[32m   * @param {Function} fn Function used to test (should return a boolean)[m
[32m+[m[32m   * @param {Object} [thisArg] Value to use as `this` when executing function[m
[32m+[m[32m   * @returns {Array}[m
[32m+[m[32m   * @deprecated[m
[32m+[m[32m   */[m
[32m+[m[32m  filterArray(fn, thisArg) {[m
[32m+[m[32m    if (thisArg) fn = fn.bind(thisArg);[m
[32m+[m[32m    const results = [];[m
[32m+[m[32m    for (const [key, val] of this) {[m
[32m+[m[32m      if (fn(val, key, this)) results.push(val);[m
[32m+[m[32m    }[m
[32m+[m[32m    return results;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Partitions the collection into two collections where the first collection[m
[32m+[m[32m   * contains the items that passed and the second contains the items that failed.[m
[32m+[m[32m   * @param {Function} fn Function used to test (should return a boolean)[m
[32m+[m[32m   * @param {*} [thisArg] Value to use as `this` when executing function[m
[32m+[m[32m   * @returns {Collection[]}[m
[32m+[m[32m   * @example const [big, small] = collection.partition(guild => guild.memberCount > 250);[m
[32m+[m[32m   */[m
[32m+[m[32m  partition(fn, thisArg) {[m
[32m+[m[32m    if (typeof thisArg !== 'undefined') fn = fn.bind(thisArg);[m
[32m+[m[32m    const results = [new Collection(), new Collection()];[m
[32m+[m[32m    for (const [key, val] of this) {[m
[32m+[m[32m      if (fn(val, key, this)) {[m
[32m+[m[32m        results[0].set(key, val);[m
[32m+[m[32m      } else {[m
[32m+[m[32m        results[1].set(key, val);[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m    return results;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Identical to[m
[32m+[m[32m   * [Array.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map).[m
[32m+[m[32m   * @param {Function} fn Function that produces an element of the new array, taking three arguments[m
[32m+[m[32m   * @param {*} [thisArg] Value to use as `this` when executing function[m
[32m+[m[32m   * @returns {Array}[m
[32m+[m[32m   */[m
[32m+[m[32m  map(fn, thisArg) {[m
[32m+[m[32m    if (thisArg) fn = fn.bind(thisArg);[m
[32m+[m[32m    const arr = new Array(this.size);[m
[32m+[m[32m    let i = 0;[m
[32m+[m[32m    for (const [key, val] of this) arr[i++] = fn(val, key, this);[m
[32m+[m[32m    return arr;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Identical to[m
[32m+[m[32m   * [Array.some()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some).[m
[32m+[m[32m   * @param {Function} fn Function used to test (should return a boolean)[m
[32m+[m[32m   * @param {Object} [thisArg] Value to use as `this` when executing function[m
[32m+[m[32m   * @returns {boolean}[m
[32m+[m[32m   */[m
[32m+[m[32m  some(fn, thisArg) {[m
[32m+[m[32m    if (thisArg) fn = fn.bind(thisArg);[m
[32m+[m[32m    for (const [key, val] of this) {[m
[32m+[m[32m      if (fn(val, key, this)) return true;[m
[32m+[m[32m    }[m
[32m+[m[32m    return false;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Identical to[m
[32m+[m[32m   * [Array.every()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/every).[m
[32m+[m[32m   * @param {Function} fn Function used to test (should return a boolean)[m
[32m+[m[32m   * @param {Object} [thisArg] Value to use as `this` when executing function[m
[32m+[m[32m   * @returns {boolean}[m
[32m+[m[32m   */[m
[32m+[m[32m  every(fn, thisArg) {[m
[32m+[m[32m    if (thisArg) fn = fn.bind(thisArg);[m
[32m+[m[32m    for (const [key, val] of this) {[m
[32m+[m[32m      if (!fn(val, key, this)) return false;[m
[32m+[m[32m    }[m
[32m+[m[32m    return true;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Identical to[m
[32m+[m[32m   * [Array.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce).[m
[32m+[m[32m   * @param {Function} fn Function used to reduce, taking four arguments; `accumulator`, `currentValue`, `currentKey`,[m
[32m+[m[32m   * and `collection`[m
[32m+[m[32m   * @param {*} [initialValue] Starting value for the accumulator[m
[32m+[m[32m   * @returns {*}[m
[32m+[m[32m   */[m
[32m+[m[32m  reduce(fn, initialValue) {[m
[32m+[m[32m    let accumulator;[m
[32m+[m[32m    if (typeof initialValue !== 'undefined') {[m
[32m+[m[32m      accumulator = initialValue;[m
[32m+[m[32m      for (const [key, val] of this) accumulator = fn(accumulator, val, key, this);[m
[32m+[m[32m    } else {[m
[32m+[m[32m      let first = true;[m
[32m+[m[32m      for (const [key, val] of this) {[m
[32m+[m[32m        if (first) {[m
[32m+[m[32m          accumulator = val;[m
[32m+[m[32m          first = false;[m
[32m+[m[32m          continue;[m
[32m+[m[32m        }[m
[32m+[m[32m        accumulator = fn(accumulator, val, key, this);[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m    return accumulator;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Identical to[m
[32m+[m[32m   * [Map.forEach()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/forEach),[m
[32m+[m[32m   * but returns the collection instead of undefined.[m
[32m+[m[32m   * @param {Function} fn Function to execute for each element[m
[32m+[m[32m   * @param {*} [thisArg] Value to use as `this` when executing function[m
[32m+[m[32m   * @returns {Collection}[m
[32m+[m[32m   * @example[m
[32m+[m[32m   * collection[m
[32m+[m[32m   *  .tap(user => console.log(user.username))[m
[32m+[m[32m   *  .filter(user => user.bot)[m
[32m+[m[32m   *  .tap(user => console.log(user.username));[m
[32m+[m[32m   */[m
[32m+[m[32m  tap(fn, thisArg) {[m
[32m+[m[32m    this.forEach(fn, thisArg);[m
[32m+[m[32m    return this;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Creates an identical shallow copy of this collection.[m
[32m+[m[32m   * @returns {Collection}[m
[32m+[m[32m   * @example const newColl = someColl.clone();[m
[32m+[m[32m   */[m
[32m+[m[32m  clone() {[m
[32m+[m[32m    return new this.constructor(this);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Combines this collection with others into a new collection. None of the source collections are modified.[m
[32m+[m[32m   * @param {...Collection} collections Collections to merge[m
[32m+[m[32m   * @returns {Collection}[m
[32m+[m[32m   * @example const newColl = someColl.concat(someOtherColl, anotherColl, ohBoyAColl);[m
[32m+[m[32m   */[m
[32m+[m[32m  concat(...collections) {[m
[32m+[m[32m    const newColl = this.clone();[m
[32m+[m[32m    for (const coll of collections) {[m
[32m+[m[32m      for (const [key, val] of coll) newColl.set(key, val);[m
[32m+[m[32m    }[m
[32m+[m[32m    return newColl;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Calls the `delete()` method on all items that have it.[m
[32m+[m[32m   * @returns {Promise[]}[m
[32m+[m[32m   */[m
[32m+[m[32m  deleteAll() {[m
[32m+[m[32m    const returns = [];[m
[32m+[m[32m    for (const item of this.values()) {[m
[32m+[m[32m      if (item.delete) returns.push(item.delete());[m
[32m+[m[32m    }[m
[32m+[m[32m    return returns;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Checks if this collection shares identical key-value pairings with another.[m
[32m+[m[32m   * This is different to checking for equality using equal-signs, because[m
[32m+[m[32m   * the collections may be different objects, but contain the same data.[m
[32m+[m[32m   * @param {Collection} collection Collection to compare with[m
[32m+[m[32m   * @returns {boolean} Whether the collections have identical contents[m
[32m+[m[32m   */[m
[32m+[m[32m  equals(collection) {[m
[32m+[m[32m    if (!collection) return false;[m
[32m+[m[32m    if (this === collection) return true;[m
[32m+[m[32m    if (this.size !== collection.size) return false;[m
[32m+[m[32m    return !this.find((value, key) => {[m
[32m+[m[32m      const testVal = collection.get(key);[m
[32m+[m[32m      return testVal !== value || (testVal === undefined && !collection.has(key));[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The sort() method sorts the elements of a collection in place and returns the collection.[m
[32m+[m[32m   * The sort is not necessarily stable. The default sort order is according to string Unicode code points.[m
[32m+[m[32m   * @param {Function} [compareFunction] Specifies a function that defines the sort order.[m
[32m+[m[32m   * if omitted, the collection is sorted according to each character's Unicode code point value,[m
[32m+[m[32m   * according to the string conversion of each element.[m
[32m+[m[32m   * @returns {Collection}[m
[32m+[m[32m   */[m
[32m+[m[32m  sort(compareFunction = (x, y) => +(x > y) || +(x === y) - 1) {[m
[32m+[m[32m    return new Collection([...this.entries()].sort((a, b) => compareFunction(a[1], b[1], a[0], b[0])));[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mCollection.prototype.findAll =[m
[32m+[m[32m  util.deprecate(Collection.prototype.findAll, 'Collection#findAll: use Collection#filter instead');[m
[32m+[m
[32m+[m[32mCollection.prototype.filterArray =[m
[32m+[m[32m  util.deprecate(Collection.prototype.filterArray, 'Collection#filterArray: use Collection#filter instead');[m
[32m+[m
[32m+[m[32mCollection.prototype.exists =[m
[32m+[m[32m  util.deprecate(Collection.prototype.exists, 'Collection#exists: use Collection#some instead');[m
[32m+[m
[32m+[m[32mCollection.prototype.find = function find(propOrFn, value) {[m
[32m+[m[32m  if (typeof propOrFn === 'string') {[m
[32m+[m[32m    process.emitWarning('Collection#find: pass a function instead', 'DeprecationWarning');[m
[32m+[m[32m    if (typeof value === 'undefined') throw new Error('Value must be specified.');[m
[32m+[m[32m    for (const item of this.values()) {[m
[32m+[m[32m      if (item[propOrFn] === value) return item;[m
[32m+[m[32m    }[m
[32m+[m[32m    return null;[m
[32m+[m[32m  } else if (typeof propOrFn === 'function') {[m
[32m+[m[32m    for (const [key, val] of this) {[m
[32m+[m[32m      if (propOrFn(val, key, this)) return val;[m
[32m+[m[32m    }[m
[32m+[m[32m    return null;[m
[32m+[m[32m  } else {[m
[32m+[m[32m    throw new Error('First argument must be a property string or a function.');[m
[32m+[m[32m  }[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mCollection.prototype.findKey = function findKey(propOrFn, value) {[m
[32m+[m[32m  if (typeof propOrFn === 'string') {[m
[32m+[m[32m    process.emitWarning('Collection#findKey: pass a function instead', 'DeprecationWarning');[m
[32m+[m[32m    if (typeof value === 'undefined') throw new Error('Value must be specified.');[m
[32m+[m[32m    for (const [key, val] of this) {[m
[32m+[m[32m      if (val[propOrFn] === value) return key;[m
[32m+[m[32m    }[m
[32m+[m[32m    return null;[m
[32m+[m[32m  } else if (typeof propOrFn === 'function') {[m
[32m+[m[32m    for (const [key, val] of this) {[m
[32m+[m[32m      if (propOrFn(val, key, this)) return key;[m
[32m+[m[32m    }[m
[32m+[m[32m    return null;[m
[32m+[m[32m  } else {[m
[32m+[m[32m    throw new Error('First argument must be a property string or a function.');[m
[32m+[m[32m  }[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mmodule.exports = Collection;[m
[1mdiff --git a/node_modules/discord.js/src/util/Constants.js b/node_modules/discord.js/src/util/Constants.js[m
[1mnew file mode 100644[m
[1mindex 0000000..9110c42[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/util/Constants.js[m
[36m@@ -0,0 +1,845 @@[m
[32m+[m[32mexports.Package = require('../../package.json');[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Options for a client.[m
[32m+[m[32m * @typedef {Object} ClientOptions[m
[32m+[m[32m * @property {string} [apiRequestMethod='sequential'] One of `sequential` or `burst`. The sequential handler executes[m
[32m+[m[32m * all requests in the order they are triggered, whereas the burst handler runs multiple in parallel, and doesn't[m
[32m+[m[32m * provide the guarantee of any particular order. Burst mode is more likely to hit a 429 ratelimit error by its nature,[m
[32m+[m[32m * and is therefore slightly riskier to use.[m
[32m+[m[32m * @property {number} [shardId=0] ID of the shard to run[m
[32m+[m[32m * @property {number} [shardCount=0] Total number of shards[m
[32m+[m[32m * @property {number} [messageCacheMaxSize=200] Maximum number of messages to cache per channel[m
[32m+[m[32m * (-1 or Infinity for unlimited - don't do this without message sweeping, otherwise memory usage will climb[m
[32m+[m[32m * indefinitely)[m
[32m+[m[32m * @property {number} [messageCacheLifetime=0] How long a message should stay in the cache until it is considered[m
[32m+[m[32m * sweepable (in seconds, 0 for forever)[m
[32m+[m[32m * @property {number} [messageSweepInterval=0] How frequently to remove messages from the cache that are older than[m
[32m+[m[32m * the message cache lifetime (in seconds, 0 for never)[m
[32m+[m[32m * @property {boolean} [fetchAllMembers=false] Whether to cache all guild members and users upon startup, as well as[m
[32m+[m[32m * upon joining a guild (should be avoided whenever possible)[m
[32m+[m[32m * @property {boolean} [disableEveryone=false] Default value for {@link MessageOptions#disableEveryone}[m
[32m+[m[32m * @property {boolean} [sync=false] Whether to periodically sync guilds (for user accounts)[m
[32m+[m[32m * @property {number} [restWsBridgeTimeout=5000] Maximum time permitted between REST responses and their[m
[32m+[m[32m * corresponding websocket events[m
[32m+[m[32m * @property {number} [restTimeOffset=500] Extra time in millseconds to wait before continuing to make REST[m
[32m+[m[32m * requests (higher values will reduce rate-limiting errors on bad connections)[m
[32m+[m[32m * @property {number} [retryLimit=Infinity] How many times to retry on 5XX errors[m
[32m+[m[32m * (Infinity for indefinite amount of retries)[m
[32m+[m[32m * @property {WSEventType[]} [disabledEvents] An array of disabled websocket events. Events in this array will not be[m
[32m+[m[32m * processed, potentially resulting in performance improvements for larger bots. Only disable events you are[m
[32m+[m[32m * 100% certain you don't need, as many are important, but not obviously so. The safest one to disable with the[m
[32m+[m[32m * most impact is typically `TYPING_START`.[m
[32m+[m[32m * @property {WebsocketOptions} [ws] Options for the WebSocket[m
[32m+[m[32m * @property {HTTPOptions} [http] HTTP options[m
[32m+[m[32m */[m
[32m+[m[32mexports.DefaultOptions = {[m
[32m+[m[32m  apiRequestMethod: 'sequential',[m
[32m+[m[32m  shardId: 0,[m
[32m+[m[32m  shardCount: 0,[m
[32m+[m[32m  messageCacheMaxSize: 200,[m
[32m+[m[32m  messageCacheLifetime: 0,[m
[32m+[m[32m  messageSweepInterval: 0,[m
[32m+[m[32m  fetchAllMembers: false,[m
[32m+[m[32m  disableEveryone: false,[m
[32m+[m[32m  sync: false,[m
[32m+[m[32m  restWsBridgeTimeout: 5000,[m
[32m+[m[32m  retryLimit: Infinity,[m
[32m+[m[32m  disabledEvents: [],[m
[32m+[m[32m  restTimeOffset: 500,[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * WebSocket options (these are left as snake_case to match the API)[m
[32m+[m[32m   * @typedef {Object} WebsocketOptions[m
[32m+[m[32m   * @property {number} [large_threshold=250] Number of members in a guild to be considered large[m
[32m+[m[32m   * @property {boolean} [compress=true] Whether to compress data sent on the connection[m
[32m+[m[32m   * (defaults to `false` for browsers)[m
[32m+[m[32m   */[m
[32m+[m[32m  ws: {[m
[32m+[m[32m    large_threshold: 250,[m
[32m+[m[32m    compress: require('os').platform() !== 'browser',[m
[32m+[m[32m    properties: {[m
[32m+[m[32m      $os: process ? process.platform : 'discord.js',[m
[32m+[m[32m      $browser: 'discord.js',[m
[32m+[m[32m      $device: 'discord.js',[m
[32m+[m[32m      $referrer: '',[m
[32m+[m[32m      $referring_domain: '',[m
[32m+[m[32m    },[m
[32m+[m[32m    version: 6,[m
[32m+[m[32m  },[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * HTTP options[m
[32m+[m[32m   * @typedef {Object} HTTPOptions[m
[32m+[m[32m   * @property {number} [version=7] API version to use[m
[32m+[m[32m   * @property {string} [api='https://discordapp.com/api'] Base url of the API[m
[32m+[m[32m   * @property {string} [cdn='https://cdn.discordapp.com'] Base url of the CDN[m
[32m+[m[32m   * @property {string} [invite='https://discord.gg'] Base url of invites[m
[32m+[m[32m   */[m
[32m+[m[32m  http: {[m
[32m+[m[32m    version: 7,[m
[32m+[m[32m    host: 'https://discordapp.com',[m
[32m+[m[32m    cdn: 'https://cdn.discordapp.com',[m
[32m+[m[32m  },[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mexports.WSCodes = {[m
[32m+[m[32m  1000: 'Connection gracefully closed',[m
[32m+[m[32m  4004: 'Tried to identify with an invalid token',[m
[32m+[m[32m  4010: 'Sharding data provided was invalid',[m
[32m+[m[32m  4011: 'Shard would be on too many guilds if connected',[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mexports.Errors = {[m
[32m+[m[32m  NO_TOKEN: 'Request to use token, but token was unavailable to the client.',[m
[32m+[m[32m  NO_BOT_ACCOUNT: 'Only bot accounts are able to make use of this feature.',[m
[32m+[m[32m  NO_USER_ACCOUNT: 'Only user accounts are able to make use of this feature.',[m
[32m+[m[32m  BAD_WS_MESSAGE: 'A bad message was received from the websocket; either bad compression, or not JSON.',[m
[32m+[m[32m  TOOK_TOO_LONG: 'Something took too long to do.',[m
[32m+[m[32m  NOT_A_PERMISSION: 'Invalid permission string or number.',[m
[32m+[m[32m  INVALID_RATE_LIMIT_METHOD: 'Unknown rate limiting method.',[m
[32m+[m[32m  BAD_LOGIN: 'Incorrect login details were provided.',[m
[32m+[m[32m  INVALID_SHARD: 'Invalid shard settings were provided.',[m
[32m+[m[32m  SHARDING_REQUIRED: 'This session would have handled too many guilds - Sharding is required.',[m
[32m+[m[32m  INVALID_TOKEN: 'An invalid token was provided.',[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mconst Endpoints = exports.Endpoints = {[m
[32m+[m[32m  User: userID => {[m
[32m+[m[32m    if (userID.id) userID = userID.id;[m
[32m+[m[32m    const base = `/users/${userID}`;[m
[32m+[m[32m    return {[m
[32m+[m[32m      toString: () => base,[m
[32m+[m[32m      channels: `${base}/channels`,[m
[32m+[m[32m      profile: `${base}/profile`,[m
[32m+[m[32m      relationships: `${base}/relationships`,[m
[32m+[m[32m      settings: `${base}/settings`,[m
[32m+[m[32m      Relationship: uID => `${base}/relationships/${uID}`,[m
[32m+[m[32m      Guild: guildID => ({[m
[32m+[m[32m        toString: () => `${base}/guilds/${guildID}`,[m
[32m+[m[32m        settings: `${base}/guilds/${guildID}/settings`,[m
[32m+[m[32m      }),[m
[32m+[m[32m      Note: id => `${base}/notes/${id}`,[m
[32m+[m[32m      Mentions: (limit, roles, everyone, guildID) =>[m
[32m+[m[32m        `${base}/mentions?limit=${limit}&roles=${roles}&everyone=${everyone}${guildID ? `&guild_id=${guildID}` : ''}`,[m
[32m+[m[32m      Avatar: (root, hash) => {[m
[32m+[m[32m        if (userID === '1') return hash;[m
[32m+[m[32m        return Endpoints.CDN(root).Avatar(userID, hash);[m
[32m+[m[32m      },[m
[32m+[m[32m    };[m
[32m+[m[32m  },[m
[32m+[m[32m  guilds: '/guilds',[m
[32m+[m[32m  Guild: guildID => {[m
[32m+[m[32m    if (guildID.id) guildID = guildID.id;[m
[32m+[m[32m    const base = `/guilds/${guildID}`;[m
[32m+[m[32m    return {[m
[32m+[m[32m      toString: () => base,[m
[32m+[m[32m      prune: `${base}/prune`,[m
[32m+[m[32m      embed: `${base}/embed`,[m
[32m+[m[32m      bans: `${base}/bans`,[m
[32m+[m[32m      integrations: `${base}/integrations`,[m
[32m+[m[32m      members: `${base}/members`,[m
[32m+[m[32m      channels: `${base}/channels`,[m
[32m+[m[32m      invites: `${base}/invites`,[m
[32m+[m[32m      roles: `${base}/roles`,[m
[32m+[m[32m      emojis: `${base}/emojis`,[m
[32m+[m[32m      search: `${base}/messages/search`,[m
[32m+[m[32m      vanityURL: `${base}/vanity-url`,[m
[32m+[m[32m      voiceRegions: `${base}/regions`,[m
[32m+[m[32m      webhooks: `${base}/webhooks`,[m
[32m+[m[32m      ack: `${base}/ack`,[m
[32m+[m[32m      settings: `${base}/settings`,[m
[32m+[m[32m      auditLogs: `${base}/audit-logs`,[m
[32m+[m[32m      Emoji: emojiID => `${base}/emojis/${emojiID}`,[m
[32m+[m[32m      Icon: (root, hash) => Endpoints.CDN(root).Icon(guildID, hash),[m
[32m+[m[32m      Splash: (root, hash) => Endpoints.CDN(root).Splash(guildID, hash),[m
[32m+[m[32m      Role: roleID => `${base}/roles/${roleID}`,[m
[32m+[m[32m      Member: memberID => {[m
[32m+[m[32m        if (memberID.id) memberID = memberID.id;[m
[32m+[m[32m        const mbase = `${base}/members/${memberID}`;[m
[32m+[m[32m        return {[m
[32m+[m[32m          toString: () => mbase,[m
[32m+[m[32m          Role: roleID => `${mbase}/roles/${roleID}`,[m
[32m+[m[32m          nickname: `${base}/members/@me/nick`,[m
[32m+[m[32m        };[m
[32m+[m[32m      },[m
[32m+[m[32m    };[m
[32m+[m[32m  },[m
[32m+[m[32m  channels: '/channels',[m
[32m+[m[32m  Channel: channelID => {[m
[32m+[m[32m    if (channelID.id) channelID = channelID.id;[m
[32m+[m[32m    const base = `/channels/${channelID}`;[m
[32m+[m[32m    return {[m
[32m+[m[32m      toString: () => base,[m
[32m+[m[32m      messages: {[m
[32m+[m[32m        toString: () => `${base}/messages`,[m
[32m+[m[32m        bulkDelete: `${base}/messages/bulk-delete`,[m
[32m+[m[32m      },[m
[32m+[m[32m      invites: `${base}/invites`,[m
[32m+[m[32m      typing: `${base}/typing`,[m
[32m+[m[32m      permissions: `${base}/permissions`,[m
[32m+[m[32m      webhooks: `${base}/webhooks`,[m
[32m+[m[32m      search: `${base}/messages/search`,[m
[32m+[m[32m      pins: `${base}/pins`,[m
[32m+[m[32m      Icon: (root, hash) => Endpoints.CDN(root).GDMIcon(channelID, hash),[m
[32m+[m[32m      Pin: messageID => `${base}/pins/${messageID}`,[m
[32m+[m[32m      Recipient: recipientID => `${base}/recipients/${recipientID}`,[m
[32m+[m[32m      Message: messageID => {[m
[32m+[m[32m        if (messageID.id) messageID = messageID.id;[m
[32m+[m[32m        const mbase = `${base}/messages/${messageID}`;[m
[32m+[m[32m        return {[m
[32m+[m[32m          toString: () => mbase,[m
[32m+[m[32m          reactions: `${mbase}/reactions`,[m
[32m+[m[32m          ack: `${mbase}/ack`,[m
[32m+[m[32m          Reaction: emoji => {[m
[32m+[m[32m            const rbase = `${mbase}/reactions/${emoji}`;[m
[32m+[m[32m            return {[m
[32m+[m[32m              toString: () => rbase,[m
[32m+[m[32m              User: userID => `${rbase}/${userID}`,[m
[32m+[m[32m            };[m
[32m+[m[32m          },[m
[32m+[m[32m        };[m
[32m+[m[32m      },[m
[32m+[m[32m    };[m
[32m+[m[32m  },[m
[32m+[m[32m  Message: m => exports.Endpoints.Channel(m.channel).Message(m),[m
[32m+[m[32m  Member: m => exports.Endpoints.Guild(m.guild).Member(m),[m
[32m+[m[32m  CDN(root) {[m
[32m+[m[32m    return {[m
[32m+[m[32m      Emoji: (emojiID, format = 'png') => `${root}/emojis/${emojiID}.${format}`,[m
[32m+[m[32m      Asset: name => `${root}/assets/${name}`,[m
[32m+[m[32m      Avatar: (userID, hash) => `${root}/avatars/${userID}/${hash}.${hash.startsWith('a_') ? 'gif' : 'png?size=2048'}`,[m
[32m+[m[32m      Icon: (guildID, hash) => `${root}/icons/${guildID}/${hash}.jpg`,[m
[32m+[m[32m      AppIcon: (clientID, hash) => `${root}/app-icons/${clientID}/${hash}.png`,[m
[32m+[m[32m      AppAsset: (clientID, hash) => `${root}/app-assets/${clientID}/${hash}.png`,[m
[32m+[m[32m      GDMIcon: (channelID, hash) => `${root}/channel-icons/${channelID}/${hash}.jpg?size=2048`,[m
[32m+[m[32m      Splash: (guildID, hash) => `${root}/splashes/${guildID}/${hash}.jpg`,[m
[32m+[m[32m    };[m
[32m+[m[32m  },[m
[32m+[m[32m  OAUTH2: {[m
[32m+[m[32m    Application: appID => {[m
[32m+[m[32m      const base = `/oauth2/applications/${appID}`;[m
[32m+[m[32m      return {[m
[32m+[m[32m        toString: () => base,[m
[32m+[m[32m        resetSecret: `${base}/reset`,[m
[32m+[m[32m        resetToken: `${base}/bot/reset`,[m
[32m+[m[32m      };[m
[32m+[m[32m    },[m
[32m+[m[32m    App: appID => `/oauth2/authorize?client_id=${appID}`,[m
[32m+[m[32m  },[m
[32m+[m[32m  login: '/auth/login',[m
[32m+[m[32m  logout: '/auth/logout',[m
[32m+[m[32m  voiceRegions: '/voice/regions',[m
[32m+[m[32m  gateway: {[m
[32m+[m[32m    toString: () => '/gateway',[m
[32m+[m[32m    bot: '/gateway/bot',[m
[32m+[m[32m  },[m
[32m+[m[32m  Invite: inviteID => `/invite/${inviteID}?with_counts=true`,[m
[32m+[m[32m  inviteLink: id => `https://discord.gg/${id}`,[m
[32m+[m[32m  Webhook: (webhookID, token) => `/webhooks/${webhookID}${token ? `/${token}` : ''}`,[m
[32m+[m[32m};[m
[32m+[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * The current status of the client. Here are the available statuses:[m
[32m+[m[32m * * READY: 0[m
[32m+[m[32m * * CONNECTING: 1[m
[32m+[m[32m * * RECONNECTING: 2[m
[32m+[m[32m * * IDLE: 3[m
[32m+[m[32m * * NEARLY: 4[m
[32m+[m[32m * * DISCONNECTED: 5[m
[32m+[m[32m * @typedef {number} Status[m
[32m+[m[32m */[m
[32m+[m[32mexports.Status = {[m
[32m+[m[32m  READY: 0,[m
[32m+[m[32m  CONNECTING: 1,[m
[32m+[m[32m  RECONNECTING: 2,[m
[32m+[m[32m  IDLE: 3,[m
[32m+[m[32m  NEARLY: 4,[m
[32m+[m[32m  DISCONNECTED: 5,[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * The current status of a voice connection. Here are the available statuses:[m
[32m+[m[32m * * CONNECTED[m
[32m+[m[32m * * CONNECTING[m
[32m+[m[32m * * AUTHENTICATING[m
[32m+[m[32m * * RECONNECTING[m
[32m+[m[32m * * DISCONNECTED[m
[32m+[m[32m * @typedef {number} VoiceStatus[m
[32m+[m[32m */[m
[32m+[m[32mexports.VoiceStatus = {[m
[32m+[m[32m  CONNECTED: 0,[m
[32m+[m[32m  CONNECTING: 1,[m
[32m+[m[32m  AUTHENTICATING: 2,[m
[32m+[m[32m  RECONNECTING: 3,[m
[32m+[m[32m  DISCONNECTED: 4,[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mexports.ChannelTypes = {[m
[32m+[m[32m  TEXT: 0,[m
[32m+[m[32m  DM: 1,[m
[32m+[m[32m  VOICE: 2,[m
[32m+[m[32m  GROUP_DM: 3,[m
[32m+[m[32m  CATEGORY: 4,[m
[32m+[m[32m  NEWS: 5,[m
[32m+[m[32m  STORE: 6,[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mexports.OPCodes = {[m
[32m+[m[32m  DISPATCH: 0,[m
[32m+[m[32m  HEARTBEAT: 1,[m
[32m+[m[32m  IDENTIFY: 2,[m
[32m+[m[32m  STATUS_UPDATE: 3,[m
[32m+[m[32m  VOICE_STATE_UPDATE: 4,[m
[32m+[m[32m  VOICE_GUILD_PING: 5,[m
[32m+[m[32m  RESUME: 6,[m
[32m+[m[32m  RECONNECT: 7,[m
[32m+[m[32m  REQUEST_GUILD_MEMBERS: 8,[m
[32m+[m[32m  INVALID_SESSION: 9,[m
[32m+[m[32m  HELLO: 10,[m
[32m+[m[32m  HEARTBEAT_ACK: 11,[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mexports.VoiceOPCodes = {[m
[32m+[m[32m  IDENTIFY: 0,[m
[32m+[m[32m  SELECT_PROTOCOL: 1,[m
[32m+[m[32m  READY: 2,[m
[32m+[m[32m  HEARTBEAT: 3,[m
[32m+[m[32m  SESSION_DESCRIPTION: 4,[m
[32m+[m[32m  SPEAKING: 5,[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mexports.Events = {[m
[32m+[m[32m  RATE_LIMIT: 'rateLimit',[m
[32m+[m[32m  READY: 'ready',[m
[32m+[m[32m  RESUME: 'resume',[m
[32m+[m[32m  GUILD_CREATE: 'guildCreate',[m
[32m+[m[32m  GUILD_DELETE: 'guildDelete',[m
[32m+[m[32m  GUILD_UPDATE: 'guildUpdate',[m
[32m+[m[32m  GUILD_UNAVAILABLE: 'guildUnavailable',[m
[32m+[m[32m  GUILD_AVAILABLE: 'guildAvailable',[m
[32m+[m[32m  GUILD_MEMBER_ADD: 'guildMemberAdd',[m
[32m+[m[32m  GUILD_MEMBER_REMOVE: 'guildMemberRemove',[m
[32m+[m[32m  GUILD_MEMBER_UPDATE: 'guildMemberUpdate',[m
[32m+[m[32m  GUILD_MEMBER_AVAILABLE: 'guildMemberAvailable',[m
[32m+[m[32m  GUILD_MEMBER_SPEAKING: 'guildMemberSpeaking',[m
[32m+[m[32m  GUILD_MEMBERS_CHUNK: 'guildMembersChunk',[m
[32m+[m[32m  GUILD_INTEGRATIONS_UPDATE: 'guildIntegrationsUpdate',[m
[32m+[m[32m  GUILD_ROLE_CREATE: 'roleCreate',[m
[32m+[m[32m  GUILD_ROLE_DELETE: 'roleDelete',[m
[32m+[m[32m  GUILD_ROLE_UPDATE: 'roleUpdate',[m
[32m+[m[32m  GUILD_EMOJI_CREATE: 'emojiCreate',[m
[32m+[m[32m  GUILD_EMOJI_DELETE: 'emojiDelete',[m
[32m+[m[32m  GUILD_EMOJI_UPDATE: 'emojiUpdate',[m
[32m+[m[32m  GUILD_BAN_ADD: 'guildBanAdd',[m
[32m+[m[32m  GUILD_BAN_REMOVE: 'guildBanRemove',[m
[32m+[m[32m  CHANNEL_CREATE: 'channelCreate',[m
[32m+[m[32m  CHANNEL_DELETE: 'channelDelete',[m
[32m+[m[32m  CHANNEL_UPDATE: 'channelUpdate',[m
[32m+[m[32m  CHANNEL_PINS_UPDATE: 'channelPinsUpdate',[m
[32m+[m[32m  MESSAGE_CREATE: 'message',[m
[32m+[m[32m  MESSAGE_DELETE: 'messageDelete',[m
[32m+[m[32m  MESSAGE_UPDATE: 'messageUpdate',[m
[32m+[m[32m  MESSAGE_BULK_DELETE: 'messageDeleteBulk',[m
[32m+[m[32m  MESSAGE_REACTION_ADD: 'messageReactionAdd',[m
[32m+[m[32m  MESSAGE_REACTION_REMOVE: 'messageReactionRemove',[m
[32m+[m[32m  MESSAGE_REACTION_REMOVE_ALL: 'messageReactionRemoveAll',[m
[32m+[m[32m  USER_UPDATE: 'userUpdate',[m
[32m+[m[32m  USER_NOTE_UPDATE: 'userNoteUpdate',[m
[32m+[m[32m  USER_SETTINGS_UPDATE: 'clientUserSettingsUpdate',[m
[32m+[m[32m  USER_GUILD_SETTINGS_UPDATE: 'clientUserGuildSettingsUpdate',[m
[32m+[m[32m  PRESENCE_UPDATE: 'presenceUpdate',[m
[32m+[m[32m  VOICE_STATE_UPDATE: 'voiceStateUpdate',[m
[32m+[m[32m  TYPING_START: 'typingStart',[m
[32m+[m[32m  TYPING_STOP: 'typingStop',[m
[32m+[m[32m  WEBHOOKS_UPDATE: 'webhookUpdate',[m
[32m+[m[32m  DISCONNECT: 'disconnect',[m
[32m+[m[32m  RECONNECTING: 'reconnecting',[m
[32m+[m[32m  ERROR: 'error',[m
[32m+[m[32m  WARN: 'warn',[m
[32m+[m[32m  DEBUG: 'debug',[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * The type of an activity of a users presence, e.g. `PLAYING`. Here are the available types:[m
[32m+[m[32m * * PLAYING[m
[32m+[m[32m * * STREAMING[m
[32m+[m[32m * * LISTENING[m
[32m+[m[32m * * WATCHING[m
[32m+[m[32m * @typedef {string} ActivityType[m
[32m+[m[32m */[m
[32m+[m[32mexports.ActivityTypes = [[m
[32m+[m[32m  'PLAYING',[m
[32m+[m[32m  'STREAMING',[m
[32m+[m[32m  'LISTENING',[m
[32m+[m[32m  'WATCHING',[m
[32m+[m[32m];[m
[32m+[m
[32m+[m[32mexports.ActivityFlags = {[m
[32m+[m[32m  INSTANCE: 1 << 0,[m
[32m+[m[32m  JOIN: 1 << 1,[m
[32m+[m[32m  SPECTATE: 1 << 2,[m
[32m+[m[32m  JOIN_REQUEST: 1 << 3,[m
[32m+[m[32m  SYNC: 1 << 4,[m
[32m+[m[32m  PLAY: 1 << 5,[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * The type of a websocket message event, e.g. `MESSAGE_CREATE`. Here are the available events:[m
[32m+[m[32m * * READY[m
[32m+[m[32m * * RESUMED[m
[32m+[m[32m * * GUILD_SYNC[m
[32m+[m[32m * * GUILD_CREATE[m
[32m+[m[32m * * GUILD_DELETE[m
[32m+[m[32m * * GUILD_UPDATE[m
[32m+[m[32m * * GUILD_MEMBER_ADD[m
[32m+[m[32m * * GUILD_MEMBER_REMOVE[m
[32m+[m[32m * * GUILD_MEMBER_UPDATE[m
[32m+[m[32m * * GUILD_MEMBERS_CHUNK[m
[32m+[m[32m * * GUILD_INTEGRATIONS_UPDATE[m
[32m+[m[32m * * GUILD_ROLE_CREATE[m
[32m+[m[32m * * GUILD_ROLE_DELETE[m
[32m+[m[32m * * GUILD_ROLE_UPDATE[m
[32m+[m[32m * * GUILD_BAN_ADD[m
[32m+[m[32m * * GUILD_BAN_REMOVE[m
[32m+[m[32m * * CHANNEL_CREATE[m
[32m+[m[32m * * CHANNEL_DELETE[m
[32m+[m[32m * * CHANNEL_UPDATE[m
[32m+[m[32m * * CHANNEL_PINS_UPDATE[m
[32m+[m[32m * * MESSAGE_CREATE[m
[32m+[m[32m * * MESSAGE_DELETE[m
[32m+[m[32m * * MESSAGE_UPDATE[m
[32m+[m[32m * * MESSAGE_DELETE_BULK[m
[32m+[m[32m * * MESSAGE_REACTION_ADD[m
[32m+[m[32m * * MESSAGE_REACTION_REMOVE[m
[32m+[m[32m * * MESSAGE_REACTION_REMOVE_ALL[m
[32m+[m[32m * * USER_UPDATE[m
[32m+[m[32m * * USER_NOTE_UPDATE[m
[32m+[m[32m * * USER_SETTINGS_UPDATE[m
[32m+[m[32m * * PRESENCE_UPDATE[m
[32m+[m[32m * * VOICE_STATE_UPDATE[m
[32m+[m[32m * * TYPING_START[m
[32m+[m[32m * * VOICE_SERVER_UPDATE[m
[32m+[m[32m * * RELATIONSHIP_ADD[m
[32m+[m[32m * * RELATIONSHIP_REMOVE[m
[32m+[m[32m * * WEBHOOKS_UPDATE[m
[32m+[m[32m * @typedef {string} WSEventType[m
[32m+[m[32m */[m
[32m+[m[32mexports.WSEvents = {[m
[32m+[m[32m  READY: 'READY',[m
[32m+[m[32m  RESUMED: 'RESUMED',[m
[32m+[m[32m  GUILD_SYNC: 'GUILD_SYNC',[m
[32m+[m[32m  GUILD_CREATE: 'GUILD_CREATE',[m
[32m+[m[32m  GUILD_DELETE: 'GUILD_DELETE',[m
[32m+[m[32m  GUILD_UPDATE: 'GUILD_UPDATE',[m
[32m+[m[32m  GUILD_MEMBER_ADD: 'GUILD_MEMBER_ADD',[m
[32m+[m[32m  GUILD_MEMBER_REMOVE: 'GUILD_MEMBER_REMOVE',[m
[32m+[m[32m  GUILD_MEMBER_UPDATE: 'GUILD_MEMBER_UPDATE',[m
[32m+[m[32m  GUILD_MEMBERS_CHUNK: 'GUILD_MEMBERS_CHUNK',[m
[32m+[m[32m  GUILD_INTEGRATIONS_UPDATE: 'GUILD_INTEGRATIONS_UPDATE',[m
[32m+[m[32m  GUILD_ROLE_CREATE: 'GUILD_ROLE_CREATE',[m
[32m+[m[32m  GUILD_ROLE_DELETE: 'GUILD_ROLE_DELETE',[m
[32m+[m[32m  GUILD_ROLE_UPDATE: 'GUILD_ROLE_UPDATE',[m
[32m+[m[32m  GUILD_BAN_ADD: 'GUILD_BAN_ADD',[m
[32m+[m[32m  GUILD_BAN_REMOVE: 'GUILD_BAN_REMOVE',[m
[32m+[m[32m  GUILD_EMOJIS_UPDATE: 'GUILD_EMOJIS_UPDATE',[m
[32m+[m[32m  CHANNEL_CREATE: 'CHANNEL_CREATE',[m
[32m+[m[32m  CHANNEL_DELETE: 'CHANNEL_DELETE',[m
[32m+[m[32m  CHANNEL_UPDATE: 'CHANNEL_UPDATE',[m
[32m+[m[32m  CHANNEL_PINS_UPDATE: 'CHANNEL_PINS_UPDATE',[m
[32m+[m[32m  MESSAGE_CREATE: 'MESSAGE_CREATE',[m
[32m+[m[32m  MESSAGE_DELETE: 'MESSAGE_DELETE',[m
[32m+[m[32m  MESSAGE_UPDATE: 'MESSAGE_UPDATE',[m
[32m+[m[32m  MESSAGE_DELETE_BULK: 'MESSAGE_DELETE_BULK',[m
[32m+[m[32m  MESSAGE_REACTION_ADD: 'MESSAGE_REACTION_ADD',[m
[32m+[m[32m  MESSAGE_REACTION_REMOVE: 'MESSAGE_REACTION_REMOVE',[m
[32m+[m[32m  MESSAGE_REACTION_REMOVE_ALL: 'MESSAGE_REACTION_REMOVE_ALL',[m
[32m+[m[32m  USER_UPDATE: 'USER_UPDATE',[m
[32m+[m[32m  USER_NOTE_UPDATE: 'USER_NOTE_UPDATE',[m
[32m+[m[32m  USER_SETTINGS_UPDATE: 'USER_SETTINGS_UPDATE',[m
[32m+[m[32m  USER_GUILD_SETTINGS_UPDATE: 'USER_GUILD_SETTINGS_UPDATE',[m
[32m+[m[32m  PRESENCE_UPDATE: 'PRESENCE_UPDATE',[m
[32m+[m[32m  VOICE_STATE_UPDATE: 'VOICE_STATE_UPDATE',[m
[32m+[m[32m  TYPING_START: 'TYPING_START',[m
[32m+[m[32m  VOICE_SERVER_UPDATE: 'VOICE_SERVER_UPDATE',[m
[32m+[m[32m  RELATIONSHIP_ADD: 'RELATIONSHIP_ADD',[m
[32m+[m[32m  RELATIONSHIP_REMOVE: 'RELATIONSHIP_REMOVE',[m
[32m+[m[32m  WEBHOOKS_UPDATE: 'WEBHOOKS_UPDATE',[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * The type of a message, e.g. `DEFAULT`. Here are the available types:[m
[32m+[m[32m * * DEFAULT[m
[32m+[m[32m * * RECIPIENT_ADD[m
[32m+[m[32m * * RECIPIENT_REMOVE[m
[32m+[m[32m * * CALL[m
[32m+[m[32m * * CHANNEL_NAME_CHANGE[m
[32m+[m[32m * * CHANNEL_ICON_CHANGE[m
[32m+[m[32m * * PINS_ADD[m
[32m+[m[32m * * GUILD_MEMBER_JOIN[m
[32m+[m[32m * @typedef {string} MessageType[m
[32m+[m[32m */[m
[32m+[m[32mexports.MessageTypes = [[m
[32m+[m[32m  'DEFAULT',[m
[32m+[m[32m  'RECIPIENT_ADD',[m
[32m+[m[32m  'RECIPIENT_REMOVE',[m
[32m+[m[32m  'CALL',[m
[32m+[m[32m  'CHANNEL_NAME_CHANGE',[m
[32m+[m[32m  'CHANNEL_ICON_CHANGE',[m
[32m+[m[32m  'PINS_ADD',[m
[32m+[m[32m  'GUILD_MEMBER_JOIN',[m
[32m+[m[32m];[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * The type of a message notification setting. Here are the available types:[m
[32m+[m[32m * * EVERYTHING[m
[32m+[m[32m * * MENTIONS[m
[32m+[m[32m * * NOTHING[m
[32m+[m[32m * * INHERIT (only for GuildChannel)[m
[32m+[m[32m * @typedef {string} MessageNotificationType[m
[32m+[m[32m */[m
[32m+[m[32mexports.MessageNotificationTypes = [[m
[32m+[m[32m  'EVERYTHING',[m
[32m+[m[32m  'MENTIONS',[m
[32m+[m[32m  'NOTHING',[m
[32m+[m[32m  'INHERIT',[m
[32m+[m[32m];[m
[32m+[m
[32m+[m[32mexports.DefaultAvatars = {[m
[32m+[m[32m  BLURPLE: '6debd47ed13483642cf09e832ed0bc1b',[m
[32m+[m[32m  GREY: '322c936a8c8be1b803cd94861bdfa868',[m
[32m+[m[32m  GREEN: 'dd4dbc0016779df1378e7812eabaa04d',[m
[32m+[m[32m  ORANGE: '0e291f67c9274a1abdddeb3fd919cbaa',[m
[32m+[m[32m  RED: '1cbd08c76f8af6dddce02c5138971129',[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mexports.ExplicitContentFilterTypes = [[m
[32m+[m[32m  'DISABLED',[m
[32m+[m[32m  'NON_FRIENDS',[m
[32m+[m[32m  'FRIENDS_AND_NON_FRIENDS',[m
[32m+[m[32m];[m
[32m+[m
[32m+[m[32mexports.UserSettingsMap = {[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Automatically convert emoticons in your messages to emoji[m
[32m+[m[32m   * For example, when you type `:-)` Discord will convert it to 😃[m
[32m+[m[32m   * @name ClientUserSettings#convertEmoticons[m
[32m+[m[32m   * @type {boolean}[m
[32m+[m[32m   */[m
[32m+[m[32m  convert_emoticons: 'convertEmoticons',[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * If new guilds should automatically disable DMs between you and its members[m
[32m+[m[32m   * @name ClientUserSettings#defaultGuildsRestricted[m
[32m+[m[32m   * @type {boolean}[m
[32m+[m[32m   */[m
[32m+[m[32m  default_guilds_restricted: 'defaultGuildsRestricted',[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Automatically detect accounts from services like Steam and Blizzard when you open the Discord client[m
[32m+[m[32m   * @name ClientUserSettings#detectPlatformAccounts[m
[32m+[m[32m   * @type {boolean}[m
[32m+[m[32m   */[m
[32m+[m[32m  detect_platform_accounts: 'detectPlatformAccounts',[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Developer Mode exposes context menu items helpful for people writing bots using the Discord API[m
[32m+[m[32m   * @name ClientUserSettings#developerMode[m
[32m+[m[32m   * @type {boolean}[m
[32m+[m[32m   */[m
[32m+[m[32m  developer_mode: 'developerMode',[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Allow playback and usage of the `/tts` command[m
[32m+[m[32m   * @name ClientUserSettings#enableTTSCommand[m
[32m+[m[32m   * @type {boolean}[m
[32m+[m[32m   */[m
[32m+[m[32m  enable_tts_command: 'enableTTSCommand',[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The theme of the client. Either `light` or `dark`[m
[32m+[m[32m   * @name ClientUserSettings#theme[m
[32m+[m[32m   * @type {string}[m
[32m+[m[32m   */[m
[32m+[m[32m  theme: 'theme',[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Last status set in the client[m
[32m+[m[32m   * @name ClientUserSettings#status[m
[32m+[m[32m   * @type {PresenceStatus}[m
[32m+[m[32m   */[m
[32m+[m[32m  status: 'status',[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Display currently running game as status message[m
[32m+[m[32m   * @name ClientUserSettings#showCurrentGame[m
[32m+[m[32m   * @type {boolean}[m
[32m+[m[32m   */[m
[32m+[m[32m  show_current_game: 'showCurrentGame',[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Display images, videos, and lolcats when uploaded directly to Discord[m
[32m+[m[32m   * @name ClientUserSettings#inlineAttachmentMedia[m
[32m+[m[32m   * @type {boolean}[m
[32m+[m[32m   */[m
[32m+[m[32m  inline_attachment_media: 'inlineAttachmentMedia',[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Display images, videos, and lolcats when uploaded posted as links in chat[m
[32m+[m[32m   * @name ClientUserSettings#inlineEmbedMedia[m
[32m+[m[32m   * @type {boolean}[m
[32m+[m[32m   */[m
[32m+[m[32m  inline_embed_media: 'inlineEmbedMedia',[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Language the Discord client will use, as an RFC 3066 language identifier[m
[32m+[m[32m   * @name ClientUserSettings#locale[m
[32m+[m[32m   * @type {string}[m
[32m+[m[32m   */[m
[32m+[m[32m  locale: 'locale',[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Display messages in compact mode[m
[32m+[m[32m   * @name ClientUserSettings#messageDisplayCompact[m
[32m+[m[32m   * @type {boolean}[m
[32m+[m[32m   */[m
[32m+[m[32m  message_display_compact: 'messageDisplayCompact',[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Show emoji reactions on messages[m
[32m+[m[32m   * @name ClientUserSettings#renderReactions[m
[32m+[m[32m   * @type {boolean}[m
[32m+[m[32m   */[m
[32m+[m[32m  render_reactions: 'renderReactions',[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Array of snowflake IDs for guilds, in the order they appear in the Discord client[m
[32m+[m[32m   * @name ClientUserSettings#guildPositions[m
[32m+[m[32m   * @type {Snowflake[]}[m
[32m+[m[32m   */[m
[32m+[m[32m  guild_positions: 'guildPositions',[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Array of snowflake IDs for guilds which you will not recieve DMs from[m
[32m+[m[32m   * @name ClientUserSettings#restrictedGuilds[m
[32m+[m[32m   * @type {Snowflake[]}[m
[32m+[m[32m   */[m
[32m+[m[32m  restricted_guilds: 'restrictedGuilds',[m
[32m+[m
[32m+[m[32m  explicit_content_filter: function explicitContentFilter(type) { // eslint-disable-line func-name-matching[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Safe direct messaging; force people's messages with images to be scanned before they are sent to you.[m
[32m+[m[32m     * One of `DISABLED`, `NON_FRIENDS`, `FRIENDS_AND_NON_FRIENDS`[m
[32m+[m[32m     * @name ClientUserSettings#explicitContentFilter[m
[32m+[m[32m     * @type {string}[m
[32m+[m[32m     */[m
[32m+[m[32m    return exports.ExplicitContentFilterTypes[type];[m
[32m+[m[32m  },[m
[32m+[m[32m  friend_source_flags: function friendSources(flags) { // eslint-disable-line func-name-matching[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Who can add you as a friend[m
[32m+[m[32m     * @name ClientUserSettings#friendSources[m
[32m+[m[32m     * @type {Object}[m
[32m+[m[32m     * @property {boolean} all Mutual friends and mutual guilds[m
[32m+[m[32m     * @property {boolean} mutualGuilds Only mutual guilds[m
[32m+[m[32m     * @property {boolean} mutualFriends Only mutual friends[m
[32m+[m[32m     */[m
[32m+[m[32m    return {[m
[32m+[m[32m      all: flags.all || false,[m
[32m+[m[32m      mutualGuilds: flags.all ? true : flags.mutual_guilds || false,[m
[32m+[m[32m      mutualFriends: flags.all ? true : flags.mutualFriends || false,[m
[32m+[m[32m    };[m
[32m+[m[32m  },[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mexports.UserGuildSettingsMap = {[m
[32m+[m[32m  message_notifications: function messageNotifications(type) { // eslint-disable-line func-name-matching[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The type of message that should notify you[m
[32m+[m[32m     * @name ClientUserGuildSettings#messageNotifications[m
[32m+[m[32m     * @type {MessageNotificationType}[m
[32m+[m[32m     */[m
[32m+[m[32m    return exports.MessageNotificationTypes[type];[m
[32m+[m[32m  },[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Whether to receive mobile push notifications[m
[32m+[m[32m   * @name ClientUserGuildSettings#mobilePush[m
[32m+[m[32m   * @type {boolean}[m
[32m+[m[32m   */[m
[32m+[m[32m  mobile_push: 'mobilePush',[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Whether the guild is muted[m
[32m+[m[32m   * @name ClientUserGuildSettings#muted[m
[32m+[m[32m   * @type {boolean}[m
[32m+[m[32m   */[m
[32m+[m[32m  muted: 'muted',[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Whether to suppress everyone mention[m
[32m+[m[32m   * @name ClientUserGuildSettings#suppressEveryone[m
[32m+[m[32m   * @type {boolean}[m
[32m+[m[32m   */[m
[32m+[m[32m  suppress_everyone: 'suppressEveryone',[m
[32m+[m[32m  /**[m
[32m+[m[32m   * A collection containing all the channel overrides[m
[32m+[m[32m   * @name ClientUserGuildSettings#channelOverrides[m
[32m+[m[32m   * @type {Collection<ClientUserChannelOverride>}[m
[32m+[m[32m   */[m
[32m+[m[32m  channel_overrides: 'channelOverrides',[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mexports.UserChannelOverrideMap = {[m
[32m+[m[32m  message_notifications: function messageNotifications(type) { // eslint-disable-line func-name-matching[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The type of message that should notify you[m
[32m+[m[32m     * @name ClientUserChannelOverride#messageNotifications[m
[32m+[m[32m     * @type {MessageNotificationType}[m
[32m+[m[32m     */[m
[32m+[m[32m    return exports.MessageNotificationTypes[type];[m
[32m+[m[32m  },[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Whether the channel is muted[m
[32m+[m[32m   * @name ClientUserChannelOverride#muted[m
[32m+[m[32m   * @type {boolean}[m
[32m+[m[32m   */[m
[32m+[m[32m  muted: 'muted',[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mexports.Colors = {[m
[32m+[m[32m  DEFAULT: 0x000000,[m
[32m+[m[32m  WHITE: 0xFFFFFF,[m
[32m+[m[32m  AQUA: 0x1ABC9C,[m
[32m+[m[32m  GREEN: 0x2ECC71,[m
[32m+[m[32m  BLUE: 0x3498DB,[m
[32m+[m[32m  PURPLE: 0x9B59B6,[m
[32m+[m[32m  LUMINOUS_VIVID_PINK: 0xE91E63,[m
[32m+[m[32m  GOLD: 0xF1C40F,[m
[32m+[m[32m  ORANGE: 0xE67E22,[m
[32m+[m[32m  RED: 0xE74C3C,[m
[32m+[m[32m  GREY: 0x95A5A6,[m
[32m+[m[32m  NAVY: 0x34495E,[m
[32m+[m[32m  DARK_AQUA: 0x11806A,[m
[32m+[m[32m  DARK_GREEN: 0x1F8B4C,[m
[32m+[m[32m  DARK_BLUE: 0x206694,[m
[32m+[m[32m  DARK_PURPLE: 0x71368A,[m
[32m+[m[32m  DARK_VIVID_PINK: 0xAD1457,[m
[32m+[m[32m  DARK_GOLD: 0xC27C0E,[m
[32m+[m[32m  DARK_ORANGE: 0xA84300,[m
[32m+[m[32m  DARK_RED: 0x992D22,[m
[32m+[m[32m  DARK_GREY: 0x979C9F,[m
[32m+[m[32m  DARKER_GREY: 0x7F8C8D,[m
[32m+[m[32m  LIGHT_GREY: 0xBCC0C0,[m
[32m+[m[32m  DARK_NAVY: 0x2C3E50,[m
[32m+[m[32m  BLURPLE: 0x7289DA,[m
[32m+[m[32m  GREYPLE: 0x99AAB5,[m
[32m+[m[32m  DARK_BUT_NOT_BLACK: 0x2C2F33,[m
[32m+[m[32m  NOT_QUITE_BLACK: 0x23272A,[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * An error encountered while performing an API request. Here are the potential errors:[m
[32m+[m[32m * * UNKNOWN_ACCOUNT[m
[32m+[m[32m * * UNKNOWN_APPLICATION[m
[32m+[m[32m * * UNKNOWN_CHANNEL[m
[32m+[m[32m * * UNKNOWN_GUILD[m
[32m+[m[32m * * UNKNOWN_INTEGRATION[m
[32m+[m[32m * * UNKNOWN_INVITE[m
[32m+[m[32m * * UNKNOWN_MEMBER[m
[32m+[m[32m * * UNKNOWN_MESSAGE[m
[32m+[m[32m * * UNKNOWN_OVERWRITE[m
[32m+[m[32m * * UNKNOWN_PROVIDER[m
[32m+[m[32m * * UNKNOWN_ROLE[m
[32m+[m[32m * * UNKNOWN_TOKEN[m
[32m+[m[32m * * UNKNOWN_USER[m
[32m+[m[32m * * UNKNOWN_EMOJI[m
[32m+[m[32m * * UNKNOWN_WEBHOOK[m
[32m+[m[32m * * BOT_PROHIBITED_ENDPOINT[m
[32m+[m[32m * * BOT_ONLY_ENDPOINT[m
[32m+[m[32m * * MAXIMUM_GUILDS[m
[32m+[m[32m * * MAXIMUM_FRIENDS[m
[32m+[m[32m * * MAXIMUM_PINS[m
[32m+[m[32m * * MAXIMUM_ROLES[m
[32m+[m[32m * * MAXIMUM_REACTIONS[m
[32m+[m[32m * * UNAUTHORIZED[m
[32m+[m[32m * * MISSING_ACCESS[m
[32m+[m[32m * * INVALID_ACCOUNT_TYPE[m
[32m+[m[32m * * CANNOT_EXECUTE_ON_DM[m
[32m+[m[32m * * EMBED_DISABLED[m
[32m+[m[32m * * CANNOT_EDIT_MESSAGE_BY_OTHER[m
[32m+[m[32m * * CANNOT_SEND_EMPTY_MESSAGE[m
[32m+[m[32m * * CANNOT_MESSAGE_USER[m
[32m+[m[32m * * CANNOT_SEND_MESSAGES_IN_VOICE_CHANNEL[m
[32m+[m[32m * * CHANNEL_VERIFICATION_LEVEL_TOO_HIGH[m
[32m+[m[32m * * OAUTH2_APPLICATION_BOT_ABSENT[m
[32m+[m[32m * * MAXIMUM_OAUTH2_APPLICATIONS[m
[32m+[m[32m * * INVALID_OAUTH_STATE[m
[32m+[m[32m * * MISSING_PERMISSIONS[m
[32m+[m[32m * * INVALID_AUTHENTICATION_TOKEN[m
[32m+[m[32m * * NOTE_TOO_LONG[m
[32m+[m[32m * * INVALID_BULK_DELETE_QUANTITY[m
[32m+[m[32m * * CANNOT_PIN_MESSAGE_IN_OTHER_CHANNEL[m
[32m+[m[32m * * INVALID_OR_TAKEN_INVITE_CODE[m
[32m+[m[32m * * CANNOT_EXECUTE_ON_SYSTEM_MESSAGE[m
[32m+[m[32m * * BULK_DELETE_MESSAGE_TOO_OLD[m
[32m+[m[32m * * INVITE_ACCEPTED_TO_GUILD_NOT_CONTANING_BOT[m
[32m+[m[32m * * REACTION_BLOCKED[m
[32m+[m[32m * @typedef {string} APIError[m
[32m+[m[32m */[m
[32m+[m[32mexports.APIErrors = {[m
[32m+[m[32m  UNKNOWN_ACCOUNT: 10001,[m
[32m+[m[32m  UNKNOWN_APPLICATION: 10002,[m
[32m+[m[32m  UNKNOWN_CHANNEL: 10003,[m
[32m+[m[32m  UNKNOWN_GUILD: 10004,[m
[32m+[m[32m  UNKNOWN_INTEGRATION: 10005,[m
[32m+[m[32m  UNKNOWN_INVITE: 10006,[m
[32m+[m[32m  UNKNOWN_MEMBER: 10007,[m
[32m+[m[32m  UNKNOWN_MESSAGE: 10008,[m
[32m+[m[32m  UNKNOWN_OVERWRITE: 10009,[m
[32m+[m[32m  UNKNOWN_PROVIDER: 10010,[m
[32m+[m[32m  UNKNOWN_ROLE: 10011,[m
[32m+[m[32m  UNKNOWN_TOKEN: 10012,[m
[32m+[m[32m  UNKNOWN_USER: 10013,[m
[32m+[m[32m  UNKNOWN_EMOJI: 10014,[m
[32m+[m[32m  UNKNOWN_WEBHOOK: 10015,[m
[32m+[m[32m  BOT_PROHIBITED_ENDPOINT: 20001,[m
[32m+[m[32m  BOT_ONLY_ENDPOINT: 20002,[m
[32m+[m[32m  MAXIMUM_GUILDS: 30001,[m
[32m+[m[32m  MAXIMUM_FRIENDS: 30002,[m
[32m+[m[32m  MAXIMUM_PINS: 30003,[m
[32m+[m[32m  MAXIMUM_ROLES: 30005,[m
[32m+[m[32m  MAXIMUM_REACTIONS: 30010,[m
[32m+[m[32m  UNAUTHORIZED: 40001,[m
[32m+[m[32m  MISSING_ACCESS: 50001,[m
[32m+[m[32m  INVALID_ACCOUNT_TYPE: 50002,[m
[32m+[m[32m  CANNOT_EXECUTE_ON_DM: 50003,[m
[32m+[m[32m  EMBED_DISABLED: 50004,[m
[32m+[m[32m  CANNOT_EDIT_MESSAGE_BY_OTHER: 50005,[m
[32m+[m[32m  CANNOT_SEND_EMPTY_MESSAGE: 50006,[m
[32m+[m[32m  CANNOT_MESSAGE_USER: 50007,[m
[32m+[m[32m  CANNOT_SEND_MESSAGES_IN_VOICE_CHANNEL: 50008,[m
[32m+[m[32m  CHANNEL_VERIFICATION_LEVEL_TOO_HIGH: 50009,[m
[32m+[m[32m  OAUTH2_APPLICATION_BOT_ABSENT: 50010,[m
[32m+[m[32m  MAXIMUM_OAUTH2_APPLICATIONS: 50011,[m
[32m+[m[32m  INVALID_OAUTH_STATE: 50012,[m
[32m+[m[32m  MISSING_PERMISSIONS: 50013,[m
[32m+[m[32m  INVALID_AUTHENTICATION_TOKEN: 50014,[m
[32m+[m[32m  NOTE_TOO_LONG: 50015,[m
[32m+[m[32m  INVALID_BULK_DELETE_QUANTITY: 50016,[m
[32m+[m[32m  CANNOT_PIN_MESSAGE_IN_OTHER_CHANNEL: 50019,[m
[32m+[m[32m  INVALID_OR_TAKEN_INVITE_CODE: 50020,[m
[32m+[m[32m  CANNOT_EXECUTE_ON_SYSTEM_MESSAGE: 50021,[m
[32m+[m[32m  BULK_DELETE_MESSAGE_TOO_OLD: 50034,[m
[32m+[m[32m  INVITE_ACCEPTED_TO_GUILD_NOT_CONTANING_BOT: 50036,[m
[32m+[m[32m  REACTION_BLOCKED: 90001,[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * The value set for a guild's default message notifications, e.g. `ALL`. Here are the available types:[m
[32m+[m[32m * * ALL[m
[32m+[m[32m * * MENTIONS[m
[32m+[m[32m * @typedef {string} DefaultMessageNotifications[m
[32m+[m[32m */[m
[32m+[m[32mexports.DefaultMessageNotifications = [[m
[32m+[m[32m  'ALL',[m
[32m+[m[32m  'MENTIONS',[m
[32m+[m[32m];[m
[1mdiff --git a/node_modules/discord.js/src/util/Permissions.js b/node_modules/discord.js/src/util/Permissions.js[m
[1mnew file mode 100644[m
[1mindex 0000000..b99de68[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/util/Permissions.js[m
[36m@@ -0,0 +1,306 @@[m
[32m+[m[32mconst Constants = require('../util/Constants');[m
[32m+[m[32mconst util = require('util');[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Data structure that makes it easy to interact with a permission bitfield. All {@link GuildMember}s have a set of[m
[32m+[m[32m * permissions in their guild, and each channel in the guild may also have {@link PermissionOverwrites} for the member[m
[32m+[m[32m * that override their default permissions.[m
[32m+[m[32m */[m
[32m+[m[32mclass Permissions {[m
[32m+[m[32m  /**[m
[32m+[m[32m   * @param {GuildMember} [member] Member the permissions are for **(deprecated)**[m
[32m+[m[32m   * @param {number|PermissionResolvable} permissions Permissions or bitfield to read from[m
[32m+[m[32m   */[m
[32m+[m[32m  constructor(member, permissions) {[m
[32m+[m[32m    permissions = typeof member === 'object' && !(member instanceof Array) ? permissions : member;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Member the permissions are for[m
[32m+[m[32m     * @type {GuildMember}[m
[32m+[m[32m     * @deprecated[m
[32m+[m[32m     */[m
[32m+[m[32m    this._member = typeof member === 'object' ? member : null;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Bitfield of the packed permissions[m
[32m+[m[32m     * @type {number}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.bitfield = typeof permissions === 'number' ? permissions : this.constructor.resolve(permissions);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  get member() {[m
[32m+[m[32m    return this._member;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  set member(value) {[m
[32m+[m[32m    this._member = value;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Bitfield of the packed permissions[m
[32m+[m[32m   * @type {number}[m
[32m+[m[32m   * @see {@link Permissions#bitfield}[m
[32m+[m[32m   * @deprecated[m
[32m+[m[32m   * @readonly[m
[32m+[m[32m   */[m
[32m+[m[32m  get raw() {[m
[32m+[m[32m    return this.bitfield;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  set raw(raw) {[m
[32m+[m[32m    this.bitfield = raw;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Checks whether the bitfield has a permission, or multiple permissions.[m
[32m+[m[32m   * @param {PermissionResolvable} permission Permission(s) to check for[m
[32m+[m[32m   * @param {boolean} [checkAdmin=true] Whether to allow the administrator permission to override[m
[32m+[m[32m   * @returns {boolean}[m
[32m+[m[32m   */[m
[32m+[m[32m  has(permission, checkAdmin = true) {[m
[32m+[m[32m    if (permission instanceof Array) return permission.every(p => this.has(p, checkAdmin));[m
[32m+[m[32m    permission = this.constructor.resolve(permission);[m
[32m+[m[32m    if (checkAdmin && (this.bitfield & this.constructor.FLAGS.ADMINISTRATOR) > 0) return true;[m
[32m+[m[32m    return (this.bitfield & permission) === permission;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Gets all given permissions that are missing from the bitfield.[m
[32m+[m[32m   * @param {PermissionResolvable} permissions Permissions to check for[m
[32m+[m[32m   * @param {boolean} [checkAdmin=true] Whether to allow the administrator permission to override[m
[32m+[m[32m   * @returns {PermissionResolvable}[m
[32m+[m[32m   */[m
[32m+[m[32m  missing(permissions, checkAdmin = true) {[m
[32m+[m[32m    if (!(permissions instanceof Array)) permissions = [permissions];[m
[32m+[m[32m    return permissions.filter(p => !this.has(p, checkAdmin));[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Adds permissions to this one, creating a new instance to represent the new bitfield.[m
[32m+[m[32m   * @param {...PermissionResolvable} permissions Permissions to add[m
[32m+[m[32m   * @returns {Permissions}[m
[32m+[m[32m   */[m
[32m+[m[32m  add(...permissions) {[m
[32m+[m[32m    let total = 0;[m
[32m+[m[32m    for (let p = permissions.length - 1; p >= 0; p--) {[m
[32m+[m[32m      const perm = this.constructor.resolve(permissions[p]);[m
[32m+[m[32m      total |= perm;[m
[32m+[m[32m    }[m
[32m+[m[32m    if (Object.isFrozen(this)) return new this.constructor(this.bitfield | total);[m
[32m+[m[32m    this.bitfield |= total;[m
[32m+[m[32m    return this;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Removes permissions to this one, creating a new instance to represent the new bitfield.[m
[32m+[m[32m   * @param {...PermissionResolvable} permissions Permissions to remove[m
[32m+[m[32m   * @returns {Permissions}[m
[32m+[m[32m   */[m
[32m+[m[32m  remove(...permissions) {[m
[32m+[m[32m    let total = 0;[m
[32m+[m[32m    for (let p = permissions.length - 1; p >= 0; p--) {[m
[32m+[m[32m      const perm = this.constructor.resolve(permissions[p]);[m
[32m+[m[32m      total |= perm;[m
[32m+[m[32m    }[m
[32m+[m[32m    if (Object.isFrozen(this)) return new this.constructor(this.bitfield & ~total);[m
[32m+[m[32m    this.bitfield &= ~total;[m
[32m+[m[32m    return this;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Gets an object mapping permission name (like `VIEW_CHANNEL`) to a {@link boolean} indicating whether the[m
[32m+[m[32m   * permission is available.[m
[32m+[m[32m   * @param {boolean} [checkAdmin=true] Whether to allow the administrator permission to override[m
[32m+[m[32m   * @returns {Object}[m
[32m+[m[32m   */[m
[32m+[m[32m  serialize(checkAdmin = true) {[m
[32m+[m[32m    const serialized = {};[m
[32m+[m[32m    for (const perm in this.constructor.FLAGS) serialized[perm] = this.has(perm, checkAdmin);[m
[32m+[m[32m    return serialized;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Checks whether the user has a certain permission, e.g. `READ_MESSAGES`.[m
[32m+[m[32m   * @param {PermissionResolvable} permission The permission to check for[m
[32m+[m[32m   * @param {boolean} [explicit=false] Whether to require the user to explicitly have the exact permission[m
[32m+[m[32m   * @returns {boolean}[m
[32m+[m[32m   * @see {@link Permissions#has}[m
[32m+[m[32m   * @deprecated[m
[32m+[m[32m   */[m
[32m+[m[32m  hasPermission(permission, explicit = false) {[m
[32m+[m[32m    return this.has(permission, !explicit);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Checks whether the user has all specified permissions.[m
[32m+[m[32m   * @param {PermissionResolvable} permissions The permissions to check for[m
[32m+[m[32m   * @param {boolean} [explicit=false] Whether to require the user to explicitly have the exact permissions[m
[32m+[m[32m   * @returns {boolean}[m
[32m+[m[32m   * @see {@link Permissions#has}[m
[32m+[m[32m   * @deprecated[m
[32m+[m[32m   */[m
[32m+[m[32m  hasPermissions(permissions, explicit = false) {[m
[32m+[m[32m    return this.has(permissions, !explicit);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Checks whether the user has all specified permissions, and lists any missing permissions.[m
[32m+[m[32m   * @param {PermissionResolvable} permissions The permissions to check for[m
[32m+[m[32m   * @param {boolean} [explicit=false] Whether to require the user to explicitly have the exact permissions[m
[32m+[m[32m   * @returns {PermissionResolvable}[m
[32m+[m[32m   * @see {@link Permissions#missing}[m
[32m+[m[32m   * @deprecated[m
[32m+[m[32m   */[m
[32m+[m[32m  missingPermissions(permissions, explicit = false) {[m
[32m+[m[32m    return this.missing(permissions, !explicit);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Gets an {@link Array} of permission names (such as `VIEW_CHANNEL`) based on the permissions available.[m
[32m+[m[32m   * @param {boolean} [checkAdmin=true] Whether to allow the administrator permission to override[m
[32m+[m[32m   * @returns {string[]}[m
[32m+[m[32m   */[m
[32m+[m[32m  toArray(checkAdmin = true) {[m
[32m+[m[32m    return Object.keys(this.constructor.FLAGS).filter(perm => this.has(perm, checkAdmin));[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Freezes these permissions, making them immutable.[m
[32m+[m[32m   * @returns {Permissions} These permissions[m
[32m+[m[32m   */[m
[32m+[m[32m  freeze() {[m
[32m+[m[32m    return Object.freeze(this);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  valueOf() {[m
[32m+[m[32m    return this.bitfield;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Data that can be resolved to give a permission number. This can be:[m
[32m+[m[32m   * * A string (see {@link Permissions.FLAGS})[m
[32m+[m[32m   * * A permission number[m
[32m+[m[32m   * @typedef {string|number|Permissions|PermissionResolvable[]} PermissionResolvable[m
[32m+[m[32m   */[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Resolves permissions to their numeric form.[m
[32m+[m[32m   * @param {PermissionResolvable} permission - Permission(s) to resolve[m
[32m+[m[32m   * @returns {number}[m
[32m+[m[32m   */[m
[32m+[m[32m  static resolve(permission) {[m
[32m+[m[32m    if (permission instanceof Array) return permission.map(p => this.resolve(p)).reduce((prev, p) => prev | p, 0);[m
[32m+[m[32m    if (permission instanceof Permissions) return permission.bitfield;[m
[32m+[m[32m    if (typeof permission === 'string') permission = this.FLAGS[permission];[m
[32m+[m[32m    if (typeof permission !== 'number' || permission < 0) throw new RangeError(Constants.Errors.NOT_A_PERMISSION);[m
[32m+[m[32m    return permission;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Numeric permission flags. All available properties:[m
[32m+[m[32m * - `ADMINISTRATOR` (implicitly has *all* permissions, and bypasses all channel overwrites)[m
[32m+[m[32m * - `CREATE_INSTANT_INVITE` (create invitations to the guild)[m
[32m+[m[32m * - `KICK_MEMBERS`[m
[32m+[m[32m * - `BAN_MEMBERS`[m
[32m+[m[32m * - `MANAGE_CHANNELS` (edit and reorder channels)[m
[32m+[m[32m * - `MANAGE_GUILD` (edit the guild information, region, etc.)[m
[32m+[m[32m * - `ADD_REACTIONS` (add new reactions to messages)[m
[32m+[m[32m * - `VIEW_AUDIT_LOG`[m
[32m+[m[32m * - `PRIORITY_SPEAKER`[m
[32m+[m[32m * - `VIEW_CHANNEL`[m
[32m+[m[32m * - `READ_MESSAGES` **(deprecated)**[m
[32m+[m[32m * - `SEND_MESSAGES`[m
[32m+[m[32m * - `SEND_TTS_MESSAGES`[m
[32m+[m[32m * - `MANAGE_MESSAGES` (delete messages and reactions)[m
[32m+[m[32m * - `EMBED_LINKS` (links posted will have a preview embedded)[m
[32m+[m[32m * - `ATTACH_FILES`[m
[32m+[m[32m * - `READ_MESSAGE_HISTORY` (view messages that were posted prior to opening Discord)[m
[32m+[m[32m * - `MENTION_EVERYONE`[m
[32m+[m[32m * - `USE_EXTERNAL_EMOJIS` (use emojis from different guilds)[m
[32m+[m[32m * - `EXTERNAL_EMOJIS` **(deprecated)**[m
[32m+[m[32m * - `CONNECT` (connect to a voice channel)[m
[32m+[m[32m * - `SPEAK` (speak in a voice channel)[m
[32m+[m[32m * - `MUTE_MEMBERS` (mute members across all voice channels)[m
[32m+[m[32m * - `DEAFEN_MEMBERS` (deafen members across all voice channels)[m
[32m+[m[32m * - `MOVE_MEMBERS` (move members between voice channels)[m
[32m+[m[32m * - `USE_VAD` (use voice activity detection)[m
[32m+[m[32m * - `CHANGE_NICKNAME`[m
[32m+[m[32m * - `MANAGE_NICKNAMES` (change other members' nicknames)[m
[32m+[m[32m * - `MANAGE_ROLES`[m
[32m+[m[32m * - `MANAGE_ROLES_OR_PERMISSIONS` **(deprecated)**[m
[32m+[m[32m * - `MANAGE_WEBHOOKS`[m
[32m+[m[32m * - `MANAGE_EMOJIS`[m
[32m+[m[32m * @type {Object}[m
[32m+[m[32m * @see {@link https://discordapp.com/developers/docs/topics/permissions}[m
[32m+[m[32m */[m
[32m+[m[32mPermissions.FLAGS = {[m
[32m+[m[32m  CREATE_INSTANT_INVITE: 1 << 0,[m
[32m+[m[32m  KICK_MEMBERS: 1 << 1,[m
[32m+[m[32m  BAN_MEMBERS: 1 << 2,[m
[32m+[m[32m  ADMINISTRATOR: 1 << 3,[m
[32m+[m[32m  MANAGE_CHANNELS: 1 << 4,[m
[32m+[m[32m  MANAGE_GUILD: 1 << 5,[m
[32m+[m[32m  ADD_REACTIONS: 1 << 6,[m
[32m+[m[32m  VIEW_AUDIT_LOG: 1 << 7,[m
[32m+[m[32m  PRIORITY_SPEAKER: 1 << 8,[m
[32m+[m
[32m+[m[32m  VIEW_CHANNEL: 1 << 10,[m
[32m+[m[32m  READ_MESSAGES: 1 << 10,[m
[32m+[m[32m  SEND_MESSAGES: 1 << 11,[m
[32m+[m[32m  SEND_TTS_MESSAGES: 1 << 12,[m
[32m+[m[32m  MANAGE_MESSAGES: 1 << 13,[m
[32m+[m[32m  EMBED_LINKS: 1 << 14,[m
[32m+[m[32m  ATTACH_FILES: 1 << 15,[m
[32m+[m[32m  READ_MESSAGE_HISTORY: 1 << 16,[m
[32m+[m[32m  MENTION_EVERYONE: 1 << 17,[m
[32m+[m[32m  EXTERNAL_EMOJIS: 1 << 18,[m
[32m+[m[32m  USE_EXTERNAL_EMOJIS: 1 << 18,[m
[32m+[m
[32m+[m[32m  CONNECT: 1 << 20,[m
[32m+[m[32m  SPEAK: 1 << 21,[m
[32m+[m[32m  MUTE_MEMBERS: 1 << 22,[m
[32m+[m[32m  DEAFEN_MEMBERS: 1 << 23,[m
[32m+[m[32m  MOVE_MEMBERS: 1 << 24,[m
[32m+[m[32m  USE_VAD: 1 << 25,[m
[32m+[m
[32m+[m[32m  CHANGE_NICKNAME: 1 << 26,[m
[32m+[m[32m  MANAGE_NICKNAMES: 1 << 27,[m
[32m+[m[32m  MANAGE_ROLES: 1 << 28,[m
[32m+[m[32m  MANAGE_ROLES_OR_PERMISSIONS: 1 << 28,[m
[32m+[m[32m  MANAGE_WEBHOOKS: 1 << 29,[m
[32m+[m[32m  MANAGE_EMOJIS: 1 << 30,[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Bitfield representing every permission combined[m
[32m+[m[32m * @type {number}[m
[32m+[m[32m */[m
[32m+[m[32mPermissions.ALL = Object.keys(Permissions.FLAGS).reduce((all, p) => all | Permissions.FLAGS[p], 0);[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Bitfield representing the default permissions for users[m
[32m+[m[32m * @type {number}[m
[32m+[m[32m */[m
[32m+[m[32mPermissions.DEFAULT = 104324097;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * @class EvaluatedPermissions[m
[32m+[m[32m * @classdesc The final evaluated permissions for a member in a channel[m
[32m+[m[32m * @see {@link Permissions}[m
[32m+[m[32m * @deprecated[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mPermissions.prototype.hasPermission = util.deprecate(Permissions.prototype.hasPermission,[m
[32m+[m[32m  'EvaluatedPermissions#hasPermission is deprecated, use Permissions#has instead');[m
[32m+[m[32mPermissions.prototype.hasPermissions = util.deprecate(Permissions.prototype.hasPermissions,[m
[32m+[m[32m  'EvaluatedPermissions#hasPermissions is deprecated, use Permissions#has instead');[m
[32m+[m[32mPermissions.prototype.missingPermissions = util.deprecate(Permissions.prototype.missingPermissions,[m
[32m+[m[32m  'EvaluatedPermissions#missingPermissions is deprecated, use Permissions#missing instead');[m
[32m+[m[32mObject.defineProperty(Permissions.prototype, 'member', {[m
[32m+[m[32m  get: util[m
[32m+[m[32m    .deprecate(Object.getOwnPropertyDescriptor(Permissions.prototype, 'member').get,[m
[32m+[m[32m      'EvaluatedPermissions#member is deprecated'),[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mmodule.exports = Permissions;[m
[1mdiff --git a/node_modules/discord.js/src/util/Snowflake.js b/node_modules/discord.js/src/util/Snowflake.js[m
[1mnew file mode 100644[m
[1mindex 0000000..2775266[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/util/Snowflake.js[m
[36m@@ -0,0 +1,82 @@[m
[32m+[m[32mconst Long = require('long');[m
[32m+[m
[32m+[m[32m// Discord epoch (2015-01-01T00:00:00.000Z)[m
[32m+[m[32mconst EPOCH = 1420070400000;[m
[32m+[m[32mlet INCREMENT = 0;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * A container for useful snowflake-related methods.[m
[32m+[m[32m */[m
[32m+[m[32mclass SnowflakeUtil {[m
[32m+[m[32m  constructor() {[m
[32m+[m[32m    throw new Error(`The ${this.constructor.name} class may not be instantiated.`);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * A Twitter snowflake, except the epoch is 2015-01-01T00:00:00.000Z[m
[32m+[m[32m   * ```[m
[32m+[m[32m   * If we have a snowflake '266241948824764416' we can represent it as binary:[m
[32m+[m[32m   *[m
[32m+[m[32m   * 64                                          22     17     12          0[m
[32m+[m[32m   *  000000111011000111100001101001000101000000  00001  00000  000000000000[m
[32m+[m[32m   *       number of ms since Discord epoch       worker  pid    increment[m
[32m+[m[32m   * ```[m
[32m+[m[32m   * @typedef {string} Snowflake[m
[32m+[m[32m   */[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Generates a Discord snowflake.[m
[32m+[m[32m   * <info>This hardcodes the worker ID as 1 and the process ID as 0.</info>[m
[32m+[m[32m   * @param {number|Date} [timestamp=Date.now()] Timestamp or date of the snowflake to generate[m
[32m+[m[32m   * @returns {Snowflake} The generated snowflake[m
[32m+[m[32m   */[m
[32m+[m[32m  static generate(timestamp = Date.now()) {[m
[32m+[m[32m    if (timestamp instanceof Date) timestamp = timestamp.getTime();[m
[32m+[m[32m    if (typeof timestamp !== 'number' || isNaN(timestamp)) {[m
[32m+[m[32m      throw new TypeError([m
[32m+[m[32m        `"timestamp" argument must be a number (received ${isNaN(timestamp) ? 'NaN' : typeof timestamp})`[m
[32m+[m[32m      );[m
[32m+[m[32m    }[m
[32m+[m[32m    if (INCREMENT >= 4095) INCREMENT = 0;[m
[32m+[m[32m    const BINARY = `${pad((timestamp - EPOCH).toString(2), 42)}0000100000${pad((INCREMENT++).toString(2), 12)}`;[m
[32m+[m[32m    return Long.fromString(BINARY, 2).toString();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * A deconstructed snowflake.[m
[32m+[m[32m   * @typedef {Object} DeconstructedSnowflake[m
[32m+[m[32m   * @property {number} timestamp Timestamp the snowflake was created[m
[32m+[m[32m   * @property {Date} date Date the snowflake was created[m
[32m+[m[32m   * @property {number} workerID Worker ID in the snowflake[m
[32m+[m[32m   * @property {number} processID Process ID in the snowflake[m
[32m+[m[32m   * @property {number} increment Increment in the snowflake[m
[32m+[m[32m   * @property {string} binary Binary representation of the snowflake[m
[32m+[m[32m   */[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Deconstructs a Discord snowflake.[m
[32m+[m[32m   * @param {Snowflake} snowflake Snowflake to deconstruct[m
[32m+[m[32m   * @returns {DeconstructedSnowflake} Deconstructed snowflake[m
[32m+[m[32m   */[m
[32m+[m[32m  static deconstruct(snowflake) {[m
[32m+[m[32m    const BINARY = pad(Long.fromString(snowflake).toString(2), 64);[m
[32m+[m[32m    const res = {[m
[32m+[m[32m      timestamp: parseInt(BINARY.substring(0, 42), 2) + EPOCH,[m
[32m+[m[32m      workerID: parseInt(BINARY.substring(42, 47), 2),[m
[32m+[m[32m      processID: parseInt(BINARY.substring(47, 52), 2),[m
[32m+[m[32m      increment: parseInt(BINARY.substring(52, 64), 2),[m
[32m+[m[32m      binary: BINARY,[m
[32m+[m[32m    };[m
[32m+[m[32m    Object.defineProperty(res, 'date', {[m
[32m+[m[32m      get: function get() { return new Date(this.timestamp); },[m
[32m+[m[32m      enumerable: true,[m
[32m+[m[32m    });[m
[32m+[m[32m    return res;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction pad(v, n, c = '0') {[m
[32m+[m[32m  return String(v).length >= n ? String(v) : (String(c).repeat(n) + v).slice(-n);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = SnowflakeUtil;[m
[1mdiff --git a/node_modules/discord.js/src/util/Util.js b/node_modules/discord.js/src/util/Util.js[m
[1mnew file mode 100644[m
[1mindex 0000000..ada12fd[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/src/util/Util.js[m
[36m@@ -0,0 +1,221 @@[m
[32m+[m[32mconst snekfetch = require('snekfetch');[m
[32m+[m[32mconst Constants = require('./Constants');[m
[32m+[m[32mconst ConstantsHttp = Constants.DefaultOptions.http;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Contains various general-purpose utility methods. These functions are also available on the base `Discord` object.[m
[32m+[m[32m */[m
[32m+[m[32mclass Util {[m
[32m+[m[32m  constructor() {[m
[32m+[m[32m    throw new Error(`The ${this.constructor.name} class may not be instantiated.`);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Splits a string into multiple chunks at a designated character that do not exceed a specific length.[m
[32m+[m[32m   * @param {string} text Content to split[m
[32m+[m[32m   * @param {SplitOptions} [options] Options controlling the behaviour of the split[m
[32m+[m[32m   * @returns {string|string[]}[m
[32m+[m[32m   */[m
[32m+[m[32m  static splitMessage(text, { maxLength = 1950, char = '\n', prepend = '', append = '' } = {}) {[m
[32m+[m[32m    if (text.length <= maxLength) return text;[m
[32m+[m[32m    const splitText = text.split(char);[m
[32m+[m[32m    if (splitText.some(chunk => chunk.length > maxLength)) {[m
[32m+[m[32m      throw new Error('Message exceeds the max length and contains no split characters.');[m
[32m+[m[32m    }[m
[32m+[m[32m    const messages = [''];[m
[32m+[m[32m    let msg = 0;[m
[32m+[m[32m    for (let i = 0; i < splitText.length; i++) {[m
[32m+[m[32m      if (messages[msg].length + splitText[i].length + 1 > maxLength) {[m
[32m+[m[32m        messages[msg] += append;[m
[32m+[m[32m        messages.push(prepend);[m
[32m+[m[32m        msg++;[m
[32m+[m[32m      }[m
[32m+[m[32m      messages[msg] += (messages[msg].length > 0 && messages[msg] !== prepend ? char : '') + splitText[i];[m
[32m+[m[32m    }[m
[32m+[m[32m    return messages;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Escapes any Discord-flavour markdown in a string.[m
[32m+[m[32m   * @param {string} text Content to escape[m
[32m+[m[32m   * @param {boolean} [onlyCodeBlock=false] Whether to only escape codeblocks (takes priority)[m
[32m+[m[32m   * @param {boolean} [onlyInlineCode=false] Whether to only escape inline code[m
[32m+[m[32m   * @returns {string}[m
[32m+[m[32m   */[m
[32m+[m[32m  static escapeMarkdown(text, onlyCodeBlock = false, onlyInlineCode = false) {[m
[32m+[m[32m    if (onlyCodeBlock) return text.replace(/```/g, '`\u200b``');[m
[32m+[m[32m    if (onlyInlineCode) return text.replace(/\\(`|\\)/g, '$1').replace(/(`|\\)/g, '\\$1');[m
[32m+[m[32m    return text.replace(/\\(\*|_|`|~|\\)/g, '$1').replace(/(\*|_|`|~|\\)/g, '\\$1');[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Gets the recommended shard count from Discord.[m
[32m+[m[32m   * @param {string} token Discord auth token[m
[32m+[m[32m   * @param {number} [guildsPerShard=1000] Number of guilds per shard[m
[32m+[m[32m   * @returns {Promise<number>} The recommended number of shards[m
[32m+[m[32m   */[m
[32m+[m[32m  static fetchRecommendedShards(token, guildsPerShard = 1000) {[m
[32m+[m[32m    return new Promise((resolve, reject) => {[m
[32m+[m[32m      if (!token) throw new Error('A token must be provided.');[m
[32m+[m[32m      snekfetch.get(`${ConstantsHttp.host}/api/v${ConstantsHttp.version}${Constants.Endpoints.gateway.bot}`)[m
[32m+[m[32m        .set('Authorization', `Bot ${token.replace(/^Bot\s*/i, '')}`)[m
[32m+[m[32m        .end((err, res) => {[m
[32m+[m[32m          if (err) reject(err);[m
[32m+[m[32m          resolve(res.body.shards * (1000 / guildsPerShard));[m
[32m+[m[32m        });[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Parses emoji info out of a string. The string must be one of:[m
[32m+[m[32m   * * A UTF-8 emoji (no ID)[m
[32m+[m[32m   * * A URL-encoded UTF-8 emoji (no ID)[m
[32m+[m[32m   * * A Discord custom emoji (`<:name:id>` or `<a:name:id>`)[m
[32m+[m[32m   * @param {string} text Emoji string to parse[m
[32m+[m[32m   * @returns {?Object} Object with `animated`, `name`, and `id` properties[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  static parseEmoji(text) {[m
[32m+[m[32m    if (text.includes('%')) text = decodeURIComponent(text);[m
[32m+[m[32m    if (!text.includes(':')) return { animated: false, name: text, id: null };[m
[32m+[m[32m    const m = text.match(/<?(a:)?(\w{2,32}):(\d{17,19})>?/);[m
[32m+[m[32m    if (!m) return null;[m
[32m+[m[32m    return { animated: Boolean(m[1]), name: m[2], id: m[3] };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Checks whether the arrays are equal, also removes duplicated entries from b.[m
[32m+[m[32m   * @param {Array<*>} a Array which will not be modified.[m
[32m+[m[32m   * @param {Array<*>} b Array to remove duplicated entries from.[m
[32m+[m[32m   * @returns {boolean} Whether the arrays are equal.[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  static arraysEqual(a, b) {[m
[32m+[m[32m    if (a === b) return true;[m
[32m+[m[32m    if (a.length !== b.length) return false;[m
[32m+[m
[32m+[m[32m    for (const item of a) {[m
[32m+[m[32m      const ind = b.indexOf(item);[m
[32m+[m[32m      if (ind !== -1) b.splice(ind, 1);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return b.length === 0;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Shallow-copies an object with its class/prototype intact.[m
[32m+[m[32m   * @param {Object} obj Object to clone[m
[32m+[m[32m   * @returns {Object}[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  static cloneObject(obj) {[m
[32m+[m[32m    return Object.assign(Object.create(obj), obj);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets default properties on an object that aren't already specified.[m
[32m+[m[32m   * @param {Object} def Default properties[m
[32m+[m[32m   * @param {Object} given Object to assign defaults to[m
[32m+[m[32m   * @returns {Object}[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  static mergeDefault(def, given) {[m
[32m+[m[32m    if (!given) return def;[m
[32m+[m[32m    for (const key in def) {[m
[32m+[m[32m      if (!{}.hasOwnProperty.call(given, key)) {[m
[32m+[m[32m        given[key] = def[key];[m
[32m+[m[32m      } else if (given[key] === Object(given[key])) {[m
[32m+[m[32m        given[key] = this.mergeDefault(def[key], given[key]);[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return given;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Converts an ArrayBuffer or string to a Buffer.[m
[32m+[m[32m   * @param {ArrayBuffer|string} ab ArrayBuffer to convert[m
[32m+[m[32m   * @returns {Buffer}[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  static convertToBuffer(ab) {[m
[32m+[m[32m    if (typeof ab === 'string') ab = this.str2ab(ab);[m
[32m+[m[32m    return Buffer.from(ab);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Converts a string to an ArrayBuffer.[m
[32m+[m[32m   * @param {string} str String to convert[m
[32m+[m[32m   * @returns {ArrayBuffer}[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  static str2ab(str) {[m
[32m+[m[32m    const buffer = new ArrayBuffer(str.length * 2);[m
[32m+[m[32m    const view = new Uint16Array(buffer);[m
[32m+[m[32m    for (var i = 0, strLen = str.length; i < strLen; i++) view[i] = str.charCodeAt(i);[m
[32m+[m[32m    return buffer;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Makes an Error from a plain info object.[m
[32m+[m[32m   * @param {Object} obj Error info[m
[32m+[m[32m   * @param {string} obj.name Error type[m
[32m+[m[32m   * @param {string} obj.message Message for the error[m
[32m+[m[32m   * @param {string} obj.stack Stack for the error[m
[32m+[m[32m   * @returns {Error}[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  static makeError(obj) {[m
[32m+[m[32m    const err = new Error(obj.message);[m
[32m+[m[32m    err.name = obj.name;[m
[32m+[m[32m    err.stack = obj.stack;[m
[32m+[m[32m    return err;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Makes a plain error info object from an Error.[m
[32m+[m[32m   * @param {Error} err Error to get info from[m
[32m+[m[32m   * @returns {Object}[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  static makePlainError(err) {[m
[32m+[m[32m    const obj = {};[m
[32m+[m[32m    obj.name = err.name;[m
[32m+[m[32m    obj.message = err.message;[m
[32m+[m[32m    obj.stack = err.stack;[m
[32m+[m[32m    return obj;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Moves an element in an array *in place*.[m
[32m+[m[32m   * @param {Array<*>} array Array to modify[m
[32m+[m[32m   * @param {*} element Element to move[m
[32m+[m[32m   * @param {number} newIndex Index or offset to move the element to[m
[32m+[m[32m   * @param {boolean} [offset=false] Move the element by an offset amount rather than to a set index[m
[32m+[m[32m   * @returns {number}[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  static moveElementInArray(array, element, newIndex, offset = false) {[m
[32m+[m[32m    const index = array.indexOf(element);[m
[32m+[m[32m    newIndex = (offset ? index : 0) + newIndex;[m
[32m+[m[32m    if (newIndex > -1 && newIndex < array.length) {[m
[32m+[m[32m      const removedElement = array.splice(index, 1)[0];[m
[32m+[m[32m      array.splice(newIndex, 0, removedElement);[m
[32m+[m[32m    }[m
[32m+[m[32m    return array.indexOf(element);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Creates a Promise that resolves after a specified duration.[m
[32m+[m[32m   * @param {number} ms How long to wait before resolving (in milliseconds)[m
[32m+[m[32m   * @returns {Promise<void>}[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  static delayFor(ms) {[m
[32m+[m[32m    return new Promise(resolve => {[m
[32m+[m[32m      setTimeout(resolve, ms);[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = Util;[m
[1mdiff --git a/node_modules/discord.js/typings/discord.js-test.ts b/node_modules/discord.js/typings/discord.js-test.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..afa9573[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/typings/discord.js-test.ts[m
[36m@@ -0,0 +1,69 @@[m
[32m+[m[32m/// <reference path='index.d.ts' />[m
[32m+[m
[32m+[m[32mimport { Collector, Message, CollectorFilter, Client, CollectorHandler, MessageReaction, Collection, User, ReactionCollectorOptions, Snowflake } from 'discord.js';[m
[32m+[m
[32m+[m[32mconst client = new Client({[m
[32m+[m	[32mdisableEveryone: false,[m
[32m+[m	[32mdisabledEvents: ['GUILD_MEMBER_ADD'][m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mclient.on('message', (message) => {[m
[32m+[m	[32mif (message.content === 'hello') {[m
[32m+[m		[32mmessage.channel.sendMessage('o/');[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mconst collector: ReactionCollector = new ReactionCollector(message,[m
[32m+[m		[32m(reaction: MessageReaction) => reaction.emoji.toString() === '👌',[m
[32m+[m		[32m{ time: 30e3 });[m
[32m+[m	[32mcollector.on('end', collected => console.log(collected));[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mclient.login('dsfsd754.4fds4f68d4f6sd46f4s.7878easfdsgdfFDSIJIO');[m
[32m+[m
[32m+[m[32mexport class TestCollector extends Collector<Snowflake, Message> {[m
[32m+[m	[32mpublic filter: CollectorFilter;[m
[32m+[m	[32mpublic constructor(client: Client, filter: CollectorFilter) {[m
[32m+[m		[32msuper(client, filter);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic handle(message: Message): CollectorHandler<Snowflake, Message> {[m
[32m+[m		[32mreturn { key: message.id, value: message };[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic cleanup(): void {}[m
[32m+[m	[32mpublic postCheck(): null { return null; }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mclass ReactionCollector extends Collector<Snowflake, MessageReaction> {[m
[32m+[m	[32mpublic message: Message;[m
[32m+[m	[32mpublic users: Collection<Snowflake, User>;[m
[32m+[m	[32mpublic total: number;[m
[32m+[m	[32mpublic options: ReactionCollectorOptions;[m
[32m+[m	[32mpublic constructor(message: Message, filter: CollectorFilter, options?: ReactionCollectorOptions) {[m
[32m+[m		[32msuper(message.client, filter, options || {});[m
[32m+[m		[32mthis.message = message;[m
[32m+[m		[32mthis.users = new Collection<Snowflake, User>();[m
[32m+[m		[32mthis.total = 0;[m
[32m+[m		[32mthis.client.on('messageReactionAdd', this.listener);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic handle(reaction: MessageReaction): CollectorHandler<Snowflake, MessageReaction> {[m
[32m+[m		[32mif (reaction.message.id !== this.message.id) { return null; }[m
[32m+[m		[32mreturn {[m
[32m+[m			[32mkey: reaction.emoji.id || reaction.emoji.name,[m
[32m+[m			[32mvalue: reaction[m
[32m+[m		[32m};[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic postCheck(reaction: MessageReaction, user: User): string {[m
[32m+[m		[32mthis.users.set(user.id, user);[m
[32m+[m		[32mif (this.options.max && ++this.total >= this.options.max) { return 'limit'; }[m
[32m+[m		[32mif (this.options.maxEmojis && this.collected.size >= this.options.maxEmojis) { return 'emojiLimit'; }[m
[32m+[m		[32mif (this.options.maxUsers && this.users.size >= this.options.maxUsers) { return 'userLimit'; }[m
[32m+[m		[32mreturn null;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic cleanup(): void {[m
[32m+[m		[32mthis.client.removeListener('messageReactionAdd', this.listener as any);[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/discord.js/typings/index.d.ts b/node_modules/discord.js/typings/index.d.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..989d1bd[m
[1m--- /dev/null[m
[1m+++ b/node_modules/discord.js/typings/index.d.ts[m
[36m@@ -0,0 +1,2190 @@[m
[32m+[m[32m// Type definitions for discord.js 11.5.0[m
[32m+[m[32m// Project: https://github.com/discordjs/discord.js[m
[32m+[m[32m// Definitions by:[m
[32m+[m[32m//   acdenisSK <acdenissk69@gmail.com> (https://github.com/acdenisSK)[m
[32m+[m[32m//   Zack Campbell <zajrik@gmail.com> (https://github.com/zajrik)[m
[32m+[m[32m// License: MIT[m
[32m+[m
[32m+[m[32mdeclare module 'discord.js' {[m
[32m+[m	[32mimport { EventEmitter } from 'events';[m
[32m+[m	[32mimport { Stream, Readable as ReadableStream } from 'stream';[m
[32m+[m	[32mimport { ChildProcess } from 'child_process';[m
[32m+[m
[32m+[m	[32mexport const version: string;[m
[32m+[m
[32m+[m[32m//#region Classes[m
[32m+[m
[32m+[m	[32mclass Attachment {[m
[32m+[m		[32mconstructor(file: BufferResolvable | Stream, name?: string);[m
[32m+[m		[32mprivate _attach(file: BufferResolvable | Stream, name: string): void;[m
[32m+[m
[32m+[m		[32mpublic readonly attachment: BufferResolvable | Stream;[m
[32m+[m		[32mpublic readonly name: string;[m
[32m+[m		[32mpublic setAttachment(file: BufferResolvable | Stream, name: string): this;[m
[32m+[m		[32mpublic setFile(attachment: BufferResolvable | Stream): this;[m
[32m+[m		[32mpublic setName(name: string): this;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mclass AudioPlayer extends EventEmitter {[m
[32m+[m		[32mconstructor(voiceConnection: VoiceConnection);[m
[32m+[m		[32mpublic readonly dispatcher: StreamDispatcher;[m
[32m+[m		[32mpublic opusEncoder: object;[m
[32m+[m		[32mpublic prism: object;[m
[32m+[m		[32mpublic readonly transcoder: object;[m
[32m+[m		[32mpublic voiceConnection: VoiceConnection;[m
[32m+[m		[32mpublic setBitrate(value: number | 'auto'): void;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mclass BaseOpus {[m
[32m+[m		[32mconstructor(options?: { bitrate?: number, fec?: boolean, plp?: number });[m
[32m+[m		[32mpublic bitrate: number;[m
[32m+[m		[32mpublic options: object;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mexport class CategoryChannel extends GuildChannel {[m
[32m+[m		[32mpublic readonly children: Collection<Snowflake, GuildChannel>;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mexport class Channel {[m
[32m+[m		[32mconstructor(client: Client, data: object);[m
[32m+[m		[32mpublic readonly client: Client;[m
[32m+[m		[32mpublic readonly createdAt: Date;[m
[32m+[m		[32mpublic readonly createdTimestamp: number;[m
[32m+[m		[32mpublic id: Snowflake;[m
[32m+[m		[32mpublic type: 'dm' | 'group' | 'text' | 'voice' | 'category' | 'news' | 'store';[m
[32m+[m		[32mpublic delete(): Promise<Channel>;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mexport class Client extends EventEmitter {[m
[32m+[m		[32mconstructor(options?: ClientOptions);[m
[32m+[m		[32mprivate _intervals: Set<NodeJS.Timer>;[m
[32m+[m		[32mprivate _pingTimestamp: number;[m
[32m+[m		[32mprivate _timeouts: Set<NodeJS.Timer>;[m
[32m+[m		[32mprivate actions: object;[m
[32m+[m		[32mprivate dataManager: object;[m
[32m+[m		[32mprivate manager: ClientManager;[m
[32m+[m		[32mprivate resolver: ClientDataResolver;[m
[32m+[m		[32mprivate rest: object;[m
[32m+[m		[32mprivate voice: ClientVoiceManager;[m
[32m+[m		[32mprivate ws: object;[m
[32m+[m		[32mprivate _eval(script: string): any;[m
[32m+[m		[32mprivate _pong(startTime: number): void;[m
[32m+[m		[32mprivate _setPresence(id: Snowflake, presence: object): void;[m
[32m+[m		[32mprivate _validateOptions(options?: ClientOptions): void;[m
[32m+[m
[32m+[m		[32mpublic broadcasts: VoiceBroadcast[];[m
[32m+[m		[32mpublic readonly browser: boolean;[m
[32m+[m		[32mpublic channels: Collection<Snowflake, Channel>;[m
[32m+[m		[32mpublic readonly emojis: Collection<Snowflake, Emoji>;[m
[32m+[m		[32mpublic guilds: Collection<Snowflake, Guild>;[m
[32m+[m		[32mpublic options: ClientOptions;[m
[32m+[m		[32mpublic readonly ping: number;[m
[32m+[m		[32mpublic pings: number[];[m
[32m+[m		[32mpublic presences: Collection<Snowflake, Presence>;[m
[32m+[m		[32mpublic readyAt: Date;[m
[32m+[m		[32mpublic readonly readyTimestamp: number;[m
[32m+[m		[32mpublic shard: ShardClientUtil;[m
[32m+[m		[32mpublic readonly status: number;[m
[32m+[m		[32mpublic token: string;[m
[32m+[m		[32mpublic readonly uptime: number;[m
[32m+[m		[32mpublic user: ClientUser;[m
[32m+[m		[32mpublic users: Collection<Snowflake, User>;[m
[32m+[m		[32mpublic readonly voiceConnections: Collection<Snowflake, VoiceConnection>;[m
[32m+[m		[32mpublic clearInterval(interval: NodeJS.Timer): void;[m
[32m+[m		[32mpublic clearTimeout(timeout: NodeJS.Timer): void;[m
[32m+[m		[32mpublic createVoiceBroadcast(): VoiceBroadcast;[m
[32m+[m		[32mpublic destroy(): Promise<void>;[m
[32m+[m		[32mpublic fetchApplication(id?: Snowflake): Promise<OAuth2Application>;[m
[32m+[m		[32mpublic fetchInvite(invite: InviteResolvable): Promise<Invite>;[m
[32m+[m		[32mpublic fetchUser(id: Snowflake, cache?: boolean): Promise<User>;[m
[32m+[m		[32mpublic fetchVoiceRegions(): Promise<Collection<string, VoiceRegion>>;[m
[32m+[m		[32mpublic fetchWebhook(id: Snowflake, token?: string): Promise<Webhook>;[m
[32m+[m		[32mpublic generateInvite(permissions?: PermissionResolvable): Promise<string>;[m
[32m+[m		[32mpublic login(token?: string): Promise<string>;[m
[32m+[m		[32mpublic setInterval(fn: Function, delay: number, ...args: any[]): NodeJS.Timer;[m
[32m+[m		[32mpublic setTimeout(fn: Function, delay: number, ...args: any[]): NodeJS.Timer;[m
[32m+[m		[32mpublic sweepMessages(lifetime?: number): number;[m
[32m+[m		[32mpublic syncGuilds(guilds?: Guild[] | Collection<Snowflake, Guild>): void;[m
[32m+[m
[32m+[m		[32mpublic on(event: 'channelCreate', listener: (channel: Channel) => void): this;[m
[32m+[m		[32mpublic on(event: 'channelDelete', listener: (channel: Channel) => void): this;[m
[32m+[m		[32mpublic on(event: 'channelPinsUpdate', listener: (channel: Channel, time: Date) => void): this;[m
[32m+[m		[32mpublic on(event: 'channelUpdate', listener: (oldChannel: Channel, newChannel: Channel) => void): this;[m
[32m+[m		[32mpublic on(event: 'clientUserGuildSettingsUpdate', listener: (clientUserGuildSettings: ClientUserGuildSettings) => void): this;[m
[32m+[m		[32mpublic on(event: 'clientUserSettingsUpdate', listener: (clientUserSettings: ClientUserSettings) => void): this;[m
[32m+[m		[32mpublic on(event: 'debug', listener: (info: string) => void): this;[m
[32m+[m		[32mpublic on(event: 'disconnect', listener: (event: any) => void): this;[m
[32m+[m		[32mpublic on(event: 'emojiCreate', listener: (emoji: Emoji) => void): this;[m
[32m+[m		[32mpublic on(event: 'emojiDelete', listener: (emoji: Emoji) => void): this;[m
[32m+[m		[32mpublic on(event: 'emojiUpdate', listener: (oldEmoji: Emoji, newEmoji: Emoji) => void): this;[m
[32m+[m		[32mpublic on(event: 'error', listener: (error: Error) => void): this;[m
[32m+[m		[32mpublic on(event: 'guildBanAdd', listener: (guild: Guild, user: User) => void): this;[m
[32m+[m		[32mpublic on(event: 'guildBanRemove', listener: (guild: Guild, user: User) => void): this;[m
[32m+[m		[32mpublic on(event: 'guildCreate', listener: (guild: Guild) => void): this;[m
[32m+[m		[32mpublic on(event: 'guildDelete', listener: (guild: Guild) => void): this;[m
[32m+[m		[32mpublic on(event: 'guildMemberAdd', listener: (member: GuildMember) => void): this;[m
[32m+[m		[32mpublic on(event: 'guildMemberAvailable', listener: (member: GuildMember) => void): this;[m
[32m+[m		[32mpublic on(event: 'guildMemberRemove', listener: (member: GuildMember) => void): this;[m
[32m+[m		[32mpublic on(event: 'guildMembersChunk', listener: (members: GuildMember[], guild: Guild) => void): this;[m
[32m+[m		[32mpublic on(event: 'guildMemberSpeaking', listener: (member: GuildMember, speaking: boolean) => void): this;[m
[32m+[m		[32mpublic on(event: 'guildMemberUpdate', listener: (oldMember: GuildMember, newMember: GuildMember) => void): this;[m
[32m+[m		[32mpublic on(event: 'guildUnavailable', listener: (guild: Guild) => void): this;[m
[32m+[m		[32mpublic on(event: 'guildUpdate', listener: (oldGuild: Guild, newGuild: Guild) => void): this;[m
[32m+[m		[32mpublic on(event: 'guildIntegrationsUpdate', listener: (guild: Guild) => void): this;[m
[32m+[m		[32mpublic on(event: 'message', listener: (message: Message) => void): this;[m
[32m+[m		[32mpublic on(event: 'messageDelete', listener: (message: Message) => void): this;[m
[32m+[m		[32mpublic on(event: 'messageDeleteBulk', listener: (messages: Collection<Snowflake, Message>) => void): this;[m
[32m+[m		[32mpublic on(event: 'messageReactionAdd', listener: (messageReaction: MessageReaction, user: User) => void): this;[m
[32m+[m		[32mpublic on(event: 'messageReactionRemove', listener: (messageReaction: MessageReaction, user: User) => void): this;[m
[32m+[m		[32mpublic on(event: 'messageReactionRemoveAll', listener: (message: Message) => void): this;[m
[32m+[m		[32mpublic on(event: 'messageUpdate', listener: (oldMessage: Message, newMessage: Message) => void): this;[m
[32m+[m		[32mpublic on(event: 'presenceUpdate', listener: (oldMember: GuildMember, newMember: GuildMember) => void): this;[m
[32m+[m		[32mpublic on(event: 'rateLimit', listener: (rateLimit: RateLimitInfo) => void): this;[m
[32m+[m		[32mpublic on(event: 'ready', listener: () => void): this;[m
[32m+[m		[32mpublic on(event: 'reconnecting', listener: () => void): this;[m
[32m+[m		[32mpublic on(event: 'resume', listener: (replayed: number) => void): this;[m
[32m+[m		[32mpublic on(event: 'roleCreate', listener: (role: Role) => void): this;[m
[32m+[m		[32mpublic on(event: 'roleDelete', listener: (role: Role) => void): this;[m
[32m+[m		[32mpublic on(event: 'roleUpdate', listener: (oldRole: Role, newRole: Role) => void): this;[m
[32m+[m		[32mpublic on(event: 'typingStart', listener: (channel: Channel, user: User) => void): this;[m
[32m+[m		[32mpublic on(event: 'typingStop', listener: (channel: Channel, user: User) => void): this;[m
[32m+[m		[32mpublic on(event: 'userNoteUpdate', listener: (user: UserResolvable, oldNote: string, newNote: string) => void): this;[m
[32m+[m		[32mpublic on(event: 'userUpdate', listener: (oldUser: User, newUser: User) => void): this;[m
[32m+[m		[32mpublic on(event: 'voiceStateUpdate', listener: (oldMember: GuildMember, newMember: GuildMember) => void): this;[m
[32m+[m		[32mpublic on(event: 'warn', listener: (info: string) => void): this;[m
[32m+[m		[32mpublic on(event: 'webhookUpdate', listener: (channel: TextChannel) => void): this;[m
[32m+[m		[32mpublic on(event: string, listener: Function): this;[m
[32m+[m
[32m+[m		[32mpublic once(event: 'channelCreate', listener: (channel: Channel) => void): this;[m
[32m+[m		[32mpublic once(event: 'channelDelete', listener: (channel: Channel) => void): this;[m
[32m+[m		[32mpublic once(event: 'channelPinsUpdate', listener: (channel: Channel, time: Date) => void): this;[m
[32m+[m		[32mpublic once(event: 'channelUpdate', listener: (oldChannel: Channel, newChannel: Channel) => void): this;[m
[32m+[m		[32mpublic once(event: 'clientUserGuildSettingsUpdate', listener: (clientUserGuildSettings: ClientUserGuildSettings) => void): this;[m
[32m+[m		[32mpublic once(event: 'clientUserSettingsUpdate', listener: (clientUserSettings: ClientUserSettings) => void): this;[m
[32m+[m		[32mpublic once(event: 'debug', listener: (info: string) => void): this;[m
[32m+[m		[32mpublic once(event: 'disconnect', listener: (event: any) => void): this;[m
[32m+[m		[32mpublic once(event: 'emojiCreate', listener: (emoji: Emoji) => void): this;[m
[32m+[m		[32mpublic once(event: 'emojiDelete', listener: (emoji: Emoji) => void): this;[m
[32m+[m		[32mpublic once(event: 'emojiUpdate', listener: (oldEmoji: Emoji, newEmoji: Emoji) => void): this;[m
[32m+[m		[32mpublic once(event: 'error', listener: (error: Error) => void): this;[m
[32m+[m		[32mpublic once(event: 'guildBanAdd', listener: (guild: Guild, user: User) => void): this;[m
[32m+[m		[32mpublic once(event: 'guildBanRemove', listener: (guild: Guild, user: User) => void): this;[m
[32m+[m		[32mpublic once(event: 'guildCreate', listener: (guild: Guild) => void): this;[m
[32m+[m		[32mpublic once(event: 'guildDelete', listener: (guild: Guild) => void): this;[m
[32m+[m		[32mpublic once(event: 'guildMemberAdd', listener: (member: GuildMember) => void): this;[m
[32m+[m		[32mpublic once(event: 'guildMemberAvailable', listener: (member: GuildMember) => void): this;[m
[32m+[m		[32mpublic once(event: 'guildMemberRemove', listener: (member: GuildMember) => void): this;[m
[32m+[m		[32mpublic once(event: 'guildMembersChunk', listener: (members: GuildMember[], guild: Guild) => void): this;[m
[32m+[m		[32mpublic once(event: 'guildMemberSpeaking', listener: (member: GuildMember, speaking: boolean) => void): this;[m
[32m+[m		[32mpublic once(event: 'guildMemberUpdate', listener: (oldMember: GuildMember, newMember: GuildMember) => void): this;[m
[32m+[m		[32mpublic once(event: 'guildUnavailable', listener: (guild: Guild) => void): this;[m
[32m+[m		[32mpublic once(event: 'guildUpdate', listener: (oldGuild: Guild, newGuild: Guild) => void): this;[m
[32m+[m		[32mpublic once(event: 'guildIntegrationsUpdate', listener: (guild: Guild) => void): this;[m
[32m+[m		[32mpublic once(event: 'message', listener: (message: Message) => void): this;[m
[32m+[m		[32mpublic once(event: 'messageDelete', listener: (message: Message) => void): this;[m
[32m+[m		[32mpublic once(event: 'messageDeleteBulk', listener: (messages: Collection<Snowflake, Message>) => void): this;[m
[32m+[m		[32mpublic once(event: 'messageReactionAdd', listener: (messageReaction: MessageReaction, user: User) => void): this;[m
[32m+[m		[32mpublic once(event: 'messageReactionRemove', listener: (messageReaction: MessageReaction, user: User) => void): this;[m
[32m+[m		[32mpublic once(event: 'messageReactionRemoveAll', listener: (message: Message) => void): this;[m
[32m+[m		[32mpublic once(event: 'messageUpdate', listener: (oldMessage: Message, newMessage: Message) => void): this;[m
[32m+[m		[32mpublic once(event: 'presenceUpdate', listener: (oldMember: GuildMember, newMember: GuildMember) => void): this;[m
[32m+[m		[32mpublic once(event: 'rateLimit', listener: (rateLimit: RateLimitInfo) => void): this;[m
[32m+[m		[32mpublic once(event: 'ready', listener: () => void): this;[m
[32m+[m		[32mpublic once(event: 'reconnecting', listener: () => void): this;[m
[32m+[m		[32mpublic once(event: 'resume', listener: (replayed: number) => void): this;[m
[32m+[m		[32mpublic once(event: 'roleCreate', listener: (role: Role) => void): this;[m
[32m+[m		[32mpublic once(event: 'roleDelete', listener: (role: Role) => void): this;[m
[32m+[m		[32mpublic once(event: 'roleUpdate', listener: (oldRole: Role, newRole: Role) => void): this;[m
[32m+[m		[32mpublic once(event: 'typingStart', listener: (channel: Channel, user: User) => void): this;[m
[32m+[m		[32mpublic once(event: 'typingStop', listener: (channel: Channel, user: User) => void): this;[m
[32m+[m		[32mpublic once(event: 'userNoteUpdate', listener: (user: UserResolvable, oldNote: string, newNote: string) => void): this;[m
[32m+[m		[32mpublic once(event: 'userUpdate', listener: (oldUser: User, newUser: User) => void): this;[m
[32m+[m		[32mpublic once(event: 'voiceStateUpdate', listener: (oldMember: GuildMember, newMember: GuildMember) => void): this;[m
[32m+[m		[32mpublic once(event: 'warn', listener: (info: string) => void): this;[m
[32m+[m		[32mpublic once(event: 'webhookUpdate', listener: (channel: TextChannel) => void): this;[m
[32m+[m		[32mpublic once(event: string, listener: Function): this;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mclass ClientDataResolver {[m
[32m+[m		[32mconstructor(client: Client);[m
[32m+[m		[32mpublic resolveBase64(data: Base64Resolvable): string;[m
[32m+[m		[32mpublic resolveChannel(channel: ChannelResolvable): Channel;[m
[32m+[m		[32mpublic resolveChannelID(channel: ChannelResolvable): Snowflake;[m
[32m+[m		[32mpublic resolveColor(color: ColorResolvable): number;[m
[32m+[m		[32mpublic resolveEmojiIdentifier(emoji: EmojiIdentifierResolvable): string;[m
[32m+[m		[32mpublic resolveFile(resource: BufferResolvable | Stream): Promise<Buffer>;[m
[32m+[m		[32mpublic resolveGuild(guild: GuildResolvable): Guild;[m
[32m+[m		[32mpublic resolveGuildMember(guild: GuildResolvable, user: UserResolvable): GuildMember;[m
[32m+[m		[32mpublic resolveImage(imge: BufferResolvable | Base64Resolvable): Promise<string>;[m
[32m+[m		[32mpublic resolveInviteCode(data: InviteResolvable): string;[m
[32m+[m		[32mpublic resolveString(data: StringResolvable): string;[m
[32m+[m		[32mpublic resolveUser(user: UserResolvable): User;[m
[32m+[m		[32mpublic resolveUserID(user: UserResolvable): Snowflake;[m
[32m+[m
[32m+[m		[32mpublic static resolveColor(color: ColorResolvable): number;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mclass ClientManager {[m
[32m+[m		[32mconstructor(client: Client);[m
[32m+[m		[32mpublic client: Client;[m
[32m+[m		[32mpublic heartbeatInterval: number;[m
[32m+[m		[32mpublic status: number;[m
[32m+[m		[32mpublic connectToWebSocket(token: string, resolve: Function, reject: Function): void;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mexport class ClientUser extends User {[m
[32m+[m		[32mpublic blocked: Collection<Snowflake, User>;[m
[32m+[m		[32mpublic email: string;[m
[32m+[m		[32mpublic friends: Collection<Snowflake, User>;[m
[32m+[m		[32mpublic guildSettings: Collection<Snowflake, ClientUserGuildSettings>;[m
[32m+[m		[32mpublic mfaEnabled: boolean;[m
[32m+[m		[32mpublic mobile: boolean;[m
[32m+[m		[32mpublic notes: Collection<Snowflake, string>;[m
[32m+[m		[32mpublic premium: boolean;[m
[32m+[m		[32mpublic settings: ClientUserSettings;[m
[32m+[m		[32mpublic verified: boolean;[m
[32m+[m		[32mpublic acceptInvite(invite: Invite | string): Promise<Guild>;[m
[32m+[m		[32mpublic addFriend(user?: UserResolvable): Promise<User>;[m
[32m+[m		[32mpublic createGroupDM(recipients: GroupDMRecipientOptions[]): Promise<GroupDMChannel>;[m
[32m+[m		[32mpublic createGuild(name: string, region: string, icon?: BufferResolvable | Base64Resolvable): Promise<Guild>;[m
[32m+[m		[32mpublic fetchMentions(options?: { limit?: number; roles?: boolean, everyone?: boolean; guild?: Guild | Snowflake }): Promise<Message[]>;[m
[32m+[m		[32mpublic removeFriend(user?: UserResolvable): Promise<User>;[m
[32m+[m		[32mpublic setActivity(name: string | null, options?: { url?: string, type?: ActivityType | number }): Promise<Presence>;[m
[32m+[m		[32mpublic setAFK(afk: boolean): Promise<ClientUser>;[m
[32m+[m		[32mpublic setAvatar(avatar: BufferResolvable | Base64Resolvable): Promise<ClientUser>;[m
[32m+[m		[32mpublic setEmail(email: string, password: string): Promise<ClientUser>;[m
[32m+[m		[32mpublic setGame(game: string | null, streamingURL?: string): Promise<ClientUser>;[m
[32m+[m		[32mpublic setPassword(newPassword: string, oldPassword: string): Promise<ClientUser>;[m
[32m+[m		[32mpublic setPresence(data: PresenceData): Promise<ClientUser>;[m
[32m+[m		[32mpublic setStatus(status: PresenceStatus): Promise<ClientUser>;[m
[32m+[m		[32mpublic setUsername(username: string, password?: string): Promise<ClientUser>;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mclass ClientUserChannelOverride {[m
[32m+[m		[32mconstructor(user: User, data: object);[m
[32m+[m		[32mprivate patch(data: object): void;[m
[32m+[m
[32m+[m		[32mpublic messageNotifications: GuildChannelMessageNotifications;[m
[32m+[m		[32mpublic muted: boolean;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mclass ClientUserGuildSettings {[m
[32m+[m		[32mconstructor(data: object, guild: Guild);[m
[32m+[m		[32mprivate patch(data: object): void;[m
[32m+[m
[32m+[m		[32mpublic channelOverrides: Collection<Snowflake, ClientUserChannelOverride>;[m
[32m+[m		[32mpublic readonly client: Client;[m
[32m+[m		[32mpublic guildID: Snowflake;[m
[32m+[m		[32mpublic messageNotifications: GuildChannelMessageNotifications;[m
[32m+[m		[32mpublic mobilePush: boolean;[m
[32m+[m		[32mpublic muted: boolean;[m
[32m+[m		[32mpublic suppressEveryone: boolean;[m
[32m+[m		[32mpublic update(name: string, value: any): Promise<object>;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mexport class ClientUserSettings {[m
[32m+[m		[32mconstructor(user: User, data: object);[m
[32m+[m		[32mprivate patch(data: object): void;[m
[32m+[m
[32m+[m		[32mpublic convertEmoticons: boolean;[m
[32m+[m		[32mpublic defaultGuildsRestricted: boolean;[m
[32m+[m		[32mpublic detectPlatformAccounts: boolean;[m
[32m+[m		[32mpublic developerMode: boolean;[m
[32m+[m		[32mpublic enableTTSCommand: boolean;[m
[32m+[m		[32mpublic explicitContentFilter: 'DISABLED' | 'NON_FRIENDS' | 'FRIENDS_AND_NON_FRIENDS' | string;[m
[32m+[m		[32mpublic friendsSources: { all: boolean, mutualGuilds: boolean, mutualFriends: boolean };[m
[32m+[m		[32mpublic guildsPositions: Snowflake[];[m
[32m+[m		[32mpublic inlineAttachmentMedia: boolean;[m
[32m+[m		[32mpublic inlineEmbedMedia: boolean;[m
[32m+[m		[32mpublic locale: string;[m
[32m+[m		[32mpublic messageDisplayCompact: boolean;[m
[32m+[m		[32mpublic renderReactions: boolean;[m
[32m+[m		[32mpublic restrictedGuilds: Snowflake[];[m
[32m+[m		[32mpublic showCurrentGame: boolean;[m
[32m+[m		[32mpublic status: PresenceStatus;[m
[32m+[m		[32mpublic theme: string;[m
[32m+[m		[32mpublic addRestrictedGuild(guild: Guild): Promise<Guild>;[m
[32m+[m		[32mpublic removeRestrictedGuild(guild: Guild): Promise<Guild>;[m
[32m+[m		[32mpublic setGuildPosition(guild: Guild, position: number, relative?: boolean): Promise<Guild>;[m
[32m+[m		[32mpublic update(name: string, value: any): Promise<object>;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mclass ClientVoiceManager {[m
[32m+[m		[32mconstructor(client: Client);[m
[32m+[m		[32mpublic client: Client;[m
[32m+[m		[32mpublic connections: Collection<Snowflake, VoiceConnection>;[m
[32m+[m		[32mpublic joinChannel(channel: VoiceChannel): Promise<VoiceConnection>;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mexport class Collection<K, V> extends Map<K, V> {[m
[32m+[m		[32mprivate _array: V[];[m
[32m+[m		[32mprivate _keyArray: K[];[m
[32m+[m
[32m+[m		[32mpublic array(): V[];[m
[32m+[m		[32mpublic clone(): Collection<K, V>;[m
[32m+[m		[32mpublic concat(...collections: Collection<K, V>[]): Collection<K, V>;[m
[32m+[m		[32mpublic deleteAll(): Promise<V>[];[m
[32m+[m		[32mpublic equals(collection: Collection<any, any>): boolean;[m
[32m+[m		[32mpublic every(fn: (value: V, key: K, collection: Collection<K, V>) => boolean, thisArg?: any): boolean;[m
[32m+[m		[32mpublic exists(prop: keyof V, value: any): boolean;[m
[32m+[m		[32mpublic filter(fn: (value: V, key: K, collection: Collection<K, V>) => boolean, thisArg?: any): Collection<K, V>;[m
[32m+[m		[32mpublic filterArray(fn: (value: V, key: K, collection: Collection<K, V>) => boolean, thisArg?: any): V[];[m
[32m+[m		[32mpublic find(prop: keyof V, value: any): V;[m
[32m+[m		[32mpublic find(fn: (value: V, key: K, collection: Collection<K, V>) => boolean): V;[m
[32m+[m		[32mpublic findAll(prop: keyof V, value: any): V[];[m
[32m+[m		[32mpublic findKey(prop: keyof V, value: any): K;[m
[32m+[m		[32mpublic findKey(fn: (value: V, key: K, collection: Collection<K, V>) => boolean): K;[m
[32m+[m		[32mpublic first(): V;[m
[32m+[m		[32mpublic first(count: number): V[];[m
[32m+[m		[32mpublic firstKey(): K;[m
[32m+[m		[32mpublic firstKey(count: number): K[];[m
[32m+[m		[32mpublic keyArray(): K[];[m
[32m+[m		[32mpublic last(): V;[m
[32m+[m		[32mpublic last(count: number): V[];[m
[32m+[m		[32mpublic lastKey(): K;[m
[32m+[m		[32mpublic lastKey(count: number): K[];[m
[32m+[m		[32mpublic map<T>(fn: (value: V, key: K, collection: Collection<K, V>) => T, thisArg?: any): T[];[m
[32m+[m		[32mpublic partition(fn: (value: V, key: K, collection: Collection<K, V>) => boolean, thisArg?: any): [Collection<K, V>, Collection<K, V>];[m
[32m+[m		[32mpublic random(): V;[m
[32m+[m		[32mpublic random(count: number): V[];[m
[32m+[m		[32mpublic randomKey(): K;[m
[32m+[m		[32mpublic randomKey(count: number): K[];[m
[32m+[m		[32mpublic reduce<T>(fn: (accumulator: any, value: V, key: K, collection: Collection<K, V>) => T, initialValue?: any): T;[m
[32m+[m		[32mpublic some(fn: (value: V, key: K, collection: Collection<K, V>) => boolean, thisArg?: any): boolean;[m
[32m+[m		[32mpublic sort(compareFunction?: (a: V, b: V, c?: K, d?: K) => number): Collection<K, V>;[m
[32m+[m		[32mpublic sweep(fn: (value: V, key: K, collection: Collection<K, V>) => boolean, thisArg?: any): number;[m
[32m+[m		[32mpublic tap(fn: (value: V, key: K, map: Collection<K, V>) => void, thisArg?: any): Collection<K, V>;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mabstract class Collector<K, V> extends EventEmitter {[m
[32m+[m		[32mconstructor(client: Client, filter: CollectorFilter, options?: CollectorOptions);[m
[32m+[m		[32mprivate _timeout: NodeJS.Timer;[m
[32m+[m		[32mprivate _handle(...args: any[]): void;[m
[32m+[m
[32m+[m		[32mpublic readonly client: Client;[m
[32m+[m		[32mpublic collected: Collection<K, V>;[m
[32m+[m		[32mpublic ended: boolean;[m
[32m+[m		[32mpublic filter: CollectorFilter;[m
[32m+[m		[32mpublic readonly next: Promise<V>;[m
[32m+[m		[32mpublic options: CollectorOptions;[m
[32m+[m		[32mpublic stop(reason?: string): void;[m
[32m+[m
[32m+[m		[32mprotected listener: Function;[m
[32m+[m		[32mpublic abstract cleanup(): void;[m
[32m+[m		[32mpublic abstract handle(...args: any[]): CollectorHandler<K, V>;[m
[32m+[m		[32mpublic abstract postCheck(...args: any[]): string | null;[m
[32m+[m
[32m+[m		[32mpublic on(event: 'collect', listener: (element: V, collector: Collector<K, V>) => void): this;[m
[32m+[m		[32mpublic on(event: 'end', listener: (collected: Collection<K, V>, reason: string) => void): this;[m
[32m+[m		[32mpublic on(event: string, listener: Function): this;[m
[32m+[m
[32m+[m		[32mpublic once(event: 'collect', listener: (element: V, collector: Collector<K, V>) => void): this;[m
[32m+[m		[32mpublic once(event: 'end', listener: (collected: Collection<K, V>, reason: string) => void): this;[m
[32m+[m		[32mpublic once(event: string, listener: Function): this;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mclass DiscordAPIError extends Error {[m
[32m+[m		[32mconstructor(error: object);[m
[32m+[m		[32mprivate static flattenErrors(obj: object, key: string): string[];[m
[32m+[m
[32m+[m		[32mpublic code: number;[m
[32m+[m		[32mpublic method: string;[m
[32m+[m		[32mpublic path: string;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mexport class DMChannel extends TextBasedChannel(Channel) {[m
[32m+[m		[32mconstructor(client: Client, data: object);[m
[32m+[m		[32mpublic lastMessageID: Snowflake;[m
[32m+[m		[32mpublic messages: Collection<Snowflake, Message>;[m
[32m+[m		[32mpublic recipient: User;[m
[32m+[m		[32mpublic toString(): string;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mexport class Emoji {[m
[32m+[m		[32mconstructor(guild: Guild, data: object);[m
[32m+[m		[32mpublic animated: boolean;[m
[32m+[m		[32mpublic readonly client: Client;[m
[32m+[m		[32mpublic readonly createdAt: Date;[m
[32m+[m		[32mpublic readonly createdTimestamp: number;[m
[32m+[m		[32mpublic readonly deletable: boolean;[m
[32m+[m		[32mpublic guild: Guild;[m
[32m+[m		[32mpublic id: Snowflake;[m
[32m+[m		[32mpublic readonly identifier: string;[m
[32m+[m		[32mpublic managed: boolean;[m
[32m+[m		[32mpublic name: string;[m
[32m+[m		[32mpublic requiresColons: boolean;[m
[32m+[m		[32mpublic readonly roles: Collection<Snowflake, Role>;[m
[32m+[m		[32mpublic readonly url: string;[m
[32m+[m		[32mpublic addRestrictedRole(role: Role): Promise<Emoji>;[m
[32m+[m		[32mpublic addRestrictedRoles(roles: Role[]): Promise<Emoji>;[m
[32m+[m		[32mpublic edit(data: EmojiEditData, reason?: string): Promise<Emoji>;[m
[32m+[m		[32mpublic equals(other: Emoji | object): boolean;[m
[32m+[m		[32mpublic fetchAuthor(): Promise<User>;[m
[32m+[m		[32mpublic removeRestrictedRole(role: Role): Promise<Emoji>;[m
[32m+[m		[32mpublic removeRestrictedRoles(roles: Role[]): Promise<Emoji>;[m
[32m+[m		[32mpublic setName(name: string, reason?: string): Promise<Emoji>;[m
[32m+[m		[32mpublic toString(): string;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mexport class Game {[m
[32m+[m		[32mconstructor(data: object, presence: Presence);[m
[32m+[m		[32mpublic applicationID: string;[m
[32m+[m		[32mpublic assets: RichPresenceAssets;[m
[32m+[m		[32mpublic details: string;[m
[32m+[m		[32mpublic name: string;[m
[32m+[m		[32mpublic readonly streaming: boolean;[m
[32m+[m		[32mpublic party: {[m
[32m+[m			[32mid: string;[m
[32m+[m			[32msize: [number, number];[m
[32m+[m		[32m};[m
[32m+[m		[32mpublic state: string;[m
[32m+[m		[32mpublic timestamps: {[m
[32m+[m			[32mstart: Date;[m
[32m+[m			[32mend: Date;[m
[32m+[m		[32m};[m
[32m+[m		[32mpublic readonly flags: string[];[m
[32m+[m		[32mpublic type: number;[m
[32m+[m		[32mpublic url: string;[m
[32m+[m		[32mpublic equals(game: Game): boolean;[m
[32m+[m		[32mpublic toString(): string;[m
[32m+[m		[32mprivate _flags: string[];[m
[32m+[m		[32mprivate syncID: string;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mexport class GroupDMChannel extends TextBasedChannel(Channel) {[m
[32m+[m		[32mconstructor(client: Client, data: object);[m
[32m+[m		[32mpublic applicationID: string;[m
[32m+[m		[32mpublic icon: string;[m
[32m+[m		[32mpublic lastMessageID: string;[m
[32m+[m		[32mpublic managed: boolean;[m
[32m+[m		[32mpublic messages: Collection<Snowflake, Message>;[m
[32m+[m		[32mpublic name: string;[m
[32m+[m		[32mpublic nicks: Collection<Snowflake, string>;[m
[32m+[m		[32mpublic readonly owner: User;[m
[32m+[m		[32mpublic ownerID: string;[m
[32m+[m		[32mpublic recipients: Collection<Snowflake, User>;[m
[32m+[m		[32mpublic addUser(accessTokenOrID: UserResolvable | string, nick?: string): Promise<GroupDMChannel>;[m
[32m+[m		[32mpublic equals(channel: GroupDMChannel): boolean;[m
[32m+[m		[32mpublic setIcon(icon: Base64Resolvable | BufferResolvable): Promise<GroupDMChannel>;[m
[32m+[m		[32mpublic toString(): string;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mexport class Guild {[m
[32m+[m		[32mconstructor(client: Client, data: object);[m
[32m+[m		[32mprivate readonly _sortedRoles: Collection<Snowflake, Role>;[m
[32m+[m		[32mprivate _sortedChannels(type: string): Collection<Snowflake, GuildChannel>;[m
[32m+[m		[32mprivate _sortPositionWithID(collection: Collection<any, any>): Collection<any, any>;[m
[32m+[m
[32m+[m		[32mprotected setup(data: any): void;[m
[32m+[m
[32m+[m		[32mpublic readonly afkChannel: VoiceChannel;[m
[32m+[m		[32mpublic afkChannelID: string;[m
[32m+[m		[32mpublic afkTimeout: number;[m
[32m+[m		[32mpublic applicationID: string;[m
[32m+[m		[32mpublic available: boolean;[m
[32m+[m		[32mpublic channels: Collection<Snowflake, GuildChannel>;[m
[32m+[m		[32mpublic defaultMessageNotifications: DefaultMessageNotifications | number;[m
[32m+[m		[32mpublic readonly client: Client;[m
[32m+[m		[32mpublic readonly createdAt: Date;[m
[32m+[m		[32mpublic readonly createdTimestamp: number;[m
[32m+[m		[32mpublic readonly defaultChannel: TextChannel;[m
[32m+[m		[32mpublic readonly defaultRole: Role;[m
[32m+[m		[32mpublic embedEnabled: boolean;[m
[32m+[m		[32mpublic emojis: Collection<Snowflake, Emoji>;[m
[32m+[m		[32mpublic explicitContentFilter: number;[m
[32m+[m		[32mpublic features: string[];[m
[32m+[m		[32mpublic icon: string;[m
[32m+[m		[32mpublic readonly iconURL: string;[m
[32m+[m		[32mpublic id: Snowflake;[m
[32m+[m		[32mpublic readonly joinedAt: Date;[m
[32m+[m		[32mpublic joinedTimestamp: number;[m
[32m+[m		[32mpublic large: boolean;[m
[32m+[m		[32mpublic readonly me: GuildMember;[m
[32m+[m		[32mpublic memberCount: number;[m
[32m+[m		[32mpublic members: Collection<Snowflake, GuildMember>;[m
[32m+[m		[32mpublic readonly messageNotifications: MessageNotifications;[m
[32m+[m		[32mpublic readonly mobilePush: boolean;[m
[32m+[m		[32mpublic readonly muted: boolean;[m
[32m+[m		[32mpublic name: string;[m
[32m+[m		[32mpublic readonly nameAcronym: string;[m
[32m+[m		[32mpublic readonly owner: GuildMember;[m
[32m+[m		[32mpublic ownerID: string;[m
[32m+[m		[32mpublic readonly position: number;[m
[32m+[m		[32mpublic presences: Collection<Snowflake, Presence>;[m
[32m+[m		[32mpublic region: string;[m
[32m+[m		[32mpublic roles: Collection<Snowflake, Role>;[m
[32m+[m		[32mpublic splash: string;[m
[32m+[m		[32mpublic readonly splashURL: string;[m
[32m+[m		[32mpublic readonly suppressEveryone: boolean;[m
[32m+[m		[32mpublic readonly systemChannel: GuildChannel;[m
[32m+[m		[32mpublic systemChannelID: Snowflake;[m
[32m+[m		[32mpublic readonly verified: boolean;[m
[32m+[m		[32mpublic verificationLevel: number;[m
[32m+[m		[32mpublic readonly voiceConnection: VoiceConnection;[m
[32m+[m		[32mpublic acknowledge(): Promise<Guild>;[m
[32m+[m		[32mpublic addMember(user: UserResolvable, options: AddGuildMemberOptions): Promise<GuildMember>;[m
[32m+[m		[32mpublic allowDMs(allow: boolean): Promise<Guild>;[m
[32m+[m		[32mpublic ban(user: UserResolvable, options?: BanOptions | number | string): Promise<GuildMember | User | string>;[m
[32m+[m		[32mpublic createChannel(name: string, options?: ChannelData): Promise<CategoryChannel | TextChannel | VoiceChannel>;[m
[32m+[m		[32mpublic createChannel(name: string, type?: 'category' | 'text' | 'voice' | 'news' | 'store', permissionOverwrites?: PermissionOverwrites[] | ChannelCreationOverwrites[], reason?: string): Promise<CategoryChannel | TextChannel | VoiceChannel>;[m
[32m+[m		[32mpublic createEmoji(attachment: BufferResolvable | Base64Resolvable, name: string, roles?: Collection<Snowflake, Role> | Role[], reason?: string): Promise<Emoji>;[m
[32m+[m		[32mpublic createRole(data?: RoleData, reason?: string): Promise<Role>;[m
[32m+[m		[32mpublic delete(): Promise<Guild>;[m
[32m+[m		[32mpublic deleteEmoji(emoji: Emoji | string, reason?: string): Promise<void>;[m
[32m+[m		[32mpublic edit(data: GuildEditData, reason?: string): Promise<Guild>;[m
[32m+[m		[32mpublic equals(guild: Guild): boolean;[m
[32m+[m		[32mpublic fetchAuditLogs(options?: GuildAuditLogsFetchOptions): Promise<GuildAuditLogs>;[m
[32m+[m		[32mpublic fetchBan(user: UserResolvable): Promise<BanInfo>;[m
[32m+[m		[32mpublic fetchBans(withReasons?: false): Promise<Collection<Snowflake, User>>;[m
[32m+[m		[32mpublic fetchBans(withReasons: true): Promise<Collection<Snowflake, BanInfo>>;[m
[32m+[m		[32mpublic fetchBans(withReasons: boolean): Promise<Collection<Snowflake, BanInfo | User>>;[m
[32m+[m		[32mpublic fetchEmbed(): Promise<GuildEmbedData>;[m
[32m+[m		[32mpublic fetchInvites(): Promise<Collection<Snowflake, Invite>>;[m
[32m+[m		[32mpublic fetchMember(user: UserResolvable, cache?: boolean): Promise<GuildMember>;[m
[32m+[m		[32mpublic fetchMembers(query?: string, limit?: number): Promise<Guild>;[m
[32m+[m		[32mpublic fetchVanityCode(): Promise<string>;[m
[32m+[m		[32mpublic fetchVoiceRegions(): Promise<Collection<string, VoiceRegion>>;[m
[32m+[m		[32mpublic fetchWebhooks(): Promise<Collection<Snowflake, Webhook>>;[m
[32m+[m		[32mpublic leave(): Promise<Guild>;[m
[32m+[m		[32mpublic member(user: UserResolvable): GuildMember;[m
[32m+[m		[32mpublic pruneMembers(days: number, dry?: boolean, reason?: string): Promise<number>;[m
[32m+[m		[32mpublic search(options?: MessageSearchOptions): Promise<MessageSearchResult>;[m
[32m+[m		[32mpublic setAFKChannel(afkChannel: ChannelResolvable, reason?: string): Promise<Guild>;[m
[32m+[m		[32mpublic setAFKTimeout(afkTimeout: number, reason?: string): Promise<Guild>;[m
[32m+[m		[32mpublic setChannelPosition(channel: string | GuildChannel, position: number, relative?: boolean): Promise<Guild>;[m
[32m+[m		[32mpublic setChannelPositions(channelPositions: ChannelPosition[]): Promise<Guild>;[m
[32m+[m		[32mpublic setDefaultMessageNotifications(defaultMessageNotifications: DefaultMessageNotifications, reason: string): Promise<Guild>;[m
[32m+[m		[32mpublic setEmbed(embed: GuildEmbedData, reason?: string): Promise<Guild>;[m
[32m+[m		[32mpublic setExplicitContentFilter(explicitContentFilter: number, reason?: string): Promise<Guild>;[m
[32m+[m		[32mpublic setIcon(icon: Base64Resolvable, reason?: string): Promise<Guild>;[m
[32m+[m		[32mpublic setName(name: string, reason?: string): Promise<Guild>;[m
[32m+[m		[32mpublic setOwner(owner: GuildMemberResolvable, reason?: string): Promise<Guild>;[m
[32m+[m		[32mpublic setPosition(position: number, relative?: boolean): Promise<Guild>;[m
[32m+[m		[32mpublic setRegion(region: string, reason?: string): Promise<Guild>;[m
[32m+[m		[32mpublic setRolePosition(role: string | Role, position: number, relative?: boolean): Promise<Guild>;[m
[32m+[m		[32mpublic setSplash(splash: Base64Resolvable, reason?: string): Promise<Guild>;[m
[32m+[m		[32mpublic setSystemChannel(systemChannel: ChannelResolvable, reason?: string): Promise<Guild>;[m
[32m+[m		[32mpublic setVerificationLevel(verificationLevel: number, reason?: string): Promise<Guild>;[m
[32m+[m		[32mpublic sync(): void;[m
[32m+[m		[32mpublic toString(): string;[m
[32m+[m		[32mpublic unban(user: UserResolvable, reason?: string): Promise<User>;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mexport class GuildAuditLogs {[m
[32m+[m		[32mconstructor(guild: Guild, data: object);[m
[32m+[m		[32mprivate webhooks: Collection<Snowflake, Webhook>;[m
[32m+[m
[32m+[m		[32mpublic entries: Collection<Snowflake, GuildAuditLogsEntry>;[m
[32m+[m
[32m+[m		[32mpublic static Actions: GuildAuditLogsActions;[m
[32m+[m		[32mpublic static Targets: GuildAuditLogsTargets;[m
[32m+[m		[32mpublic static Entry: typeof GuildAuditLogsEntry;[m
[32m+[m		[32mpublic static actionType(action: number): GuildAuditLogsActionType;[m
[32m+[m		[32mpublic static build(...args: any[]): Promise<GuildAuditLogs>;[m
[32m+[m		[32mpublic static targetType(target: number): GuildAuditLogsTarget;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mclass GuildAuditLogsEntry {[m
[32m+[m		[32mconstructor(logs: GuildAuditLogs, guild: Guild, data: object);[m
[32m+[m		[32mpublic action: GuildAuditLogsAction;[m
[32m+[m		[32mpublic actionType: GuildAuditLogsActionType;[m
[32m+[m		[32mpublic changes: AuditLogChange[];[m
[32m+[m		[32mpublic readonly createdAt: Date;[m
[32m+[m		[32mpublic readonly createdTimestamp: number;[m
[32m+[m		[32mpublic executor: User;[m
[32m+[m		[32mpublic extra: object | Role | GuildMember;[m
[32m+[m		[32mpublic id: Snowflake;[m
[32m+[m		[32mpublic reason: string;[m
[32m+[m		[32mpublic target: Guild | User | Role | Emoji | Invite | Webhook;[m
[32m+[m		[32mpublic targetType: GuildAuditLogsTarget;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mexport class GuildChannel extends Channel {[m
[32m+[m		[32mconstructor(guild: Guild, data: object);[m
[32m+[m		[32mpublic readonly calculatedPosition: number;[m
[32m+[m		[32mpublic readonly deletable: boolean;[m
[32m+[m		[32mpublic guild: Guild;[m
[32m+[m		[32mpublic readonly manageable: boolean;[m
[32m+[m		[32mpublic readonly messageNotifications: GuildChannelMessageNotifications;[m
[32m+[m		[32mpublic readonly muted: boolean;[m
[32m+[m		[32mpublic name: string;[m
[32m+[m		[32mpublic readonly parent: CategoryChannel;[m
[32m+[m		[32mpublic parentID: Snowflake;[m
[32m+[m		[32mpublic permissionOverwrites: Collection<Snowflake, PermissionOverwrites>;[m
[32m+[m		[32mpublic position: number;[m
[32m+[m		[32mpublic clone(name?: string, withPermissions?: boolean, withTopic?: boolean, reason?: string): Promise<GuildChannel>;[m
[32m+[m		[32mpublic createInvite(options?: InviteOptions, reason?: string): Promise<Invite>;[m
[32m+[m		[32mpublic delete(reason?: string): Promise<GuildChannel>;[m
[32m+[m		[32mpublic edit(data: ChannelData, reason?: string): Promise<GuildChannel>;[m
[32m+[m		[32mpublic equals(channel: GuildChannel): boolean;[m
[32m+[m		[32mpublic fetchInvites(): Promise<Collection<string, Invite>>;[m
[32m+[m		[32mpublic lockPermissions(): Promise<GuildChannel>;[m
[32m+[m		[32mpublic memberPermissions(member: GuildMemberResolvable): Permissions | null;[m
[32m+[m		[32mpublic overwritePermissions(userOrRole: RoleResolvable | UserResolvable, options: PermissionOverwriteOptions, reason?: string): Promise<void>;[m
[32m+[m		[32mpublic permissionsFor(memberOrRole: GuildMemberResolvable | RoleResolvable): Permissions | null;[m
[32m+[m		[32mpublic replacePermissionOverwrites(options?: { overwrites?: (PermissionOverwrites | ChannelCreationOverwrites)[] | Collection<Snowflake, ChannelCreationOverwrites>, reason?: string }): Promise<GuildChannel>;[m
[32m+[m		[32mpublic rolePermissions(role: RoleResolvable): Permissions;[m
[32m+[m		[32mpublic setName(name: string, reason?: string): Promise<GuildChannel>;[m
[32m+[m		[32mpublic setParent(parent: ChannelResolvable, reason?: string): Promise<GuildChannel>;[m
[32m+[m		[32mpublic setPosition(position: number, relative?: boolean): Promise<GuildChannel>;[m
[32m+[m		[32mpublic setTopic(topic: string, reason?: string): Promise<GuildChannel>;[m
[32m+[m		[32mpublic toString(): string;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mexport class GuildMember extends PartialTextBasedChannel() {[m
[32m+[m		[32mconstructor(guild: Guild, data: object);[m
[32m+[m		[32mpublic readonly bannable: boolean;[m
[32m+[m		[32mpublic readonly client: Client;[m
[32m+[m		[32mpublic readonly colorRole: Role;[m
[32m+[m		[32mpublic readonly deaf: boolean;[m
[32m+[m		[32mpublic readonly displayColor: number;[m
[32m+[m		[32mpublic readonly displayHexColor: string;[m
[32m+[m		[32mpublic readonly displayName: string;[m
[32m+[m		[32mpublic guild: Guild;[m
[32m+[m		[32mpublic readonly highestRole: Role;[m
[32m+[m		[32mpublic readonly hoistRole: Role;[m
[32m+[m		[32mpublic readonly id: Snowflake;[m
[32m+[m		[32mpublic readonly joinedAt: Date;[m
[32m+[m		[32mpublic joinedTimestamp: number;[m
[32m+[m		[32mpublic readonly kickable: boolean;[m
[32m+[m		[32mpublic lastMessageID: string;[m
[32m+[m		[32mpublic readonly mute: boolean;[m
[32m+[m		[32mpublic nickname: string;[m
[32m+[m		[32mpublic readonly manageable: boolean;[m
[32m+[m		[32mpublic readonly permissions: Permissions;[m
[32m+[m		[32mpublic readonly presence: Presence;[m
[32m+[m		[32mpublic readonly roles: Collection<Snowflake, Role>;[m
[32m+[m		[32mpublic selfDeaf: boolean;[m
[32m+[m		[32mpublic selfMute: boolean;[m
[32m+[m		[32mpublic serverDeaf: boolean;[m
[32m+[m		[32mpublic serverMute: boolean;[m
[32m+[m		[32mpublic speaking: boolean;[m
[32m+[m		[32mpublic user: User;[m
[32m+[m		[32mpublic readonly voiceChannel: VoiceChannel;[m
[32m+[m		[32mpublic voiceChannelID: string;[m
[32m+[m		[32mpublic voiceSessionID: string;[m
[32m+[m		[32mpublic addRole(role: Role | Snowflake, reason?: string): Promise<GuildMember>;[m
[32m+[m		[32mpublic addRoles(roles: Collection<Snowflake, Role> | Role[] | Snowflake[], reason?: string): Promise<GuildMember>;[m
[32m+[m		[32mpublic ban(options?: BanOptions | number | string): Promise<GuildMember>;[m
[32m+[m		[32mpublic createDM(): Promise<DMChannel>;[m
[32m+[m		[32mpublic deleteDM(): Promise<DMChannel>;[m
[32m+[m		[32mpublic edit(data: GuildMemberEditData, reason?: string): Promise<GuildMember>;[m
[32m+[m		[32mpublic hasPermission(permission: PermissionResolvable, explicit?: boolean, checkAdmin?: boolean, checkOwner?: boolean): boolean;[m
[32m+[m		[32mpublic hasPermissions(permission: PermissionResolvable, explicit?: boolean): boolean;[m
[32m+[m		[32mpublic kick(reason?: string): Promise<GuildMember>;[m
[32m+[m		[32mpublic missingPermissions(permissions: PermissionResolvable, explicit?: boolean): PermissionResolvable;[m
[32m+[m		[32mpublic permissionsIn(channel: ChannelResolvable): Permissions;[m
[32m+[m		[32mpublic removeRole(role: Role | Snowflake, reason?: string): Promise<GuildMember>;[m
[32m+[m		[32mpublic removeRoles(roles: Collection<Snowflake, Role> | Role[] | Snowflake[], reason?: string): Promise<GuildMember>;[m
[32m+[m		[32mpublic setDeaf(deaf: boolean, reason?: string): Promise<GuildMember>;[m
[32m+[m		[32mpublic setMute(mute: boolean, reason?: string): Promise<GuildMember>;[m
[32m+[m		[32mpublic setNickname(nickname: string, reason?: string): Promise<GuildMember>;[m
[32m+[m		[32mpublic setRoles(roles: Collection<Snowflake, Role> | Role[] | Snowflake[], reason?: string): Promise<GuildMember>;[m
[32m+[m		[32mpublic setVoiceChannel(voiceChannel: ChannelResolvable | null): Promise<GuildMember>;[m
[32m+[m		[32mpublic toString(): string;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mexport class Invite {[m
[32m+[m		[32mconstructor(client: Client, data: object);[m
[32m+[m		[32mpublic channel: GuildChannel | PartialGuildChannel;[m
[32m+[m		[32mpublic readonly client: Client;[m
[32m+[m		[32mpublic code: string;[m
[32m+[m		[32mpublic readonly createdAt: Date;[m
[32m+[m		[32mpublic createdTimestamp: number;[m
[32m+[m		[32mpublic readonly expiresAt: Date;[m
[32m+[m		[32mpublic readonly expiresTimestamp: number;[m
[32m+[m		[32mpublic guild: Guild | PartialGuild;[m
[32m+[m		[32mpublic inviter: User;[m
[32m+[m		[32mpublic maxAge: number;[m
[32m+[m		[32mpublic maxUses: number;[m
[32m+[m		[32mpublic memberCount: number;[m
[32m+[m		[32mpublic presenceCount: number;[m
[32m+[m		[32mpublic temporary: boolean;[m
[32m+[m		[32mpublic textChannelCount: number;[m
[32m+[m		[32mpublic readonly url: string;[m
[32m+[m		[32mpublic uses: number;[m
[32m+[m		[32mpublic voiceChannelCount: number;[m
[32m+[m		[32mpublic delete(reason?: string): Promise<Invite>;[m
[32m+[m		[32mpublic toString(): string;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mexport class Message {[m
[32m+[m		[32mconstructor(channel: TextChannel | DMChannel | GroupDMChannel, data: object, client: Client);[m
[32m+[m		[32mprivate _edits: Message[];[m
[32m+[m		[32mprivate patch(data: object): void;[m
[32m+[m
[32m+[m		[32mpublic attachments: Collection<Snowflake, MessageAttachment>;[m
[32m+[m		[32mpublic author: User;[m
[32m+[m		[32mpublic channel: TextChannel | DMChannel | GroupDMChannel;[m
[32m+[m		[32mpublic readonly cleanContent: string;[m
[32m+[m		[32mpublic readonly client: Client;[m
[32m+[m		[32mpublic content: string;[m
[32m+[m		[32mpublic readonly createdAt: Date;[m
[32m+[m		[32mpublic createdTimestamp: number;[m
[32m+[m		[32mpublic readonly deletable: boolean;[m
[32m+[m		[32mpublic readonly editable: boolean;[m
[32m+[m		[32mpublic readonly editedAt: Date;[m
[32m+[m		[32mpublic editedTimestamp: number;[m
[32m+[m		[32mpublic readonly edits: Message[];[m
[32m+[m		[32mpublic embeds: MessageEmbed[];[m
[32m+[m		[32mpublic readonly guild: Guild;[m
[32m+[m		[32mpublic hit: boolean;[m
[32m+[m		[32mpublic id: Snowflake;[m
[32m+[m		[32mpublic member: GuildMember;[m
[32m+[m		[32mpublic mentions: MessageMentions;[m
[32m+[m		[32mpublic nonce: string;[m
[32m+[m		[32mpublic readonly pinnable: boolean;[m
[32m+[m		[32mpublic pinned: boolean;[m
[32m+[m		[32mpublic reactions: Collection<Snowflake, MessageReaction>;[m
[32m+[m		[32mpublic system: boolean;[m
[32m+[m		[32mpublic tts: boolean;[m
[32m+[m		[32mpublic type: string;[m
[32m+[m		[32mpublic readonly url: string;[m
[32m+[m		[32mpublic webhookID: Snowflake;[m
[32m+[m		[32mpublic acknowledge(): Promise<Message>;[m
[32m+[m		[32mpublic awaitReactions(filter: CollectorFilter, options?: AwaitReactionsOptions): Promise<Collection<Snowflake, MessageReaction>>;[m
[32m+[m		[32mpublic clearReactions(): Promise<Message>;[m
[32m+[m		[32mpublic createReactionCollector(filter: CollectorFilter, options?: ReactionCollectorOptions): ReactionCollector;[m
[32m+[m		[32mpublic delete(timeout?: number): Promise<Message>;[m
[32m+[m		[32mpublic edit(content: StringResolvable, options?: MessageEditOptions | RichEmbed): Promise<Message>;[m
[32m+[m		[32mpublic editCode(lang: string, content: StringResolvable): Promise<Message>;[m
[32m+[m		[32mpublic equals(message: Message, rawData: object): boolean;[m
[32m+[m		[32mpublic fetchWebhook(): Promise<Webhook>;[m
[32m+[m		[32mpublic isMemberMentioned(member: GuildMember | User): boolean;[m
[32m+[m		[32mpublic isMentioned(data: GuildChannel | User | Role | Snowflake): boolean;[m
[32m+[m		[32mpublic pin(): Promise<Message>;[m
[32m+[m		[32mpublic react(emoji: string | Emoji | ReactionEmoji): Promise<MessageReaction>;[m
[32m+[m		[32mpublic reply(content?: StringResolvable, options?: MessageOptions): Promise<Message | Message[]>;[m
[32m+[m		[32mpublic reply(options?: MessageOptions): Promise<Message | Message[]>;[m
[32m+[m		[32mpublic toString(): string;[m
[32m+[m		[32mpublic unpin(): Promise<Message>;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mexport class MessageAttachment {[m
[32m+[m		[32mconstructor(message: Message, data: object);[m
[32m+[m		[32mpublic readonly client: Client;[m
[32m+[m		[32mpublic filename: string;[m
[32m+[m		[32mpublic filesize: number;[m
[32m+[m		[32mpublic height: number;[m
[32m+[m		[32mpublic id: Snowflake;[m
[32m+[m		[32mpublic message: Message;[m
[32m+[m		[32mpublic proxyURL: string;[m
[32m+[m		[32mpublic url: string;[m
[32m+[m		[32mpublic width: number;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mexport class MessageCollector extends Collector<Snowflake, Message> {[m
[32m+[m		[32mconstructor(channel: TextChannel | DMChannel | GroupDMChannel, filter: CollectorFilter, options?: MessageCollectorOptions);[m
[32m+[m		[32mpublic channel: Channel;[m
[32m+[m		[32mpublic options: MessageCollectorOptions;[m
[32m+[m		[32mpublic received: number;[m
[32m+[m
[32m+[m		[32mpublic cleanup(): void;[m
[32m+[m		[32mpublic handle(message: Message): CollectorHandler<Snowflake, Message>;[m
[32m+[m		[32mpublic postCheck(): string;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mexport class MessageEmbed {[m
[32m+[m		[32mconstructor(message: Message, data: object);[m
[32m+[m		[32mpublic author: MessageEmbedAuthor;[m
[32m+[m		[32mpublic readonly client: Client;[m
[32m+[m		[32mpublic color: number;[m
[32m+[m		[32mpublic readonly createdAt: Date;[m
[32m+[m		[32mpublic timestamp: number;[m
[32m+[m		[32mpublic description: string;[m
[32m+[m		[32mpublic fields: MessageEmbedField[];[m
[32m+[m		[32mpublic footer: MessageEmbedFooter;[m
[32m+[m		[32mpublic readonly hexColor: string;[m
[32m+[m		[32mpublic image: MessageEmbedImage;[m
[32m+[m		[32mpublic message: Message;[m
[32m+[m		[32mpublic provider: MessageEmbedProvider;[m
[32m+[m		[32mpublic thumbnail: MessageEmbedThumbnail;[m
[32m+[m		[32mpublic title: string;[m
[32m+[m		[32mpublic type: string;[m
[32m+[m		[32mpublic url: string;[m
[32m+[m		[32mpublic video: MessageEmbedVideo;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mexport class MessageEmbedAuthor {[m
[32m+[m		[32mconstructor(embed: MessageEmbed, data: object);[m
[32m+[m		[32mpublic embed: MessageEmbed;[m
[32m+[m		[32mpublic iconURL: string;[m
[32m+[m		[32mpublic name: string;[m
[32m+[m		[32mpublic url: string;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mexport class MessageEmbedField {[m
[32m+[m		[32mconstructor(embed: MessageEmbed, data: object);[m
[32m+[m		[32mpublic embed: MessageEmbed;[m
[32m+[m		[32mpublic inline: boolean;[m
[32m+[m		[32mpublic name: string;[m
[32m+[m		[32mpublic value: string;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mexport class MessageEmbedFooter {[m
[32m+[m		[32mconstructor(embed: MessageEmbed, data: object);[m
[32m+[m		[32mpublic embed: MessageEmbed;[m
[32m+[m		[32mpublic iconURL: string;[m
[32m+[m		[32mpublic proxyIconURL: string;[m
[32m+[m		[32mpublic text: string;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mexport class MessageEmbedImage {[m
[32m+[m		[32mconstructor(embed: MessageEmbed, data: object);[m
[32m+[m		[32mpublic embed: MessageEmbed;[m
[32m+[m		[32mpublic height: number;[m
[32m+[m		[32mpublic proxyURL: string;[m
[32m+[m		[32mpublic url: string;[m
[32m+[m		[32mpublic width: number;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mexport class MessageEmbedProvider {[m
[32m+[m		[32mconstructor(embed: MessageEmbed, data: object);[m
[32m+[m		[32mpublic embed: MessageEmbed;[m
[32m+[m		[32mpublic name: string;[m
[32m+[m		[32mpublic url: string;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mexport class MessageEmbedThumbnail {[m
[32m+[m		[32mconstructor(embed: MessageEmbed, data: object);[m
[32m+[m		[32mpublic embed: MessageEmbed;[m
[32m+[m		[32mpublic height: number;[m
[32m+[m		[32mpublic proxyURL: string;[m
[32m+[m		[32mpublic url: string;[m
[32m+[m		[32mpublic width: number;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mexport class MessageEmbedVideo {[m
[32m+[m		[32mconstructor(embed: MessageEmbed, data: object);[m
[32m+[m		[32mpublic embed: MessageEmbed;[m
[32m+[m		[32mpublic height: number;[m
[32m+[m		[32mpublic url: string;[m
[32m+[m		[32mpublic width: number;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mexport class MessageMentions {[m
[32m+[m		[32mprivate _channels: Collection<Snowflake, GuildChannel>;[m
[32m+[m		[32mprivate _client: Client;[m
[32m+[m		[32mprivate _content: Message;[m
[32m+[m		[32mprivate _guild: Guild;[m
[32m+[m		[32mprivate _members: Collection<Snowflake, GuildMember>;[m
[32m+[m
[32m+[m		[32mpublic readonly channels: Collection<Snowflake, TextChannel>;[m
[32m+[m		[32mpublic everyone: boolean;[m
[32m+[m		[32mpublic readonly members: Collection<Snowflake, GuildMember>;[m
[32m+[m		[32mpublic roles: Collection<Snowflake, Role>;[m
[32m+[m		[32mpublic users: Collection<Snowflake, User>;[m
[32m+[m
[32m+[m		[32mpublic static CHANNELS_PATTERN: RegExp;[m
[32m+[m		[32mpublic static EVERYONE_PATTERN: RegExp;[m
[32m+[m		[32mpublic static ROLES_PATTERN: RegExp;[m
[32m+[m		[32mpublic static USERS_PATTERN: RegExp;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mexport class MessageReaction {[m
[32m+[m		[32mconstructor(message: Message, emoji: object, count: number, me: boolean);[m
[32m+[m		[32mpublic count: number;[m
[32m+[m		[32mpublic readonly emoji: Emoji | ReactionEmoji;[m
[32m+[m		[32mpublic me: boolean;[m
[32m+[m		[32mpublic message: Message;[m
[32m+[m		[32mpublic users: Collection<string, User>;[m
[32m+[m		[32mpublic fetchUsers(limit?: number, options?: { after?: number; before?: number }): Promise<Collection<Snowflake, User>>;[m
[32m+[m		[32mpublic remove(user?: UserResolvable): Promise<MessageReaction>;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mexport class NewsChannel extends TextChannel {[m
[32m+[m		[32mconstructor(guild: Guild, data: object);[m
[32m+[m		[32mpublic rateLimitPerUser: 0;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mexport class OAuth2Application {[m
[32m+[m		[32mconstructor(client: Client, data: object);[m
[32m+[m		[32mpublic bot: object;[m
[32m+[m		[32mpublic botPublic: boolean;[m
[32m+[m		[32mpublic botRequireCodeGrant: boolean;[m
[32m+[m		[32mpublic readonly client: Client;[m
[32m+[m		[32mpublic readonly createdAt: Date;[m
[32m+[m		[32mpublic readonly createdTimestamp: number;[m
[32m+[m		[32mpublic description: string;[m
[32m+[m		[32mpublic flags: number;[m
[32m+[m		[32mpublic icon: string;[m
[32m+[m		[32mpublic iconURL: string;[m
[32m+[m		[32mpublic id: Snowflake;[m
[32m+[m		[32mpublic name: string;[m
[32m+[m		[32mpublic owner: User;[m
[32m+[m		[32mpublic redirectURIs: string[];[m
[32m+[m		[32mpublic rpcApplicationState: boolean;[m
[32m+[m		[32mpublic rpcOrigins: string[];[m
[32m+[m		[32mpublic secret: string;[m
[32m+[m		[32mpublic reset(): OAuth2Application;[m
[32m+[m		[32mpublic toString(): string;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mexport class PartialGuild {[m
[32m+[m		[32mconstructor(client: Client, data: object);[m
[32m+[m		[32mpublic readonly client: Client;[m
[32m+[m		[32mpublic icon: string;[m
[32m+[m		[32mpublic id: Snowflake;[m
[32m+[m		[32mpublic name: string;[m
[32m+[m		[32mpublic splash: string;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mexport class PartialGuildChannel {[m
[32m+[m		[32mconstructor(client: Client, data: object);[m
[32m+[m		[32mpublic readonly client: Client;[m
[32m+[m		[32mpublic id: Snowflake;[m
[32m+[m		[32mpublic name: string;[m
[32m+[m		[32mpublic type: string;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mexport class PermissionOverwrites {[m
[32m+[m		[32mconstructor(guildChannel: GuildChannel, data: object);[m
[32m+[m		[32mpublic allow: number;[m
[32m+[m		[32mpublic allowed: Permissions;[m
[32m+[m		[32mpublic channel: GuildChannel;[m
[32m+[m		[32mpublic denied: Permissions;[m
[32m+[m		[32mpublic deny: number;[m
[32m+[m		[32mpublic id: Snowflake;[m
[32m+[m		[32mpublic type: string;[m
[32m+[m		[32mpublic delete(reason?: string): Promise<PermissionOverwrites>;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mexport class Permissions {[m
[32m+[m		[32mconstructor(permissions: PermissionResolvable);[m
[32m+[m		[32mconstructor(member: GuildMember, permissions: PermissionResolvable);[m
[32m+[m		[32mprivate readonly raw: number;[m
[32m+[m
[32m+[m		[32mpublic bitfield: number;[m
[32m+[m		[32mpublic member: GuildMember;[m
[32m+[m		[32mpublic add(...permissions: PermissionResolvable[]): this;[m
[32m+[m		[32mpublic freeze(): this;[m
[32m+[m		[32mpublic has(permission: PermissionResolvable, checkAdmin?: boolean): boolean;[m
[32m+[m		[32mpublic hasPermission(permission: PermissionResolvable, explicit?: boolean): boolean;[m
[32m+[m		[32mpublic hasPermissions(permissions: PermissionResolvable, explicit?: boolean): boolean;[m
[32m+[m		[32mpublic missing(permissions: PermissionResolvable, checkAdmin?: boolean): PermissionResolvable;[m
[32m+[m		[32mpublic missingPermissions(permissions: PermissionResolvable, checkAdmin?: boolean): PermissionResolvable;[m
[32m+[m		[32mpublic remove(...permissions: PermissionResolvable[]): this;[m
[32m+[m		[32mpublic serialize(checkAdmin?: boolean): PermissionObject;[m
[32m+[m		[32mpublic toArray(checkAdmin?: boolean): PermissionString[];[m
[32m+[m		[32mpublic valueOf(): number;[m
[32m+[m
[32m+[m		[32mpublic static ALL: number;[m
[32m+[m		[32mpublic static DEFAULT: number;[m
[32m+[m		[32mpublic static FLAGS: PermissionFlags;[m
[32m+[m		[32mpublic static resolve(permission: PermissionResolvable): number;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mexport class Presence {[m
[32m+[m		[32mconstructor(data: object, client: Client);[m
[32m+[m		[32mpublic readonly client: Client;[m
[32m+[m		[32mpublic game: Game;[m
[32m+[m		[32mpublic status: PresenceStatusData;[m
[32m+[m		[32mpublic clientStatus: ClientPresenceStatusData;[m
[32m+[m		[32mpublic equals(presence: Presence): boolean;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mexport class ReactionCollector extends Collector<Snowflake, MessageReaction> {[m
[32m+[m		[32mconstructor(message: Message, filter: CollectorFilter, options?: ReactionCollectorOptions);[m
[32m+[m		[32mpublic message: Message;[m
[32m+[m		[32mpublic options: ReactionCollectorOptions;[m
[32m+[m		[32mpublic total: number;[m
[32m+[m		[32mpublic users: Collection<Snowflake, User>;[m
[32m+[m
[32m+[m		[32mpublic cleanup(): void;[m
[32m+[m		[32mpublic handle(reaction: MessageReaction): CollectorHandler<Snowflake, MessageReaction>;[m
[32m+[m		[32mpublic postCheck(reaction: MessageReaction, user: User): string;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mexport class ReactionEmoji {[m
[32m+[m		[32mconstructor(reaction: MessageReaction, name: string, id: string);[m
[32m+[m		[32mpublic id: Snowflake;[m
[32m+[m		[32mpublic readonly identifier: string;[m
[32m+[m		[32mpublic name: string;[m
[32m+[m		[32mpublic reaction: MessageReaction;[m
[32m+[m		[32mpublic toString(): string;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mclass RequestHandler {[m
[32m+[m		[32mconstructor(restManager: object);[m
[32m+[m		[32mpublic readonly globalLimit: boolean;[m
[32m+[m		[32mpublic queue: object[];[m
[32m+[m		[32mpublic restManager: object;[m
[32m+[m		[32mpublic handle(): void;[m
[32m+[m		[32mpublic push(request: object): void;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mexport class RichEmbed {[m
[32m+[m		[32mconstructor(data?: RichEmbedOptions | MessageEmbed);[m
[32m+[m		[32mprivate _apiTransform(): object;[m
[32m+[m
[32m+[m		[32mpublic author?: { name: string; url?: string; icon_url?: string; };[m
[32m+[m		[32mpublic color?: number;[m
[32m+[m		[32mpublic description?: string;[m
[32m+[m		[32mpublic fields?: { name: string; value: string; inline?: boolean; }[];[m
[32m+[m		[32mpublic file?: Attachment | string | FileOptions;[m
[32m+[m		[32mpublic files?: Array<Attachment | string | FileOptions>;[m
[32m+[m		[32mpublic footer?: { text?: string; icon_url?: string; };[m
[32m+[m		[32mpublic image?: { url: string; proxy_url?: string; height?: number; width?: number; };[m
[32m+[m		[32mpublic readonly length: number;[m
[32m+[m		[32mpublic thumbnail?: { url: string; height?: number; width?: number; };[m
[32m+[m		[32mpublic timestamp?: Date;[m
[32m+[m		[32mpublic title?: string;[m
[32m+[m		[32mpublic url?: string;[m
[32m+[m		[32mpublic addBlankField(inline?: boolean): this;[m
[32m+[m		[32mpublic addField(name: StringResolvable, value: StringResolvable, inline?: boolean): this;[m
[32m+[m		[32mpublic attachFile(file: Attachment | FileOptions | string): this;[m
[32m+[m		[32mpublic attachFiles(file: Array<Attachment | FileOptions | string>): this;[m
[32m+[m		[32mpublic setAuthor(name: StringResolvable, icon?: string, url?: string): this;[m
[32m+[m		[32mpublic setColor(color: ColorResolvable): this;[m
[32m+[m		[32mpublic setDescription(description: StringResolvable): this;[m
[32m+[m		[32mpublic setFooter(text: StringResolvable, icon?: string): this;[m
[32m+[m		[32mpublic setImage(url: string): this;[m
[32m+[m		[32mpublic setThumbnail(url: string): this;[m
[32m+[m		[32mpublic setTimestamp(timestamp?: Date | number): this;[m
[32m+[m		[32mpublic setTitle(title: StringResolvable): this;[m
[32m+[m		[32mpublic setURL(url: string): this;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mexport class RichPresenceAssets {[m
[32m+[m		[32mconstructor(game: Game, assets: object);[m
[32m+[m		[32mpublic largeImage: Snowflake;[m
[32m+[m		[32mpublic largeText: string;[m
[32m+[m		[32mpublic smallImage: Snowflake;[m
[32m+[m		[32mpublic smallText: string;[m
[32m+[m		[32mpublic readonly smallImageURL: string;[m
[32m+[m		[32mpublic readonly largeImageURL: string;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mexport class Role {[m
[32m+[m		[32mconstructor(guild: Guild, data: object);[m
[32m+[m		[32mpublic readonly calculatedPosition: number;[m
[32m+[m		[32mpublic readonly client: Client;[m
[32m+[m		[32mpublic color: number;[m
[32m+[m		[32mpublic readonly createdAt: Date;[m
[32m+[m		[32mpublic readonly createdTimestamp: number;[m
[32m+[m		[32mpublic readonly editable: boolean;[m
[32m+[m		[32mpublic guild: Guild;[m
[32m+[m		[32mpublic readonly hexColor: string;[m
[32m+[m		[32mpublic hoist: boolean;[m
[32m+[m		[32mpublic id: Snowflake;[m
[32m+[m		[32mpublic managed: boolean;[m
[32m+[m		[32mpublic readonly members: Collection<Snowflake, GuildMember>;[m
[32m+[m		[32mpublic mentionable: boolean;[m
[32m+[m		[32mpublic name: string;[m
[32m+[m		[32mpublic permissions: number;[m
[32m+[m		[32mpublic position: number;[m
[32m+[m		[32mpublic comparePositionTo(role: Role): number;[m
[32m+[m		[32mpublic delete(reason?: string): Promise<Role>;[m
[32m+[m		[32mpublic edit(data: RoleData, reason?: string): Promise<Role>;[m
[32m+[m		[32mpublic equals(role: Role): boolean;[m
[32m+[m		[32mpublic hasPermission(permission: PermissionResolvable, explicit?: boolean, checkAdmin?: boolean): boolean;[m
[32m+[m		[32mpublic hasPermissions(permissions: PermissionResolvable, explicit?: boolean): boolean;[m
[32m+[m		[32mpublic serialize(): PermissionObject;[m
[32m+[m		[32mpublic setColor(color: string | number, reason?: string): Promise<Role>;[m
[32m+[m		[32mpublic setHoist(hoist: boolean, reason?: string): Promise<Role>;[m
[32m+[m		[32mpublic setMentionable(mentionable: boolean, reason?: string): Promise<Role>;[m
[32m+[m		[32mpublic setName(name: string, reason?: string): Promise<Role>;[m
[32m+[m		[32mpublic setPermissions(permissions: PermissionResolvable, reason?: string): Promise<Role>;[m
[32m+[m		[32mpublic setPosition(position: number, relative?: boolean): Promise<Role>;[m
[32m+[m		[32mpublic toString(): string;[m
[32m+[m
[32m+[m		[32mpublic static comparePositions(role1: Role, role2: Role): number;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mclass SecretKey {[m
[32m+[m		[32mconstructor(key: Uint8Array);[m
[32m+[m		[32mpublic key: Uint8Array;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mclass SequentialRequestHandler extends RequestHandler {[m
[32m+[m		[32mconstructor(restManager: object, endpoint: string);[m
[32m+[m		[32mpublic busy: boolean;[m
[32m+[m		[32mpublic endpoint: string;[m
[32m+[m		[32mpublic readonly globalLimit: boolean;[m
[32m+[m		[32mpublic queue: object[];[m
[32m+[m		[32mpublic restManager: object;[m
[32m+[m		[32mpublic timeDifference: number;[m
[32m+[m		[32mpublic execute(item: object): Promise<object | Error>;[m
[32m+[m		[32mpublic handle(): void;[m
[32m+[m		[32mpublic push(request: object): void;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mexport class Shard extends EventEmitter {[m
[32m+[m		[32mconstructor(manager: ShardingManager, id: number, args?: string[]);[m
[32m+[m		[32mprivate _exitListener: Function;[m
[32m+[m		[32mprivate _handleExit(respawn?: boolean): void;[m
[32m+[m		[32mprivate _handleMessage(message: any): void;[m
[32m+[m
[32m+[m		[32mpublic env: object;[m
[32m+[m		[32mpublic id: string;[m
[32m+[m		[32mpublic manager: ShardingManager;[m
[32m+[m		[32mpublic process: ChildProcess;[m
[32m+[m		[32mpublic readonly: boolean;[m
[32m+[m		[32mpublic eval(script: string): Promise<any>;[m
[32m+[m		[32mpublic fetchClientValue(prop: string): Promise<any>;[m
[32m+[m		[32mpublic kill(): void;[m
[32m+[m		[32mpublic respawn(delay?: number): Promise<ChildProcess>;[m
[32m+[m		[32mpublic spawn(args?: string[], execArgv?: string[]): Promise<ChildProcess>;[m
[32m+[m		[32mpublic send(message: any): Promise<Shard>;[m
[32m+[m
[32m+[m		[32mpublic on(event: 'death', listener: () => void): this;[m
[32m+[m		[32mpublic on(event: 'disconnect', listener: () => void): this;[m
[32m+[m		[32mpublic on(event: 'message', listener: (message: any) => void): this;[m
[32m+[m		[32mpublic on(event: 'ready', listener: () => void): this;[m
[32m+[m		[32mpublic on(event: 'reconnecting', listener: () => void): this;[m
[32m+[m		[32mpublic on(event: string, listener: Function): this;[m
[32m+[m
[32m+[m		[32mpublic once(event: 'death', listener: () => void): this;[m
[32m+[m		[32mpublic once(event: 'disconnect', listener: () => void): this;[m
[32m+[m		[32mpublic once(event: 'message', listener: (message: any) => void): this;[m
[32m+[m		[32mpublic once(event: 'ready', listener: () => void): this;[m
[32m+[m		[32mpublic once(event: 'reconnecting', listener: () => void): this;[m
[32m+[m		[32mpublic once(event: string, listener: Function): this;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mexport class ShardClientUtil {[m
[32m+[m		[32mconstructor(client: Client);[m
[32m+[m		[32mprivate _handleMessage(message: any): void;[m
[32m+[m		[32mprivate _respond(type: string, message: any): void;[m
[32m+[m
[32m+[m		[32mpublic readonly count: number;[m
[32m+[m		[32mpublic readonly id: number;[m
[32m+[m		[32mpublic broadcastEval(script: string): Promise<any[]>;[m
[32m+[m		[32mpublic fetchClientValues(prop: string): Promise<any[]>;[m
[32m+[m		[32mpublic send(message: any): Promise<void>;[m
[32m+[m
[32m+[m		[32mpublic static singleton(client: Client): ShardClientUtil;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mexport class ShardingManager extends EventEmitter {[m
[32m+[m		[32mconstructor(file: string, options?: {[m
[32m+[m			[32mtotalShards?: number | 'auto';[m
[32m+[m			[32mrespawn?: boolean;[m
[32m+[m			[32mshardArgs?: string[];[m
[32m+[m			[32mtoken?: string;[m
[32m+[m		[32m});[m
[32m+[m		[32mprivate _spawn(amount: number, delay: number): Promise<Collection<number, Shard>>;[m
[32m+[m
[32m+[m		[32mpublic execArgv: string[];[m
[32m+[m		[32mpublic file: string;[m
[32m+[m		[32mpublic respawn: boolean;[m
[32m+[m		[32mpublic shardArgs: string[];[m
[32m+[m		[32mpublic shards: Collection<number, Shard>;[m
[32m+[m		[32mpublic token: string;[m
[32m+[m		[32mpublic totalShards: number | string;[m
[32m+[m		[32mpublic broadcast(message: any): Promise<Shard[]>;[m
[32m+[m		[32mpublic broadcastEval(script: string): Promise<any[]>;[m
[32m+[m		[32mpublic createShard(id: number): Promise<Shard>;[m
[32m+[m		[32mpublic fetchClientValues(prop: string): Promise<any[]>;[m
[32m+[m		[32mpublic respawnAll(shardDelay?: number, respawnDelay?: number, waitForReady?: true, currentShardIndex?: number): Promise<Collection<number, Shard>>;[m
[32m+[m		[32mpublic spawn(amount?: number, delay?: number): Promise<Collection<number, Shard>>;[m
[32m+[m
[32m+[m		[32mpublic on(event: 'launch', listener: (shard: Shard) => void): this;[m
[32m+[m		[32mpublic on(event: 'message', listener: (shard: Shard, message: any) => void): this;[m
[32m+[m		[32mpublic on(event: string, listener: Function): this;[m
[32m+[m
[32m+[m		[32mpublic once(event: 'launch', listener: (shard: Shard) => void): this;[m
[32m+[m		[32mpublic once(event: 'message', listener: (shard: Shard, message: any) => void): this;[m
[32m+[m		[32mpublic once(event: string, listener: Function): this;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mexport class SnowflakeUtil {[m
[32m+[m		[32mpublic static deconstruct(snowflake: Snowflake): DeconstructedSnowflake;[m
[32m+[m		[32mpublic static generate(timestamp?: number | Date): Snowflake;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mexport class StoreChannel extends GuildChannel {[m
[32m+[m		[32mconstructor(guild: Guild, data: object);[m
[32m+[m		[32mpublic nsfw: boolean;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mexport class StreamDispatcher extends VolumeInterface {[m
[32m+[m		[32mconstructor(player: AudioPlayer, stream: NodeJS.ReadableStream, streamOptions: StreamOptions);[m
[32m+[m		[32mpublic destroyed: boolean;[m
[32m+[m		[32mpublic readonly passes: number;[m
[32m+[m		[32mpublic paused: boolean;[m
[32m+[m		[32mpublic player: AudioPlayer;[m
[32m+[m		[32mpublic stream: ReadableStream | VoiceBroadcast;[m
[32m+[m		[32mpublic readonly time: number;[m
[32m+[m		[32mpublic readonly totalStreamTime: number;[m
[32m+[m		[32mpublic end(reason?: string): void;[m
[32m+[m		[32mpublic pause(): void;[m
[32m+[m		[32mpublic resume(): void;[m
[32m+[m		[32mpublic setBitrate(bitrate: number | 'auto'): void;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mexport class TextChannel extends TextBasedChannel(GuildChannel) {[m
[32m+[m		[32mconstructor(guild: Guild, data: object);[m
[32m+[m		[32mpublic lastMessageID: string;[m
[32m+[m		[32mpublic readonly members: Collection<Snowflake, GuildMember>;[m
[32m+[m		[32mpublic messages: Collection<Snowflake, Message>;[m
[32m+[m		[32mpublic nsfw: boolean;[m
[32m+[m		[32mpublic topic: string;[m
[32m+[m		[32mpublic setRateLimitPerUser(rateLimitPerUser: number, reason?: string): Promise<TextChannel>;[m
[32m+[m		[32mpublic createWebhook(name: string, avatar: BufferResolvable, reason?: string): Promise<Webhook>;[m
[32m+[m		[32mpublic fetchWebhooks(): Promise<Collection<Snowflake, Webhook>>;[m
[32m+[m		[32mpublic setNSFW(nsfw: boolean, reason: string): Promise<this>;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mexport class User extends PartialTextBasedChannel() {[m
[32m+[m		[32mconstructor(client: Client, data: object);[m
[32m+[m		[32mpublic avatar: string;[m
[32m+[m		[32mpublic readonly avatarURL: string;[m
[32m+[m		[32mpublic bot: boolean;[m
[32m+[m		[32mpublic readonly client: Client;[m
[32m+[m		[32mpublic readonly createdAt: Date;[m
[32m+[m		[32mpublic readonly createdTimestamp: number;[m
[32m+[m		[32mpublic readonly defaultAvatarURL: string;[m
[32m+[m		[32mpublic discriminator: string;[m
[32m+[m		[32mpublic readonly displayAvatarURL: string;[m
[32m+[m		[32mpublic readonly dmChannel: DMChannel;[m
[32m+[m		[32mpublic id: Snowflake;[m
[32m+[m		[32mpublic lastMessageID: string;[m
[32m+[m		[32mpublic readonly note: string;[m
[32m+[m		[32mpublic readonly presence: Presence;[m
[32m+[m		[32mpublic readonly tag: string;[m
[32m+[m		[32mpublic username: string;[m
[32m+[m		[32mpublic addFriend(): Promise<User>;[m
[32m+[m		[32mpublic block(): Promise<User>;[m
[32m+[m		[32mpublic createDM(): Promise<DMChannel>;[m
[32m+[m		[32mpublic deleteDM(): Promise<DMChannel>;[m
[32m+[m		[32mpublic equals(user: User): boolean;[m
[32m+[m		[32mpublic fetchProfile(): Promise<UserProfile>;[m
[32m+[m		[32mpublic removeFriend(): Promise<User>;[m
[32m+[m		[32mpublic setNote(note: string): Promise<User>;[m
[32m+[m		[32mpublic toString(): string;[m
[32m+[m		[32mpublic typingDurationIn(channel: ChannelResolvable): number;[m
[32m+[m		[32mpublic typingIn(channel: ChannelResolvable): boolean;[m
[32m+[m		[32mpublic typingSinceIn(channel: ChannelResolvable): Date;[m
[32m+[m		[32mpublic unblock(): Promise<User>;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mexport class UserConnection {[m
[32m+[m		[32mconstructor(user: User, data: object);[m
[32m+[m		[32mpublic id: string;[m
[32m+[m		[32mpublic integrations: object[];[m
[32m+[m		[32mpublic name: string;[m
[32m+[m		[32mpublic revoked: boolean;[m
[32m+[m		[32mpublic type: string;[m
[32m+[m		[32mpublic user: User;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mexport class UserProfile {[m
[32m+[m		[32mconstructor(user: User, data: object);[m
[32m+[m		[32mpublic readonly client: Client;[m
[32m+[m		[32mpublic connections: Collection<string, UserConnection>;[m
[32m+[m		[32mpublic mutualGuilds: Collection<Snowflake, Guild>;[m
[32m+[m		[32mpublic premium: boolean;[m
[32m+[m		[32mpublic premiumSince: Date;[m
[32m+[m		[32mpublic user: User;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mexport class Util {[m
[32m+[m		[32mpublic static arraysEqual(a: any[], b: any[]): boolean;[m
[32m+[m		[32mpublic static cloneObject(obj: object): object;[m
[32m+[m		[32mpublic static convertToBuffer(ab: ArrayBuffer | string): Buffer;[m
[32m+[m		[32mpublic static delayFor(ms: number): Promise<void>;[m
[32m+[m		[32mpublic static escapeMarkdown(text: string, onlyCodeBlock?: boolean, onlyInlineCode?: boolean): string;[m
[32m+[m		[32mpublic static fetchRecommendedShards(token: string, guildsPerShard?: number): Promise<number>;[m
[32m+[m		[32mpublic static makeError(obj: { name: string, message: string, stack: string }): Error;[m
[32m+[m		[32mpublic static makePlainError(err: Error): object;[m
[32m+[m		[32mpublic static mergeDefault(def: object, given: object): object;[m
[32m+[m		[32mpublic static moveElementInArray(array: any[], element: any, newIndex: number, offset?: boolean): number;[m
[32m+[m		[32mpublic static parseEmoji(text: string): { animated: boolean; name: string; id: string; };[m
[32m+[m		[32mpublic static splitMessage(text: string, options?: SplitOptions): string | string[];[m
[32m+[m		[32mpublic static str2ab(str: string): ArrayBuffer;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mexport class VoiceBroadcast extends EventEmitter {[m
[32m+[m		[32mconstructor(client: Client);[m
[32m+[m		[32mpublic readonly client: Client;[m
[32m+[m		[32mpublic currentTranscoder: object;[m
[32m+[m		[32mpublic readonly dispatchers: StreamDispatcher[];[m
[32m+[m		[32mpublic prism: object;[m
[32m+[m		[32mpublic destroy(): void;[m
[32m+[m		[32mpublic end(): void;[m
[32m+[m		[32mpublic pause(): void;[m
[32m+[m		[32mpublic playArbitraryInput(input: string, options?: StreamOptions): VoiceBroadcast;[m
[32m+[m		[32mpublic playConvertedStream(stream: ReadableStream, options?: StreamOptions): VoiceBroadcast;[m
[32m+[m		[32mpublic playFile(file: string, options?: StreamOptions): StreamDispatcher;[m
[32m+[m		[32mpublic playOpusStream(stream: ReadableStream, options?: StreamOptions): StreamDispatcher;[m
[32m+[m		[32mpublic playStream(stream: ReadableStream, options?: StreamOptions): VoiceBroadcast;[m
[32m+[m		[32mpublic resume(): void;[m
[32m+[m
[32m+[m		[32mpublic on(event: string, listener: Function): this;[m
[32m+[m		[32mpublic on(event: 'end', listener: () => void): this;[m
[32m+[m		[32mpublic on(event: 'error', listener: (error: Error) => void): this;[m
[32m+[m		[32mpublic on(event: 'subscribe', listener: (dispatcher: StreamDispatcher) => void): this;[m
[32m+[m		[32mpublic on(event: 'unsubscribe', listener: (dispatcher: StreamDispatcher) => void): this;[m
[32m+[m		[32mpublic on(event: 'warn', listener: (warning: string | Error) => void): this;[m
[32m+[m		[32mpublic on(event: string, listener: Function): this;[m
[32m+[m
[32m+[m		[32mpublic once(event: 'end', listener: () => void): this;[m
[32m+[m		[32mpublic once(event: 'error', listener: (error: Error) => void): this;[m
[32m+[m		[32mpublic once(event: 'subscribe', listener: (dispatcher: StreamDispatcher) => void): this;[m
[32m+[m		[32mpublic once(event: 'unsubscribe', listener: (dispatcher: StreamDispatcher) => void): this;[m
[32m+[m		[32mpublic once(event: 'warn', listener: (warning: string | Error) => void): this;[m
[32m+[m		[32mpublic once(event: string, listener: Function): this;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mexport class VoiceChannel extends GuildChannel {[m
[32m+[m		[32mconstructor(guild: Guild, data: object);[m
[32m+[m		[32mpublic bitrate: number;[m
[32m+[m		[32mpublic readonly connection: VoiceConnection;[m
[32m+[m		[32mpublic readonly full: boolean;[m
[32m+[m		[32mpublic readonly joinable: boolean;[m
[32m+[m		[32mpublic members: Collection<Snowflake, GuildMember>;[m
[32m+[m		[32mpublic readonly speakable: boolean;[m
[32m+[m		[32mpublic userLimit: number;[m
[32m+[m		[32mpublic join(): Promise<VoiceConnection>;[m
[32m+[m		[32mpublic leave(): void;[m
[32m+[m		[32mpublic setBitrate(bitrate: number, reason?: string): Promise<VoiceChannel>;[m
[32m+[m		[32mpublic setUserLimit(userLimit: number, reason?: string): Promise<VoiceChannel>;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mexport class VoiceConnection extends EventEmitter {[m
[32m+[m		[32mconstructor(voiceManager: ClientVoiceManager, channel: VoiceChannel);[m
[32m+[m		[32mprivate authentication: object;[m
[32m+[m		[32mprivate sockets: object;[m
[32m+[m		[32mprivate ssrcMap: Map<number, boolean>;[m
[32m+[m		[32mprivate authenticate(): void;[m
[32m+[m		[32mprivate authenticateFailed(reason: string): void;[m
[32m+[m		[32mprivate checkAuthenticated(): void;[m
[32m+[m		[32mprivate cleanup(): void;[m
[32m+[m		[32mprivate connect(): void;[m
[32m+[m		[32mprivate onReady(data: object): void;[m
[32m+[m		[32mprivate onSessionDescription(mode: string, secret: string): void;[m
[32m+[m		[32mprivate onSpeaking(data: object): void;[m
[32m+[m		[32mprivate reconnect(token: string, endpoint: string): void;[m
[32m+[m		[32mprivate setSpeaking(value: boolean): void;[m
[32m+[m		[32mprivate updateChannel(channel: VoiceChannel): void;[m
[32m+[m
[32m+[m		[32mpublic channel: VoiceChannel;[m
[32m+[m		[32mpublic readonly client: Client;[m
[32m+[m		[32mpublic readonly dispatcher: StreamDispatcher;[m
[32m+[m		[32mpublic player: AudioPlayer;[m
[32m+[m		[32mpublic prism: object;[m
[32m+[m		[32mpublic receivers: VoiceReceiver[];[m
[32m+[m		[32mpublic speaking: boolean;[m
[32m+[m		[32mpublic status: number;[m
[32m+[m		[32mpublic voiceManager: ClientVoiceManager;[m
[32m+[m		[32mpublic createReceiver(): VoiceReceiver;[m
[32m+[m		[32mpublic disconnect(): void;[m
[32m+[m		[32mpublic playArbitraryInput(input: string, options?: StreamOptions): StreamDispatcher;[m
[32m+[m		[32mpublic playBroadcast(broadcast: VoiceBroadcast, options?: StreamOptions): StreamDispatcher;[m
[32m+[m		[32mpublic playConvertedStream(stream: ReadableStream, options?: StreamOptions): StreamDispatcher;[m
[32m+[m		[32mpublic playFile(file: string, options?: StreamOptions): StreamDispatcher;[m
[32m+[m		[32mpublic playOpusStream(steam: ReadableStream, options?: StreamOptions): StreamDispatcher;[m
[32m+[m		[32mpublic playStream(stream: ReadableStream, options?: StreamOptions): StreamDispatcher;[m
[32m+[m		[32mpublic sendVoiceStateUpdate(options: object): void;[m
[32m+[m		[32mpublic setSessionID(sessionID: string): void;[m
[32m+[m		[32mpublic setTokenAndEndpoint(token: string, endpoint: string): void;[m
[32m+[m
[32m+[m		[32mpublic on(event: 'authenticated', listener: () => void): this;[m
[32m+[m		[32mpublic on(event: 'debug', listener: (message: string) => void): this;[m
[32m+[m		[32mpublic on(event: 'disconnect', listener: (error: Error) => void): this;[m
[32m+[m		[32mpublic on(event: 'error', listener: (error: Error) => void): this;[m
[32m+[m		[32mpublic on(event: 'failed', listener: (error: Error) => void): this;[m
[32m+[m		[32mpublic on(event: 'newSession', listener: () => void): this;[m
[32m+[m		[32mpublic on(event: 'ready', listener: () => void): this;[m
[32m+[m		[32mpublic on(event: 'reconnecting', listener: () => void): this;[m
[32m+[m		[32mpublic on(event: 'speaking', listener: (user: User, speaking: boolean) => void): this;[m
[32m+[m		[32mpublic on(event: 'warn', listener: (warning: string | Error) => void): this;[m
[32m+[m		[32mpublic on(event: string, listener: Function): this;[m
[32m+[m
[32m+[m		[32mpublic once(event: 'authenticated', listener: () => void): this;[m
[32m+[m		[32mpublic once(event: 'debug', listener: (message: string) => void): this;[m
[32m+[m		[32mpublic once(event: 'disconnect', listener: (error: Error) => void): this;[m
[32m+[m		[32mpublic once(event: 'error', listener: (error: Error) => void): this;[m
[32m+[m		[32mpublic once(event: 'failed', listener: (error: Error) => void): this;[m
[32m+[m		[32mpublic once(event: 'newSession', listener: () => void): this;[m
[32m+[m		[32mpublic once(event: 'ready', listener: () => void): this;[m
[32m+[m		[32mpublic once(event: 'reconnecting', listener: () => void): this;[m
[32m+[m		[32mpublic once(event: 'speaking', listener: (user: User, speaking: boolean) => void): this;[m
[32m+[m		[32mpublic once(event: 'warn', listener: (warning: string | Error) => void): this;[m
[32m+[m		[32mpublic once(event: string, listener: Function): this;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mclass VoiceConnectionUDPClient extends EventEmitter {[m
[32m+[m		[32mconstructor(voiceConnection: VoiceConnection);[m
[32m+[m		[32mpublic discordAddress: string;[m
[32m+[m		[32mpublic readonly discordPort: number;[m
[32m+[m		[32mpublic localAddress: string;[m
[32m+[m		[32mpublic localPort: string;[m
[32m+[m		[32mpublic socket: any;[m
[32m+[m		[32mpublic voiceConnection: VoiceConnection;[m
[32m+[m		[32mpublic findEndpointAddress(): Promise<string>;[m
[32m+[m		[32mpublic send(packet: object): Promise<object>;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mexport class VoiceReceiver extends EventEmitter {[m
[32m+[m		[32mconstructor(connection: VoiceConnection);[m
[32m+[m		[32mprivate stoppedSpeaking(user: User): void;[m
[32m+[m
[32m+[m		[32mpublic destroyed: boolean;[m
[32m+[m		[32mpublic voiceConnection: VoiceConnection;[m
[32m+[m		[32mpublic createOpusStream(user: UserResolvable): ReadableStream;[m
[32m+[m		[32mpublic createPCMStream(user: UserResolvable): ReadableStream;[m
[32m+[m		[32mpublic destroy(): void;[m
[32m+[m		[32mpublic recreate(): void;[m
[32m+[m
[32m+[m		[32mpublic on(event: 'opus', listener: (user: User, buffer: Buffer) => void): this;[m
[32m+[m		[32mpublic on(event: 'pcm', listener: (user: User, buffer: Buffer) => void): this;[m
[32m+[m		[32mpublic on(event: 'warn', listener: (reason: string, message: string) => void): this;[m
[32m+[m		[32mpublic on(event: string, listener: Function): this;[m
[32m+[m
[32m+[m		[32mpublic once(event: 'opus', listener: (user: User, buffer: Buffer) => void): this;[m
[32m+[m		[32mpublic once(event: 'pcm', listener: (user: User, buffer: Buffer) => void): this;[m
[32m+[m		[32mpublic once(event: 'warn', listener: (reason: string, message: string) => void): this;[m
[32m+[m		[32mpublic once(event: string, listener: Function): this;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mexport class VoiceRegion {[m
[32m+[m		[32mconstructor(data: object);[m
[32m+[m		[32mpublic custom: boolean;[m
[32m+[m		[32mpublic deprecated: boolean;[m
[32m+[m		[32mpublic id: string;[m
[32m+[m		[32mpublic name: string;[m
[32m+[m		[32mpublic optimal: boolean;[m
[32m+[m		[32mpublic sampleHostname: string;[m
[32m+[m		[32mpublic vip: boolean;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mclass VoiceWebsocket extends EventEmitter {[m
[32m+[m		[32mconstructor(voiceConnection: VoiceConnection);[m
[32m+[m		[32mpublic attempts: number;[m
[32m+[m		[32mpublic readonly client: Client;[m
[32m+[m		[32mpublic voiceConnection: VoiceConnection;[m
[32m+[m		[32mpublic ws: any;[m
[32m+[m		[32mpublic clearHeartbeat(): void;[m
[32m+[m		[32mpublic connect(): void;[m
[32m+[m		[32mpublic onClose(): void;[m
[32m+[m		[32mpublic onError(error: Error): void;[m
[32m+[m		[32mpublic onMessage(event: any): void;[m
[32m+[m		[32mpublic onOpen(): void;[m
[32m+[m		[32mpublic onPacket(packet: object): void;[m
[32m+[m		[32mpublic reset(): void;[m
[32m+[m		[32mpublic send(data: string): Promise<string>;[m
[32m+[m		[32mpublic sendHeartbeat(): void;[m
[32m+[m		[32mpublic sendPacket(packet: object): Promise<string>;[m
[32m+[m		[32mpublic setHeartbeat(interval: number): void;[m
[32m+[m
[32m+[m		[32mpublic on(event: 'ready', listener: (packet: object) => void): this;[m
[32m+[m		[32mpublic on(event: 'sessionDescription', listener: (encryptionMode: string, secretKey: SecretKey) => void): this;[m
[32m+[m		[32mpublic on(event: 'speaking', listener: (data: object) => void): this;[m
[32m+[m		[32mpublic on(event: 'unknownPacket', listener: (packet: object) => void): this;[m
[32m+[m		[32mpublic on(event: 'warn', listener: (warn: string) => void): this;[m
[32m+[m		[32mpublic on(event: string, listener: Function): this;[m
[32m+[m
[32m+[m		[32mpublic once(event: 'ready', listener: (packet: object) => void): this;[m
[32m+[m		[32mpublic once(event: 'sessionDescription', listener: (encryptionMode: string, secretKey: SecretKey) => void): this;[m
[32m+[m		[32mpublic once(event: 'speaking', listener: (data: object) => void): this;[m
[32m+[m		[32mpublic once(event: 'unknownPacket', listener: (packet: object) => void): this;[m
[32m+[m		[32mpublic once(event: 'warn', listener: (warn: string) => void): this;[m
[32m+[m		[32mpublic once(event: string, listener: Function): this;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mexport class VolumeInterface extends EventEmitter {[m
[32m+[m		[32mconstructor(object?: { volume: number })[m
[32m+[m		[32mpublic readonly volume: number;[m
[32m+[m		[32mpublic readonly volumeDecibels: number;[m
[32m+[m		[32mpublic readonly volumeLogarithmic: number;[m
[32m+[m		[32mpublic setVolume(volume: number): void;[m
[32m+[m		[32mpublic setVolumeDecibels(db: number): void;[m
[32m+[m		[32mpublic setVolumeLogarithmic(value: number): void;[m
[32m+[m
[32m+[m		[32mpublic on(event: 'debug', listener: (information: string) => void): this;[m
[32m+[m		[32mpublic on(event: 'end', listener: (reason: string) => void): this;[m
[32m+[m		[32mpublic on(event: 'error', listener: (err: Error) => void): this;[m
[32m+[m		[32mpublic on(event: 'speaking', listener: (value: boolean) => void): this;[m
[32m+[m		[32mpublic on(event: 'start', listener: () => void): this;[m
[32m+[m		[32mpublic on(event: 'volumeChange', listener: (oldVolume: number, newVolume: number) => void): this;[m
[32m+[m		[32mpublic on(event: string, listener: Function): this;[m
[32m+[m
[32m+[m		[32mpublic once(event: 'debug', listener: (information: string) => void): this;[m
[32m+[m		[32mpublic once(event: 'end', listener: (reason: string) => void): this;[m
[32m+[m		[32mpublic once(event: 'error', listener: (err: Error) => void): this;[m
[32m+[m		[32mpublic once(event: 'speaking', listener: (value: boolean) => void): this;[m
[32m+[m		[32mpublic once(event: 'start', listener: () => void): this;[m
[32m+[m		[32mpublic once(event: 'volumeChange', listener: (oldVolume: number, newVolume: number) => void): this;[m
[32m+[m		[32mpublic once(event: string, listener: Function): this;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mexport class Webhook {[m
[32m+[m		[32mconstructor(client: Client, dataOrID: object | string, token: string);[m
[32m+[m		[32mpublic avatar: string;[m
[32m+[m		[32mpublic channelID: string;[m
[32m+[m		[32mpublic readonly client: Client;[m
[32m+[m		[32mpublic guildID: string;[m
[32m+[m		[32mpublic id: Snowflake;[m
[32m+[m		[32mpublic name: string;[m
[32m+[m		[32mpublic owner: User | object;[m
[32m+[m		[32mpublic token: string;[m
[32m+[m		[32mpublic delete(reason?: string): Promise<void>;[m
[32m+[m		[32mpublic edit(name: string, avatar: BufferResolvable): Promise<Webhook>;[m
[32m+[m		[32mpublic send(content?: StringResolvable, options?: WebhookMessageOptions | RichEmbed | Attachment): Promise<Message | Message[]>;[m
[32m+[m		[32mpublic send(options?: WebhookMessageOptions | RichEmbed | Attachment): Promise<Message | Message[]>;[m
[32m+[m		[32mpublic sendCode(lang: string, content: StringResolvable, options?: WebhookMessageOptions): Promise<Message | Message[]>;[m
[32m+[m		[32mpublic sendFile(attachment: BufferResolvable, name?: string, content?: StringResolvable, options?: WebhookMessageOptions): Promise<Message>;[m
[32m+[m		[32mpublic sendMessage(content?: StringResolvable, options?: WebhookMessageOptions): Promise<Message | Message[]>;[m
[32m+[m		[32mpublic sendMessage(options?: WebhookMessageOptions): Promise<Message | Message[]>;[m
[32m+[m		[32mpublic sendSlackMessage(body: object): Promise<void>;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mexport class WebhookClient extends Webhook {[m
[32m+[m		[32mconstructor(id: string, token: string, options?: ClientOptions);[m
[32m+[m		[32mprivate _intervals: Set<NodeJS.Timer>;[m
[32m+[m		[32mprivate _timeouts: Set<NodeJS.Timer>;[m
[32m+[m		[32mprivate resolver: ClientDataResolver;[m
[32m+[m		[32mprivate rest: object;[m
[32m+[m
[32m+[m		[32mpublic options: ClientOptions;[m
[32m+[m		[32mpublic clearInterval(interval: NodeJS.Timer): void;[m
[32m+[m		[32mpublic clearTimeout(timeout: NodeJS.Timer): void;[m
[32m+[m		[32mpublic destroy(): void;[m
[32m+[m		[32mpublic setInterval(fn: Function, delay: number, ...args: any[]): NodeJS.Timer;[m
[32m+[m		[32mpublic setTimeout(fn: Function, delay: number, ...args: any[]): NodeJS.Timer;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m//#endregion[m
[32m+[m
[32m+[m[32m//#region Mixins[m
[32m+[m
[32m+[m	[32m// Model the TextBasedChannel mixin system, allowing application of these fields[m
[32m+[m	[32m// to the classes that use these methods without having to manually add them[m
[32m+[m	[32m// to each of those classes[m
[32m+[m
[32m+[m	[32mtype Constructable<T> = new (...args: any[]) => T;[m
[32m+[m	[32mconst PartialTextBasedChannel: <T>(Base?: Constructable<T>) => Constructable<T & PartialTextBasedChannelFields>;[m
[32m+[m	[32mconst TextBasedChannel: <T>(Base?: Constructable<T>) => Constructable<T & TextBasedChannelFields>;[m
[32m+[m
[32m+[m	[32mtype PartialTextBasedChannelFields = {[m
[32m+[m		[32mlastMessage: Message;[m
[32m+[m		[32macknowledge(): Promise<DMChannel | GroupDMChannel | TextChannel>;[m
[32m+[m		[32msend(content?: StringResolvable, options?: MessageOptions | RichEmbed | Attachment): Promise<Message | Message[]>;[m
[32m+[m		[32msend(options?: MessageOptions | RichEmbed | Attachment): Promise<Message | Message[]>;[m
[32m+[m		[32msendCode(lang: string, content: StringResolvable, options?: MessageOptions): Promise<Message | Message[]>;[m
[32m+[m		[32msendEmbed(embed: RichEmbed | RichEmbedOptions, content?: string, options?: MessageOptions): Promise<Message>;[m
[32m+[m		[32msendEmbed(embed: RichEmbed | RichEmbedOptions, options?: MessageOptions): Promise<Message>;[m
[32m+[m		[32msendFile(attachment: BufferResolvable, name?: string, content?: StringResolvable, options?: MessageOptions): Promise<Message>;[m
[32m+[m		[32msendMessage(content?: string, options?: MessageOptions): Promise<Message | Message[]>;[m
[32m+[m		[32msendMessage(options?: MessageOptions): Promise<Message | Message[]>;[m
[32m+[m	[32m};[m
[32m+[m
[32m+[m	[32mtype TextBasedChannelFields = {[m
[32m+[m		[32mlastPinTimestamp: number;[m
[32m+[m		[32mreadonly lastPinAt: Date;[m
[32m+[m		[32mtyping: boolean;[m
[32m+[m		[32mtypingCount: number;[m
[32m+[m		[32mawaitMessages(filter: CollectorFilter, options?: AwaitMessagesOptions): Promise<Collection<string, Message>>;[m
[32m+[m		[32mbulkDelete(messages: Collection<string, Message> | Message[] | Snowflake[] | number, filterOld?: boolean): Promise<Collection<string, Message>>;[m
[32m+[m		[32mcreateCollector(filter: CollectorFilter, options?: MessageCollectorOptions): MessageCollector;[m
[32m+[m		[32mcreateMessageCollector(filter: CollectorFilter, options?: MessageCollectorOptions): MessageCollector;[m
[32m+[m		[32mfetchMessage(messageID: string): Promise<Message>;[m
[32m+[m		[32mfetchMessages(options?: ChannelLogsQueryOptions): Promise<Collection<string, Message>>;[m
[32m+[m		[32mfetchPinnedMessages(): Promise<Collection<string, Message>>;[m
[32m+[m		[32msearch(options?: MessageSearchOptions): Promise<MessageSearchResult>;[m
[32m+[m		[32mstartTyping(count?: number): void;[m
[32m+[m		[32mstopTyping(force?: boolean): void;[m
[32m+[m	[32m} & PartialTextBasedChannelFields;[m
[32m+[m
[32m+[m[32m//#endregion[m
[32m+[m
[32m+[m[32m//#region Typedefs[m
[32m+[m
[32m+[m	[32mtype ActivityType = 'PLAYING'[m
[32m+[m		[32m| 'STREAMING'[m
[32m+[m		[32m| 'LISTENING'[m
[32m+[m		[32m| 'WATCHING';[m
[32m+[m
[32m+[m	[32mtype AddGuildMemberOptions = {[m
[32m+[m		[32maccessToken: String;[m
[32m+[m		[32mnick?: string;[m
[32m+[m		[32mroles?: Collection<string, Role> | Role[] | string[];[m
[32m+[m		[32mmute?: boolean;[m
[32m+[m		[32mdeaf?: boolean;[m
[32m+[m	[32m};[m
[32m+[m
[32m+[m	[32mtype AuditLogChange = {[m
[32m+[m		[32mkey: string;[m
[32m+[m		[32mold?: any;[m
[32m+[m		[32mnew?: any;[m
[32m+[m	[32m};[m
[32m+[m
[32m+[m	[32mtype AwaitMessagesOptions = MessageCollectorOptions & { errors?: string[] };[m
[32m+[m
[32m+[m	[32mtype AwaitReactionsOptions = ReactionCollectorOptions & { errors?: string[] };[m
[32m+[m
[32m+[m	[32mtype BanInfo = {[m
[32m+[m		[32muser: User;[m
[32m+[m		[32mreason: string | null;[m
[32m+[m	[32m};[m
[32m+[m
[32m+[m	[32mtype BanOptions = {[m
[32m+[m		[32mdays?: number;[m
[32m+[m		[32mreason?: string;[m
[32m+[m	[32m};[m
[32m+[m
[32m+[m	[32mtype Base64Resolvable = Buffer | Base64String;[m
[32m+[m
[32m+[m	[32mtype Base64String = string;[m
[32m+[m
[32m+[m	[32mtype BufferResolvable = Buffer | string;[m
[32m+[m
[32m+[m	[32mtype ChannelCreationOverwrites = {[m
[32m+[m		[32mallow?: PermissionResolvable;[m
[32m+[m		[32mdeny?: PermissionResolvable;[m
[32m+[m		[32mallowed?: PermissionResolvable;[m
[32m+[m		[32mdenied?: PermissionResolvable;[m
[32m+[m		[32mid: RoleResolvable | UserResolvable;[m
[32m+[m	[32m};[m
[32m+[m
[32m+[m	[32mtype ChannelData = {[m
[32m+[m		[32mtype?: 'category' | 'text' | 'voice' | 'news' | 'store';[m
[32m+[m		[32mname?: string;[m
[32m+[m		[32mposition?: number;[m
[32m+[m		[32mtopic?: string;[m
[32m+[m		[32mnsfw?: boolean;[m
[32m+[m		[32mbitrate?: number;[m
[32m+[m		[32muserLimit?: number;[m
[32m+[m		[32mparent?: ChannelResolvable;[m
[32m+[m		[32mpermissionOverwrites?: PermissionOverwrites[] | ChannelCreationOverwrites[];[m
[32m+[m		[32mrateLimitPerUser?: number;[m
[32m+[m	[32m};[m
[32m+[m
[32m+[m	[32mtype ChannelLogsQueryOptions = {[m
[32m+[m		[32mlimit?: number[m
[32m+[m		[32mbefore?: Snowflake[m
[32m+[m		[32mafter?: Snowflake[m
[32m+[m		[32maround?: Snowflake[m
[32m+[m	[32m};[m
[32m+[m
[32m+[m	[32mtype ChannelPosition = {[m
[32m+[m		[32mchannel: ChannelResolvable;[m
[32m+[m		[32mposition: number;[m
[32m+[m	[32m};[m
[32m+[m
[32m+[m	[32mtype ChannelResolvable = Channel | Guild | Message | Snowflake;[m
[32m+[m
[32m+[m	[32mtype ClientOptions = {[m
[32m+[m		[32mapiRequestMethod?: string;[m
[32m+[m		[32mshardId?: number;[m
[32m+[m		[32mshardCount?: number;[m
[32m+[m		[32mmessageCacheMaxSize?: number;[m
[32m+[m		[32mmessageCacheLifetime?: number;[m
[32m+[m		[32mmessageSweepInterval?: number;[m
[32m+[m		[32mfetchAllMembers?: boolean;[m
[32m+[m		[32mdisableEveryone?: boolean;[m
[32m+[m		[32msync?: boolean;[m
[32m+[m		[32mrestWsBridgeTimeout?: number;[m
[32m+[m		[32mrestTimeOffset?: number;[m
[32m+[m		[32mretryLimit?: number;[m
[32m+[m		[32mdisabledEvents?: WSEventType[];[m
[32m+[m		[32mws?: WebSocketOptions;[m
[32m+[m		[32mhttp?: HTTPOptions;[m
[32m+[m	[32m};[m
[32m+[m
[32m+[m	[32mtype CollectorHandler<K, V> = { key: K, value: V };[m
[32m+[m	[32mtype CollectorFilter = (...args: any[]) => boolean;[m
[32m+[m	[32mtype CollectorOptions = { time?: number };[m
[32m+[m
[32m+[m	[32mtype ColorResolvable = ('DEFAULT'[m
[32m+[m		[32m| 'WHITE'[m
[32m+[m		[32m| 'AQUA'[m
[32m+[m		[32m| 'GREEN'[m
[32m+[m		[32m| 'BLUE'[m
[32m+[m		[32m| 'PURPLE'[m
[32m+[m		[32m| 'LUMINOUS_VIVID_PINK'[m
[32m+[m		[32m| 'GOLD'[m
[32m+[m		[32m| 'ORANGE'[m
[32m+[m		[32m| 'RED'[m
[32m+[m		[32m| 'GREY'[m
[32m+[m		[32m| 'DARKER_GREY'[m
[32m+[m		[32m| 'NAVY'[m
[32m+[m		[32m| 'DARK_AQUA'[m
[32m+[m		[32m| 'DARK_GREEN'[m
[32m+[m		[32m| 'DARK_BLUE'[m
[32m+[m		[32m| 'DARK_PURPLE'[m
[32m+[m		[32m| ' DARK_VIVID_PINK'[m
[32m+[m		[32m| 'DARK_GOLD'[m
[32m+[m		[32m| 'DARK_ORANGE'[m
[32m+[m		[32m| 'DARK_RED'[m
[32m+[m		[32m| 'DARK_GREY'[m
[32m+[m		[32m| 'LIGHT_GREY'[m
[32m+[m		[32m| 'DARK_NAVY'[m
[32m+[m		[32m| 'RANDOM')[m
[32m+[m		[32m| [number, number, number][m
[32m+[m		[32m| number[m
[32m+[m		[32m| string;[m
[32m+[m
[32m+[m	[32mtype DeconstructedSnowflake = {[m
[32m+[m		[32mtimestamp: number;[m
[32m+[m		[32mdate: Date;[m
[32m+[m		[32mworkerID: number;[m
[32m+[m		[32mprocessID: number;[m
[32m+[m		[32mincrement: number;[m
[32m+[m		[32mbinary: string;[m
[32m+[m	[32m};[m
[32m+[m
[32m+[m	[32mtype DefaultMessageNotifications = 'ALL'[m
[32m+[m		[32m| 'MENTIONS';[m
[32m+[m
[32m+[m	[32mtype EmojiEditData = {[m
[32m+[m		[32mname?: string;[m
[32m+[m		[32mroles?: Collection<Snowflake, Role> | Role[] | Snowflake[];[m
[32m+[m	[32m};[m
[32m+[m
[32m+[m	[32mtype EmojiIdentifierResolvable = string | Emoji | ReactionEmoji;[m
[32m+[m
[32m+[m	[32mtype FileOptions = {[m
[32m+[m		[32mattachment: BufferResolvable;[m
[32m+[m		[32mname?: string;[m
[32m+[m	[32m};[m
[32m+[m
[32m+[m	[32mtype GroupDMRecipientOptions = {[m
[32m+[m		[32muser?: UserResolvable | Snowflake;[m
[32m+[m		[32maccessToken?: string;[m
[32m+[m		[32mnick?: string;[m
[32m+[m	[32m};[m
[32m+[m
[32m+[m	[32mtype GuildAuditLogsAction = keyof GuildAuditLogsActions;[m
[32m+[m
[32m+[m	[32mtype GuildAuditLogsActions = {[m
[32m+[m		[32mALL?: null;[m
[32m+[m		[32mGUILD_UPDATE?: number;[m
[32m+[m		[32mCHANNEL_CREATE?: number;[m
[32m+[m		[32mCHANNEL_UPDATE?: number;[m
[32m+[m		[32mCHANNEL_DELETE?: number;[m
[32m+[m		[32mCHANNEL_OVERWRITE_CREATE?: number;[m
[32m+[m		[32mCHANNEL_OVERWRITE_UPDATE?: number;[m
[32m+[m		[32mCHANNEL_OVERWRITE_DELETE?: number;[m
[32m+[m		[32mMEMBER_KICK?: number;[m
[32m+[m		[32mMEMBER_PRUNE?: number;[m
[32m+[m		[32mMEMBER_BAN_ADD?: number;[m
[32m+[m		[32mMEMBER_BAN_REMOVE?: number;[m
[32m+[m		[32mMEMBER_UPDATE?: number;[m
[32m+[m		[32mMEMBER_ROLE_UPDATE?: number;[m
[32m+[m		[32mROLE_CREATE?: number;[m
[32m+[m		[32mROLE_UPDATE?: number;[m
[32m+[m		[32mROLE_DELETE?: number;[m
[32m+[m		[32mINVITE_CREATE?: number;[m
[32m+[m		[32mINVITE_UPDATE?: number;[m
[32m+[m		[32mINVITE_DELETE?: number;[m
[32m+[m		[32mWEBHOOK_CREATE?: number;[m
[32m+[m		[32mWEBHOOK_UPDATE?: number;[m
[32m+[m		[32mWEBHOOK_DELETE?: number;[m
[32m+[m		[32mEMOJI_CREATE?: number;[m
[32m+[m		[32mEMOJI_UPDATE?: number;[m
[32m+[m		[32mEMOJI_DELETE?: number;[m
[32m+[m		[32mMESSAGE_DELETE?: number;[m
[32m+[m	[32m};[m
[32m+[m
[32m+[m	[32mtype GuildAuditLogsActionType = 'CREATE'[m
[32m+[m		[32m| 'DELETE'[m
[32m+[m		[32m| 'UPDATE'[m
[32m+[m		[32m| 'ALL';[m
[32m+[m
[32m+[m	[32mtype GuildAuditLogsFetchOptions = {[m
[32m+[m		[32mbefore?: Snowflake | GuildAuditLogsEntry;[m
[32m+[m		[32mafter?: Snowflake | GuildAuditLogsEntry;[m
[32m+[m		[32mlimit?: number;[m
[32m+[m		[32muser?: UserResolvable;[m
[32m+[m		[32mtype?: string | number;[m
[32m+[m	[32m};[m
[32m+[m
[32m+[m	[32mtype GuildAuditLogsTarget = keyof GuildAuditLogsTargets;[m
[32m+[m
[32m+[m	[32mtype GuildAuditLogsTargets = {[m
[32m+[m		[32mALL?: string;[m
[32m+[m		[32mGUILD?: string;[m
[32m+[m		[32mCHANNEL?: string;[m
[32m+[m		[32mUSER?: string;[m
[32m+[m		[32mROLE?: string;[m
[32m+[m		[32mINVITE?: string;[m
[32m+[m		[32mWEBHOOK?: string;[m
[32m+[m		[32mEMOJI?: string;[m
[32m+[m		[32mMESSAGE?: string;[m
[32m+[m	[32m};[m
[32m+[m
[32m+[m	[32mtype GuildChannelMessageNotifications = MessageNotifications[m
[32m+[m		[32m& 'INHERIT';[m
[32m+[m
[32m+[m	[32mtype GuildEditData = {[m
[32m+[m		[32mname?: string;[m
[32m+[m		[32mregion?: string;[m
[32m+[m		[32mverificationLevel?: number;[m
[32m+[m		[32mexplicitContentFilter?: number;[m
[32m+[m		[32mafkChannel?: ChannelResolvable;[m
[32m+[m		[32msystemChannel?: ChannelResolvable;[m
[32m+[m		[32mafkTimeout?: number;[m
[32m+[m		[32micon?: Base64Resolvable;[m
[32m+[m		[32mowner?: GuildMemberResolvable;[m
[32m+[m		[32msplash?: Base64Resolvable;[m
[32m+[m	[32m};[m
[32m+[m
[32m+[m	[32mtype GuildEmbedData = {[m
[32m+[m		[32menabled: boolean;[m
[32m+[m		[32mchannel: ChannelResolvable;[m
[32m+[m	[32m};[m
[32m+[m
[32m+[m	[32mtype GuildMemberEditData = {[m
[32m+[m		[32mnick?: string;[m
[32m+[m		[32mroles?: Collection<Snowflake, Role> | Role[] | Snowflake[];[m
[32m+[m		[32mmute?: boolean;[m
[32m+[m		[32mdeaf?: boolean;[m
[32m+[m		[32mchannel?: ChannelResolvable | null;[m
[32m+[m	[32m};[m
[32m+[m
[32m+[m	[32mtype GuildMemberResolvable = GuildMember | User;[m
[32m+[m
[32m+[m	[32mtype GuildResolvable = Guild | Snowflake;[m
[32m+[m
[32m+[m	[32mtype HTTPOptions = {[m
[32m+[m		[32mversion?: number;[m
[32m+[m		[32mhost?: string;[m
[32m+[m		[32mcdn?: string;[m
[32m+[m	[32m};[m
[32m+[m
[32m+[m	[32mtype InviteOptions = {[m
[32m+[m		[32mtemporary?: boolean;[m
[32m+[m		[32mmaxAge?: number;[m
[32m+[m		[32mmaxUses?: number;[m
[32m+[m		[32munique?: boolean;[m
[32m+[m	[32m};[m
[32m+[m
[32m+[m	[32mtype InviteResolvable = string;[m
[32m+[m
[32m+[m	[32mtype MessageCollectorOptions = CollectorOptions & {[m
[32m+[m		[32mmax?: number;[m
[32m+[m		[32mmaxMatches?: number;[m
[32m+[m	[32m};[m
[32m+[m
[32m+[m	[32mtype MessageEditOptions = {[m
[32m+[m		[32membed?: RichEmbedOptions;[m
[32m+[m		[32mcode?: string | boolean;[m
[32m+[m	[32m};[m
[32m+[m
[32m+[m	[32mtype MessageNotifications = 'EVERYTHING'[m
[32m+[m		[32m| 'MENTIONS'[m
[32m+[m		[32m| 'NOTHING';[m
[32m+[m
[32m+[m	[32mtype MessageOptions = {[m
[32m+[m		[32mtts?: boolean;[m
[32m+[m		[32mnonce?: string;[m
[32m+[m		[32membed?: RichEmbed | RichEmbedOptions,[m
[32m+[m		[32mdisableEveryone?: boolean;[m
[32m+[m		[32mfile?: FileOptions | string;[m
[32m+[m		[32mfiles?: (FileOptions | BufferResolvable | Attachment)[];[m
[32m+[m		[32mcode?: string | boolean;[m
[32m+[m		[32msplit?: boolean | SplitOptions;[m
[32m+[m		[32mreply?: UserResolvable;[m
[32m+[m	[32m};[m
[32m+[m
[32m+[m	[32mtype MessageSearchOptions = {[m
[32m+[m		[32mcontent?: string;[m
[32m+[m		[32mmaxID?: Snowflake;[m
[32m+[m		[32mminID?: Snowflake;[m
[32m+[m		[32mhas?: 'link'[m
[32m+[m		[32m| 'embed'[m
[32m+[m		[32m| 'file'[m
[32m+[m		[32m| 'video'[m
[32m+[m		[32m| 'image'[m
[32m+[m		[32m| 'sound'[m
[32m+[m		[32m| '-link'[m
[32m+[m		[32m| '-embed'[m
[32m+[m		[32m| '-file'[m
[32m+[m		[32m| '-video'[m
[32m+[m		[32m| '-image'[m
[32m+[m		[32m| '-sound';[m
[32m+[m		[32mchannel?: ChannelResolvable;[m
[32m+[m		[32mauthor?: UserResolvable;[m
[32m+[m		[32mauthorType?: 'user'[m
[32m+[m		[32m| 'bot'[m
[32m+[m		[32m| 'webhook'[m
[32m+[m		[32m| '-user'[m
[32m+[m		[32m| '-bot'[m
[32m+[m		[32m| '-webhook';[m
[32m+[m		[32msortBy?: 'relevant' | 'recent';[m
[32m+[m		[32msortOrder?: 'asc' | 'desc';[m
[32m+[m		[32mcontextSize?: number;[m
[32m+[m		[32mlimit?: number;[m
[32m+[m		[32moffset?: number;[m
[32m+[m		[32mmentions?: UserResolvable;[m
[32m+[m		[32mmentionsEveryone?: boolean;[m
[32m+[m		[32mlinkHostname?: string;[m
[32m+[m		[32membedProvider?: string;[m
[32m+[m		[32membedType?: 'image' | 'video' | 'url' | 'rich';[m
[32m+[m		[32mattachmentFilename?: string;[m
[32m+[m		[32mattachmentExtension?: string;[m
[32m+[m		[32mbefore?: Date;[m
[32m+[m		[32mafter?: Date;[m
[32m+[m		[32mduring?: Date;[m
[32m+[m		[32mnsfw?: boolean;[m
[32m+[m	[32m};[m
[32m+[m
[32m+[m	[32mtype MessageSearchResult = {[m
[32m+[m		[32mtotalResults: number;[m
[32m+[m		[32mmessages: Message[][];[m
[32m+[m	[32m};[m
[32m+[m
[32m+[m	[32mtype ActivityFlags = {[m
[32m+[m		[32mINSTANCE?: number;[m
[32m+[m		[32mJOIN?: number;[m
[32m+[m		[32mSPECTATE?: number;[m
[32m+[m		[32mJOIN_REQUEST?: number;[m
[32m+[m		[32mSYNC?: number;[m
[32m+[m		[32mPLAY?: number;[m
[32m+[m	[32m};[m
[32m+[m
[32m+[m	[32mtype PermissionFlags = {[m
[32m+[m		[32mADMINISTRATOR?: number;[m
[32m+[m		[32mCREATE_INSTANT_INVITE?: number;[m
[32m+[m		[32mKICK_MEMBERS?: number;[m
[32m+[m		[32mBAN_MEMBERS?: number;[m
[32m+[m		[32mMANAGE_CHANNELS?: number;[m
[32m+[m		[32mMANAGE_GUILD?: number;[m
[32m+[m		[32mADD_REACTIONS?: number;[m
[32m+[m		[32mVIEW_AUDIT_LOG?: number;[m
[32m+[m		[32mPRIORITY_SPEAKER?: number;[m
[32m+[m		[32mVIEW_CHANNEL?: number;[m
[32m+[m		[32mREAD_MESSAGES?: number;[m
[32m+[m		[32mSEND_MESSAGES?: number;[m
[32m+[m		[32mSEND_TTS_MESSAGES?: number;[m
[32m+[m		[32mMANAGE_MESSAGES?: number;[m
[32m+[m		[32mEMBED_LINKS?: number;[m
[32m+[m		[32mATTACH_FILES?: number;[m
[32m+[m		[32mREAD_MESSAGE_HISTORY?: number;[m
[32m+[m		[32mMENTION_EVERYONE?: number;[m
[32m+[m		[32mUSE_EXTERNAL_EMOJIS?: number;[m
[32m+[m		[32mEXTERNAL_EMOJIS?: number;[m
[32m+[m		[32mCONNECT?: number;[m
[32m+[m		[32mSPEAK?: number;[m
[32m+[m		[32mMUTE_MEMBERS?: number;[m
[32m+[m		[32mDEAFEN_MEMBERS?: number;[m
[32m+[m		[32mMOVE_MEMBERS?: number;[m
[32m+[m		[32mUSE_VAD?: number;[m
[32m+[m		[32mCHANGE_NICKNAME?: number;[m
[32m+[m		[32mMANAGE_NICKNAMES?: number;[m
[32m+[m		[32mMANAGE_ROLES?: number;[m
[32m+[m		[32mMANAGE_ROLES_OR_PERMISSIONS?: number;[m
[32m+[m		[32mMANAGE_WEBHOOKS?: number;[m
[32m+[m		[32mMANAGE_EMOJIS?: number;[m
[32m+[m	[32m};[m
[32m+[m
[32m+[m	[32mtype PermissionObject = {[m
[32m+[m		[32mADMINISTRATOR?: boolean;[m
[32m+[m		[32mCREATE_INSTANT_INVITE?: boolean;[m
[32m+[m		[32mKICK_MEMBERS?: boolean;[m
[32m+[m		[32mBAN_MEMBERS?: boolean;[m
[32m+[m		[32mMANAGE_CHANNELS?: boolean;[m
[32m+[m		[32mMANAGE_GUILD?: boolean;[m
[32m+[m		[32mADD_REACTIONS?: boolean;[m
[32m+[m		[32mVIEW_AUDIT_LOG?: boolean;[m
[32m+[m		[32mPRIORITY_SPEAKER?: boolean;[m
[32m+[m		[32mVIEW_CHANNEL?: boolean;[m
[32m+[m		[32mREAD_MESSAGES?: boolean;[m
[32m+[m		[32mSEND_MESSAGES?: boolean;[m
[32m+[m		[32mSEND_TTS_MESSAGES?: boolean;[m
[32m+[m		[32mMANAGE_MESSAGES?: boolean;[m
[32m+[m		[32mEMBED_LINKS?: boolean;[m
[32m+[m		[32mATTACH_FILES?: boolean;[m
[32m+[m		[32mREAD_MESSAGE_HISTORY?: boolean;[m
[32m+[m		[32mMENTION_EVERYONE?: boolean;[m
[32m+[m		[32mUSE_EXTERNAL_EMOJIS?: boolean;[m
[32m+[m		[32mEXTERNAL_EMOJIS?: boolean;[m
[32m+[m		[32mCONNECT?: boolean;[m
[32m+[m		[32mSPEAK?: boolean;[m
[32m+[m		[32mMUTE_MEMBERS?: boolean;[m
[32m+[m		[32mDEAFEN_MEMBERS?: boolean;[m
[32m+[m		[32mMOVE_MEMBERS?: boolean;[m
[32m+[m		[32mUSE_VAD?: boolean;[m
[32m+[m		[32mCHANGE_NICKNAME?: boolean;[m
[32m+[m		[32mMANAGE_NICKNAMES?: boolean;[m
[32m+[m		[32mMANAGE_ROLES?: boolean;[m
[32m+[m		[32mMANAGE_ROLES_OR_PERMISSIONS?: boolean;[m
[32m+[m		[32mMANAGE_WEBHOOKS?: boolean;[m
[32m+[m		[32mMANAGE_EMOJIS?: boolean;[m
[32m+[m	[32m};[m
[32m+[m
[32m+[m	[32mtype PermissionString = 'ADMINISTRATOR'[m
[32m+[m		[32m| 'CREATE_INSTANT_INVITE'[m
[32m+[m		[32m| 'KICK_MEMBERS'[m
[32m+[m		[32m| 'BAN_MEMBERS'[m
[32m+[m		[32m| 'MANAGE_CHANNELS'[m
[32m+[m		[32m| 'MANAGE_GUILD'[m
[32m+[m		[32m| 'ADD_REACTIONS'[m
[32m+[m		[32m| 'VIEW_AUDIT_LOG'[m
[32m+[m		[32m| 'PRIORITY_SPEAKER'[m
[32m+[m		[32m| 'VIEW_CHANNEL'[m
[32m+[m		[32m| 'READ_MESSAGES'[m
[32m+[m		[32m| 'SEND_MESSAGES'[m
[32m+[m		[32m| 'SEND_TTS_MESSAGES'[m
[32m+[m		[32m| 'MANAGE_MESSAGES'[m
[32m+[m		[32m| 'EMBED_LINKS'[m
[32m+[m		[32m| 'ATTACH_FILES'[m
[32m+[m		[32m| 'READ_MESSAGE_HISTORY'[m
[32m+[m		[32m| 'MENTION_EVERYONE'[m
[32m+[m		[32m| 'USE_EXTERNAL_EMOJIS'[m
[32m+[m		[32m| 'EXTERNAL_EMOJIS'[m
[32m+[m		[32m| 'CONNECT'[m
[32m+[m		[32m| 'SPEAK'[m
[32m+[m		[32m| 'MUTE_MEMBERS'[m
[32m+[m		[32m| 'DEAFEN_MEMBERS'[m
[32m+[m		[32m| 'MOVE_MEMBERS'[m
[32m+[m		[32m| 'USE_VAD'[m
[32m+[m		[32m| 'CHANGE_NICKNAME'[m
[32m+[m		[32m| 'MANAGE_NICKNAMES'[m
[32m+[m		[32m| 'MANAGE_ROLES'[m
[32m+[m		[32m| 'MANAGE_ROLES_OR_PERMISSIONS'[m
[32m+[m		[32m| 'MANAGE_WEBHOOKS'[m
[32m+[m		[32m| 'MANAGE_EMOJIS';[m
[32m+[m
[32m+[m	[32mtype PermissionOverwriteOptions = PermissionObject;[m
[32m+[m
[32m+[m	[32minterface RecursiveArray<T> extends Array<T | RecursiveArray<T>> { }[m
[32m+[m
[32m+[m	[32mtype PermissionResolvable = RecursiveArray<Permissions | PermissionString | number> | Permissions | PermissionString | number;[m
[32m+[m
[32m+[m	[32mtype PresenceData = {[m
[32m+[m		[32mstatus?: PresenceStatus;[m
[32m+[m		[32mafk?: boolean;[m
[32m+[m		[32mgame?: {[m
[32m+[m			[32mname?: string;[m
[32m+[m			[32murl?: string;[m
[32m+[m			[32mtype?: ActivityType;[m
[32m+[m		[32m} | null;[m
[32m+[m	[32m};[m
[32m+[m
[32m+[m	[32mtype ClientPresenceStatus = 'online' | 'idle' | 'dnd';[m
[32m+[m
[32m+[m	[32mtype PresenceStatus = ClientPresenceStatus | 'invisible';[m
[32m+[m	[32mtype PresenceStatusData = ClientPresenceStatus | 'offline';[m
[32m+[m
[32m+[m	[32mtype ClientPresenceStatusData = {[m
[32m+[m		[32mweb?: ClientPresenceStatus;[m
[32m+[m		[32mmobile?: ClientPresenceStatus;[m
[32m+[m		[32mdesktop?: ClientPresenceStatus;[m
[32m+[m	[32m};[m
[32m+[m
[32m+[m	[32mtype RateLimitInfo = {[m
[32m+[m		[32mlimit: number;[m
[32m+[m		[32mtimeDifference: number;[m
[32m+[m		[32mmethod: string;[m
[32m+[m		[32mpath: string;[m
[32m+[m	[32m};[m
[32m+[m
[32m+[m	[32mtype ReactionCollectorOptions = CollectorOptions & {[m
[32m+[m		[32mmax?: number;[m
[32m+[m		[32mmaxEmojis?: number;[m
[32m+[m		[32mmaxUsers?: number;[m
[32m+[m	[32m};[m
[32m+[m
[32m+[m	[32mtype RichEmbedOptions = {[m
[32m+[m		[32mtitle?: string;[m
[32m+[m		[32mdescription?: string;[m
[32m+[m		[32murl?: string;[m
[32m+[m		[32mtimestamp?: Date;[m
[32m+[m		[32mcolor?: number | string;[m
[32m+[m		[32mfields?: { name: string; value: string; inline?: boolean; }[];[m
[32m+[m		[32mfile?: Attachment | string | FileOptions;[m
[32m+[m		[32mauthor?: { name: string; url?: string; icon_url?: string; };[m
[32m+[m		[32mthumbnail?: { url: string; height?: number; width?: number; };[m
[32m+[m		[32mimage?: { url: string; proxy_url?: string; height?: number; width?: number; };[m
[32m+[m		[32mvideo?: { url: string; height: number; width: number; };[m
[32m+[m		[32mfooter?: { text?: string; icon_url?: string; };[m
[32m+[m	[32m};[m
[32m+[m
[32m+[m	[32mtype RoleData = {[m
[32m+[m		[32mname?: string;[m
[32m+[m		[32mcolor?: ColorResolvable;[m
[32m+[m		[32mhoist?: boolean;[m
[32m+[m		[32mposition?: number;[m
[32m+[m		[32mpermissions?: PermissionResolvable;[m
[32m+[m		[32mmentionable?: boolean;[m
[32m+[m	[32m};[m
[32m+[m
[32m+[m	[32mtype RoleResolvable = Role | string;[m
[32m+[m
[32m+[m	[32mtype Snowflake = string;[m
[32m+[m
[32m+[m	[32mtype SplitOptions = {[m
[32m+[m		[32mmaxLength?: number;[m
[32m+[m		[32mchar?: string;[m
[32m+[m		[32mprepend?: string;[m
[32m+[m		[32mappend?: string;[m
[32m+[m	[32m};[m
[32m+[m
[32m+[m	[32mtype Status = number;[m
[32m+[m
[32m+[m	[32mtype StreamOptions = {[m
[32m+[m		[32mseek?: number;[m
[32m+[m		[32mvolume?: number;[m
[32m+[m		[32mpasses?: number;[m
[32m+[m		[32mbitrate?: number | 'auto';[m
[32m+[m	[32m};[m
[32m+[m
[32m+[m	[32mtype StringResolvable = string | string[] | any;[m
[32m+[m
[32m+[m	[32mtype UserResolvable = User | Snowflake | Message | Guild | GuildMember;[m
[32m+[m
[32m+[m	[32mtype VoiceStatus = number;[m
[32m+[m
[32m+[m	[32mtype WebhookMessageOptions = {[m
[32m+[m		[32musername?: string;[m
[32m+[m		[32mavatarURL?: string;[m
[32m+[m		[32mtts?: boolean;[m
[32m+[m		[32mnonce?: string;[m
[32m+[m		[32membeds?: (RichEmbed | object)[];[m
[32m+[m		[32mdisableEveryone?: boolean;[m
[32m+[m		[32mfile?: FileOptions | BufferResolvable | Attachment;[m
[32m+[m		[32mfiles?: (FileOptions | BufferResolvable | Attachment)[];[m
[32m+[m		[32mcode?: string | boolean;[m
[32m+[m		[32msplit?: boolean | SplitOptions;[m
[32m+[m	[32m};[m
[32m+[m
[32m+[m	[32mtype WebSocketOptions = {[m
[32m+[m		[32mlarge_threshold?: number;[m
[32m+[m		[32mcompress?: boolean;[m
[32m+[m	[32m};[m
[32m+[m
[32m+[m	[32mtype WSEventType = 'READY'[m
[32m+[m		[32m| 'RESUMED'[m
[32m+[m		[32m| 'GUILD_SYNC'[m
[32m+[m		[32m| 'GUILD_CREATE'[m
[32m+[m		[32m| 'GUILD_DELETE'[m
[32m+[m		[32m| 'GUILD_UPDATE'[m
[32m+[m		[32m| 'GUILD_MEMBER_ADD'[m
[32m+[m		[32m| 'GUILD_MEMBER_REMOVE'[m
[32m+[m		[32m| 'GUILD_MEMBER_UPDATE'[m
[32m+[m		[32m| 'GUILD_MEMBERS_CHUNK'[m
[32m+[m		[32m| 'GUILD_INTEGRATIONS_UPDATE'[m
[32m+[m		[32m| 'GUILD_ROLE_CREATE'[m
[32m+[m		[32m| 'GUILD_ROLE_DELETE'[m
[32m+[m		[32m| 'GUILD_ROLE_UPDATE'[m
[32m+[m		[32m| 'GUILD_BAN_ADD'[m
[32m+[m		[32m| 'GUILD_BAN_REMOVE'[m
[32m+[m		[32m| 'CHANNEL_CREATE'[m
[32m+[m		[32m| 'CHANNEL_DELETE'[m
[32m+[m		[32m| 'CHANNEL_UPDATE'[m
[32m+[m		[32m| 'CHANNEL_PINS_UPDATE'[m
[32m+[m		[32m| 'MESSAGE_CREATE'[m
[32m+[m		[32m| 'MESSAGE_DELETE'[m
[32m+[m		[32m| 'MESSAGE_UPDATE'[m
[32m+[m		[32m| 'MESSAGE_DELETE_BULK'[m
[32m+[m		[32m| 'MESSAGE_REACTION_ADD'[m
[32m+[m		[32m| 'MESSAGE_REACTION_REMOVE'[m
[32m+[m		[32m| 'MESSAGE_REACTION_REMOVE_ALL'[m
[32m+[m		[32m| 'USER_UPDATE'[m
[32m+[m		[32m| 'USER_NOTE_UPDATE'[m
[32m+[m		[32m| 'USER_SETTINGS_UPDATE'[m
[32m+[m		[32m| 'USER_GUILD_SETTINGS_UPDATE'[m
[32m+[m		[32m| 'PRESENCE_UPDATE'[m
[32m+[m		[32m| 'VOICE_STATE_UPDATE'[m
[32m+[m		[32m| 'TYPING_START'[m
[32m+[m		[32m| 'VOICE_SERVER_UPDATE'[m
[32m+[m		[32m| 'WEBHOOKS_UPDATE'[m
[32m+[m		[32m| 'RELATIONSHIP_ADD'[m
[32m+[m		[32m| 'RELATIONSHIP_REMOVE';[m
[32m+[m
[32m+[m[32m//#endregion[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/long/LICENSE b/node_modules/long/LICENSE[m
[1mnew file mode 100644[m
[1mindex 0000000..d645695[m
[1m--- /dev/null[m
[1m+++ b/node_modules/long/LICENSE[m
[36m@@ -0,0 +1,202 @@[m
[32m+[m
[32m+[m[32m                                 Apache License[m
[32m+[m[32m                           Version 2.0, January 2004[m
[32m+[m[32m                        http://www.apache.org/licenses/[m
[32m+[m
[32m+[m[32m   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION[m
[32m+[m
[32m+[m[32m   1. Definitions.[m
[32m+[m
[32m+[m[32m      "License" shall mean the terms and conditions for use, reproduction,[m
[32m+[m[32m      and distribution as defined by Sections 1 through 9 of this document.[m
[32m+[m
[32m+[m[32m      "Licensor" shall mean the copyright owner or entity authorized by[m
[32m+[m[32m      the copyright owner that is granting the License.[m
[32m+[m
[32m+[m[32m      "Legal Entity" shall mean the union of the acting entity and all[m
[32m+[m[32m      other entities that control, are controlled by, or are under common[m
[32m+[m[32m      control with that entity. For the purposes of this definition,[m
[32m+[m[32m      "control" means (i) the power, direct or indirect, to cause the[m
[32m+[m[32m      direction or management of such entity, whether by contract or[m
[32m+[m[32m      otherwise, or (ii) ownership of fifty percent (50%) or more of the[m
[32m+[m[32m      outstanding shares, or (iii) beneficial ownership of such entity.[m
[32m+[m
[32m+[m[32m      "You" (or "Your") shall mean an individual or Legal Entity[m
[32m+[m[32m      exercising permissions granted by this License.[m
[32m+[m
[32m+[m[32m      "Source" form shall mean the preferred form for making modifications,[m
[32m+[m[32m      including but not limited to software source code, documentation[m
[32m+[m[32m      source, and configuration files.[m
[32m+[m
[32m+[m[32m      "Object" form shall mean any form resulting from mechanical[m
[32m+[m[32m      transformation or translation of a Source form, including but[m
[32m+[m[32m      not limited to compiled object code, generated documentation,[m
[32m+[m[32m      and conversions to other media types.[m
[32m+[m
[32m+[m[32m      "Work" shall mean the work of authorship, whether in Source or[m
[32m+[m[32m      Object form, made available under the License, as indicated by a[m
[32m+[m[32m      copyright notice that is included in or attached to the work[m
[32m+[m[32m      (an example is provided in the Appendix below).[m
[32m+[m
[32m+[m[32m      "Derivative Works" shall mean any work, whether in Source or Object[m
[32m+[m[32m      form, that is based on (or derived from) the Work and for which the[m
[32m+[m[32m      editorial revisions, annotations, elaborations, or other modifications[m
[32m+[m[32m      represent, as a whole, an original work of authorship. For the purposes[m
[32m+[m[32m      of this License, Derivative Works shall not include works that remain[m
[32m+[m[32m      separable from, or merely link (or bind by name) to the interfaces of,[m
[32m+[m[32m      the Work and Derivative Works thereof.[m
[32m+[m
[32m+[m[32m      "Contribution" shall mean any work of authorship, including[m
[32m+[m[32m      the original version of the Work and any modifications or additions[m
[32m+[m[32m      to that Work or Derivative Works thereof, that is intentionally[m
[32m+[m[32m      submitted to Licensor for inclusion in the Work by the copyright owner[m
[32m+[m[32m      or by an individual or Legal Entity authorized to submit on behalf of[m
[32m+[m[32m      the copyright owner. For the purposes of this definition, "submitted"[m
[32m+[m[32m      means any form of electronic, verbal, or written communication sent[m
[32m+[m[32m      to the Licensor or its representatives, including but not limited to[m
[32m+[m[32m      communication on electronic mailing lists, source code control systems,[m
[32m+[m[32m      and issue tracking systems that are managed by, or on behalf of, the[m
[32m+[m[32m      Licensor for the purpose of discussing and improving the Work, but[m
[32m+[m[32m      excluding communication that is conspicuously marked or otherwise[m
[32m+[m[32m      designated in writing by the copyright owner as "Not a Contribution."[m
[32m+[m
[32m+[m[32m      "Contributor" shall mean Licensor and any individual or Legal Entity[m
[32m+[m[32m      on behalf of whom a Contribution has been received by Licensor and[m
[32m+[m[32m      subsequently incorporated within the Work.[m
[32m+[m
[32m+[m[32m   2. Grant of Copyright License. Subject to the terms and conditions of[m
[32m+[m[32m      this License, each Contributor hereby grants to You a perpetual,[m
[32m+[m[32m      worldwide, non-exclusive, no-charge, royalty-free, irrevocable[m
[32m+[m[32m      copyright license to reproduce, prepare Derivative Works of,[m
[32m+[m[32m      publicly display, publicly perform, sublicense, and distribute the[m
[32m+[m[32m      Work and such Derivative Works in Source or Object form.[m
[32m+[m
[32m+[m[32m   3. Grant of Patent License. Subject to the terms and conditions of[m
[32m+[m[32m      this License, each Contributor hereby grants to You a perpetual,[m
[32m+[m[32m      worldwide, non-exclusive, no-charge, royalty-free, irrevocable[m
[32m+[m[32m      (except as stated in this section) patent license to make, have made,[m
[32m+[m[32m      use, offer to sell, sell, import, and otherwise transfer the Work,[m
[32m+[m[32m      where such license applies only to those patent claims licensable[m
[32m+[m[32m      by such Contributor that are necessarily infringed by their[m
[32m+[m[32m      Contribution(s) alone or by combination of their Contribution(s)[m
[32m+[m[32m      with the Work to which such Contribution(s) was submitted. If You[m
[32m+[m[32m      institute patent litigation against any entity (including a[m
[32m+[m[32m      cross-claim or counterclaim in a lawsuit) alleging that the Work[m
[32m+[m[32m      or a Contribution incorporated within the Work constitutes direct[m
[32m+[m[32m      or contributory patent infringement, then any patent licenses[m
[32m+[m[32m      granted to You under this License for that Work shall terminate[m
[32m+[m[32m      as of the date such litigation is filed.[m
[32m+[m
[32m+[m[32m   4. Redistribution. You may reproduce and distribute copies of the[m
[32m+[m[32m      Work or Derivative Works thereof in any medium, with or without[m
[32m+[m[32m      modifications, and in Source or Object form, provided that You[m
[32m+[m[32m      meet the following conditions:[m
[32m+[m
[32m+[m[32m      (a) You must give any other recipients of the Work or[m
[32m+[m[32m          Derivative Works a copy of this License; and[m
[32m+[m
[32m+[m[32m      (b) You must cause any modified files to carry prominent notices[m
[32m+[m[32m          stating that You changed the files; and[m
[32m+[m
[32m+[m[32m      (c) You must retain, in the Source form of any Derivative Works[m
[32m+[m[32m          that You distribute, all copyright, patent, trademark, and[m
[32m+[m[32m          attribution notices from the Source form of the Work,[m
[32m+[m[32m          excluding those notices that do not pertain to any part of[m
[32m+[m[32m          the Derivative Works; and[m
[32m+[m
[32m+[m[32m      (d) If the Work includes a "NOTICE" text file as part of its[m
[32m+[m[32m          distribution, then any Derivative Works that You distribute must[m
[32m+[m[32m          include a readable copy of the attribution notices contained[m
[32m+[m[32m          within such NOTICE file, excluding those notices that do not[m
[32m+[m[32m          pertain to any part of the Derivative Works, in at least one[m
[32m+[m[32m          of the following places: within a NOTICE text file distributed[m
[32m+[m[32m          as part of the Derivative Works; within the Source form or[m
[32m+[m[32m          documentation, if provided along with the Derivative Works; or,[m
[32m+[m[32m          within a display generated by the Derivative Works, if and[m
[32m+[m[32m          wherever such third-party notices normally appear. The contents[m
[32m+[m[32m          of the NOTICE file are for informational purposes only and[m
[32m+[m[32m          do not modify the License. You may add Your own attribution[m
[32m+[m[32m          notices within Derivative Works that You distribute, alongside[m
[32m+[m[32m          or as an addendum to the NOTICE text from the Work, provided[m
[32m+[m[32m          that such additional attribution notices cannot be construed[m
[32m+[m[32m          as modifying the License.[m
[32m+[m
[32m+[m[32m      You may add Your own copyright statement to Your modifications and[m
[32m+[m[32m      may provide additional or different license terms and conditions[m
[32m+[m[32m      for use, reproduction, or distribution of Your modifications, or[m
[32m+[m[32m      for any such Derivative Works as a whole, provided Your use,[m
[32m+[m[32m      reproduction, and distribution of the Work otherwise complies with[m
[32m+[m[32m      the conditions stated in this License.[m
[32m+[m
[32m+[m[32m   5. Submission of Contributions. Unless You explicitly state otherwise,[m
[32m+[m[32m      any Contribution intentionally submitted for inclusion in the Work[m
[32m+[m[32m      by You to the Licensor shall be under the terms and conditions of[m
[32m+[m[32m      this License, without any additional terms or conditions.[m
[32m+[m[32m      Notwithstanding the above, nothing herein shall supersede or modify[m
[32m+[m[32m      the terms of any separate license agreement you may have executed[m
[32m+[m[32m      with Licensor regarding such Contributions.[m
[32m+[m
[32m+[m[32m   6. Trademarks. This License does not grant permission to use the trade[m
[32m+[m[32m      names, trademarks, service marks, or product names of the Licensor,[m
[32m+[m[32m      except as required for reasonable and customary use in describing the[m
[32m+[m[32m      origin of the Work and reproducing the content of the NOTICE file.[m
[32m+[m
[32m+[m[32m   7. Disclaimer of Warranty. Unless required by applicable law or[m
[32m+[m[32m      agreed to in writing, Licensor provides the Work (and each[m
[32m+[m[32m      Contributor provides its Contributions) on an "AS IS" BASIS,[m
[32m+[m[32m      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or[m
[32m+[m[32m      implied, including, without limitation, any warranties or conditions[m
[32m+[m[32m      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A[m
[32m+[m[32m      PARTICULAR PURPOSE. You are solely responsible for determining the[m
[32m+[m[32m      appropriateness of using or redistributing the Work and assume any[m
[32m+[m[32m      risks associated with Your exercise of permissions under this License.[m
[32m+[m
[32m+[m[32m   8. Limitation of Liability. In no event and under no legal theory,[m
[32m+[m[32m      whether in tort (including negligence), contract, or otherwise,[m
[32m+[m[32m      unless required by applicable law (such as deliberate and grossly[m
[32m+[m[32m      negligent acts) or agreed to in writing, shall any Contributor be[m
[32m+[m[32m      liable to You for damages, including any direct, indirect, special,[m
[32m+[m[32m      incidental, or consequential damages of any character arising as a[m
[32m+[m[32m      result of this License or out of the use or inability to use the[m
[32m+[m[32m      Work (including but not limited to damages for loss of goodwill,[m
[32m+[m[32m      work stoppage, computer failure or malfunction, or any and all[m
[32m+[m[32m      other commercial damages or losses), even if such Contributor[m
[32m+[m[32m      has been advised of the possibility of such damages.[m
[32m+[m
[32m+[m[32m   9. Accepting Warranty or Additional Liability. While redistributing[m
[32m+[m[32m      the Work or Derivative Works thereof, You may choose to offer,[m
[32m+[m[32m      and charge a fee for, acceptance of support, warranty, indemnity,[m
[32m+[m[32m      or other liability obligations and/or rights consistent with this[m
[32m+[m[32m      License. However, in accepting such obligations, You may act only[m
[32m+[m[32m      on Your own behalf and on Your sole responsibility, not on behalf[m
[32m+[m[32m      of any other Contributor, and only if You agree to indemnify,[m
[32m+[m[32m      defend, and hold each Contributor harmless for any liability[m
[32m+[m[32m      incurred by, or claims asserted against, such Contributor by reason[m
[32m+[m[32m      of your accepting any such warranty or additional liability.[m
[32m+[m
[32m+[m[32m   END OF TERMS AND CONDITIONS[m
[32m+[m
[32m+[m[32m   APPENDIX: How to apply the Apache License to your work.[m
[32m+[m
[32m+[m[32m      To apply the Apache License to your work, attach the following[m
[32m+[m[32m      boilerplate notice, with the fields enclosed by brackets "[]"[m
[32m+[m[32m      replaced with your own identifying information. (Don't include[m
[32m+[m[32m      the brackets!)  The text should be enclosed in the appropriate[m
[32m+[m[32m      comment syntax for the file format. We also recommend that a[m
[32m+[m[32m      file or class name and description of purpose be included on the[m
[32m+[m[32m      same "printed page" as the copyright notice for easier[m
[32m+[m[32m      identification within third-party archives.[m
[32m+[m
[32m+[m[32m   Copyright [yyyy] [name of copyright owner][m
[32m+[m
[32m+[m[32m   Licensed under the Apache License, Version 2.0 (the "License");[m
[32m+[m[32m   you may not use this file except in compliance with the License.[m
[32m+[m[32m   You may obtain a copy of the License at[m
[32m+[m
[32m+[m[32m       http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m
[32m+[m[32m   Unless required by applicable law or agreed to in writing, software[m
[32m+[m[32m   distributed under the License is distributed on an "AS IS" BASIS,[m
[32m+[m[32m   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.[m
[32m+[m[32m   See the License for the specific language governing permissions and[m
[32m+[m[32m   limitations under the License.[m
[1mdiff --git a/node_modules/long/README.md b/node_modules/long/README.md[m
[1mnew file mode 100644[m
[1mindex 0000000..1f5f060[m
[1m--- /dev/null[m
[1m+++ b/node_modules/long/README.md[m
[36m@@ -0,0 +1,246 @@[m
[32m+[m[32mlong.js[m
[32m+[m[32m=======[m
[32m+[m
[32m+[m[32mA Long class for representing a 64 bit two's-complement integer value derived from the [Closure Library](https://github.com/google/closure-library)[m
[32m+[m[32mfor stand-alone use and extended with unsigned support.[m
[32m+[m
[32m+[m[32m[![Build Status](https://travis-ci.org/dcodeIO/long.js.svg)](https://travis-ci.org/dcodeIO/long.js)[m
[32m+[m
[32m+[m[32mBackground[m
[32m+[m[32m----------[m
[32m+[m
[32m+[m[32mAs of [ECMA-262 5th Edition](http://ecma262-5.com/ELS5_HTML.htm#Section_8.5), "all the positive and negative integers[m
[32m+[m[32mwhose magnitude is no greater than 2<sup>53</sup> are representable in the Number type", which is "representing the[m
[32m+[m[32mdoubleprecision 64-bit format IEEE 754 values as specified in the IEEE Standard for Binary Floating-Point Arithmetic".[m
[32m+[m[32mThe [maximum safe integer](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER)[m
[32m+[m[32min JavaScript is 2<sup>53</sup>-1.[m
[32m+[m
[32m+[m[32mExample: 2<sup>64</sup>-1 is 1844674407370955**1615** but in JavaScript it evaluates to 1844674407370955**2000**.[m
[32m+[m
[32m+[m[32mFurthermore, bitwise operators in JavaScript "deal only with integers in the range −2<sup>31</sup> through[m
[32m+[m[32m2<sup>31</sup>−1, inclusive, or in the range 0 through 2<sup>32</sup>−1, inclusive. These operators accept any value of[m
[32m+[m[32mthe Number type but first convert each such value to one of 2<sup>32</sup> integer values."[m
[32m+[m
[32m+[m[32mIn some use cases, however, it is required to be able to reliably work with and perform bitwise operations on the full[m
[32m+[m[32m64 bits. This is where long.js comes into play.[m
[32m+[m
[32m+[m[32mUsage[m
[32m+[m[32m-----[m
[32m+[m
[32m+[m[32mThe class is compatible with CommonJS and AMD loaders and is exposed globally as `Long` if neither is available.[m
[32m+[m
[32m+[m[32m```javascript[m
[32m+[m[32mvar Long = require("long");[m
[32m+[m
[32m+[m[32mvar longVal = new Long(0xFFFFFFFF, 0x7FFFFFFF);[m
[32m+[m
[32m+[m[32mconsole.log(longVal.toString());[m
[32m+[m[32m...[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mAPI[m
[32m+[m[32m---[m
[32m+[m
[32m+[m[32m### Constructor[m
[32m+[m
[32m+[m[32m* new **Long**(low: `number`, high: `number`, unsigned?: `boolean`)<br />[m
[32m+[m[32m  Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers. See the from* functions below for more convenient ways of constructing Longs.[m
[32m+[m
[32m+[m[32m### Fields[m
[32m+[m
[32m+[m[32m* Long#**low**: `number`<br />[m
[32m+[m[32m  The low 32 bits as a signed value.[m
[32m+[m
[32m+[m[32m* Long#**high**: `number`<br />[m
[32m+[m[32m  The high 32 bits as a signed value.[m
[32m+[m
[32m+[m[32m* Long#**unsigned**: `boolean`<br />[m
[32m+[m[32m  Whether unsigned or not.[m
[32m+[m
[32m+[m[32m### Constants[m
[32m+[m
[32m+[m[32m* Long.**ZERO**: `Long`<br />[m
[32m+[m[32m  Signed zero.[m
[32m+[m
[32m+[m[32m* Long.**ONE**: `Long`<br />[m
[32m+[m[32m  Signed one.[m
[32m+[m
[32m+[m[32m* Long.**NEG_ONE**: `Long`<br />[m
[32m+[m[32m  Signed negative one.[m
[32m+[m
[32m+[m[32m* Long.**UZERO**: `Long`<br />[m
[32m+[m[32m  Unsigned zero.[m
[32m+[m
[32m+[m[32m* Long.**UONE**: `Long`<br />[m
[32m+[m[32m  Unsigned one.[m
[32m+[m
[32m+[m[32m* Long.**MAX_VALUE**: `Long`<br />[m
[32m+[m[32m  Maximum signed value.[m
[32m+[m
[32m+[m[32m* Long.**MIN_VALUE**: `Long`<br />[m
[32m+[m[32m  Minimum signed value.[m
[32m+[m
[32m+[m[32m* Long.**MAX_UNSIGNED_VALUE**: `Long`<br />[m
[32m+[m[32m  Maximum unsigned value.[m
[32m+[m
[32m+[m[32m### Utility[m
[32m+[m
[32m+[m[32m* Long.**isLong**(obj: `*`): `boolean`<br />[m
[32m+[m[32m  Tests if the specified object is a Long.[m
[32m+[m
[32m+[m[32m* Long.**fromBits**(lowBits: `number`, highBits: `number`, unsigned?: `boolean`): `Long`<br />[m
[32m+[m[32m  Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is assumed to use 32 bits.[m
[32m+[m
[32m+[m[32m* Long.**fromBytes**(bytes: `number[]`, unsigned?: `boolean`, le?: `boolean`): `Long`<br />[m
[32m+[m[32m  Creates a Long from its byte representation.[m
[32m+[m
[32m+[m[32m* Long.**fromBytesLE**(bytes: `number[]`, unsigned?: `boolean`): `Long`<br />[m
[32m+[m[32m  Creates a Long from its little endian byte representation.[m
[32m+[m
[32m+[m[32m* Long.**fromBytesBE**(bytes: `number[]`, unsigned?: `boolean`): `Long`<br />[m
[32m+[m[32m  Creates a Long from its big endian byte representation.[m
[32m+[m
[32m+[m[32m* Long.**fromInt**(value: `number`, unsigned?: `boolean`): `Long`<br />[m
[32m+[m[32m  Returns a Long representing the given 32 bit integer value.[m
[32m+[m
[32m+[m[32m* Long.**fromNumber**(value: `number`, unsigned?: `boolean`): `Long`<br />[m
[32m+[m[32m  Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.[m
[32m+[m
[32m+[m[32m* Long.**fromString**(str: `string`, unsigned?: `boolean`, radix?: `number`)<br />[m
[32m+[m[32m  Long.**fromString**(str: `string`, radix: `number`)<br />[m
[32m+[m[32m  Returns a Long representation of the given string, written using the specified radix.[m
[32m+[m
[32m+[m[32m* Long.**fromValue**(val: `*`, unsigned?: `boolean`): `Long`<br />[m
[32m+[m[32m  Converts the specified value to a Long using the appropriate from* function for its type.[m
[32m+[m
[32m+[m[32m### Methods[m
[32m+[m
[32m+[m[32m* Long#**add**(addend: `Long | number | string`): `Long`<br />[m
[32m+[m[32m  Returns the sum of this and the specified Long.[m
[32m+[m
[32m+[m[32m* Long#**and**(other: `Long | number | string`): `Long`<br />[m
[32m+[m[32m  Returns the bitwise AND of this Long and the specified.[m
[32m+[m
[32m+[m[32m* Long#**compare**/**comp**(other: `Long | number | string`): `number`<br />[m
[32m+[m[32m  Compares this Long's value with the specified's. Returns `0` if they are the same, `1` if the this is greater and `-1` if the given one is greater.[m
[32m+[m
[32m+[m[32m* Long#**divide**/**div**(divisor: `Long | number | string`): `Long`<br />[m
[32m+[m[32m  Returns this Long divided by the specified.[m
[32m+[m
[32m+[m[32m* Long#**equals**/**eq**(other: `Long | number | string`): `boolean`<br />[m
[32m+[m[32m  Tests if this Long's value equals the specified's.[m
[32m+[m
[32m+[m[32m* Long#**getHighBits**(): `number`<br />[m
[32m+[m[32m  Gets the high 32 bits as a signed integer.[m
[32m+[m
[32m+[m[32m* Long#**getHighBitsUnsigned**(): `number`<br />[m
[32m+[m[32m  Gets the high 32 bits as an unsigned integer.[m
[32m+[m
[32m+[m[32m* Long#**getLowBits**(): `number`<br />[m
[32m+[m[32m  Gets the low 32 bits as a signed integer.[m
[32m+[m
[32m+[m[32m* Long#**getLowBitsUnsigned**(): `number`<br />[m
[32m+[m[32m  Gets the low 32 bits as an unsigned integer.[m
[32m+[m
[32m+[m[32m* Long#**getNumBitsAbs**(): `number`<br />[m
[32m+[m[32m  Gets the number of bits needed to represent the absolute value of this Long.[m
[32m+[m
[32m+[m[32m* Long#**greaterThan**/**gt**(other: `Long | number | string`): `boolean`<br />[m
[32m+[m[32m  Tests if this Long's value is greater than the specified's.[m
[32m+[m
[32m+[m[32m* Long#**greaterThanOrEqual**/**gte**/**ge**(other: `Long | number | string`): `boolean`<br />[m
[32m+[m[32m  Tests if this Long's value is greater than or equal the specified's.[m
[32m+[m
[32m+[m[32m* Long#**isEven**(): `boolean`<br />[m
[32m+[m[32m  Tests if this Long's value is even.[m
[32m+[m
[32m+[m[32m* Long#**isNegative**(): `boolean`<br />[m
[32m+[m[32m  Tests if this Long's value is negative.[m
[32m+[m
[32m+[m[32m* Long#**isOdd**(): `boolean`<br />[m
[32m+[m[32m  Tests if this Long's value is odd.[m
[32m+[m
[32m+[m[32m* Long#**isPositive**(): `boolean`<br />[m
[32m+[m[32m  Tests if this Long's value is positive.[m
[32m+[m
[32m+[m[32m* Long#**isZero**/**eqz**(): `boolean`<br />[m
[32m+[m[32m  Tests if this Long's value equals zero.[m
[32m+[m
[32m+[m[32m* Long#**lessThan**/**lt**(other: `Long | number | string`): `boolean`<br />[m
[32m+[m[32m  Tests if this Long's value is less than the specified's.[m
[32m+[m
[32m+[m[32m* Long#**lessThanOrEqual**/**lte**/**le**(other: `Long | number | string`): `boolean`<br />[m
[32m+[m[32m  Tests if this Long's value is less than or equal the specified's.[m
[32m+[m
[32m+[m[32m* Long#**modulo**/**mod**/**rem**(divisor: `Long | number | string`): `Long`<br />[m
[32m+[m[32m  Returns this Long modulo the specified.[m
[32m+[m
[32m+[m[32m* Long#**multiply**/**mul**(multiplier: `Long | number | string`): `Long`<br />[m
[32m+[m[32m  Returns the product of this and the specified Long.[m
[32m+[m
[32m+[m[32m* Long#**negate**/**neg**(): `Long`<br />[m
[32m+[m[32m  Negates this Long's value.[m
[32m+[m
[32m+[m[32m* Long#**not**(): `Long`<br />[m
[32m+[m[32m  Returns the bitwise NOT of this Long.[m
[32m+[m
[32m+[m[32m* Long#**notEquals**/**neq**/**ne**(other: `Long | number | string`): `boolean`<br />[m
[32m+[m[32m  Tests if this Long's value differs from the specified's.[m
[32m+[m
[32m+[m[32m* Long#**or**(other: `Long | number | string`): `Long`<br />[m
[32m+[m[32m  Returns the bitwise OR of this Long and the specified.[m
[32m+[m
[32m+[m[32m* Long#**shiftLeft**/**shl**(numBits: `Long | number | string`): `Long`<br />[m
[32m+[m[32m  Returns this Long with bits shifted to the left by the given amount.[m
[32m+[m
[32m+[m[32m* Long#**shiftRight**/**shr**(numBits: `Long | number | string`): `Long`<br />[m
[32m+[m[32m  Returns this Long with bits arithmetically shifted to the right by the given amount.[m
[32m+[m
[32m+[m[32m* Long#**shiftRightUnsigned**/**shru**/**shr_u**(numBits: `Long | number | string`): `Long`<br />[m
[32m+[m[32m  Returns this Long with bits logically shifted to the right by the given amount.[m
[32m+[m
[32m+[m[32m* Long#**subtract**/**sub**(subtrahend: `Long | number | string`): `Long`<br />[m
[32m+[m[32m  Returns the difference of this and the specified Long.[m
[32m+[m
[32m+[m[32m* Long#**toBytes**(le?: `boolean`): `number[]`<br />[m
[32m+[m[32m  Converts this Long to its byte representation.[m
[32m+[m
[32m+[m[32m* Long#**toBytesLE**(): `number[]`<br />[m
[32m+[m[32m  Converts this Long to its little endian byte representation.[m
[32m+[m
[32m+[m[32m* Long#**toBytesBE**(): `number[]`<br />[m
[32m+[m[32m  Converts this Long to its big endian byte representation.[m
[32m+[m
[32m+[m[32m* Long#**toInt**(): `number`<br />[m
[32m+[m[32m  Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.[m
[32m+[m
[32m+[m[32m* Long#**toNumber**(): `number`<br />[m
[32m+[m[32m  Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).[m
[32m+[m
[32m+[m[32m* Long#**toSigned**(): `Long`<br />[m
[32m+[m[32m  Converts this Long to signed.[m
[32m+[m
[32m+[m[32m* Long#**toString**(radix?: `number`): `string`<br />[m
[32m+[m[32m  Converts the Long to a string written in the specified radix.[m
[32m+[m
[32m+[m[32m* Long#**toUnsigned**(): `Long`<br />[m
[32m+[m[32m  Converts this Long to unsigned.[m
[32m+[m
[32m+[m[32m* Long#**xor**(other: `Long | number | string`): `Long`<br />[m
[32m+[m[32m  Returns the bitwise XOR of this Long and the given one.[m
[32m+[m
[32m+[m[32mBuilding[m
[32m+[m[32m--------[m
[32m+[m
[32m+[m[32mTo build an UMD bundle to `dist/long.js`, run:[m
[32m+[m
[32m+[m[32m```[m
[32m+[m[32m$> npm install[m
[32m+[m[32m$> npm run build[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mRunning the [tests](./tests):[m
[32m+[m
[32m+[m[32m```[m
[32m+[m[32m$> npm test[m
[32m+[m[32m```[m
[1mdiff --git a/node_modules/long/dist/long.js b/node_modules/long/dist/long.js[m
[1mnew file mode 100644[m
[1mindex 0000000..9345893[m
[1m--- /dev/null[m
[1m+++ b/node_modules/long/dist/long.js[m
[36m@@ -0,0 +1,2 @@[m
[32m+[m[32m!function(t,i){"object"==typeof exports&&"object"==typeof module?module.exports=i():"function"==typeof define&&define.amd?define([],i):"object"==typeof exports?exports.Long=i():t.Long=i()}("undefined"!=typeof self?self:this,function(){return function(t){function i(e){if(n[e])return n[e].exports;var r=n[e]={i:e,l:!1,exports:{}};return t[e].call(r.exports,r,r.exports,i),r.l=!0,r.exports}var n={};return i.m=t,i.c=n,i.d=function(t,n,e){i.o(t,n)||Object.defineProperty(t,n,{configurable:!1,enumerable:!0,get:e})},i.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(n,"a",n),n},i.o=function(t,i){return Object.prototype.hasOwnProperty.call(t,i)},i.p="",i(i.s=0)}([function(t,i){function n(t,i,n){this.low=0|t,this.high=0|i,this.unsigned=!!n}function e(t){return!0===(t&&t.__isLong__)}function r(t,i){var n,e,r;return i?(t>>>=0,(r=0<=t&&t<256)&&(e=l[t])?e:(n=h(t,(0|t)<0?-1:0,!0),r&&(l[t]=n),n)):(t|=0,(r=-128<=t&&t<128)&&(e=f[t])?e:(n=h(t,t<0?-1:0,!1),r&&(f[t]=n),n))}function s(t,i){if(isNaN(t))return i?p:m;if(i){if(t<0)return p;if(t>=c)return q}else{if(t<=-v)return _;if(t+1>=v)return E}return t<0?s(-t,i).neg():h(t%d|0,t/d|0,i)}function h(t,i,e){return new n(t,i,e)}function u(t,i,n){if(0===t.length)throw Error("empty string");if("NaN"===t||"Infinity"===t||"+Infinity"===t||"-Infinity"===t)return m;if("number"==typeof i?(n=i,i=!1):i=!!i,(n=n||10)<2||36<n)throw RangeError("radix");var e;if((e=t.indexOf("-"))>0)throw Error("interior hyphen");if(0===e)return u(t.substring(1),i,n).neg();for(var r=s(a(n,8)),h=m,o=0;o<t.length;o+=8){var g=Math.min(8,t.length-o),f=parseInt(t.substring(o,o+g),n);if(g<8){var l=s(a(n,g));h=h.mul(l).add(s(f))}else h=h.mul(r),h=h.add(s(f))}return h.unsigned=i,h}function o(t,i){return"number"==typeof t?s(t,i):"string"==typeof t?u(t,i):h(t.low,t.high,"boolean"==typeof i?i:t.unsigned)}t.exports=n;var g=null;try{g=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(t){}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=e;var f={},l={};n.fromInt=r,n.fromNumber=s,n.fromBits=h;var a=Math.pow;n.fromString=u,n.fromValue=o;var d=4294967296,c=d*d,v=c/2,w=r(1<<24),m=r(0);n.ZERO=m;var p=r(0,!0);n.UZERO=p;var y=r(1);n.ONE=y;var b=r(1,!0);n.UONE=b;var N=r(-1);n.NEG_ONE=N;var E=h(-1,2147483647,!1);n.MAX_VALUE=E;var q=h(-1,-1,!0);n.MAX_UNSIGNED_VALUE=q;var _=h(0,-2147483648,!1);n.MIN_VALUE=_;var B=n.prototype;B.toInt=function(){return this.unsigned?this.low>>>0:this.low},B.toNumber=function(){return this.unsigned?(this.high>>>0)*d+(this.low>>>0):this.high*d+(this.low>>>0)},B.toString=function(t){if((t=t||10)<2||36<t)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(_)){var i=s(t),n=this.div(i),e=n.mul(i).sub(this);return n.toString(t)+e.toInt().toString(t)}return"-"+this.neg().toString(t)}for(var r=s(a(t,6),this.unsigned),h=this,u="";;){var o=h.div(r),g=h.sub(o.mul(r)).toInt()>>>0,f=g.toString(t);if(h=o,h.isZero())return f+u;for(;f.length<6;)f="0"+f;u=""+f+u}},B.getHighBits=function(){return this.high},B.getHighBitsUnsigned=function(){return this.high>>>0},B.getLowBits=function(){return this.low},B.getLowBitsUnsigned=function(){return this.low>>>0},B.getNumBitsAbs=function(){if(this.isNegative())return this.eq(_)?64:this.neg().getNumBitsAbs();for(var t=0!=this.high?this.high:this.low,i=31;i>0&&0==(t&1<<i);i--);return 0!=this.high?i+33:i+1},B.isZero=function(){return 0===this.high&&0===this.low},B.eqz=B.isZero,B.isNegative=function(){return!this.unsigned&&this.high<0},B.isPositive=function(){return this.unsigned||this.high>=0},B.isOdd=function(){return 1==(1&this.low)},B.isEven=function(){return 0==(1&this.low)},B.equals=function(t){return e(t)||(t=o(t)),(this.unsigned===t.unsigned||this.high>>>31!=1||t.high>>>31!=1)&&(this.high===t.high&&this.low===t.low)},B.eq=B.equals,B.notEquals=function(t){return!this.eq(t)},B.neq=B.notEquals,B.ne=B.notEquals,B.lessThan=function(t){return this.comp(t)<0},B.lt=B.lessThan,B.lessThanOrEqual=function(t){return this.comp(t)<=0},B.lte=B.lessThanOrEqual,B.le=B.lessThanOrEqual,B.greaterThan=function(t){return this.comp(t)>0},B.gt=B.greaterThan,B.greaterThanOrEqual=function(t){return this.comp(t)>=0},B.gte=B.greaterThanOrEqual,B.ge=B.greaterThanOrEqual,B.compare=function(t){if(e(t)||(t=o(t)),this.eq(t))return 0;var i=this.isNegative(),n=t.isNegative();return i&&!n?-1:!i&&n?1:this.unsigned?t.high>>>0>this.high>>>0||t.high===this.high&&t.low>>>0>this.low>>>0?-1:1:this.sub(t).isNegative()?-1:1},B.comp=B.compare,B.negate=function(){return!this.unsigned&&this.eq(_)?_:this.not().add(y)},B.neg=B.negate,B.add=function(t){e(t)||(t=o(t));var i=this.high>>>16,n=65535&this.high,r=this.low>>>16,s=65535&this.low,u=t.high>>>16,g=65535&t.high,f=t.low>>>16,l=65535&t.low,a=0,d=0,c=0,v=0;return v+=s+l,c+=v>>>16,v&=65535,c+=r+f,d+=c>>>16,c&=65535,d+=n+g,a+=d>>>16,d&=65535,a+=i+u,a&=65535,h(c<<16|v,a<<16|d,this.unsigned)},B.subtract=function(t){return e(t)||(t=o(t)),this.add(t.neg())},B.sub=B.subtract,B.multiply=function(t){if(this.isZero())return m;if(e(t)||(t=o(t)),g){return h(g.mul(this.low,this.high,t.low,t.high),g.get_high(),this.unsigned)}if(t.isZero())return m;if(this.eq(_))return t.isOdd()?_:m;if(t.eq(_))return this.isOdd()?_:m;if(this.isNegative())return t.isNegative()?this.neg().mul(t.neg()):this.neg().mul(t).neg();if(t.isNegative())return this.mul(t.neg()).neg();if(this.lt(w)&&t.lt(w))return s(this.toNumber()*t.toNumber(),this.unsigned);var i=this.high>>>16,n=65535&this.high,r=this.low>>>16,u=65535&this.low,f=t.high>>>16,l=65535&t.high,a=t.low>>>16,d=65535&t.low,c=0,v=0,p=0,y=0;return y+=u*d,p+=y>>>16,y&=65535,p+=r*d,v+=p>>>16,p&=65535,p+=u*a,v+=p>>>16,p&=65535,v+=n*d,c+=v>>>16,v&=65535,v+=r*a,c+=v>>>16,v&=65535,v+=u*l,c+=v>>>16,v&=65535,c+=i*d+n*a+r*l+u*f,c&=65535,h(p<<16|y,c<<16|v,this.unsigned)},B.mul=B.multiply,B.divide=function(t){if(e(t)||(t=o(t)),t.isZero())throw Error("division by zero");if(g){if(!this.unsigned&&-2147483648===this.high&&-1===t.low&&-1===t.high)return this;return h((this.unsigned?g.div_u:g.div_s)(this.low,this.high,t.low,t.high),g.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?p:m;var i,n,r;if(this.unsigned){if(t.unsigned||(t=t.toUnsigned()),t.gt(this))return p;if(t.gt(this.shru(1)))return b;r=p}else{if(this.eq(_)){if(t.eq(y)||t.eq(N))return _;if(t.eq(_))return y;return i=this.shr(1).div(t).shl(1),i.eq(m)?t.isNegative()?y:N:(n=this.sub(t.mul(i)),r=i.add(n.div(t)))}if(t.eq(_))return this.unsigned?p:m;if(this.isNegative())return t.isNegative()?this.neg().div(t.neg()):this.neg().div(t).neg();if(t.isNegative())return this.div(t.neg()).neg();r=m}for(n=this;n.gte(t);){i=Math.max(1,Math.floor(n.toNumber()/t.toNumber()));for(var u=Math.ceil(Math.log(i)/Math.LN2),f=u<=48?1:a(2,u-48),l=s(i),d=l.mul(t);d.isNegative()||d.gt(n);)i-=f,l=s(i,this.unsigned),d=l.mul(t);l.isZero()&&(l=y),r=r.add(l),n=n.sub(d)}return r},B.div=B.divide,B.modulo=function(t){if(e(t)||(t=o(t)),g){return h((this.unsigned?g.rem_u:g.rem_s)(this.low,this.high,t.low,t.high),g.get_high(),this.unsigned)}return this.sub(this.div(t).mul(t))},B.mod=B.modulo,B.rem=B.modulo,B.not=function(){return h(~this.low,~this.high,this.unsigned)},B.and=function(t){return e(t)||(t=o(t)),h(this.low&t.low,this.high&t.high,this.unsigned)},B.or=function(t){return e(t)||(t=o(t)),h(this.low|t.low,this.high|t.high,this.unsigned)},B.xor=function(t){return e(t)||(t=o(t)),h(this.low^t.low,this.high^t.high,this.unsigned)},B.shiftLeft=function(t){return e(t)&&(t=t.toInt()),0==(t&=63)?this:t<32?h(this.low<<t,this.high<<t|this.low>>>32-t,this.unsigned):h(0,this.low<<t-32,this.unsigned)},B.shl=B.shiftLeft,B.shiftRight=function(t){return e(t)&&(t=t.toInt()),0==(t&=63)?this:t<32?h(this.low>>>t|this.high<<32-t,this.high>>t,this.unsigned):h(this.high>>t-32,this.high>=0?0:-1,this.unsigned)},B.shr=B.shiftRight,B.shiftRightUnsigned=function(t){if(e(t)&&(t=t.toInt()),0===(t&=63))return this;var i=this.high;if(t<32){return h(this.low>>>t|i<<32-t,i>>>t,this.unsigned)}return 32===t?h(i,0,this.unsigned):h(i>>>t-32,0,this.unsigned)},B.shru=B.shiftRightUnsigned,B.shr_u=B.shiftRightUnsigned,B.toSigned=function(){return this.unsigned?h(this.low,this.high,!1):this},B.toUnsigned=function(){return this.unsigned?this:h(this.low,this.high,!0)},B.toBytes=function(t){return t?this.toBytesLE():this.toBytesBE()},B.toBytesLE=function(){var t=this.high,i=this.low;return[255&i,i>>>8&255,i>>>16&255,i>>>24,255&t,t>>>8&255,t>>>16&255,t>>>24]},B.toBytesBE=function(){var t=this.high,i=this.low;return[t>>>24,t>>>16&255,t>>>8&255,255&t,i>>>24,i>>>16&255,i>>>8&255,255&i]},n.fromBytes=function(t,i,e){return e?n.fromBytesLE(t,i):n.fromBytesBE(t,i)},n.fromBytesLE=function(t,i){return new n(t[0]|t[1]<<8|t[2]<<16|t[3]<<24,t[4]|t[5]<<8|t[6]<<16|t[7]<<24,i)},n.fromBytesBE=function(t,i){return new n(t[4]<<24|t[5]<<16|t[6]<<8|t[7],t[0]<<24|t[1]<<16|t[2]<<8|t[3],i)}}])});[m
[32m+[m[32m//# sourceMappingURL=long.js.map[m
\ No newline at end of file[m
[1mdiff --git a/node_modules/long/dist/long.js.map b/node_modules/long/dist/long.js.map[m
[1mnew file mode 100644[m
[1mindex 0000000..2fe279f[m
[1m--- /dev/null[m
[1m+++ b/node_modules/long/dist/long.js.map[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32m{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///long.js","webpack:///webpack/bootstrap d8921b8c3ad0790b3cc1","webpack:///./src/long.js"],"names":["root","factory","exports","module","define","amd","self","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","Long","low","high","unsigned","isLong","obj","fromInt","value","cachedObj","cache","UINT_CACHE","fromBits","INT_CACHE","fromNumber","isNaN","UZERO","ZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","neg","TWO_PWR_32_DBL","lowBits","highBits","fromString","str","radix","length","Error","RangeError","indexOf","substring","radixToPower","pow_dbl","result","size","Math","min","parseInt","power","mul","add","fromValue","val","wasm","WebAssembly","Instance","Module","Uint8Array","e","__isLong__","pow","TWO_PWR_16_DBL","TWO_PWR_24","ONE","UONE","NEG_ONE","LongPrototype","toInt","toNumber","toString","isZero","isNegative","eq","radixLong","div","rem1","sub","rem","remDiv","intval","digits","getHighBits","getHighBitsUnsigned","getLowBits","getLowBitsUnsigned","getNumBitsAbs","bit","eqz","isPositive","isOdd","isEven","equals","other","notEquals","neq","ne","lessThan","comp","lt","lessThanOrEqual","lte","le","greaterThan","gt","greaterThanOrEqual","gte","ge","compare","thisNeg","otherNeg","negate","not","addend","a48","a32","a16","a00","b48","b32","b16","b00","c48","c32","c16","c00","subtract","subtrahend","multiply","multiplier","get_high","divide","divisor","div_u","div_s","approx","res","toUnsigned","shru","shr","shl","max","floor","log2","ceil","log","LN2","delta","approxRes","approxRem","modulo","rem_u","rem_s","mod","and","or","xor","shiftLeft","numBits","shiftRight","shiftRightUnsigned","shr_u","toSigned","toBytes","toBytesLE","toBytesBE","hi","lo","fromBytes","bytes","fromBytesLE","fromBytesBE"],"mappings":"CAAA,SAAAA,EAAAC,GACA,gBAAAC,UAAA,gBAAAC,QACAA,OAAAD,QAAAD,IACA,kBAAAG,gBAAAC,IACAD,UAAAH,GACA,gBAAAC,SACAA,QAAA,KAAAD,IAEAD,EAAA,KAAAC,KACC,mBAAAK,WAAAC,KAAA,WACD,MCAgB,UAAUC,GCN1B,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAR,OAGA,IAAAC,GAAAQ,EAAAD,IACAE,EAAAF,EACAG,GAAA,EACAX,WAUA,OANAM,GAAAE,GAAAI,KAAAX,EAAAD,QAAAC,IAAAD,QAAAO,GAGAN,EAAAU,GAAA,EAGAV,EAAAD,QAvBA,GAAAS,KA4DA,OAhCAF,GAAAM,EAAAP,EAGAC,EAAAO,EAAAL,EAGAF,EAAAQ,EAAA,SAAAf,EAAAgB,EAAAC,GACAV,EAAAW,EAAAlB,EAAAgB,IACAG,OAAAC,eAAApB,EAAAgB,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAV,EAAAiB,EAAA,SAAAvB,GACA,GAAAgB,GAAAhB,KAAAwB,WACA,WAA2B,MAAAxB,GAAA,SAC3B,WAAiC,MAAAA,GAEjC,OADAM,GAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAQ,EAAAC,GAAsD,MAAAR,QAAAS,UAAAC,eAAAjB,KAAAc,EAAAC,IAGtDpB,EAAAuB,EAAA,GAGAvB,IAAAwB,EAAA,KDgBM,SAAU9B,EAAQD,GEpDxB,QAAAgC,GAAAC,EAAAC,EAAAC,GAMA9B,KAAA4B,IAAA,EAAAA,EAMA5B,KAAA6B,KAAA,EAAAA,EAMA7B,KAAA8B,aAoCA,QAAAC,GAAAC,GACA,YAAAA,KAAA,YA+BA,QAAAC,GAAAC,EAAAJ,GACA,GAAAE,GAAAG,EAAAC,CACA,OAAAN,IACAI,KAAA,GACAE,EAAA,GAAAF,KAAA,OACAC,EAAAE,EAAAH,IAEAC,GAEAH,EAAAM,EAAAJ,GAAA,EAAAA,GAAA,WACAE,IACAC,EAAAH,GAAAF,GACAA,KAEAE,GAAA,GACAE,GAAA,KAAAF,KAAA,OACAC,EAAAI,EAAAL,IAEAC,GAEAH,EAAAM,EAAAJ,IAAA,WACAE,IACAG,EAAAL,GAAAF,GACAA,IAmBA,QAAAQ,GAAAN,EAAAJ,GACA,GAAAW,MAAAP,GACA,MAAAJ,GAAAY,EAAAC,CACA,IAAAb,EAAA,CACA,GAAAI,EAAA,EACA,MAAAQ,EACA,IAAAR,GAAAU,EACA,MAAAC,OACK,CACL,GAAAX,IAAAY,EACA,MAAAC,EACA,IAAAb,EAAA,GAAAY,EACA,MAAAE,GAEA,MAAAd,GAAA,EACAM,GAAAN,EAAAJ,GAAAmB,MACAX,EAAAJ,EAAAgB,EAAA,EAAAhB,EAAAgB,EAAA,EAAApB,GAmBA,QAAAQ,GAAAa,EAAAC,EAAAtB,GACA,UAAAH,GAAAwB,EAAAC,EAAAtB,GA8BA,QAAAuB,GAAAC,EAAAxB,EAAAyB,GACA,OAAAD,EAAAE,OACA,KAAAC,OAAA,eACA,YAAAH,GAAA,aAAAA,GAAA,cAAAA,GAAA,cAAAA,EACA,MAAAX,EASA,IARA,gBAAAb,IAEAyB,EAAAzB,EACAA,GAAA,GAEAA,OAEAyB,KAAA,IACA,MAAAA,EACA,KAAAG,YAAA,QAEA,IAAAjC,EACA,KAAAA,EAAA6B,EAAAK,QAAA,QACA,KAAAF,OAAA,kBACA,QAAAhC,EACA,MAAA4B,GAAAC,EAAAM,UAAA,GAAA9B,EAAAyB,GAAAN,KAQA,QAHAY,GAAArB,EAAAsB,EAAAP,EAAA,IAEAQ,EAAApB,EACAtC,EAAA,EAAmBA,EAAAiD,EAAAE,OAAgBnD,GAAA,GACnC,GAAA2D,GAAAC,KAAAC,IAAA,EAAAZ,EAAAE,OAAAnD,GACA6B,EAAAiC,SAAAb,EAAAM,UAAAvD,IAAA2D,GAAAT,EACA,IAAAS,EAAA,GACA,GAAAI,GAAA5B,EAAAsB,EAAAP,EAAAS,GACAD,KAAAM,IAAAD,GAAAE,IAAA9B,EAAAN,QAEA6B,KAAAM,IAAAR,GACAE,IAAAO,IAAA9B,EAAAN,IAIA,MADA6B,GAAAjC,WACAiC,EAoBA,QAAAQ,GAAAC,EAAA1C,GACA,sBAAA0C,GACAhC,EAAAgC,EAAA1C,GACA,gBAAA0C,GACAnB,EAAAmB,EAAA1C,GAEAQ,EAAAkC,EAAA5C,IAAA4C,EAAA3C,KAAA,iBAAAC,KAAA0C,EAAA1C,UA7RAlC,EAAAD,QAAAgC,CAKA,IAAA8C,GAAA,IAEA,KACAA,EAAA,GAAAC,aAAAC,SAAA,GAAAD,aAAAE,OAAA,GAAAC,aACA,u2BACSlF,QACR,MAAAmF,IA0DDnD,EAAAJ,UAAAwD,WAEAjE,OAAAC,eAAAY,EAAAJ,UAAA,cAAqDW,OAAA,IAkBrDP,EAAAI,QAOA,IAAAQ,MAOAF,IA0CAV,GAAAM,UAkCAN,EAAAa,aAsBAb,EAAAW,UASA,IAAAwB,GAAAG,KAAAe,GA4DArD,GAAA0B,aAyBA1B,EAAA4C,WAUA,IAcArB,GAAA+B,WAOArC,EAAAM,IAOAJ,EAAAF,EAAA,EAOAsC,EAAAjD,EA5BA,OAkCAU,EAAAV,EAAA,EAMAN,GAAAgB,MAMA,IAAAD,GAAAT,EAAA,KAMAN,GAAAe,OAMA,IAAAyC,GAAAlD,EAAA,EAMAN,GAAAwD,KAMA,IAAAC,GAAAnD,EAAA,KAMAN,GAAAyD,MAMA,IAAAC,GAAApD,GAAA,EAMAN,GAAA0D,SAMA,IAAArC,GAAAV,GAAA,gBAMAX,GAAAqB,WAMA,IAAAH,GAAAP,GAAA,QAMAX,GAAAkB,oBAMA,IAAAE,GAAAT,EAAA,iBAMAX,GAAAoB,WAMA,IAAAuC,GAAA3D,EAAAJ,SAMA+D,GAAAC,MAAA,WACA,MAAAvF,MAAA8B,SAAA9B,KAAA4B,MAAA,EAAA5B,KAAA4B,KAOA0D,EAAAE,SAAA,WACA,MAAAxF,MAAA8B,UACA9B,KAAA6B,OAAA,GAAAqB,GAAAlD,KAAA4B,MAAA,GACA5B,KAAA6B,KAAAqB,GAAAlD,KAAA4B,MAAA,IAUA0D,EAAAG,SAAA,SAAAlC,GAEA,IADAA,KAAA,IACA,MAAAA,EACA,KAAAG,YAAA,QACA,IAAA1D,KAAA0F,SACA,SACA,IAAA1F,KAAA2F,aAAA,CACA,GAAA3F,KAAA4F,GAAA7C,GAAA,CAGA,GAAA8C,GAAArD,EAAAe,GACAuC,EAAA9F,KAAA8F,IAAAD,GACAE,EAAAD,EAAAzB,IAAAwB,GAAAG,IAAAhG,KACA,OAAA8F,GAAAL,SAAAlC,GAAAwC,EAAAR,QAAAE,SAAAlC,GAEA,UAAAvD,KAAAiD,MAAAwC,SAAAlC,GAQA,IAHA,GAAAM,GAAArB,EAAAsB,EAAAP,EAAA,GAAAvD,KAAA8B,UACAmE,EAAAjG,KACA+D,EAAA,KACA,CACA,GAAAmC,GAAAD,EAAAH,IAAAjC,GACAsC,EAAAF,EAAAD,IAAAE,EAAA7B,IAAAR,IAAA0B,UAAA,EACAa,EAAAD,EAAAV,SAAAlC,EAEA,IADA0C,EAAAC,EACAD,EAAAP,SACA,MAAAU,GAAArC,CAEA,MAAAqC,EAAA5C,OAAA,GACA4C,EAAA,IAAAA,CACArC,GAAA,GAAAqC,EAAArC,IASAuB,EAAAe,YAAA,WACA,MAAArG,MAAA6B,MAOAyD,EAAAgB,oBAAA,WACA,MAAAtG,MAAA6B,OAAA,GAOAyD,EAAAiB,WAAA,WACA,MAAAvG,MAAA4B,KAOA0D,EAAAkB,mBAAA,WACA,MAAAxG,MAAA4B,MAAA,GAOA0D,EAAAmB,cAAA,WACA,GAAAzG,KAAA2F,aACA,MAAA3F,MAAA4F,GAAA7C,GAAA,GAAA/C,KAAAiD,MAAAwD,eAEA,QADAjC,GAAA,GAAAxE,KAAA6B,KAAA7B,KAAA6B,KAAA7B,KAAA4B,IACA8E,EAAA,GAAsBA,EAAA,GACtB,IAAAlC,EAAA,GAAAkC,GAD+BA,KAG/B,UAAA1G,KAAA6B,KAAA6E,EAAA,GAAAA,EAAA,GAOApB,EAAAI,OAAA,WACA,WAAA1F,KAAA6B,MAAA,IAAA7B,KAAA4B,KAOA0D,EAAAqB,IAAArB,EAAAI,OAMAJ,EAAAK,WAAA,WACA,OAAA3F,KAAA8B,UAAA9B,KAAA6B,KAAA,GAOAyD,EAAAsB,WAAA,WACA,MAAA5G,MAAA8B,UAAA9B,KAAA6B,MAAA,GAOAyD,EAAAuB,MAAA,WACA,aAAA7G,KAAA4B,MAOA0D,EAAAwB,OAAA,WACA,aAAA9G,KAAA4B,MAQA0D,EAAAyB,OAAA,SAAAC,GAGA,MAFAjF,GAAAiF,KACAA,EAAAzC,EAAAyC,KACAhH,KAAA8B,WAAAkF,EAAAlF,UAAA9B,KAAA6B,OAAA,OAAAmF,EAAAnF,OAAA,SAEA7B,KAAA6B,OAAAmF,EAAAnF,MAAA7B,KAAA4B,MAAAoF,EAAApF,MASA0D,EAAAM,GAAAN,EAAAyB,OAOAzB,EAAA2B,UAAA,SAAAD,GACA,OAAAhH,KAAA4F,GAAAoB,IASA1B,EAAA4B,IAAA5B,EAAA2B,UAQA3B,EAAA6B,GAAA7B,EAAA2B,UAOA3B,EAAA8B,SAAA,SAAAJ,GACA,MAAAhH,MAAAqH,KAAAL,GAAA,GASA1B,EAAAgC,GAAAhC,EAAA8B,SAOA9B,EAAAiC,gBAAA,SAAAP,GACA,MAAAhH,MAAAqH,KAAAL,IAAA,GASA1B,EAAAkC,IAAAlC,EAAAiC,gBAQAjC,EAAAmC,GAAAnC,EAAAiC,gBAOAjC,EAAAoC,YAAA,SAAAV,GACA,MAAAhH,MAAAqH,KAAAL,GAAA,GASA1B,EAAAqC,GAAArC,EAAAoC,YAOApC,EAAAsC,mBAAA,SAAAZ,GACA,MAAAhH,MAAAqH,KAAAL,IAAA,GASA1B,EAAAuC,IAAAvC,EAAAsC,mBAQAtC,EAAAwC,GAAAxC,EAAAsC,mBAQAtC,EAAAyC,QAAA,SAAAf,GAGA,GAFAjF,EAAAiF,KACAA,EAAAzC,EAAAyC,IACAhH,KAAA4F,GAAAoB,GACA,QACA,IAAAgB,GAAAhI,KAAA2F,aACAsC,EAAAjB,EAAArB,YACA,OAAAqC,KAAAC,GACA,GACAD,GAAAC,EACA,EAEAjI,KAAA8B,SAGAkF,EAAAnF,OAAA,EAAA7B,KAAA6B,OAAA,GAAAmF,EAAAnF,OAAA7B,KAAA6B,MAAAmF,EAAApF,MAAA,EAAA5B,KAAA4B,MAAA,OAFA5B,KAAAgG,IAAAgB,GAAArB,cAAA,KAYAL,EAAA+B,KAAA/B,EAAAyC,QAMAzC,EAAA4C,OAAA,WACA,OAAAlI,KAAA8B,UAAA9B,KAAA4F,GAAA7C,GACAA,EACA/C,KAAAmI,MAAA7D,IAAAa,IAQAG,EAAArC,IAAAqC,EAAA4C,OAOA5C,EAAAhB,IAAA,SAAA8D,GACArG,EAAAqG,KACAA,EAAA7D,EAAA6D,GAIA,IAAAC,GAAArI,KAAA6B,OAAA,GACAyG,EAAA,MAAAtI,KAAA6B,KACA0G,EAAAvI,KAAA4B,MAAA,GACA4G,EAAA,MAAAxI,KAAA4B,IAEA6G,EAAAL,EAAAvG,OAAA,GACA6G,EAAA,MAAAN,EAAAvG,KACA8G,EAAAP,EAAAxG,MAAA,GACAgH,EAAA,MAAAR,EAAAxG,IAEAiH,EAAA,EAAAC,EAAA,EAAAC,EAAA,EAAAC,EAAA,CAYA,OAXAA,IAAAR,EAAAI,EACAG,GAAAC,IAAA,GACAA,GAAA,MACAD,GAAAR,EAAAI,EACAG,GAAAC,IAAA,GACAA,GAAA,MACAD,GAAAR,EAAAI,EACAG,GAAAC,IAAA,GACAA,GAAA,MACAD,GAAAR,EAAAI,EACAI,GAAA,MACAvG,EAAAyG,GAAA,GAAAC,EAAAH,GAAA,GAAAC,EAAA9I,KAAA8B,WAQAwD,EAAA2D,SAAA,SAAAC,GAGA,MAFAnH,GAAAmH,KACAA,EAAA3E,EAAA2E,IACAlJ,KAAAsE,IAAA4E,EAAAjG,QASAqC,EAAAU,IAAAV,EAAA2D,SAOA3D,EAAA6D,SAAA,SAAAC,GACA,GAAApJ,KAAA0F,SACA,MAAA/C,EAKA,IAJAZ,EAAAqH,KACAA,EAAA7E,EAAA6E,IAGA3E,EAAA,CAKA,MAAAnC,GAJAmC,EAAAJ,IAAArE,KAAA4B,IACA5B,KAAA6B,KACAuH,EAAAxH,IACAwH,EAAAvH,MACA4C,EAAA4E,WAAArJ,KAAA8B,UAGA,GAAAsH,EAAA1D,SACA,MAAA/C,EACA,IAAA3C,KAAA4F,GAAA7C,GACA,MAAAqG,GAAAvC,QAAA9D,EAAAJ,CACA,IAAAyG,EAAAxD,GAAA7C,GACA,MAAA/C,MAAA6G,QAAA9D,EAAAJ,CAEA,IAAA3C,KAAA2F,aACA,MAAAyD,GAAAzD,aACA3F,KAAAiD,MAAAoB,IAAA+E,EAAAnG,OAEAjD,KAAAiD,MAAAoB,IAAA+E,GAAAnG,KACK,IAAAmG,EAAAzD,aACL,MAAA3F,MAAAqE,IAAA+E,EAAAnG,YAGA,IAAAjD,KAAAsH,GAAApC,IAAAkE,EAAA9B,GAAApC,GACA,MAAA1C,GAAAxC,KAAAwF,WAAA4D,EAAA5D,WAAAxF,KAAA8B,SAKA,IAAAuG,GAAArI,KAAA6B,OAAA,GACAyG,EAAA,MAAAtI,KAAA6B,KACA0G,EAAAvI,KAAA4B,MAAA,GACA4G,EAAA,MAAAxI,KAAA4B,IAEA6G,EAAAW,EAAAvH,OAAA,GACA6G,EAAA,MAAAU,EAAAvH,KACA8G,EAAAS,EAAAxH,MAAA,GACAgH,EAAA,MAAAQ,EAAAxH,IAEAiH,EAAA,EAAAC,EAAA,EAAAC,EAAA,EAAAC,EAAA,CAqBA,OApBAA,IAAAR,EAAAI,EACAG,GAAAC,IAAA,GACAA,GAAA,MACAD,GAAAR,EAAAK,EACAE,GAAAC,IAAA,GACAA,GAAA,MACAA,GAAAP,EAAAG,EACAG,GAAAC,IAAA,GACAA,GAAA,MACAD,GAAAR,EAAAM,EACAC,GAAAC,IAAA,GACAA,GAAA,MACAA,GAAAP,EAAAI,EACAE,GAAAC,IAAA,GACAA,GAAA,MACAA,GAAAN,EAAAE,EACAG,GAAAC,IAAA,GACAA,GAAA,MACAD,GAAAR,EAAAO,EAAAN,EAAAK,EAAAJ,EAAAG,EAAAF,EAAAC,EACAI,GAAA,MACAvG,EAAAyG,GAAA,GAAAC,EAAAH,GAAA,GAAAC,EAAA9I,KAAA8B,WASAwD,EAAAjB,IAAAiB,EAAA6D,SAQA7D,EAAAgE,OAAA,SAAAC,GAGA,GAFAxH,EAAAwH,KACAA,EAAAhF,EAAAgF,IACAA,EAAA7D,SACA,KAAAjC,OAAA,mBAGA,IAAAgB,EAAA,CAIA,IAAAzE,KAAA8B,WACA,aAAA9B,KAAA6B,OACA,IAAA0H,EAAA3H,MAAA,IAAA2H,EAAA1H,KAEA,MAAA7B,KAQA,OAAAsC,IANAtC,KAAA8B,SAAA2C,EAAA+E,MAAA/E,EAAAgF,OACAzJ,KAAA4B,IACA5B,KAAA6B,KACA0H,EAAA3H,IACA2H,EAAA1H,MAEA4C,EAAA4E,WAAArJ,KAAA8B,UAGA,GAAA9B,KAAA0F,SACA,MAAA1F,MAAA8B,SAAAY,EAAAC,CACA,IAAA+G,GAAAzD,EAAA0D,CACA,IAAA3J,KAAA8B,SA6BK,CAKL,GAFAyH,EAAAzH,WACAyH,IAAAK,cACAL,EAAA5B,GAAA3H,MACA,MAAA0C,EACA,IAAA6G,EAAA5B,GAAA3H,KAAA6J,KAAA,IACA,MAAAzE,EACAuE,GAAAjH,MAtCA,CAGA,GAAA1C,KAAA4F,GAAA7C,GAAA,CACA,GAAAwG,EAAA3D,GAAAT,IAAAoE,EAAA3D,GAAAP,GACA,MAAAtC,EACA,IAAAwG,EAAA3D,GAAA7C,GACA,MAAAoC,EAKA,OADAuE,GADA1J,KAAA8J,IAAA,GACAhE,IAAAyD,GAAAQ,IAAA,GACAL,EAAA9D,GAAAjD,GACA4G,EAAA5D,aAAAR,EAAAE,GAEAY,EAAAjG,KAAAgG,IAAAuD,EAAAlF,IAAAqF,IACAC,EAAAD,EAAApF,IAAA2B,EAAAH,IAAAyD,KAIS,GAAAA,EAAA3D,GAAA7C,GACT,MAAA/C,MAAA8B,SAAAY,EAAAC,CACA,IAAA3C,KAAA2F,aACA,MAAA4D,GAAA5D,aACA3F,KAAAiD,MAAA6C,IAAAyD,EAAAtG,OACAjD,KAAAiD,MAAA6C,IAAAyD,GAAAtG,KACS,IAAAsG,EAAA5D,aACT,MAAA3F,MAAA8F,IAAAyD,EAAAtG,YACA0G,GAAAhH,EAmBA,IADAsD,EAAAjG,KACAiG,EAAA4B,IAAA0B,IAAA,CAGAG,EAAAzF,KAAA+F,IAAA,EAAA/F,KAAAgG,MAAAhE,EAAAT,WAAA+D,EAAA/D,YAWA,KAPA,GAAA0E,GAAAjG,KAAAkG,KAAAlG,KAAAmG,IAAAV,GAAAzF,KAAAoG,KACAC,EAAAJ,GAAA,KAAApG,EAAA,EAAAoG,EAAA,IAIAK,EAAA/H,EAAAkH,GACAc,EAAAD,EAAAlG,IAAAkF,GACAiB,EAAA7E,cAAA6E,EAAA7C,GAAA1B,IACAyD,GAAAY,EACAC,EAAA/H,EAAAkH,EAAA1J,KAAA8B,UACA0I,EAAAD,EAAAlG,IAAAkF,EAKAgB,GAAA7E,WACA6E,EAAApF,GAEAwE,IAAArF,IAAAiG,GACAtE,IAAAD,IAAAwE,GAEA,MAAAb,IASArE,EAAAQ,IAAAR,EAAAgE,OAOAhE,EAAAmF,OAAA,SAAAlB,GAKA,GAJAxH,EAAAwH,KACAA,EAAAhF,EAAAgF,IAGA9E,EAAA,CAOA,MAAAnC,IANAtC,KAAA8B,SAAA2C,EAAAiG,MAAAjG,EAAAkG,OACA3K,KAAA4B,IACA5B,KAAA6B,KACA0H,EAAA3H,IACA2H,EAAA1H,MAEA4C,EAAA4E,WAAArJ,KAAA8B,UAGA,MAAA9B,MAAAgG,IAAAhG,KAAA8F,IAAAyD,GAAAlF,IAAAkF,KASAjE,EAAAsF,IAAAtF,EAAAmF,OAQAnF,EAAAW,IAAAX,EAAAmF,OAMAnF,EAAA6C,IAAA,WACA,MAAA7F,IAAAtC,KAAA4B,KAAA5B,KAAA6B,KAAA7B,KAAA8B,WAQAwD,EAAAuF,IAAA,SAAA7D,GAGA,MAFAjF,GAAAiF,KACAA,EAAAzC,EAAAyC,IACA1E,EAAAtC,KAAA4B,IAAAoF,EAAApF,IAAA5B,KAAA6B,KAAAmF,EAAAnF,KAAA7B,KAAA8B,WAQAwD,EAAAwF,GAAA,SAAA9D,GAGA,MAFAjF,GAAAiF,KACAA,EAAAzC,EAAAyC,IACA1E,EAAAtC,KAAA4B,IAAAoF,EAAApF,IAAA5B,KAAA6B,KAAAmF,EAAAnF,KAAA7B,KAAA8B,WAQAwD,EAAAyF,IAAA,SAAA/D,GAGA,MAFAjF,GAAAiF,KACAA,EAAAzC,EAAAyC,IACA1E,EAAAtC,KAAA4B,IAAAoF,EAAApF,IAAA5B,KAAA6B,KAAAmF,EAAAnF,KAAA7B,KAAA8B,WAQAwD,EAAA0F,UAAA,SAAAC,GAGA,MAFAlJ,GAAAkJ,KACAA,IAAA1F,SACA,IAAA0F,GAAA,IACAjL,KACAiL,EAAA,GACA3I,EAAAtC,KAAA4B,KAAAqJ,EAAAjL,KAAA6B,MAAAoJ,EAAAjL,KAAA4B,MAAA,GAAAqJ,EAAAjL,KAAA8B,UAEAQ,EAAA,EAAAtC,KAAA4B,KAAAqJ,EAAA,GAAAjL,KAAA8B,WASAwD,EAAAyE,IAAAzE,EAAA0F,UAOA1F,EAAA4F,WAAA,SAAAD,GAGA,MAFAlJ,GAAAkJ,KACAA,IAAA1F,SACA,IAAA0F,GAAA,IACAjL,KACAiL,EAAA,GACA3I,EAAAtC,KAAA4B,MAAAqJ,EAAAjL,KAAA6B,MAAA,GAAAoJ,EAAAjL,KAAA6B,MAAAoJ,EAAAjL,KAAA8B,UAEAQ,EAAAtC,KAAA6B,MAAAoJ,EAAA,GAAAjL,KAAA6B,MAAA,OAAA7B,KAAA8B,WASAwD,EAAAwE,IAAAxE,EAAA4F,WAOA5F,EAAA6F,mBAAA,SAAAF,GAIA,GAHAlJ,EAAAkJ,KACAA,IAAA1F,SAEA,KADA0F,GAAA,IAEA,MAAAjL,KAEA,IAAA6B,GAAA7B,KAAA6B,IACA,IAAAoJ,EAAA,IAEA,MAAA3I,GADAtC,KAAA4B,MACAqJ,EAAApJ,GAAA,GAAAoJ,EAAApJ,IAAAoJ,EAAAjL,KAAA8B,UACS,YAAAmJ,EACT3I,EAAAT,EAAA,EAAA7B,KAAA8B,UAEAQ,EAAAT,IAAAoJ,EAAA,KAAAjL,KAAA8B,WAUAwD,EAAAuE,KAAAvE,EAAA6F,mBAQA7F,EAAA8F,MAAA9F,EAAA6F,mBAMA7F,EAAA+F,SAAA,WACA,MAAArL,MAAA8B,SAEAQ,EAAAtC,KAAA4B,IAAA5B,KAAA6B,MAAA,GADA7B,MAQAsF,EAAAsE,WAAA,WACA,MAAA5J,MAAA8B,SACA9B,KACAsC,EAAAtC,KAAA4B,IAAA5B,KAAA6B,MAAA,IAQAyD,EAAAgG,QAAA,SAAA7D,GACA,MAAAA,GAAAzH,KAAAuL,YAAAvL,KAAAwL,aAOAlG,EAAAiG,UAAA,WACA,GAAAE,GAAAzL,KAAA6B,KACA6J,EAAA1L,KAAA4B,GACA,QACA,IAAA8J,EACAA,IAAA,MACAA,IAAA,OACAA,IAAA,GACA,IAAAD,EACAA,IAAA,MACAA,IAAA,OACAA,IAAA,KAQAnG,EAAAkG,UAAA,WACA,GAAAC,GAAAzL,KAAA6B,KACA6J,EAAA1L,KAAA4B,GACA,QACA6J,IAAA,GACAA,IAAA,OACAA,IAAA,MACA,IAAAA,EACAC,IAAA,GACAA,IAAA,OACAA,IAAA,MACA,IAAAA,IAWA/J,EAAAgK,UAAA,SAAAC,EAAA9J,EAAA2F,GACA,MAAAA,GAAA9F,EAAAkK,YAAAD,EAAA9J,GAAAH,EAAAmK,YAAAF,EAAA9J,IASAH,EAAAkK,YAAA,SAAAD,EAAA9J,GACA,UAAAH,GACAiK,EAAA,GACAA,EAAA,MACAA,EAAA,OACAA,EAAA,OACAA,EAAA,GACAA,EAAA,MACAA,EAAA,OACAA,EAAA,OACA9J,IAUAH,EAAAmK,YAAA,SAAAF,EAAA9J,GACA,UAAAH,GACAiK,EAAA,OACAA,EAAA,OACAA,EAAA,MACAA,EAAA,GACAA,EAAA,OACAA,EAAA,OACAA,EAAA,MACAA,EAAA,GACA9J","file":"long.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Long\"] = factory();\n\telse\n\t\troot[\"Long\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Long\"] = factory();\n\telse\n\t\troot[\"Long\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nmodule.exports = Long;\r\n\r\n/**\r\n * wasm optimizations, to do native i64 multiplication and divide\r\n */\r\nvar wasm = null;\r\n\r\ntry {\r\n  wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\r\n    0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\r\n  ])), {}).exports;\r\n} catch (e) {\r\n  // no wasm support :(\r\n}\r\n\r\n/**\r\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\r\n *  See the from* functions below for more convenient ways of constructing Longs.\r\n * @exports Long\r\n * @class A Long class for representing a 64 bit two's-complement integer value.\r\n * @param {number} low The low (signed) 32 bits of the long\r\n * @param {number} high The high (signed) 32 bits of the long\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @constructor\r\n */\r\nfunction Long(low, high, unsigned) {\r\n\r\n    /**\r\n     * The low 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.low = low | 0;\r\n\r\n    /**\r\n     * The high 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.high = high | 0;\r\n\r\n    /**\r\n     * Whether unsigned or not.\r\n     * @type {boolean}\r\n     */\r\n    this.unsigned = !!unsigned;\r\n}\r\n\r\n// The internal representation of a long is the two given signed, 32-bit values.\r\n// We use 32-bit pieces because these are the size of integers on which\r\n// Javascript performs bit-operations.  For operations like addition and\r\n// multiplication, we split each number into 16 bit pieces, which can easily be\r\n// multiplied within Javascript's floating-point representation without overflow\r\n// or change in sign.\r\n//\r\n// In the algorithms below, we frequently reduce the negative case to the\r\n// positive case by negating the input(s) and then post-processing the result.\r\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\r\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\r\n// a positive number, it overflows back into a negative).  Not handling this\r\n// case would often result in infinite recursion.\r\n//\r\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\r\n// methods on which they depend.\r\n\r\n/**\r\n * An indicator used to reliably determine if an object is a Long or not.\r\n * @type {boolean}\r\n * @const\r\n * @private\r\n */\r\nLong.prototype.__isLong__;\r\n\r\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\r\n\r\n/**\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n * @inner\r\n */\r\nfunction isLong(obj) {\r\n    return (obj && obj[\"__isLong__\"]) === true;\r\n}\r\n\r\n/**\r\n * Tests if the specified object is a Long.\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n */\r\nLong.isLong = isLong;\r\n\r\n/**\r\n * A cache of the Long representations of small integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar INT_CACHE = {};\r\n\r\n/**\r\n * A cache of the Long representations of small unsigned integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar UINT_CACHE = {};\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromInt(value, unsigned) {\r\n    var obj, cachedObj, cache;\r\n    if (unsigned) {\r\n        value >>>= 0;\r\n        if (cache = (0 <= value && value < 256)) {\r\n            cachedObj = UINT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\r\n        if (cache)\r\n            UINT_CACHE[value] = obj;\r\n        return obj;\r\n    } else {\r\n        value |= 0;\r\n        if (cache = (-128 <= value && value < 128)) {\r\n            cachedObj = INT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\r\n        if (cache)\r\n            INT_CACHE[value] = obj;\r\n        return obj;\r\n    }\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given 32 bit integer value.\r\n * @function\r\n * @param {number} value The 32 bit integer in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromInt = fromInt;\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromNumber(value, unsigned) {\r\n    if (isNaN(value))\r\n        return unsigned ? UZERO : ZERO;\r\n    if (unsigned) {\r\n        if (value < 0)\r\n            return UZERO;\r\n        if (value >= TWO_PWR_64_DBL)\r\n            return MAX_UNSIGNED_VALUE;\r\n    } else {\r\n        if (value <= -TWO_PWR_63_DBL)\r\n            return MIN_VALUE;\r\n        if (value + 1 >= TWO_PWR_63_DBL)\r\n            return MAX_VALUE;\r\n    }\r\n    if (value < 0)\r\n        return fromNumber(-value, unsigned).neg();\r\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n * @function\r\n * @param {number} value The number in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromNumber = fromNumber;\r\n\r\n/**\r\n * @param {number} lowBits\r\n * @param {number} highBits\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromBits(lowBits, highBits, unsigned) {\r\n    return new Long(lowBits, highBits, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\r\n *  assumed to use 32 bits.\r\n * @function\r\n * @param {number} lowBits The low 32 bits\r\n * @param {number} highBits The high 32 bits\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromBits = fromBits;\r\n\r\n/**\r\n * @function\r\n * @param {number} base\r\n * @param {number} exponent\r\n * @returns {number}\r\n * @inner\r\n */\r\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\r\n\r\n/**\r\n * @param {string} str\r\n * @param {(boolean|number)=} unsigned\r\n * @param {number=} radix\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromString(str, unsigned, radix) {\r\n    if (str.length === 0)\r\n        throw Error('empty string');\r\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\r\n        return ZERO;\r\n    if (typeof unsigned === 'number') {\r\n        // For goog.math.long compatibility\r\n        radix = unsigned,\r\n        unsigned = false;\r\n    } else {\r\n        unsigned = !! unsigned;\r\n    }\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n\r\n    var p;\r\n    if ((p = str.indexOf('-')) > 0)\r\n        throw Error('interior hyphen');\r\n    else if (p === 0) {\r\n        return fromString(str.substring(1), unsigned, radix).neg();\r\n    }\r\n\r\n    // Do several (8) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\r\n\r\n    var result = ZERO;\r\n    for (var i = 0; i < str.length; i += 8) {\r\n        var size = Math.min(8, str.length - i),\r\n            value = parseInt(str.substring(i, i + size), radix);\r\n        if (size < 8) {\r\n            var power = fromNumber(pow_dbl(radix, size));\r\n            result = result.mul(power).add(fromNumber(value));\r\n        } else {\r\n            result = result.mul(radixToPower);\r\n            result = result.add(fromNumber(value));\r\n        }\r\n    }\r\n    result.unsigned = unsigned;\r\n    return result;\r\n}\r\n\r\n/**\r\n * Returns a Long representation of the given string, written using the specified radix.\r\n * @function\r\n * @param {string} str The textual representation of the Long\r\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromString = fromString;\r\n\r\n/**\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromValue(val, unsigned) {\r\n    if (typeof val === 'number')\r\n        return fromNumber(val, unsigned);\r\n    if (typeof val === 'string')\r\n        return fromString(val, unsigned);\r\n    // Throws for non-objects, converts non-instanceof Long:\r\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\r\n}\r\n\r\n/**\r\n * Converts the specified value to a Long using the appropriate from* function for its type.\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long}\r\n */\r\nLong.fromValue = fromValue;\r\n\r\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\r\n// no runtime penalty for these.\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_16_DBL = 1 << 16;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24_DBL = 1 << 24;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\r\n\r\n/**\r\n * @type {!Long}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ZERO = fromInt(0);\r\n\r\n/**\r\n * Signed zero.\r\n * @type {!Long}\r\n */\r\nLong.ZERO = ZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UZERO = fromInt(0, true);\r\n\r\n/**\r\n * Unsigned zero.\r\n * @type {!Long}\r\n */\r\nLong.UZERO = UZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ONE = fromInt(1);\r\n\r\n/**\r\n * Signed one.\r\n * @type {!Long}\r\n */\r\nLong.ONE = ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UONE = fromInt(1, true);\r\n\r\n/**\r\n * Unsigned one.\r\n * @type {!Long}\r\n */\r\nLong.UONE = UONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar NEG_ONE = fromInt(-1);\r\n\r\n/**\r\n * Signed negative one.\r\n * @type {!Long}\r\n */\r\nLong.NEG_ONE = NEG_ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_VALUE = fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);\r\n\r\n/**\r\n * Maximum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_VALUE = MAX_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);\r\n\r\n/**\r\n * Maximum unsigned value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MIN_VALUE = fromBits(0, 0x80000000|0, false);\r\n\r\n/**\r\n * Minimum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MIN_VALUE = MIN_VALUE;\r\n\r\n/**\r\n * @alias Long.prototype\r\n * @inner\r\n */\r\nvar LongPrototype = Long.prototype;\r\n\r\n/**\r\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\r\n * @returns {number}\r\n */\r\nLongPrototype.toInt = function toInt() {\r\n    return this.unsigned ? this.low >>> 0 : this.low;\r\n};\r\n\r\n/**\r\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\r\n * @returns {number}\r\n */\r\nLongPrototype.toNumber = function toNumber() {\r\n    if (this.unsigned)\r\n        return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\r\n    return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\r\n};\r\n\r\n/**\r\n * Converts the Long to a string written in the specified radix.\r\n * @param {number=} radix Radix (2-36), defaults to 10\r\n * @returns {string}\r\n * @override\r\n * @throws {RangeError} If `radix` is out of range\r\n */\r\nLongPrototype.toString = function toString(radix) {\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n    if (this.isZero())\r\n        return '0';\r\n    if (this.isNegative()) { // Unsigned Longs are never negative\r\n        if (this.eq(MIN_VALUE)) {\r\n            // We need to change the Long value before it can be negated, so we remove\r\n            // the bottom-most digit in this base and then recurse to do the rest.\r\n            var radixLong = fromNumber(radix),\r\n                div = this.div(radixLong),\r\n                rem1 = div.mul(radixLong).sub(this);\r\n            return div.toString(radix) + rem1.toInt().toString(radix);\r\n        } else\r\n            return '-' + this.neg().toString(radix);\r\n    }\r\n\r\n    // Do several (6) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\r\n        rem = this;\r\n    var result = '';\r\n    while (true) {\r\n        var remDiv = rem.div(radixToPower),\r\n            intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\r\n            digits = intval.toString(radix);\r\n        rem = remDiv;\r\n        if (rem.isZero())\r\n            return digits + result;\r\n        else {\r\n            while (digits.length < 6)\r\n                digits = '0' + digits;\r\n            result = '' + digits + result;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as a signed integer.\r\n * @returns {number} Signed high bits\r\n */\r\nLongPrototype.getHighBits = function getHighBits() {\r\n    return this.high;\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned high bits\r\n */\r\nLongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\r\n    return this.high >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as a signed integer.\r\n * @returns {number} Signed low bits\r\n */\r\nLongPrototype.getLowBits = function getLowBits() {\r\n    return this.low;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned low bits\r\n */\r\nLongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\r\n    return this.low >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the number of bits needed to represent the absolute value of this Long.\r\n * @returns {number}\r\n */\r\nLongPrototype.getNumBitsAbs = function getNumBitsAbs() {\r\n    if (this.isNegative()) // Unsigned Longs are never negative\r\n        return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\r\n    var val = this.high != 0 ? this.high : this.low;\r\n    for (var bit = 31; bit > 0; bit--)\r\n        if ((val & (1 << bit)) != 0)\r\n            break;\r\n    return this.high != 0 ? bit + 33 : bit + 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isZero = function isZero() {\r\n    return this.high === 0 && this.low === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eqz = LongPrototype.isZero;\r\n\r\n/**\r\n * Tests if this Long's value is negative.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isNegative = function isNegative() {\r\n    return !this.unsigned && this.high < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is positive.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isPositive = function isPositive() {\r\n    return this.unsigned || this.high >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is odd.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isOdd = function isOdd() {\r\n    return (this.low & 1) === 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is even.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isEven = function isEven() {\r\n    return (this.low & 1) === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.equals = function equals(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\r\n        return false;\r\n    return this.high === other.high && this.low === other.low;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eq = LongPrototype.equals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.notEquals = function notEquals(other) {\r\n    return !this.eq(/* validates */ other);\r\n};\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.neq = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ne = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThan = function lessThan(other) {\r\n    return this.comp(/* validates */ other) < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lt = LongPrototype.lessThan;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) <= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lte = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.le = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThan = function greaterThan(other) {\r\n    return this.comp(/* validates */ other) > 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gt = LongPrototype.greaterThan;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gte = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ge = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Compares this Long's value with the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.compare = function compare(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.eq(other))\r\n        return 0;\r\n    var thisNeg = this.isNegative(),\r\n        otherNeg = other.isNegative();\r\n    if (thisNeg && !otherNeg)\r\n        return -1;\r\n    if (!thisNeg && otherNeg)\r\n        return 1;\r\n    // At this point the sign bits are the same\r\n    if (!this.unsigned)\r\n        return this.sub(other).isNegative() ? -1 : 1;\r\n    // Both are positive if at least one is unsigned\r\n    return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\r\n};\r\n\r\n/**\r\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.comp = LongPrototype.compare;\r\n\r\n/**\r\n * Negates this Long's value.\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.negate = function negate() {\r\n    if (!this.unsigned && this.eq(MIN_VALUE))\r\n        return MIN_VALUE;\r\n    return this.not().add(ONE);\r\n};\r\n\r\n/**\r\n * Negates this Long's value. This is an alias of {@link Long#negate}.\r\n * @function\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.neg = LongPrototype.negate;\r\n\r\n/**\r\n * Returns the sum of this and the specified Long.\r\n * @param {!Long|number|string} addend Addend\r\n * @returns {!Long} Sum\r\n */\r\nLongPrototype.add = function add(addend) {\r\n    if (!isLong(addend))\r\n        addend = fromValue(addend);\r\n\r\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = addend.high >>> 16;\r\n    var b32 = addend.high & 0xFFFF;\r\n    var b16 = addend.low >>> 16;\r\n    var b00 = addend.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 + b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 + b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 + b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 + b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long.\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.subtract = function subtract(subtrahend) {\r\n    if (!isLong(subtrahend))\r\n        subtrahend = fromValue(subtrahend);\r\n    return this.add(subtrahend.neg());\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\r\n * @function\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.sub = LongPrototype.subtract;\r\n\r\n/**\r\n * Returns the product of this and the specified Long.\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.multiply = function multiply(multiplier) {\r\n    if (this.isZero())\r\n        return ZERO;\r\n    if (!isLong(multiplier))\r\n        multiplier = fromValue(multiplier);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = wasm.mul(this.low,\r\n                           this.high,\r\n                           multiplier.low,\r\n                           multiplier.high);\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (multiplier.isZero())\r\n        return ZERO;\r\n    if (this.eq(MIN_VALUE))\r\n        return multiplier.isOdd() ? MIN_VALUE : ZERO;\r\n    if (multiplier.eq(MIN_VALUE))\r\n        return this.isOdd() ? MIN_VALUE : ZERO;\r\n\r\n    if (this.isNegative()) {\r\n        if (multiplier.isNegative())\r\n            return this.neg().mul(multiplier.neg());\r\n        else\r\n            return this.neg().mul(multiplier).neg();\r\n    } else if (multiplier.isNegative())\r\n        return this.mul(multiplier.neg()).neg();\r\n\r\n    // If both longs are small, use float multiplication\r\n    if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\r\n        return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\r\n\r\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\r\n    // We can skip products that would overflow.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = multiplier.high >>> 16;\r\n    var b32 = multiplier.high & 0xFFFF;\r\n    var b16 = multiplier.low >>> 16;\r\n    var b00 = multiplier.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 * b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 * b00;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c16 += a00 * b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 * b00;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a16 * b16;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a00 * b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\r\n * @function\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.mul = LongPrototype.multiply;\r\n\r\n/**\r\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\r\n *  unsigned if this Long is unsigned.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.divide = function divide(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n    if (divisor.isZero())\r\n        throw Error('division by zero');\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        // guard against signed division overflow: the largest\r\n        // negative number / -1 would be 1 larger than the largest\r\n        // positive number, due to two's complement.\r\n        if (!this.unsigned &&\r\n            this.high === -0x80000000 &&\r\n            divisor.low === -1 && divisor.high === -1) {\r\n            // be consistent with non-wasm code path\r\n            return this;\r\n        }\r\n        var low = (this.unsigned ? wasm.div_u : wasm.div_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (this.isZero())\r\n        return this.unsigned ? UZERO : ZERO;\r\n    var approx, rem, res;\r\n    if (!this.unsigned) {\r\n        // This section is only relevant for signed longs and is derived from the\r\n        // closure library as a whole.\r\n        if (this.eq(MIN_VALUE)) {\r\n            if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\r\n                return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\r\n            else if (divisor.eq(MIN_VALUE))\r\n                return ONE;\r\n            else {\r\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\r\n                var halfThis = this.shr(1);\r\n                approx = halfThis.div(divisor).shl(1);\r\n                if (approx.eq(ZERO)) {\r\n                    return divisor.isNegative() ? ONE : NEG_ONE;\r\n                } else {\r\n                    rem = this.sub(divisor.mul(approx));\r\n                    res = approx.add(rem.div(divisor));\r\n                    return res;\r\n                }\r\n            }\r\n        } else if (divisor.eq(MIN_VALUE))\r\n            return this.unsigned ? UZERO : ZERO;\r\n        if (this.isNegative()) {\r\n            if (divisor.isNegative())\r\n                return this.neg().div(divisor.neg());\r\n            return this.neg().div(divisor).neg();\r\n        } else if (divisor.isNegative())\r\n            return this.div(divisor.neg()).neg();\r\n        res = ZERO;\r\n    } else {\r\n        // The algorithm below has not been made for unsigned longs. It's therefore\r\n        // required to take special care of the MSB prior to running it.\r\n        if (!divisor.unsigned)\r\n            divisor = divisor.toUnsigned();\r\n        if (divisor.gt(this))\r\n            return UZERO;\r\n        if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\r\n            return UONE;\r\n        res = UZERO;\r\n    }\r\n\r\n    // Repeat the following until the remainder is less than other:  find a\r\n    // floating-point that approximates remainder / other *from below*, add this\r\n    // into the result, and subtract it from the remainder.  It is critical that\r\n    // the approximate value is less than or equal to the real value so that the\r\n    // remainder never becomes negative.\r\n    rem = this;\r\n    while (rem.gte(divisor)) {\r\n        // Approximate the result of division. This may be a little greater or\r\n        // smaller than the actual value.\r\n        approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\r\n\r\n        // We will tweak the approximate result by changing it in the 48-th digit or\r\n        // the smallest non-fractional digit, whichever is larger.\r\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2),\r\n            delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),\r\n\r\n        // Decrease the approximation until it is smaller than the remainder.  Note\r\n        // that if it is too large, the product overflows and is negative.\r\n            approxRes = fromNumber(approx),\r\n            approxRem = approxRes.mul(divisor);\r\n        while (approxRem.isNegative() || approxRem.gt(rem)) {\r\n            approx -= delta;\r\n            approxRes = fromNumber(approx, this.unsigned);\r\n            approxRem = approxRes.mul(divisor);\r\n        }\r\n\r\n        // We know the answer can't be zero... and actually, zero would cause\r\n        // infinite recursion since we would make no progress.\r\n        if (approxRes.isZero())\r\n            approxRes = ONE;\r\n\r\n        res = res.add(approxRes);\r\n        rem = rem.sub(approxRem);\r\n    }\r\n    return res;\r\n};\r\n\r\n/**\r\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.div = LongPrototype.divide;\r\n\r\n/**\r\n * Returns this Long modulo the specified.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.modulo = function modulo(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = (this.unsigned ? wasm.rem_u : wasm.rem_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    return this.sub(this.div(divisor).mul(divisor));\r\n};\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.mod = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.rem = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns the bitwise NOT of this Long.\r\n * @returns {!Long}\r\n */\r\nLongPrototype.not = function not() {\r\n    return fromBits(~this.low, ~this.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise AND of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.and = function and(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise OR of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.or = function or(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise XOR of this Long and the given one.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.xor = function xor(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftLeft = function shiftLeft(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\r\n    else\r\n        return fromBits(0, this.low << (numBits - 32), this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shl = LongPrototype.shiftLeft;\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRight = function shiftRight(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\r\n    else\r\n        return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr = LongPrototype.shiftRight;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    numBits &= 63;\r\n    if (numBits === 0)\r\n        return this;\r\n    else {\r\n        var high = this.high;\r\n        if (numBits < 32) {\r\n            var low = this.low;\r\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\r\n        } else if (numBits === 32)\r\n            return fromBits(high, 0, this.unsigned);\r\n        else\r\n            return fromBits(high >>> (numBits - 32), 0, this.unsigned);\r\n    }\r\n};\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shru = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Converts this Long to signed.\r\n * @returns {!Long} Signed long\r\n */\r\nLongPrototype.toSigned = function toSigned() {\r\n    if (!this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, false);\r\n};\r\n\r\n/**\r\n * Converts this Long to unsigned.\r\n * @returns {!Long} Unsigned long\r\n */\r\nLongPrototype.toUnsigned = function toUnsigned() {\r\n    if (this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, true);\r\n};\r\n\r\n/**\r\n * Converts this Long to its byte representation.\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {!Array.<number>} Byte representation\r\n */\r\nLongPrototype.toBytes = function toBytes(le) {\r\n    return le ? this.toBytesLE() : this.toBytesBE();\r\n};\r\n\r\n/**\r\n * Converts this Long to its little endian byte representation.\r\n * @returns {!Array.<number>} Little endian byte representation\r\n */\r\nLongPrototype.toBytesLE = function toBytesLE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        lo        & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo >>> 16 & 0xff,\r\n        lo >>> 24       ,\r\n        hi        & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi >>> 16 & 0xff,\r\n        hi >>> 24\r\n    ];\r\n};\r\n\r\n/**\r\n * Converts this Long to its big endian byte representation.\r\n * @returns {!Array.<number>} Big endian byte representation\r\n */\r\nLongPrototype.toBytesBE = function toBytesBE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        hi >>> 24       ,\r\n        hi >>> 16 & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi        & 0xff,\r\n        lo >>> 24       ,\r\n        lo >>> 16 & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo        & 0xff\r\n    ];\r\n};\r\n\r\n/**\r\n * Creates a Long from its byte representation.\r\n * @param {!Array.<number>} bytes Byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytes = function fromBytes(bytes, unsigned, le) {\r\n    return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\r\n};\r\n\r\n/**\r\n * Creates a Long from its little endian byte representation.\r\n * @param {!Array.<number>} bytes Little endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesLE = function fromBytesLE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[0]       |\r\n        bytes[1] <<  8 |\r\n        bytes[2] << 16 |\r\n        bytes[3] << 24,\r\n        bytes[4]       |\r\n        bytes[5] <<  8 |\r\n        bytes[6] << 16 |\r\n        bytes[7] << 24,\r\n        unsigned\r\n    );\r\n};\r\n\r\n/**\r\n * Creates a Long from its big endian byte representation.\r\n * @param {!Array.<number>} bytes Big endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesBE = function fromBytesBE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[4] << 24 |\r\n        bytes[5] << 16 |\r\n        bytes[6] <<  8 |\r\n        bytes[7],\r\n        bytes[0] << 24 |\r\n        bytes[1] << 16 |\r\n        bytes[2] <<  8 |\r\n        bytes[3],\r\n        unsigned\r\n    );\r\n};\r\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// long.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d8921b8c3ad0790b3cc1","module.exports = Long;\r\n\r\n/**\r\n * wasm optimizations, to do native i64 multiplication and divide\r\n */\r\nvar wasm = null;\r\n\r\ntry {\r\n  wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\r\n    0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\r\n  ])), {}).exports;\r\n} catch (e) {\r\n  // no wasm support :(\r\n}\r\n\r\n/**\r\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\r\n *  See the from* functions below for more convenient ways of constructing Longs.\r\n * @exports Long\r\n * @class A Long class for representing a 64 bit two's-complement integer value.\r\n * @param {number} low The low (signed) 32 bits of the long\r\n * @param {number} high The high (signed) 32 bits of the long\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @constructor\r\n */\r\nfunction Long(low, high, unsigned) {\r\n\r\n    /**\r\n     * The low 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.low = low | 0;\r\n\r\n    /**\r\n     * The high 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.high = high | 0;\r\n\r\n    /**\r\n     * Whether unsigned or not.\r\n     * @type {boolean}\r\n     */\r\n    this.unsigned = !!unsigned;\r\n}\r\n\r\n// The internal representation of a long is the two given signed, 32-bit values.\r\n// We use 32-bit pieces because these are the size of integers on which\r\n// Javascript performs bit-operations.  For operations like addition and\r\n// multiplication, we split each number into 16 bit pieces, which can easily be\r\n// multiplied within Javascript's floating-point representation without overflow\r\n// or change in sign.\r\n//\r\n// In the algorithms below, we frequently reduce the negative case to the\r\n// positive case by negating the input(s) and then post-processing the result.\r\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\r\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\r\n// a positive number, it overflows back into a negative).  Not handling this\r\n// case would often result in infinite recursion.\r\n//\r\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\r\n// methods on which they depend.\r\n\r\n/**\r\n * An indicator used to reliably determine if an object is a Long or not.\r\n * @type {boolean}\r\n * @const\r\n * @private\r\n */\r\nLong.prototype.__isLong__;\r\n\r\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\r\n\r\n/**\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n * @inner\r\n */\r\nfunction isLong(obj) {\r\n    return (obj && obj[\"__isLong__\"]) === true;\r\n}\r\n\r\n/**\r\n * Tests if the specified object is a Long.\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n */\r\nLong.isLong = isLong;\r\n\r\n/**\r\n * A cache of the Long representations of small integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar INT_CACHE = {};\r\n\r\n/**\r\n * A cache of the Long representations of small unsigned integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar UINT_CACHE = {};\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromInt(value, unsigned) {\r\n    var obj, cachedObj, cache;\r\n    if (unsigned) {\r\n        value >>>= 0;\r\n        if (cache = (0 <= value && value < 256)) {\r\n            cachedObj = UINT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\r\n        if (cache)\r\n            UINT_CACHE[value] = obj;\r\n        return obj;\r\n    } else {\r\n        value |= 0;\r\n        if (cache = (-128 <= value && value < 128)) {\r\n            cachedObj = INT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\r\n        if (cache)\r\n            INT_CACHE[value] = obj;\r\n        return obj;\r\n    }\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given 32 bit integer value.\r\n * @function\r\n * @param {number} value The 32 bit integer in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromInt = fromInt;\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromNumber(value, unsigned) {\r\n    if (isNaN(value))\r\n        return unsigned ? UZERO : ZERO;\r\n    if (unsigned) {\r\n        if (value < 0)\r\n            return UZERO;\r\n        if (value >= TWO_PWR_64_DBL)\r\n            return MAX_UNSIGNED_VALUE;\r\n    } else {\r\n        if (value <= -TWO_PWR_63_DBL)\r\n            return MIN_VALUE;\r\n        if (value + 1 >= TWO_PWR_63_DBL)\r\n            return MAX_VALUE;\r\n    }\r\n    if (value < 0)\r\n        return fromNumber(-value, unsigned).neg();\r\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n * @function\r\n * @param {number} value The number in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromNumber = fromNumber;\r\n\r\n/**\r\n * @param {number} lowBits\r\n * @param {number} highBits\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromBits(lowBits, highBits, unsigned) {\r\n    return new Long(lowBits, highBits, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\r\n *  assumed to use 32 bits.\r\n * @function\r\n * @param {number} lowBits The low 32 bits\r\n * @param {number} highBits The high 32 bits\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromBits = fromBits;\r\n\r\n/**\r\n * @function\r\n * @param {number} base\r\n * @param {number} exponent\r\n * @returns {number}\r\n * @inner\r\n */\r\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\r\n\r\n/**\r\n * @param {string} str\r\n * @param {(boolean|number)=} unsigned\r\n * @param {number=} radix\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromString(str, unsigned, radix) {\r\n    if (str.length === 0)\r\n        throw Error('empty string');\r\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\r\n        return ZERO;\r\n    if (typeof unsigned === 'number') {\r\n        // For goog.math.long compatibility\r\n        radix = unsigned,\r\n        unsigned = false;\r\n    } else {\r\n        unsigned = !! unsigned;\r\n    }\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n\r\n    var p;\r\n    if ((p = str.indexOf('-')) > 0)\r\n        throw Error('interior hyphen');\r\n    else if (p === 0) {\r\n        return fromString(str.substring(1), unsigned, radix).neg();\r\n    }\r\n\r\n    // Do several (8) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\r\n\r\n    var result = ZERO;\r\n    for (var i = 0; i < str.length; i += 8) {\r\n        var size = Math.min(8, str.length - i),\r\n            value = parseInt(str.substring(i, i + size), radix);\r\n        if (size < 8) {\r\n            var power = fromNumber(pow_dbl(radix, size));\r\n            result = result.mul(power).add(fromNumber(value));\r\n        } else {\r\n            result = result.mul(radixToPower);\r\n            result = result.add(fromNumber(value));\r\n        }\r\n    }\r\n    result.unsigned = unsigned;\r\n    return result;\r\n}\r\n\r\n/**\r\n * Returns a Long representation of the given string, written using the specified radix.\r\n * @function\r\n * @param {string} str The textual representation of the Long\r\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromString = fromString;\r\n\r\n/**\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromValue(val, unsigned) {\r\n    if (typeof val === 'number')\r\n        return fromNumber(val, unsigned);\r\n    if (typeof val === 'string')\r\n        return fromString(val, unsigned);\r\n    // Throws for non-objects, converts non-instanceof Long:\r\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\r\n}\r\n\r\n/**\r\n * Converts the specified value to a Long using the appropriate from* function for its type.\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long}\r\n */\r\nLong.fromValue = fromValue;\r\n\r\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\r\n// no runtime penalty for these.\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_16_DBL = 1 << 16;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24_DBL = 1 << 24;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\r\n\r\n/**\r\n * @type {!Long}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ZERO = fromInt(0);\r\n\r\n/**\r\n * Signed zero.\r\n * @type {!Long}\r\n */\r\nLong.ZERO = ZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UZERO = fromInt(0, true);\r\n\r\n/**\r\n * Unsigned zero.\r\n * @type {!Long}\r\n */\r\nLong.UZERO = UZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ONE = fromInt(1);\r\n\r\n/**\r\n * Signed one.\r\n * @type {!Long}\r\n */\r\nLong.ONE = ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UONE = fromInt(1, true);\r\n\r\n/**\r\n * Unsigned one.\r\n * @type {!Long}\r\n */\r\nLong.UONE = UONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar NEG_ONE = fromInt(-1);\r\n\r\n/**\r\n * Signed negative one.\r\n * @type {!Long}\r\n */\r\nLong.NEG_ONE = NEG_ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_VALUE = fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);\r\n\r\n/**\r\n * Maximum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_VALUE = MAX_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);\r\n\r\n/**\r\n * Maximum unsigned value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MIN_VALUE = fromBits(0, 0x80000000|0, false);\r\n\r\n/**\r\n * Minimum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MIN_VALUE = MIN_VALUE;\r\n\r\n/**\r\n * @alias Long.prototype\r\n * @inner\r\n */\r\nvar LongPrototype = Long.prototype;\r\n\r\n/**\r\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\r\n * @returns {number}\r\n */\r\nLongPrototype.toInt = function toInt() {\r\n    return this.unsigned ? this.low >>> 0 : this.low;\r\n};\r\n\r\n/**\r\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\r\n * @returns {number}\r\n */\r\nLongPrototype.toNumber = function toNumber() {\r\n    if (this.unsigned)\r\n        return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\r\n    return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\r\n};\r\n\r\n/**\r\n * Converts the Long to a string written in the specified radix.\r\n * @param {number=} radix Radix (2-36), defaults to 10\r\n * @returns {string}\r\n * @override\r\n * @throws {RangeError} If `radix` is out of range\r\n */\r\nLongPrototype.toString = function toString(radix) {\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n    if (this.isZero())\r\n        return '0';\r\n    if (this.isNegative()) { // Unsigned Longs are never negative\r\n        if (this.eq(MIN_VALUE)) {\r\n            // We need to change the Long value before it can be negated, so we remove\r\n            // the bottom-most digit in this base and then recurse to do the rest.\r\n            var radixLong = fromNumber(radix),\r\n                div = this.div(radixLong),\r\n                rem1 = div.mul(radixLong).sub(this);\r\n            return div.toString(radix) + rem1.toInt().toString(radix);\r\n        } else\r\n            return '-' + this.neg().toString(radix);\r\n    }\r\n\r\n    // Do several (6) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\r\n        rem = this;\r\n    var result = '';\r\n    while (true) {\r\n        var remDiv = rem.div(radixToPower),\r\n            intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\r\n            digits = intval.toString(radix);\r\n        rem = remDiv;\r\n        if (rem.isZero())\r\n            return digits + result;\r\n        else {\r\n            while (digits.length < 6)\r\n                digits = '0' + digits;\r\n            result = '' + digits + result;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as a signed integer.\r\n * @returns {number} Signed high bits\r\n */\r\nLongPrototype.getHighBits = function getHighBits() {\r\n    return this.high;\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned high bits\r\n */\r\nLongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\r\n    return this.high >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as a signed integer.\r\n * @returns {number} Signed low bits\r\n */\r\nLongPrototype.getLowBits = function getLowBits() {\r\n    return this.low;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned low bits\r\n */\r\nLongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\r\n    return this.low >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the number of bits needed to represent the absolute value of this Long.\r\n * @returns {number}\r\n */\r\nLongPrototype.getNumBitsAbs = function getNumBitsAbs() {\r\n    if (this.isNegative()) // Unsigned Longs are never negative\r\n        return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\r\n    var val = this.high != 0 ? this.high : this.low;\r\n    for (var bit = 31; bit > 0; bit--)\r\n        if ((val & (1 << bit)) != 0)\r\n            break;\r\n    return this.high != 0 ? bit + 33 : bit + 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isZero = function isZero() {\r\n    return this.high === 0 && this.low === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eqz = LongPrototype.isZero;\r\n\r\n/**\r\n * Tests if this Long's value is negative.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isNegative = function isNegative() {\r\n    return !this.unsigned && this.high < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is positive.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isPositive = function isPositive() {\r\n    return this.unsigned || this.high >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is odd.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isOdd = function isOdd() {\r\n    return (this.low & 1) === 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is even.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isEven = function isEven() {\r\n    return (this.low & 1) === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.equals = function equals(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\r\n        return false;\r\n    return this.high === other.high && this.low === other.low;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eq = LongPrototype.equals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.notEquals = function notEquals(other) {\r\n    return !this.eq(/* validates */ other);\r\n};\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.neq = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ne = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThan = function lessThan(other) {\r\n    return this.comp(/* validates */ other) < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lt = LongPrototype.lessThan;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) <= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lte = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.le = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThan = function greaterThan(other) {\r\n    return this.comp(/* validates */ other) > 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gt = LongPrototype.greaterThan;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gte = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ge = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Compares this Long's value with the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.compare = function compare(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.eq(other))\r\n        return 0;\r\n    var thisNeg = this.isNegative(),\r\n        otherNeg = other.isNegative();\r\n    if (thisNeg && !otherNeg)\r\n        return -1;\r\n    if (!thisNeg && otherNeg)\r\n        return 1;\r\n    // At this point the sign bits are the same\r\n    if (!this.unsigned)\r\n        return this.sub(other).isNegative() ? -1 : 1;\r\n    // Both are positive if at least one is unsigned\r\n    return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\r\n};\r\n\r\n/**\r\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.comp = LongPrototype.compare;\r\n\r\n/**\r\n * Negates this Long's value.\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.negate = function negate() {\r\n    if (!this.unsigned && this.eq(MIN_VALUE))\r\n        return MIN_VALUE;\r\n    return this.not().add(ONE);\r\n};\r\n\r\n/**\r\n * Negates this Long's value. This is an alias of {@link Long#negate}.\r\n * @function\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.neg = LongPrototype.negate;\r\n\r\n/**\r\n * Returns the sum of this and the specified Long.\r\n * @param {!Long|number|string} addend Addend\r\n * @returns {!Long} Sum\r\n */\r\nLongPrototype.add = function add(addend) {\r\n    if (!isLong(addend))\r\n        addend = fromValue(addend);\r\n\r\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = addend.high >>> 16;\r\n    var b32 = addend.high & 0xFFFF;\r\n    var b16 = addend.low >>> 16;\r\n    var b00 = addend.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 + b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 + b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 + b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 + b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long.\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.subtract = function subtract(subtrahend) {\r\n    if (!isLong(subtrahend))\r\n        subtrahend = fromValue(subtrahend);\r\n    return this.add(subtrahend.neg());\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\r\n * @function\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.sub = LongPrototype.subtract;\r\n\r\n/**\r\n * Returns the product of this and the specified Long.\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.multiply = function multiply(multiplier) {\r\n    if (this.isZero())\r\n        return ZERO;\r\n    if (!isLong(multiplier))\r\n        multiplier = fromValue(multiplier);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = wasm.mul(this.low,\r\n                           this.high,\r\n                           multiplier.low,\r\n                           multiplier.high);\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (multiplier.isZero())\r\n        return ZERO;\r\n    if (this.eq(MIN_VALUE))\r\n        return multiplier.isOdd() ? MIN_VALUE : ZERO;\r\n    if (multiplier.eq(MIN_VALUE))\r\n        return this.isOdd() ? MIN_VALUE : ZERO;\r\n\r\n    if (this.isNegative()) {\r\n        if (multiplier.isNegative())\r\n            return this.neg().mul(multiplier.neg());\r\n        else\r\n            return this.neg().mul(multiplier).neg();\r\n    } else if (multiplier.isNegative())\r\n        return this.mul(multiplier.neg()).neg();\r\n\r\n    // If both longs are small, use float multiplication\r\n    if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\r\n        return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\r\n\r\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\r\n    // We can skip products that would overflow.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = multiplier.high >>> 16;\r\n    var b32 = multiplier.high & 0xFFFF;\r\n    var b16 = multiplier.low >>> 16;\r\n    var b00 = multiplier.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 * b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 * b00;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c16 += a00 * b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 * b00;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a16 * b16;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a00 * b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\r\n * @function\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.mul = LongPrototype.multiply;\r\n\r\n/**\r\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\r\n *  unsigned if this Long is unsigned.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.divide = function divide(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n    if (divisor.isZero())\r\n        throw Error('division by zero');\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        // guard against signed division overflow: the largest\r\n        // negative number / -1 would be 1 larger than the largest\r\n        // positive number, due to two's complement.\r\n        if (!this.unsigned &&\r\n            this.high === -0x80000000 &&\r\n            divisor.low === -1 && divisor.high === -1) {\r\n            // be consistent with non-wasm code path\r\n            return this;\r\n        }\r\n        var low = (this.unsigned ? wasm.div_u : wasm.div_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (this.isZero())\r\n        return this.unsigned ? UZERO : ZERO;\r\n    var approx, rem, res;\r\n    if (!this.unsigned) {\r\n        // This section is only relevant for signed longs and is derived from the\r\n        // closure library as a whole.\r\n        if (this.eq(MIN_VALUE)) {\r\n            if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\r\n                return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\r\n            else if (divisor.eq(MIN_VALUE))\r\n                return ONE;\r\n            else {\r\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\r\n                var halfThis = this.shr(1);\r\n                approx = halfThis.div(divisor).shl(1);\r\n                if (approx.eq(ZERO)) {\r\n                    return divisor.isNegative() ? ONE : NEG_ONE;\r\n                } else {\r\n                    rem = this.sub(divisor.mul(approx));\r\n                    res = approx.add(rem.div(divisor));\r\n                    return res;\r\n                }\r\n            }\r\n        } else if (divisor.eq(MIN_VALUE))\r\n            return this.unsigned ? UZERO : ZERO;\r\n        if (this.isNegative()) {\r\n            if (divisor.isNegative())\r\n                return this.neg().div(divisor.neg());\r\n            return this.neg().div(divisor).neg();\r\n        } else if (divisor.isNegative())\r\n            return this.div(divisor.neg()).neg();\r\n        res = ZERO;\r\n    } else {\r\n        // The algorithm below has not been made for unsigned longs. It's therefore\r\n        // required to take special care of the MSB prior to running it.\r\n        if (!divisor.unsigned)\r\n            divisor = divisor.toUnsigned();\r\n        if (divisor.gt(this))\r\n            return UZERO;\r\n        if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\r\n            return UONE;\r\n        res = UZERO;\r\n    }\r\n\r\n    // Repeat the following until the remainder is less than other:  find a\r\n    // floating-point that approximates remainder / other *from below*, add this\r\n    // into the result, and subtract it from the remainder.  It is critical that\r\n    // the approximate value is less than or equal to the real value so that the\r\n    // remainder never becomes negative.\r\n    rem = this;\r\n    while (rem.gte(divisor)) {\r\n        // Approximate the result of division. This may be a little greater or\r\n        // smaller than the actual value.\r\n        approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\r\n\r\n        // We will tweak the approximate result by changing it in the 48-th digit or\r\n        // the smallest non-fractional digit, whichever is larger.\r\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2),\r\n            delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),\r\n\r\n        // Decrease the approximation until it is smaller than the remainder.  Note\r\n        // that if it is too large, the product overflows and is negative.\r\n            approxRes = fromNumber(approx),\r\n            approxRem = approxRes.mul(divisor);\r\n        while (approxRem.isNegative() || approxRem.gt(rem)) {\r\n            approx -= delta;\r\n            approxRes = fromNumber(approx, this.unsigned);\r\n            approxRem = approxRes.mul(divisor);\r\n        }\r\n\r\n        // We know the answer can't be zero... and actually, zero would cause\r\n        // infinite recursion since we would make no progress.\r\n        if (approxRes.isZero())\r\n            approxRes = ONE;\r\n\r\n        res = res.add(approxRes);\r\n        rem = rem.sub(approxRem);\r\n    }\r\n    return res;\r\n};\r\n\r\n/**\r\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.div = LongPrototype.divide;\r\n\r\n/**\r\n * Returns this Long modulo the specified.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.modulo = function modulo(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = (this.unsigned ? wasm.rem_u : wasm.rem_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    return this.sub(this.div(divisor).mul(divisor));\r\n};\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.mod = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.rem = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns the bitwise NOT of this Long.\r\n * @returns {!Long}\r\n */\r\nLongPrototype.not = function not() {\r\n    return fromBits(~this.low, ~this.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise AND of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.and = function and(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise OR of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.or = function or(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise XOR of this Long and the given one.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.xor = function xor(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftLeft = function shiftLeft(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\r\n    else\r\n        return fromBits(0, this.low << (numBits - 32), this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shl = LongPrototype.shiftLeft;\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRight = function shiftRight(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\r\n    else\r\n        return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr = LongPrototype.shiftRight;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    numBits &= 63;\r\n    if (numBits === 0)\r\n        return this;\r\n    else {\r\n        var high = this.high;\r\n        if (numBits < 32) {\r\n            var low = this.low;\r\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\r\n        } else if (numBits === 32)\r\n            return fromBits(high, 0, this.unsigned);\r\n        else\r\n            return fromBits(high >>> (numBits - 32), 0, this.unsigned);\r\n    }\r\n};\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shru = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Converts this Long to signed.\r\n * @returns {!Long} Signed long\r\n */\r\nLongPrototype.toSigned = function toSigned() {\r\n    if (!this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, false);\r\n};\r\n\r\n/**\r\n * Converts this Long to unsigned.\r\n * @returns {!Long} Unsigned long\r\n */\r\nLongPrototype.toUnsigned = function toUnsigned() {\r\n    if (this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, true);\r\n};\r\n\r\n/**\r\n * Converts this Long to its byte representation.\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {!Array.<number>} Byte representation\r\n */\r\nLongPrototype.toBytes = function toBytes(le) {\r\n    return le ? this.toBytesLE() : this.toBytesBE();\r\n};\r\n\r\n/**\r\n * Converts this Long to its little endian byte representation.\r\n * @returns {!Array.<number>} Little endian byte representation\r\n */\r\nLongPrototype.toBytesLE = function toBytesLE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        lo        & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo >>> 16 & 0xff,\r\n        lo >>> 24       ,\r\n        hi        & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi >>> 16 & 0xff,\r\n        hi >>> 24\r\n    ];\r\n};\r\n\r\n/**\r\n * Converts this Long to its big endian byte representation.\r\n * @returns {!Array.<number>} Big endian byte representation\r\n */\r\nLongPrototype.toBytesBE = function toBytesBE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        hi >>> 24       ,\r\n        hi >>> 16 & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi        & 0xff,\r\n        lo >>> 24       ,\r\n        lo >>> 16 & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo        & 0xff\r\n    ];\r\n};\r\n\r\n/**\r\n * Creates a Long from its byte representation.\r\n * @param {!Array.<number>} bytes Byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytes = function fromBytes(bytes, unsigned, le) {\r\n    return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\r\n};\r\n\r\n/**\r\n * Creates a Long from its little endian byte representation.\r\n * @param {!Array.<number>} bytes Little endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesLE = function fromBytesLE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[0]       |\r\n        bytes[1] <<  8 |\r\n        bytes[2] << 16 |\r\n        bytes[3] << 24,\r\n        bytes[4]       |\r\n        bytes[5] <<  8 |\r\n        bytes[6] << 16 |\r\n        bytes[7] << 24,\r\n        unsigned\r\n    );\r\n};\r\n\r\n/**\r\n * Creates a Long from its big endian byte representation.\r\n * @param {!Array.<number>} bytes Big endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesBE = function fromBytesBE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[4] << 24 |\r\n        bytes[5] << 16 |\r\n        bytes[6] <<  8 |\r\n        bytes[7],\r\n        bytes[0] << 24 |\r\n        bytes[1] << 16 |\r\n        bytes[2] <<  8 |\r\n        bytes[3],\r\n        unsigned\r\n    );\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/long.js\n// module id = 0\n// module chunks = 0"],"sourceRoot":""}[m
\ No newline at end of file[m
[1mdiff --git a/node_modules/long/index.js b/node_modules/long/index.js[m
[1mnew file mode 100644[m
[1mindex 0000000..e16857a[m
[1m--- /dev/null[m
[1m+++ b/node_modules/long/index.js[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32mmodule.exports = require("./src/long");[m
[1mdiff --git a/node_modules/long/package.json b/node_modules/long/package.json[m
[1mnew file mode 100644[m
[1mindex 0000000..22532ee[m
[1m--- /dev/null[m
[1m+++ b/node_modules/long/package.json[m
[36m@@ -0,0 +1,63 @@[m
[32m+[m[32m{[m
[32m+[m[32m  "_from": "long@^4.0.0",[m
[32m+[m[32m  "_id": "long@4.0.0",[m
[32m+[m[32m  "_inBundle": false,[m
[32m+[m[32m  "_integrity": "sha512-XsP+KhQif4bjX1kbuSiySJFNAehNxgLb6hPRGJ9QsUr8ajHkuXGdrHmFUTUUXhDwVX2R5bY4JNZEwbUiMhV+MA==",[m
[32m+[m[32m  "_location": "/long",[m
[32m+[m[32m  "_phantomChildren": {},[m
[32m+[m[32m  "_requested": {[m
[32m+[m[32m    "type": "range",[m
[32m+[m[32m    "registry": true,[m
[32m+[m[32m    "raw": "long@^4.0.0",[m
[32m+[m[32m    "name": "long",[m
[32m+[m[32m    "escapedName": "long",[m
[32m+[m[32m    "rawSpec": "^4.0.0",[m
[32m+[m[32m    "saveSpec": null,[m
[32m+[m[32m    "fetchSpec": "^4.0.0"[m
[32m+[m[32m  },[m
[32m+[m[32m  "_requiredBy": [[m
[32m+[m[32m    "/discord.js"[m
[32m+[m[32m  ],[m
[32m+[m[32m  "_resolved": "https://registry.npmjs.org/long/-/long-4.0.0.tgz",[m
[32m+[m[32m  "_shasum": "9a7b71cfb7d361a194ea555241c92f7468d5bf28",[m
[32m+[m[32m  "_spec": "long@^4.0.0",[m
[32m+[m[32m  "_where": "C:\\Users\\jojo2\\Documents\\Discord Bots\\Discord-Basic-Bot\\node_modules\\discord.js",[m
[32m+[m[32m  "author": {[m
[32m+[m[32m    "name": "Daniel Wirtz",[m
[32m+[m[32m    "email": "dcode@dcode.io"[m
[32m+[m[32m  },[m
[32m+[m[32m  "bugs": {[m
[32m+[m[32m    "url": "https://github.com/dcodeIO/long.js/issues"[m
[32m+[m[32m  },[m
[32m+[m[32m  "bundleDependencies": false,[m
[32m+[m[32m  "dependencies": {},[m
[32m+[m[32m  "deprecated": false,[m
[32m+[m[32m  "description": "A Long class for representing a 64-bit two's-complement integer value.",[m
[32m+[m[32m  "devDependencies": {[m
[32m+[m[32m    "webpack": "^3.10.0"[m
[32m+[m[32m  },[m
[32m+[m[32m  "files": [[m
[32m+[m[32m    "index.js",[m
[32m+[m[32m    "LICENSE",[m
[32m+[m[32m    "README.md",[m
[32m+[m[32m    "src/long.js",[m
[32m+[m[32m    "dist/long.js",[m
[32m+[m[32m    "dist/long.js.map"[m
[32m+[m[32m  ],[m
[32m+[m[32m  "homepage": "https://github.com/dcodeIO/long.js#readme",[m
[32m+[m[32m  "keywords": [[m
[32m+[m[32m    "math"[m
[32m+[m[32m  ],[m
[32m+[m[32m  "license": "Apache-2.0",[m
[32m+[m[32m  "main": "src/long.js",[m
[32m+[m[32m  "name": "long",[m
[32m+[m[32m  "repository": {[m
[32m+[m[32m    "type": "git",[m
[32m+[m[32m    "url": "git+https://github.com/dcodeIO/long.js.git"[m
[32m+[m[32m  },[m
[32m+[m[32m  "scripts": {[m
[32m+[m[32m    "build": "webpack",[m
[32m+[m[32m    "test": "node tests"[m
[32m+[m[32m  },[m
[32m+[m[32m  "version": "4.0.0"[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/long/src/long.js b/node_modules/long/src/long.js[m
[1mnew file mode 100644[m
[1mindex 0000000..a750394[m
[1m--- /dev/null[m
[1m+++ b/node_modules/long/src/long.js[m
[36m@@ -0,0 +1,1323 @@[m
[32m+[m[32mmodule.exports = Long;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * wasm optimizations, to do native i64 multiplication and divide[m
[32m+[m[32m */[m
[32m+[m[32mvar wasm = null;[m
[32m+[m
[32m+[m[32mtry {[m
[32m+[m[32m  wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([[m
[32m+[m[32m    0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11[m
[32m+[m[32m  ])), {}).exports;[m
[32m+[m[32m} catch (e) {[m
[32m+[m[32m  // no wasm support :([m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.[m
[32m+[m[32m *  See the from* functions below for more convenient ways of constructing Longs.[m
[32m+[m[32m * @exports Long[m
[32m+[m[32m * @class A Long class for representing a 64 bit two's-complement integer value.[m
[32m+[m[32m * @param {number} low The low (signed) 32 bits of the long[m
[32m+[m[32m * @param {number} high The high (signed) 32 bits of the long[m
[32m+[m[32m * @param {boolean=} unsigned Whether unsigned or not, defaults to signed[m
[32m+[m[32m * @constructor[m
[32m+[m[32m */[m
[32m+[m[32mfunction Long(low, high, unsigned) {[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The low 32 bits as a signed value.[m
[32m+[m[32m     * @type {number}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.low = low | 0;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The high 32 bits as a signed value.[m
[32m+[m[32m     * @type {number}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.high = high | 0;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Whether unsigned or not.[m
[32m+[m[32m     * @type {boolean}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.unsigned = !!unsigned;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m// The internal representation of a long is the two given signed, 32-bit values.[m
[32m+[m[32m// We use 32-bit pieces because these are the size of integers on which[m
[32m+[m[32m// Javascript performs bit-operations.  For operations like addition and[m
[32m+[m[32m// multiplication, we split each number into 16 bit pieces, which can easily be[m
[32m+[m[32m// multiplied within Javascript's floating-point representation without overflow[m
[32m+[m[32m// or change in sign.[m
[32m+[m[32m//[m
[32m+[m[32m// In the algorithms below, we frequently reduce the negative case to the[m
[32m+[m[32m// positive case by negating the input(s) and then post-processing the result.[m
[32m+[m[32m// Note that we must ALWAYS check specially whether those values are MIN_VALUE[m
[32m+[m[32m// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as[m
[32m+[m[32m// a positive number, it overflows back into a negative).  Not handling this[m
[32m+[m[32m// case would often result in infinite recursion.[m
[32m+[m[32m//[m
[32m+[m[32m// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*[m
[32m+[m[32m// methods on which they depend.[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * An indicator used to reliably determine if an object is a Long or not.[m
[32m+[m[32m * @type {boolean}[m
[32m+[m[32m * @const[m
[32m+[m[32m * @private[m
[32m+[m[32m */[m
[32m+[m[32mLong.prototype.__isLong__;[m
[32m+[m
[32m+[m[32mObject.defineProperty(Long.prototype, "__isLong__", { value: true });[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * @function[m
[32m+[m[32m * @param {*} obj Object[m
[32m+[m[32m * @returns {boolean}[m
[32m+[m[32m * @inner[m
[32m+[m[32m */[m
[32m+[m[32mfunction isLong(obj) {[m
[32m+[m[32m    return (obj && obj["__isLong__"]) === true;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Tests if the specified object is a Long.[m
[32m+[m[32m * @function[m
[32m+[m[32m * @param {*} obj Object[m
[32m+[m[32m * @returns {boolean}[m
[32m+[m[32m */[m
[32m+[m[32mLong.isLong = isLong;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * A cache of the Long representations of small integer values.[m
[32m+[m[32m * @type {!Object}[m
[32m+[m[32m * @inner[m
[32m+[m[32m */[m
[32m+[m[32mvar INT_CACHE = {};[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * A cache of the Long representations of small unsigned integer values.[m
[32m+[m[32m * @type {!Object}[m
[32m+[m[32m * @inner[m
[32m+[m[32m */[m
[32m+[m[32mvar UINT_CACHE = {};[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * @param {number} value[m
[32m+[m[32m * @param {boolean=} unsigned[m
[32m+[m[32m * @returns {!Long}[m
[32m+[m[32m * @inner[m
[32m+[m[32m */[m
[32m+[m[32mfunction fromInt(value, unsigned) {[m
[32m+[m[32m    var obj, cachedObj, cache;[m
[32m+[m[32m    if (unsigned) {[m
[32m+[m[32m        value >>>= 0;[m
[32m+[m[32m        if (cache = (0 <= value && value < 256)) {[m
[32m+[m[32m            cachedObj = UINT_CACHE[value];[m
[32m+[m[32m            if (cachedObj)[m
[32m+[m[32m                return cachedObj;[m
[32m+[m[32m        }[m
[32m+[m[32m        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);[m
[32m+[m[32m        if (cache)[m
[32m+[m[32m            UINT_CACHE[value] = obj;[m
[32m+[m[32m        return obj;[m
[32m+[m[32m    } else {[m
[32m+[m[32m        value |= 0;[m
[32m+[m[32m        if (cache = (-128 <= value && value < 128)) {[m
[32m+[m[32m            cachedObj = INT_CACHE[value];[m
[32m+[m[32m            if (cachedObj)[m
[32m+[m[32m                return cachedObj;[m
[32m+[m[32m        }[m
[32m+[m[32m        obj = fromBits(value, value < 0 ? -1 : 0, false);[m
[32m+[m[32m        if (cache)[m
[32m+[m[32m            INT_CACHE[value] = obj;[m
[32m+[m[32m        return obj;[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Returns a Long representing the given 32 bit integer value.[m
[32m+[m[32m * @function[m
[32m+[m[32m * @param {number} value The 32 bit integer in question[m
[32m+[m[32m * @param {boolean=} unsigned Whether unsigned or not, defaults to signed[m
[32m+[m[32m * @returns {!Long} The corresponding Long value[m
[32m+[m[32m */[m
[32m+[m[32mLong.fromInt = fromInt;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * @param {number} value[m
[32m+[m[32m * @param {boolean=} unsigned[m
[32m+[m[32m * @returns {!Long}[m
[32m+[m[32m * @inner[m
[32m+[m[32m */[m
[32m+[m[32mfunction fromNumber(value, unsigned) {[m
[32m+[m[32m    if (isNaN(value))[m
[32m+[m[32m        return unsigned ? UZERO : ZERO;[m
[32m+[m[32m    if (unsigned) {[m
[32m+[m[32m        if (value < 0)[m
[32m+[m[32m            return UZERO;[m
[32m+[m[32m        if (value >= TWO_PWR_64_DBL)[m
[32m+[m[32m            return MAX_UNSIGNED_VALUE;[m
[32m+[m[32m    } else {[m
[32m+[m[32m        if (value <= -TWO_PWR_63_DBL)[m
[32m+[m[32m            return MIN_VALUE;[m
[32m+[m[32m        if (value + 1 >= TWO_PWR_63_DBL)[m
[32m+[m[32m            return MAX_VALUE;[m
[32m+[m[32m    }[m
[32m+[m[32m    if (value < 0)[m
[32m+[m[32m        return fromNumber(-value, unsigned).neg();[m
[32m+[m[32m    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.[m
[32m+[m[32m * @function[m
[32m+[m[32m * @param {number} value The number in question[m
[32m+[m[32m * @param {boolean=} unsigned Whether unsigned or not, defaults to signed[m
[32m+[m[32m * @returns {!Long} The corresponding Long value[m
[32m+[m[32m */[m
[32m+[m[32mLong.fromNumber = fromNumber;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * @param {number} lowBits[m
[32m+[m[32m * @param {number} highBits[m
[32m+[m[32m * @param {boolean=} unsigned[m
[32m+[m[32m * @returns {!Long}[m
[32m+[m[32m * @inner[m
[32m+[m[32m */[m
[32m+[m[32mfunction fromBits(lowBits, highBits, unsigned) {[m
[32m+[m[32m    return new Long(lowBits, highBits, unsigned);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is[m
[32m+[m[32m *  assumed to use 32 bits.[m
[32m+[m[32m * @function[m
[32m+[m[32m * @param {number} lowBits The low 32 bits[m
[32m+[m[32m * @param {number} highBits The high 32 bits[m
[32m+[m[32m * @param {boolean=} unsigned Whether unsigned or not, defaults to signed[m
[32m+[m[32m * @returns {!Long} The corresponding Long value[m
[32m+[m[32m */[m
[32m+[m[32mLong.fromBits = fromBits;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * @function[m
[32m+[m[32m * @param {number} base[m
[32m+[m[32m * @param {number} exponent[m
[32m+[m[32m * @returns {number}[m
[32m+[m[32m * @inner[m
[32m+[m[32m */[m
[32m+[m[32mvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * @param {string} str[m
[32m+[m[32m * @param {(boolean|number)=} unsigned[m
[32m+[m[32m * @param {number=} radix[m
[32m+[m[32m * @returns {!Long}[m
[32m+[m[32m * @inner[m
[32m+[m[32m */[m
[32m+[m[32mfunction fromString(str, unsigned, radix) {[m
[32m+[m[32m    if (str.length === 0)[m
[32m+[m[32m        throw Error('empty string');[m
[32m+[m[32m    if (str === "NaN" || str === "Infinity" || str === "+Infinity" || str === "-Infinity")[m
[32m+[m[32m        return ZERO;[m
[32m+[m[32m    if (typeof unsigned === 'number') {[m
[32m+[m[32m        // For goog.math.long compatibility[m
[32m+[m[32m        radix = unsigned,[m
[32m+[m[32m        unsigned = false;[m
[32m+[m[32m    } else {[m
[32m+[m[32m        unsigned = !! unsigned;[m
[32m+[m[32m    }[m
[32m+[m[32m    radix = radix || 10;[m
[32m+[m[32m    if (radix < 2 || 36 < radix)[m
[32m+[m[32m        throw RangeError('radix');[m
[32m+[m
[32m+[m[32m    var p;[m
[32m+[m[32m    if ((p = str.indexOf('-')) > 0)[m
[32m+[m[32m        throw Error('interior hyphen');[m
[32m+[m[32m    else if (p === 0) {[m
[32m+[m[32m        return fromString(str.substring(1), unsigned, radix).neg();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // Do several (8) digits each time through the loop, so as to[m
[32m+[m[32m    // minimize the calls to the very expensive emulated div.[m
[32m+[m[32m    var radixToPower = fromNumber(pow_dbl(radix, 8));[m
[32m+[m
[32m+[m[32m    var result = ZERO;[m
[32m+[m[32m    for (var i = 0; i < str.length; i += 8) {[m
[32m+[m[32m        var size = Math.min(8, str.length - i),[m
[32m+[m[32m            value = parseInt(str.substring(i, i + size), radix);[m
[32m+[m[32m        if (size < 8) {[m
[32m+[m[32m            var power = fromNumber(pow_dbl(radix, size));[m
[32m+[m[32m            result = result.mul(power).add(fromNumber(value));[m
[32m+[m[32m        } else {[m
[32m+[m[32m            result = result.mul(radixToPower);[m
[32m+[m[32m            result = result.add(fromNumber(value));[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m    result.unsigned = unsigned;[m
[32m+[m[32m    return result;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Returns a Long representation of the given string, written using the specified radix.[m
[32m+[m[32m * @function[m
[32m+[m[32m * @param {string} str The textual representation of the Long[m
[32m+[m[32m * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed[m
[32m+[m[32m * @param {number=} radix The radix in which the text is written (2-36), defaults to 10[m
[32m+[m[32m * @returns {!Long} The corresponding Long value[m
[32m+[m[32m */[m
[32m+[m[32mLong.fromString = fromString;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * @function[m
[32m+[m[32m * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val[m
[32m+[m[32m * @param {boolean=} unsigned[m
[32m+[m[32m * @returns {!Long}[m
[32m+[m[32m * @inner[m
[32m+[m[32m */[m
[32m+[m[32mfunction fromValue(val, unsigned) {[m
[32m+[m[32m    if (typeof val === 'number')[m
[32m+[m[32m        return fromNumber(val, unsigned);[m
[32m+[m[32m    if (typeof val === 'string')[m
[32m+[m[32m        return fromString(val, unsigned);[m
[32m+[m[32m    // Throws for non-objects, converts non-instanceof Long:[m
[32m+[m[32m    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Converts the specified value to a Long using the appropriate from* function for its type.[m
[32m+[m[32m * @function[m
[32m+[m[32m * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value[m
[32m+[m[32m * @param {boolean=} unsigned Whether unsigned or not, defaults to signed[m
[32m+[m[32m * @returns {!Long}[m
[32m+[m[32m */[m
[32m+[m[32mLong.fromValue = fromValue;[m
[32m+[m
[32m+[m[32m// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be[m
[32m+[m[32m// no runtime penalty for these.[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * @type {number}[m
[32m+[m[32m * @const[m
[32m+[m[32m * @inner[m
[32m+[m[32m */[m
[32m+[m[32mvar TWO_PWR_16_DBL = 1 << 16;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * @type {number}[m
[32m+[m[32m * @const[m
[32m+[m[32m * @inner[m
[32m+[m[32m */[m
[32m+[m[32mvar TWO_PWR_24_DBL = 1 << 24;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * @type {number}[m
[32m+[m[32m * @const[m
[32m+[m[32m * @inner[m
[32m+[m[32m */[m
[32m+[m[32mvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * @type {number}[m
[32m+[m[32m * @const[m
[32m+[m[32m * @inner[m
[32m+[m[32m */[m
[32m+[m[32mvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * @type {number}[m
[32m+[m[32m * @const[m
[32m+[m[32m * @inner[m
[32m+[m[32m */[m
[32m+[m[32mvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * @type {!Long}[m
[32m+[m[32m * @const[m
[32m+[m[32m * @inner[m
[32m+[m[32m */[m
[32m+[m[32mvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * @type {!Long}[m
[32m+[m[32m * @inner[m
[32m+[m[32m */[m
[32m+[m[32mvar ZERO = fromInt(0);[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Signed zero.[m
[32m+[m[32m * @type {!Long}[m
[32m+[m[32m */[m
[32m+[m[32mLong.ZERO = ZERO;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * @type {!Long}[m
[32m+[m[32m * @inner[m
[32m+[m[32m */[m
[32m+[m[32mvar UZERO = fromInt(0, true);[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Unsigned zero.[m
[32m+[m[32m * @type {!Long}[m
[32m+[m[32m */[m
[32m+[m[32mLong.UZERO = UZERO;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * @type {!Long}[m
[32m+[m[32m * @inner[m
[32m+[m[32m */[m
[32m+[m[32mvar ONE = fromInt(1);[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Signed one.[m
[32m+[m[32m * @type {!Long}[m
[32m+[m[32m */[m
[32m+[m[32mLong.ONE = ONE;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * @type {!Long}[m
[32m+[m[32m * @inner[m
[32m+[m[32m */[m
[32m+[m[32mvar UONE = fromInt(1, true);[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Unsigned one.[m
[32m+[m[32m * @type {!Long}[m
[32m+[m[32m */[m
[32m+[m[32mLong.UONE = UONE;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * @type {!Long}[m
[32m+[m[32m * @inner[m
[32m+[m[32m */[m
[32m+[m[32mvar NEG_ONE = fromInt(-1);[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Signed negative one.[m
[32m+[m[32m * @type {!Long}[m
[32m+[m[32m */[m
[32m+[m[32mLong.NEG_ONE = NEG_ONE;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * @type {!Long}[m
[32m+[m[32m * @inner[m
[32m+[m[32m */[m
[32m+[m[32mvar MAX_VALUE = fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Maximum signed value.[m
[32m+[m[32m * @type {!Long}[m
[32m+[m[32m */[m
[32m+[m[32mLong.MAX_VALUE = MAX_VALUE;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * @type {!Long}[m
[32m+[m[32m * @inner[m
[32m+[m[32m */[m
[32m+[m[32mvar MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Maximum unsigned value.[m
[32m+[m[32m * @type {!Long}[m
[32m+[m[32m */[m
[32m+[m[32mLong.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * @type {!Long}[m
[32m+[m[32m * @inner[m
[32m+[m[32m */[m
[32m+[m[32mvar MIN_VALUE = fromBits(0, 0x80000000|0, false);[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Minimum signed value.[m
[32m+[m[32m * @type {!Long}[m
[32m+[m[32m */[m
[32m+[m[32mLong.MIN_VALUE = MIN_VALUE;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * @alias Long.prototype[m
[32m+[m[32m * @inner[m
[32m+[m[32m */[m
[32m+[m[32mvar LongPrototype = Long.prototype;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.[m
[32m+[m[32m * @returns {number}[m
[32m+[m[32m */[m
[32m+[m[32mLongPrototype.toInt = function toInt() {[m
[32m+[m[32m    return this.unsigned ? this.low >>> 0 : this.low;[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).[m
[32m+[m[32m * @returns {number}[m
[32m+[m[32m */[m
[32m+[m[32mLongPrototype.toNumber = function toNumber() {[m
[32m+[m[32m    if (this.unsigned)[m
[32m+[m[32m        return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);[m
[32m+[m[32m    return this.high * TWO_PWR_32_DBL + (this.low >>> 0);[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Converts the Long to a string written in the specified radix.[m
[32m+[m[32m * @param {number=} radix Radix (2-36), defaults to 10[m
[32m+[m[32m * @returns {string}[m
[32m+[m[32m * @override[m
[32m+[m[32m * @throws {RangeError} If `radix` is out of range[m
[32m+[m[32m */[m
[32m+[m[32mLongPrototype.toString = function toString(radix) {[m
[32m+[m[32m    radix = radix || 10;[m
[32m+[m[32m    if (radix < 2 || 36 < radix)[m
[32m+[m[32m        throw RangeError('radix');[m
[32m+[m[32m    if (this.isZero())[m
[32m+[m[32m        return '0';[m
[32m+[m[32m    if (this.isNegative()) { // Unsigned Longs are never negative[m
[32m+[m[32m        if (this.eq(MIN_VALUE)) {[m
[32m+[m[32m            // We need to change the Long value before it can be negated, so we remove[m
[32m+[m[32m            // the bottom-most digit in this base and then recurse to do the rest.[m
[32m+[m[32m            var radixLong = fromNumber(radix),[m
[32m+[m[32m                div = this.div(radixLong),[m
[32m+[m[32m                rem1 = div.mul(radixLong).sub(this);[m
[32m+[m[32m            return div.toString(radix) + rem1.toInt().toString(radix);[m
[32m+[m[32m        } else[m
[32m+[m[32m            return '-' + this.neg().toString(radix);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // Do several (6) digits each time through the loop, so as to[m
[32m+[m[32m    // minimize the calls to the very expensive emulated div.[m
[32m+[m[32m    var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),[m
[32m+[m[32m        rem = this;[m
[32m+[m[32m    var result = '';[m
[32m+[m[32m    while (true) {[m
[32m+[m[32m        var remDiv = rem.div(radixToPower),[m
[32m+[m[32m            intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,[m
[32m+[m[32m            digits = intval.toString(radix);[m
[32m+[m[32m        rem = remDiv;[m
[32m+[m[32m        if (rem.isZero())[m
[32m+[m[32m            return digits + result;[m
[32m+[m[32m        else {[m
[32m+[m[32m            while (digits.length < 6)[m
[32m+[m[32m                digits = '0' + digits;[m
[32m+[m[32m            result = '' + digits + result;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Gets the high 32 bits as a signed integer.[m
[32m+[m[32m * @returns {number} Signed high bits[m
[32m+[m[32m */[m
[32m+[m[32mLongPrototype.getHighBits = function getHighBits() {[m
[32m+[m[32m    return this.high;[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Gets the high 32 bits as an unsigned integer.[m
[32m+[m[32m * @returns {number} Unsigned high bits[m
[32m+[m[32m */[m
[32m+[m[32mLongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {[m
[32m+[m[32m    return this.high >>> 0;[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Gets the low 32 bits as a signed integer.[m
[32m+[m[32m * @returns {number} Signed low bits[m
[32m+[m[32m */[m
[32m+[m[32mLongPrototype.getLowBits = function getLowBits() {[m
[32m+[m[32m    return this.low;[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Gets the low 32 bits as an unsigned integer.[m
[32m+[m[32m * @returns {number} Unsigned low bits[m
[32m+[m[32m */[m
[32m+[m[32mLongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {[m
[32m+[m[32m    return this.low >>> 0;[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Gets the number of bits needed to represent the absolute value of this Long.[m
[32m+[m[32m * @returns {number}[m
[32m+[m[32m */[m
[32m+[m[32mLongPrototype.getNumBitsAbs = function getNumBitsAbs() {[m
[32m+[m[32m    if (this.isNegative()) // Unsigned Longs are never negative[m
[32m+[m[32m        return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();[m
[32m+[m[32m    var val = this.high != 0 ? this.high : this.low;[m
[32m+[m[32m    for (var bit = 31; bit > 0; bit--)[m
[32m+[m[32m        if ((val & (1 << bit)) != 0)[m
[32m+[m[32m            break;[m
[32m+[m[32m    return this.high != 0 ? bit + 33 : bit + 1;[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Tests if this Long's value equals zero.[m
[32m+[m[32m * @returns {boolean}[m
[32m+[m[32m */[m
[32m+[m[32mLongPrototype.isZero = function isZero() {[m
[32m+[m[32m    return this.high === 0 && this.low === 0;[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.[m
[32m+[m[32m * @returns {boolean}[m
[32m+[m[32m */[m
[32m+[m[32mLongPrototype.eqz = LongPrototype.isZero;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Tests if this Long's value is negative.[m
[32m+[m[32m * @returns {boolean}[m
[32m+[m[32m */[m
[32m+[m[32mLongPrototype.isNegative = function isNegative() {[m
[32m+[m[32m    return !this.unsigned && this.high < 0;[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Tests if this Long's value is positive.[m
[32m+[m[32m * @returns {boolean}[m
[32m+[m[32m */[m
[32m+[m[32mLongPrototype.isPositive = function isPositive() {[m
[32m+[m[32m    return this.unsigned || this.high >= 0;[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Tests if this Long's value is odd.[m
[32m+[m[32m * @returns {boolean}[m
[32m+[m[32m */[m
[32m+[m[32mLongPrototype.isOdd = function isOdd() {[m
[32m+[m[32m    return (this.low & 1) === 1;[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Tests if this Long's value is even.[m
[32m+[m[32m * @returns {boolean}[m
[32m+[m[32m */[m
[32m+[m[32mLongPrototype.isEven = function isEven() {[m
[32m+[m[32m    return (this.low & 1) === 0;[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Tests if this Long's value equals the specified's.[m
[32m+[m[32m * @param {!Long|number|string} other Other value[m
[32m+[m[32m * @returns {boolean}[m
[32m+[m[32m */[m
[32m+[m[32mLongPrototype.equals = function equals(other) {[m
[32m+[m[32m    if (!isLong(other))[m
[32m+[m[32m        other = fromValue(other);[m
[32m+[m[32m    if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)[m
[32m+[m[32m        return false;[m
[32m+[m[32m    return this.high === other.high && this.low === other.low;[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.[m
[32m+[m[32m * @function[m
[32m+[m[32m * @param {!Long|number|string} other Other value[m
[32m+[m[32m * @returns {boolean}[m
[32m+[m[32m */[m
[32m+[m[32mLongPrototype.eq = LongPrototype.equals;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Tests if this Long's value differs from the specified's.[m
[32m+[m[32m * @param {!Long|number|string} other Other value[m
[32m+[m[32m * @returns {boolean}[m
[32m+[m[32m */[m
[32m+[m[32mLongPrototype.notEquals = function notEquals(other) {[m
[32m+[m[32m    return !this.eq(/* validates */ other);[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.[m
[32m+[m[32m * @function[m
[32m+[m[32m * @param {!Long|number|string} other Other value[m
[32m+[m[32m * @returns {boolean}[m
[32m+[m[32m */[m
[32m+[m[32mLongPrototype.neq = LongPrototype.notEquals;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.[m
[32m+[m[32m * @function[m
[32m+[m[32m * @param {!Long|number|string} other Other value[m
[32m+[m[32m * @returns {boolean}[m
[32m+[m[32m */[m
[32m+[m[32mLongPrototype.ne = LongPrototype.notEquals;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Tests if this Long's value is less than the specified's.[m
[32m+[m[32m * @param {!Long|number|string} other Other value[m
[32m+[m[32m * @returns {boolean}[m
[32m+[m[32m */[m
[32m+[m[32mLongPrototype.lessThan = function lessThan(other) {[m
[32m+[m[32m    return this.comp(/* validates */ other) < 0;[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.[m
[32m+[m[32m * @function[m
[32m+[m[32m * @param {!Long|number|string} other Other value[m
[32m+[m[32m * @returns {boolean}[m
[32m+[m[32m */[m
[32m+[m[32mLongPrototype.lt = LongPrototype.lessThan;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Tests if this Long's value is less than or equal the specified's.[m
[32m+[m[32m * @param {!Long|number|string} other Other value[m
[32m+[m[32m * @returns {boolean}[m
[32m+[m[32m */[m
[32m+[m[32mLongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {[m
[32m+[m[32m    return this.comp(/* validates */ other) <= 0;[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.[m
[32m+[m[32m * @function[m
[32m+[m[32m * @param {!Long|number|string} other Other value[m
[32m+[m[32m * @returns {boolean}[m
[32m+[m[32m */[m
[32m+[m[32mLongPrototype.lte = LongPrototype.lessThanOrEqual;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.[m
[32m+[m[32m * @function[m
[32m+[m[32m * @param {!Long|number|string} other Other value[m
[32m+[m[32m * @returns {boolean}[m
[32m+[m[32m */[m
[32m+[m[32mLongPrototype.le = LongPrototype.lessThanOrEqual;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Tests if this Long's value is greater than the specified's.[m
[32m+[m[32m * @param {!Long|number|string} other Other value[m
[32m+[m[32m * @returns {boolean}[m
[32m+[m[32m */[m
[32m+[m[32mLongPrototype.greaterThan = function greaterThan(other) {[m
[32m+[m[32m    return this.comp(/* validates */ other) > 0;[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.[m
[32m+[m[32m * @function[m
[32m+[m[32m * @param {!Long|number|string} other Other value[m
[32m+[m[32m * @returns {boolean}[m
[32m+[m[32m */[m
[32m+[m[32mLongPrototype.gt = LongPrototype.greaterThan;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Tests if this Long's value is greater than or equal the specified's.[m
[32m+[m[32m * @param {!Long|number|string} other Other value[m
[32m+[m[32m * @returns {boolean}[m
[32m+[m[32m */[m
[32m+[m[32mLongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {[m
[32m+[m[32m    return this.comp(/* validates */ other) >= 0;[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.[m
[32m+[m[32m * @function[m
[32m+[m[32m * @param {!Long|number|string} other Other value[m
[32m+[m[32m * @returns {boolean}[m
[32m+[m[32m */[m
[32m+[m[32mLongPrototype.gte = LongPrototype.greaterThanOrEqual;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.[m
[32m+[m[32m * @function[m
[32m+[m[32m * @param {!Long|number|string} other Other value[m
[32m+[m[32m * @returns {boolean}[m
[32m+[m[32m */[m
[32m+[m[32mLongPrototype.ge = LongPrototype.greaterThanOrEqual;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Compares this Long's value with the specified's.[m
[32m+[m[32m * @param {!Long|number|string} other Other value[m
[32m+[m[32m * @returns {number} 0 if they are the same, 1 if the this is greater and -1[m
[32m+[m[32m *  if the given one is greater[m
[32m+[m[32m */[m
[32m+[m[32mLongPrototype.compare = function compare(other) {[m
[32m+[m[32m    if (!isLong(other))[m
[32m+[m[32m        other = fromValue(other);[m
[32m+[m[32m    if (this.eq(other))[m
[32m+[m[32m        return 0;[m
[32m+[m[32m    var thisNeg = this.isNegative(),[m
[32m+[m[32m        otherNeg = other.isNegative();[m
[32m+[m[32m    if (thisNeg && !otherNeg)[m
[32m+[m[32m        return -1;[m
[32m+[m[32m    if (!thisNeg && otherNeg)[m
[32m+[m[32m        return 1;[m
[32m+[m[32m    // At this point the sign bits are the same[m
[32m+[m[32m    if (!this.unsigned)[m
[32m+[m[32m        return this.sub(other).isNegative() ? -1 : 1;[m
[32m+[m[32m    // Both are positive if at least one is unsigned[m
[32m+[m[32m    return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.[m
[32m+[m[32m * @function[m
[32m+[m[32m * @param {!Long|number|string} other Other value[m
[32m+[m[32m * @returns {number} 0 if they are the same, 1 if the this is greater and -1[m
[32m+[m[32m *  if the given one is greater[m
[32m+[m[32m */[m
[32m+[m[32mLongPrototype.comp = LongPrototype.compare;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Negates this Long's value.[m
[32m+[m[32m * @returns {!Long} Negated Long[m
[32m+[m[32m */[m
[32m+[m[32mLongPrototype.negate = function negate() {[m
[32m+[m[32m    if (!this.unsigned && this.eq(MIN_VALUE))[m
[32m+[m[32m        return MIN_VALUE;[m
[32m+[m[32m    return this.not().add(ONE);[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Negates this Long's value. This is an alias of {@link Long#negate}.[m
[32m+[m[32m * @function[m
[32m+[m[32m * @returns {!Long} Negated Long[m
[32m+[m[32m */[m
[32m+[m[32mLongPrototype.neg = LongPrototype.negate;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Returns the sum of this and the specified Long.[m
[32m+[m[32m * @param {!Long|number|string} addend Addend[m
[32m+[m[32m * @returns {!Long} Sum[m
[32m+[m[32m */[m
[32m+[m[32mLongPrototype.add = function add(addend) {[m
[32m+[m[32m    if (!isLong(addend))[m
[32m+[m[32m        addend = fromValue(addend);[m
[32m+[m
[32m+[m[32m    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.[m
[32m+[m
[32m+[m[32m    var a48 = this.high >>> 16;[m
[32m+[m[32m    var a32 = this.high & 0xFFFF;[m
[32m+[m[32m    var a16 = this.low >>> 16;[m
[32m+[m[32m    var a00 = this.low & 0xFFFF;[m
[32m+[m
[32m+[m[32m    var b48 = addend.high >>> 16;[m
[32m+[m[32m    var b32 = addend.high & 0xFFFF;[m
[32m+[m[32m    var b16 = addend.low >>> 16;[m
[32m+[m[32m    var b00 = addend.low & 0xFFFF;[m
[32m+[m
[32m+[m[32m    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;[m
[32m+[m[32m    c00 += a00 + b00;[m
[32m+[m[32m    c16 += c00 >>> 16;[m
[32m+[m[32m    c00 &= 0xFFFF;[m
[32m+[m[32m    c16 += a16 + b16;[m
[32m+[m[32m    c32 += c16 >>> 16;[m
[32m+[m[32m    c16 &= 0xFFFF;[m
[32m+[m[32m    c32 += a32 + b32;[m
[32m+[m[32m    c48 += c32 >>> 16;[m
[32m+[m[32m    c32 &= 0xFFFF;[m
[32m+[m[32m    c48 += a48 + b48;[m
[32m+[m[32m    c48 &= 0xFFFF;[m
[32m+[m[32m    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Returns the difference of this and the specified Long.[m
[32m+[m[32m * @param {!Long|number|string} subtrahend Subtrahend[m
[32m+[m[32m * @returns {!Long} Difference[m
[32m+[m[32m */[m
[32m+[m[32mLongPrototype.subtract = function subtract(subtrahend) {[m
[32m+[m[32m    if (!isLong(subtrahend))[m
[32m+[m[32m        subtrahend = fromValue(subtrahend);[m
[32m+[m[32m    return this.add(subtrahend.neg());[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.[m
[32m+[m[32m * @function[m
[32m+[m[32m * @param {!Long|number|string} subtrahend Subtrahend[m
[32m+[m[32m * @returns {!Long} Difference[m
[32m+[m[32m */[m
[32m+[m[32mLongPrototype.sub = LongPrototype.subtract;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Returns the product of this and the specified Long.[m
[32m+[m[32m * @param {!Long|number|string} multiplier Multiplier[m
[32m+[m[32m * @returns {!Long} Product[m
[32m+[m[32m */[m
[32m+[m[32mLongPrototype.multiply = function multiply(multiplier) {[m
[32m+[m[32m    if (this.isZero())[m
[32m+[m[32m        return ZERO;[m
[32m+[m[32m    if (!isLong(multiplier))[m
[32m+[m[32m        multiplier = fromValue(multiplier);[m
[32m+[m
[32m+[m[32m    // use wasm support if present[m
[32m+[m[32m    if (wasm) {[m
[32m+[m[32m        var low = wasm.mul(this.low,[m
[32m+[m[32m                           this.high,[m
[32m+[m[32m                           multiplier.low,[m
[32m+[m[32m                           multiplier.high);[m
[32m+[m[32m        return fromBits(low, wasm.get_high(), this.unsigned);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (multiplier.isZero())[m
[32m+[m[32m        return ZERO;[m
[32m+[m[32m    if (this.eq(MIN_VALUE))[m
[32m+[m[32m        return multiplier.isOdd() ? MIN_VALUE : ZERO;[m
[32m+[m[32m    if (multiplier.eq(MIN_VALUE))[m
[32m+[m[32m        return this.isOdd() ? MIN_VALUE : ZERO;[m
[32m+[m
[32m+[m[32m    if (this.isNegative()) {[m
[32m+[m[32m        if (multiplier.isNegative())[m
[32m+[m[32m            return this.neg().mul(multiplier.neg());[m
[32m+[m[32m        else[m
[32m+[m[32m            return this.neg().mul(multiplier).neg();[m
[32m+[m[32m    } else if (multiplier.isNegative())[m
[32m+[m[32m        return this.mul(multiplier.neg()).neg();[m
[32m+[m
[32m+[m[32m    // If both longs are small, use float multiplication[m
[32m+[m[32m    if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))[m
[32m+[m[32m        return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);[m
[32m+[m
[32m+[m[32m    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.[m
[32m+[m[32m    // We can skip products that would overflow.[m
[32m+[m
[32m+[m[32m    var a48 = this.high >>> 16;[m
[32m+[m[32m    var a32 = this.high & 0xFFFF;[m
[32m+[m[32m    var a16 = this.low >>> 16;[m
[32m+[m[32m    var a00 = this.low & 0xFFFF;[m
[32m+[m
[32m+[m[32m    var b48 = multiplier.high >>> 16;[m
[32m+[m[32m    var b32 = multiplier.high & 0xFFFF;[m
[32m+[m[32m    var b16 = multiplier.low >>> 16;[m
[32m+[m[32m    var b00 = multiplier.low & 0xFFFF;[m
[32m+[m
[32m+[m[32m    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;[m
[32m+[m[32m    c00 += a00 * b00;[m
[32m+[m[32m    c16 += c00 >>> 16;[m
[32m+[m[32m    c00 &= 0xFFFF;[m
[32m+[m[32m    c16 += a16 * b00;[m
[32m+[m[32m    c32 += c16 >>> 16;[m
[32m+[m[32m    c16 &= 0xFFFF;[m
[32m+[m[32m    c16 += a00 * b16;[m
[32m+[m[32m    c32 += c16 >>> 16;[m
[32m+[m[32m    c16 &= 0xFFFF;[m
[32m+[m[32m    c32 += a32 * b00;[m
[32m+[m[32m    c48 += c32 >>> 16;[m
[32m+[m[32m    c32 &= 0xFFFF;[m
[32m+[m[32m    c32 += a16 * b16;[m
[32m+[m[32m    c48 += c32 >>> 16;[m
[32m+[m[32m    c32 &= 0xFFFF;[m
[32m+[m[32m    c32 += a00 * b32;[m
[32m+[m[32m    c48 += c32 >>> 16;[m
[32m+[m[32m    c32 &= 0xFFFF;[m
[32m+[m[32m    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;[m
[32m+[m[32m    c48 &= 0xFFFF;[m
[32m+[m[32m    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.[m
[32m+[m[32m * @function[m
[32m+[m[32m * @param {!Long|number|string} multiplier Multiplier[m
[32m+[m[32m * @returns {!Long} Product[m
[32m+[m[32m */[m
[32m+[m[32mLongPrototype.mul = LongPrototype.multiply;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Returns this Long divided by the specified. The result is signed if this Long is signed or[m
[32m+[m[32m *  unsigned if this Long is unsigned.[m
[32m+[m[32m * @param {!Long|number|string} divisor Divisor[m
[32m+[m[32m * @returns {!Long} Quotient[m
[32m+[m[32m */[m
[32m+[m[32mLongPrototype.divide = function divide(divisor) {[m
[32m+[m[32m    if (!isLong(divisor))[m
[32m+[m[32m        divisor = fromValue(divisor);[m
[32m+[m[32m    if (divisor.isZero())[m
[32m+[m[32m        throw Error('division by zero');[m
[32m+[m
[32m+[m[32m    // use wasm support if present[m
[32m+[m[32m    if (wasm) {[m
[32m+[m[32m        // guard against signed division overflow: the largest[m
[32m+[m[32m        // negative number / -1 would be 1 larger than the largest[m
[32m+[m[32m        // positive number, due to two's complement.[m
[32m+[m[32m        if (!this.unsigned &&[m
[32m+[m[32m            this.high === -0x80000000 &&[m
[32m+[m[32m            divisor.low === -1 && divisor.high === -1) {[m
[32m+[m[32m            // be consistent with non-wasm code path[m
[32m+[m[32m            return this;[m
[32m+[m[32m        }[m
[32m+[m[32m        var low = (this.unsigned ? wasm.div_u : wasm.div_s)([m
[32m+[m[32m            this.low,[m
[32m+[m[32m            this.high,[m
[32m+[m[32m            divisor.low,[m
[32m+[m[32m            divisor.high[m
[32m+[m[32m        );[m
[32m+[m[32m        return fromBits(low, wasm.get_high(), this.unsigned);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (this.isZero())[m
[32m+[m[32m        return this.unsigned ? UZERO : ZERO;[m
[32m+[m[32m    var approx, rem, res;[m
[32m+[m[32m    if (!this.unsigned) {[m
[32m+[m[32m        // This section is only relevant for signed longs and is derived from the[m
[32m+[m[32m        // closure library as a whole.[m
[32m+[m[32m        if (this.eq(MIN_VALUE)) {[m
[32m+[m[32m            if (divisor.eq(ONE) || divisor.eq(NEG_ONE))[m
[32m+[m[32m                return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE[m
[32m+[m[32m            else if (divisor.eq(MIN_VALUE))[m
[32m+[m[32m                return ONE;[m
[32m+[m[32m            else {[m
[32m+[m[32m                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.[m
[32m+[m[32m                var halfThis = this.shr(1);[m
[32m+[m[32m                approx = halfThis.div(divisor).shl(1);[m
[32m+[m[32m                if (approx.eq(ZERO)) {[m
[32m+[m[32m                    return divisor.isNegative() ? ONE : NEG_ONE;[m
[32m+[m[32m                } else {[m
[32m+[m[32m                    rem = this.sub(divisor.mul(approx));[m
[32m+[m[32m                    res = approx.add(rem.div(divisor));[m
[32m+[m[32m                    return res;[m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
[32m+[m[32m        } else if (divisor.eq(MIN_VALUE))[m
[32m+[m[32m            return this.unsigned ? UZERO : ZERO;[m
[32m+[m[32m        if (this.isNegative()) {[m
[32m+[m[32m            if (divisor.isNegative())[m
[32m+[m[32m                return this.neg().div(divisor.neg());[m
[32m+[m[32m            return this.neg().div(divisor).neg();[m
[32m+[m[32m        } else if (divisor.isNegative())[m
[32m+[m[32m            return this.div(divisor.neg()).neg();[m
[32m+[m[32m        res = ZERO;[m
[32m+[m[32m    } else {[m
[32m+[m[32m        // The algorithm below has not been made for unsigned longs. It's therefore[m
[32m+[m[32m        // required to take special care of the MSB prior to running it.[m
[32m+[m[32m        if (!divisor.unsigned)[m
[32m+[m[32m            divisor = divisor.toUnsigned();[m
[32m+[m[32m        if (divisor.gt(this))[m
[32m+[m[32m            return UZERO;[m
[32m+[m[32m        if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true[m
[32m+[m[32m            return UONE;[m
[32m+[m[32m        res = UZERO;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // Repeat the following until the remainder is less than other:  find a[m
[32m+[m[32m    // floating-point that approximates remainder / other *from below*, add this[m
[32m+[m[32m    // into the result, and subtract it from the remainder.  It is critical that[m
[32m+[m[32m    // the approximate value is less than or equal to the real value so that the[m
[32m+[m[32m    // remainder never becomes negative.[m
[32m+[m[32m    rem = this;[m
[32m+[m[32m    while (rem.gte(divisor)) {[m
[32m+[m[32m        // Approximate the result of division. This may be a little greater or[m
[32m+[m[32m        // smaller than the actual value.[m
[32m+[m[32m        approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));[m
[32m+[m
[32m+[m[32m        // We will tweak the approximate result by changing it in the 48-th digit or[m
[32m+[m[32m        // the smallest non-fractional digit, whichever is larger.[m
[32m+[m[32m        var log2 = Math.ceil(Math.log(approx) / Math.LN2),[m
[32m+[m[32m            delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),[m
[32m+[m
[32m+[m[32m        // Decrease the approximation until it is smaller than the remainder.  Note[m
[32m+[m[32m        // that if it is too large, the product overflows and is negative.[m
[32m+[m[32m            approxRes = fromNumber(approx),[m
[32m+[m[32m            approxRem = approxRes.mul(divisor);[m
[32m+[m[32m        while (approxRem.isNegative() || approxRem.gt(rem)) {[m
[32m+[m[32m            approx -= delta;[m
[32m+[m[32m            approxRes = fromNumber(approx, this.unsigned);[m
[32m+[m[32m            approxRem = approxRes.mul(divisor);[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        // We know the answer can't be zero... and actually, zero would cause[m
[32m+[m[32m        // infinite recursion since we would make no progress.[m
[32m+[m[32m        if (approxRes.isZero())[m
[32m+[m[32m            approxRes = ONE;[m
[32m+[m
[32m+[m[32m        res = res.add(approxRes);[m
[32m+[m[32m        rem = rem.sub(approxRem);[m
[32m+[m[32m    }[m
[32m+[m[32m    return res;[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.[m
[32m+[m[32m * @function[m
[32m+[m[32m * @param {!Long|number|string} divisor Divisor[m
[32m+[m[32m * @returns {!Long} Quotient[m
[32m+[m[32m */[m
[32m+[m[32mLongPrototype.div = LongPrototype.divide;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Returns this Long modulo the specified.[m
[32m+[m[32m * @param {!Long|number|string} divisor Divisor[m
[32m+[m[32m * @returns {!Long} Remainder[m
[32m+[m[32m */[m
[32m+[m[32mLongPrototype.modulo = function modulo(divisor) {[m
[32m+[m[32m    if (!isLong(divisor))[m
[32m+[m[32m        divisor = fromValue(divisor);[m
[32m+[m
[32m+[m[32m    // use wasm support if present[m
[32m+[m[32m    if (wasm) {[m
[32m+[m[32m        var low = (this.unsigned ? wasm.rem_u : wasm.rem_s)([m
[32m+[m[32m            this.low,[m
[32m+[m[32m            this.high,[m
[32m+[m[32m            divisor.low,[m
[32m+[m[32m            divisor.high[m
[32m+[m[32m        );[m
[32m+[m[32m        return fromBits(low, wasm.get_high(), this.unsigned);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return this.sub(this.div(divisor).mul(divisor));[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.[m
[32m+[m[32m * @function[m
[32m+[m[32m * @param {!Long|number|string} divisor Divisor[m
[32m+[m[32m * @returns {!Long} Remainder[m
[32m+[m[32m */[m
[32m+[m[32mLongPrototype.mod = LongPrototype.modulo;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.[m
[32m+[m[32m * @function[m
[32m+[m[32m * @param {!Long|number|string} divisor Divisor[m
[32m+[m[32m * @returns {!Long} Remainder[m
[32m+[m[32m */[m
[32m+[m[32mLongPrototype.rem = LongPrototype.modulo;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Returns the bitwise NOT of this Long.[m
[32m+[m[32m * @returns {!Long}[m
[32m+[m[32m */[m
[32m+[m[32mLongPrototype.not = function not() {[m
[32m+[m[32m    return fromBits(~this.low, ~this.high, this.unsigned);[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Returns the bitwise AND of this Long and the specified.[m
[32m+[m[32m * @param {!Long|number|string} other Other Long[m
[32m+[m[32m * @returns {!Long}[m
[32m+[m[32m */[m
[32m+[m[32mLongPrototype.and = function and(other) {[m
[32m+[m[32m    if (!isLong(other))[m
[32m+[m[32m        other = fromValue(other);[m
[32m+[m[32m    return fromBits(this.low & other.low, this.high & other.high, this.unsigned);[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Returns the bitwise OR of this Long and the specified.[m
[32m+[m[32m * @param {!Long|number|string} other Other Long[m
[32m+[m[32m * @returns {!Long}[m
[32m+[m[32m */[m
[32m+[m[32mLongPrototype.or = function or(other) {[m
[32m+[m[32m    if (!isLong(other))[m
[32m+[m[32m        other = fromValue(other);[m
[32m+[m[32m    return fromBits(this.low | other.low, this.high | other.high, this.unsigned);[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Returns the bitwise XOR of this Long and the given one.[m
[32m+[m[32m * @param {!Long|number|string} other Other Long[m
[32m+[m[32m * @returns {!Long}[m
[32m+[m[32m */[m
[32m+[m[32mLongPrototype.xor = function xor(other) {[m
[32m+[m[32m    if (!isLong(other))[m
[32m+[m[32m        other = fromValue(other);[m
[32m+[m[32m    return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Returns this Long with bits shifted to the left by the given amount.[m
[32m+[m[32m * @param {number|!Long} numBits Number of bits[m
[32m+[m[32m * @returns {!Long} Shifted Long[m
[32m+[m[32m */[m
[32m+[m[32mLongPrototype.shiftLeft = function shiftLeft(numBits) {[m
[32m+[m[32m    if (isLong(numBits))[m
[32m+[m[32m        numBits = numBits.toInt();[m
[32m+[m[32m    if ((numBits &= 63) === 0)[m
[32m+[m[32m        return this;[m
[32m+[m[32m    else if (numBits < 32)[m
[32m+[m[32m        return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);[m
[32m+[m[32m    else[m
[32m+[m[32m        return fromBits(0, this.low << (numBits - 32), this.unsigned);[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.[m
[32m+[m[32m * @function[m
[32m+[m[32m * @param {number|!Long} numBits Number of bits[m
[32m+[m[32m * @returns {!Long} Shifted Long[m
[32m+[m[32m */[m
[32m+[m[32mLongPrototype.shl = LongPrototype.shiftLeft;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Returns this Long with bits arithmetically shifted to the right by the given amount.[m
[32m+[m[32m * @param {number|!Long} numBits Number of bits[m
[32m+[m[32m * @returns {!Long} Shifted Long[m
[32m+[m[32m */[m
[32m+[m[32mLongPrototype.shiftRight = function shiftRight(numBits) {[m
[32m+[m[32m    if (isLong(numBits))[m
[32m+[m[32m        numBits = numBits.toInt();[m
[32m+[m[32m    if ((numBits &= 63) === 0)[m
[32m+[m[32m        return this;[m
[32m+[m[32m    else if (numBits < 32)[m
[32m+[m[32m        return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);[m
[32m+[m[32m    else[m
[32m+[m[32m        return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.[m
[32m+[m[32m * @function[m
[32m+[m[32m * @param {number|!Long} numBits Number of bits[m
[32m+[m[32m * @returns {!Long} Shifted Long[m
[32m+[m[32m */[m
[32m+[m[32mLongPrototype.shr = LongPrototype.shiftRight;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Returns this Long with bits logically shifted to the right by the given amount.[m
[32m+[m[32m * @param {number|!Long} numBits Number of bits[m
[32m+[m[32m * @returns {!Long} Shifted Long[m
[32m+[m[32m */[m
[32m+[m[32mLongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {[m
[32m+[m[32m    if (isLong(numBits))[m
[32m+[m[32m        numBits = numBits.toInt();[m
[32m+[m[32m    numBits &= 63;[m
[32m+[m[32m    if (numBits === 0)[m
[32m+[m[32m        return this;[m
[32m+[m[32m    else {[m
[32m+[m[32m        var high = this.high;[m
[32m+[m[32m        if (numBits < 32) {[m
[32m+[m[32m            var low = this.low;[m
[32m+[m[32m            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);[m
[32m+[m[32m        } else if (numBits === 32)[m
[32m+[m[32m            return fromBits(high, 0, this.unsigned);[m
[32m+[m[32m        else[m
[32m+[m[32m            return fromBits(high >>> (numBits - 32), 0, this.unsigned);[m
[32m+[m[32m    }[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.[m
[32m+[m[32m * @function[m
[32m+[m[32m * @param {number|!Long} numBits Number of bits[m
[32m+[m[32m * @returns {!Long} Shifted Long[m
[32m+[m[32m */[m
[32m+[m[32mLongPrototype.shru = LongPrototype.shiftRightUnsigned;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.[m
[32m+[m[32m * @function[m
[32m+[m[32m * @param {number|!Long} numBits Number of bits[m
[32m+[m[32m * @returns {!Long} Shifted Long[m
[32m+[m[32m */[m
[32m+[m[32mLongPrototype.shr_u = LongPrototype.shiftRightUnsigned;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Converts this Long to signed.[m
[32m+[m[32m * @returns {!Long} Signed long[m
[32m+[m[32m */[m
[32m+[m[32mLongPrototype.toSigned = function toSigned() {[m
[32m+[m[32m    if (!this.unsigned)[m
[32m+[m[32m        return this;[m
[32m+[m[32m    return fromBits(this.low, this.high, false);[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Converts this Long to unsigned.[m
[32m+[m[32m * @returns {!Long} Unsigned long[m
[32m+[m[32m */[m
[32m+[m[32mLongPrototype.toUnsigned = function toUnsigned() {[m
[32m+[m[32m    if (this.unsigned)[m
[32m+[m[32m        return this;[m
[32m+[m[32m    return fromBits(this.low, this.high, true);[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Converts this Long to its byte representation.[m
[32m+[m[32m * @param {boolean=} le Whether little or big endian, defaults to big endian[m
[32m+[m[32m * @returns {!Array.<number>} Byte representation[m
[32m+[m[32m */[m
[32m+[m[32mLongPrototype.toBytes = function toBytes(le) {[m
[32m+[m[32m    return le ? this.toBytesLE() : this.toBytesBE();[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Converts this Long to its little endian byte representation.[m
[32m+[m[32m * @returns {!Array.<number>} Little endian byte representation[m
[32m+[m[32m */[m
[32m+[m[32mLongPrototype.toBytesLE = function toBytesLE() {[m
[32m+[m[32m    var hi = this.high,[m
[32m+[m[32m        lo = this.low;[m
[32m+[m[32m    return [[m
[32m+[m[32m        lo        & 0xff,[m
[32m+[m[32m        lo >>>  8 & 0xff,[m
[32m+[m[32m        lo >>> 16 & 0xff,[m
[32m+[m[32m        lo >>> 24       ,[m
[32m+[m[32m        hi        & 0xff,[m
[32m+[m[32m        hi >>>  8 & 0xff,[m
[32m+[m[32m        hi >>> 16 & 0xff,[m
[32m+[m[32m        hi >>> 24[m
[32m+[m[32m    ];[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Converts this Long to its big endian byte representation.[m
[32m+[m[32m * @returns {!Array.<number>} Big endian byte representation[m
[32m+[m[32m */[m
[32m+[m[32mLongPrototype.toBytesBE = function toBytesBE() {[m
[32m+[m[32m    var hi = this.high,[m
[32m+[m[32m        lo = this.low;[m
[32m+[m[32m    return [[m
[32m+[m[32m        hi >>> 24       ,[m
[32m+[m[32m        hi >>> 16 & 0xff,[m
[32m+[m[32m        hi >>>  8 & 0xff,[m
[32m+[m[32m        hi        & 0xff,[m
[32m+[m[32m        lo >>> 24       ,[m
[32m+[m[32m        lo >>> 16 & 0xff,[m
[32m+[m[32m        lo >>>  8 & 0xff,[m
[32m+[m[32m        lo        & 0xff[m
[32m+[m[32m    ];[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Creates a Long from its byte representation.[m
[32m+[m[32m * @param {!Array.<number>} bytes Byte representation[m
[32m+[m[32m * @param {boolean=} unsigned Whether unsigned or not, defaults to signed[m
[32m+[m[32m * @param {boolean=} le Whether little or big endian, defaults to big endian[m
[32m+[m[32m * @returns {Long} The corresponding Long value[m
[32m+[m[32m */[m
[32m+[m[32mLong.fromBytes = function fromBytes(bytes, unsigned, le) {[m
[32m+[m[32m    return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Creates a Long from its little endian byte representation.[m
[32m+[m[32m * @param {!Array.<number>} bytes Little endian byte representation[m
[32m+[m[32m * @param {boolean=} unsigned Whether unsigned or not, defaults to signed[m
[32m+[m[32m * @returns {Long} The corresponding Long value[m
[32m+[m[32m */[m
[32m+[m[32mLong.fromBytesLE = function fromBytesLE(bytes, unsigned) {[m
[32m+[m[32m    return new Long([m
[32m+[m[32m        bytes[0]       |[m
[32m+[m[32m        bytes[1] <<  8 |[m
[32m+[m[32m        bytes[2] << 16 |[m
[32m+[m[32m        bytes[3] << 24,[m
[32m+[m[32m        bytes[4]       |[m
[32m+[m[32m        bytes[5] <<  8 |[m
[32m+[m[32m        bytes[6] << 16 |[m
[32m+[m[32m        bytes[7] << 24,[m
[32m+[m[32m        unsigned[m
[32m+[m[32m    );[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Creates a Long from its big endian byte representation.[m
[32m+[m[32m * @param {!Array.<number>} bytes Big endian byte representation[m
[32m+[m[32m * @param {boolean=} unsigned Whether unsigned or not, defaults to signed[m
[32m+[m[32m * @returns {Long} The corresponding Long value[m
[32m+[m[32m */[m
[32m+[m[32mLong.fromBytesBE = function fromBytesBE(bytes, unsigned) {[m
[32m+[m[32m    return new Long([m
[32m+[m[32m        bytes[4] << 24 |[m
[32m+[m[32m        bytes[5] << 16 |[m
[32m+[m[32m        bytes[6] <<  8 |[m
[32m+[m[32m        bytes[7],[m
[32m+[m[32m        bytes[0] << 24 |[m
[32m+[m[32m        bytes[1] << 16 |[m
[32m+[m[32m        bytes[2] <<  8 |[m
[32m+[m[32m        bytes[3],[m
[32m+[m[32m        unsigned[m
[32m+[m[32m    );[m
[32m+[m[32m};[m
[1mdiff --git a/node_modules/prism-media/.eslintrc.json b/node_modules/prism-media/.eslintrc.json[m
[1mnew file mode 100644[m
[1mindex 0000000..7669dbd[m
[1m--- /dev/null[m
[1m+++ b/node_modules/prism-media/.eslintrc.json[m
[36m@@ -0,0 +1,132 @@[m
[32m+[m[32m{[m
[32m+[m[32m  "extends": "eslint:recommended",[m
[32m+[m[32m  "parserOptions": {[m
[32m+[m[32m    "ecmaVersion": 6[m
[32m+[m[32m  },[m
[32m+[m[32m  "env": {[m
[32m+[m[32m    "es6": true,[m
[32m+[m[32m    "node": true[m
[32m+[m[32m  },[m
[32m+[m[32m  "rules": {[m
[32m+[m[32m    "no-extra-parens": ["warn", "all", {[m
[32m+[m[32m      "nestedBinaryExpressions": false[m
[32m+[m[32m    }],[m
[32m+[m[32m    "valid-jsdoc": ["error", {[m
[32m+[m[32m      "requireReturn": false,[m
[32m+[m[32m      "requireReturnDescription": false,[m
[32m+[m[32m      "preferType": {[m
[32m+[m[32m        "String": "string",[m
[32m+[m[32m        "Number": "number",[m
[32m+[m[32m        "Boolean": "boolean",[m
[32m+[m[32m        "Function": "function",[m
[32m+[m[32m        "object": "Object",[m
[32m+[m[32m        "date": "Date",[m
[32m+[m[32m        "error": "Error"[m
[32m+[m[32m      },[m
[32m+[m[32m      "prefer": {[m
[32m+[m[32m        "return": "returns"[m
[32m+[m[32m      }[m
[32m+[m[32m    }],[m
[32m+[m
[32m+[m[32m    "accessor-pairs": "warn",[m
[32m+[m[32m    "array-callback-return": "error",[m
[32m+[m[32m    "complexity": "warn",[m
[32m+[m[32m    "consistent-return": "error",[m
[32m+[m[32m    "curly": ["error", "multi-line", "consistent"],[m
[32m+[m[32m    "dot-location": ["error", "property"],[m
[32m+[m[32m    "dot-notation": "error",[m
[32m+[m[32m    "eqeqeq": "error",[m
[32m+[m[32m    "no-empty-function": "error",[m
[32m+[m[32m    "no-floating-decimal": "error",[m
[32m+[m[32m    "no-implied-eval": "error",[m
[32m+[m[32m    "no-invalid-this": "error",[m
[32m+[m[32m    "no-lone-blocks": "error",[m
[32m+[m[32m    "no-multi-spaces": "error",[m
[32m+[m[32m    "no-new-func": "error",[m
[32m+[m[32m    "no-new-wrappers": "error",[m
[32m+[m[32m    "no-new": "error",[m
[32m+[m[32m    "no-octal-escape": "error",[m
[32m+[m[32m    "no-return-assign": "error",[m
[32m+[m[32m    "no-self-compare": "error",[m
[32m+[m[32m    "no-sequences": "error",[m
[32m+[m[32m    "no-throw-literal": "error",[m
[32m+[m[32m    "no-unmodified-loop-condition": "error",[m
[32m+[m[32m    "no-unused-expressions": "error",[m
[32m+[m[32m    "no-useless-call": "error",[m
[32m+[m[32m    "no-useless-concat": "error",[m
[32m+[m[32m    "no-useless-escape": "error",[m
[32m+[m[32m    "no-void": "error",[m
[32m+[m[32m    "no-warning-comments": "warn",[m
[32m+[m[32m    "wrap-iife": "error",[m
[32m+[m[32m    "yoda": "error",[m
[32m+[m
[32m+[m[32m    "no-label-var": "error",[m
[32m+[m[32m    "no-shadow": "error",[m
[32m+[m[32m    "no-undef-init": "error",[m
[32m+[m
[32m+[m[32m    "callback-return": "error",[m
[32m+[m[32m    "handle-callback-err": "error",[m
[32m+[m[32m    "no-mixed-requires": "error",[m
[32m+[m[32m    "no-new-require": "error",[m
[32m+[m[32m    "no-path-concat": "error",[m
[32m+[m
[32m+[m[32m    "array-bracket-spacing": "error",[m
[32m+[m[32m    "block-spacing": "error",[m
[32m+[m[32m    "brace-style": ["error", "1tbs", { "allowSingleLine": true }],[m
[32m+[m[32m    "comma-dangle": ["error", "always-multiline"],[m
[32m+[m[32m    "comma-spacing": "error",[m
[32m+[m[32m    "comma-style": "error",[m
[32m+[m[32m    "computed-property-spacing": "error",[m
[32m+[m[32m    "consistent-this": ["error", "$this"],[m
[32m+[m[32m    "eol-last": "error",[m
[32m+[m[32m    "func-names": "error",[m
[32m+[m[32m    "func-style": ["error", "declaration", { "allowArrowFunctions": true }],[m
[32m+[m[32m    "indent": ["error", 2, { "SwitchCase": 1 }],[m
[32m+[m[32m    "key-spacing": "error",[m
[32m+[m[32m    "keyword-spacing": "error",[m
[32m+[m[32m    "max-depth": "error",[m
[32m+[m[32m    "max-len": ["error", 120, 2],[m
[32m+[m[32m    "max-nested-callbacks": ["error", { "max": 4 }],[m
[32m+[m[32m    "max-statements-per-line": ["error", { "max": 2 }],[m
[32m+[m[32m    "new-cap": "error",[m
[32m+[m[32m    "newline-per-chained-call": ["error", { "ignoreChainWithDepth": 3 }],[m
[32m+[m[32m    "no-array-constructor": "error",[m
[32m+[m[32m    "no-inline-comments": "error",[m
[32m+[m[32m    "no-lonely-if": "error",[m
[32m+[m[32m    "no-mixed-operators": "error",[m
[32m+[m[32m    "no-multiple-empty-lines": ["error", { "max": 2, "maxEOF": 1, "maxBOF": 0 }],[m
[32m+[m[32m    "no-new-object": "error",[m
[32m+[m[32m    "no-spaced-func": "error",[m
[32m+[m[32m    "no-trailing-spaces": "error",[m
[32m+[m[32m    "no-unneeded-ternary": "error",[m
[32m+[m[32m    "no-whitespace-before-property": "error",[m
[32m+[m[32m    "object-curly-spacing": ["error", "always"],[m
[32m+[m[32m    "operator-assignment": "error",[m
[32m+[m[32m    "operator-linebreak": ["error", "after"],[m
[32m+[m[32m    "padded-blocks": ["error", "never"],[m
[32m+[m[32m    "quote-props": ["error", "as-needed"],[m
[32m+[m[32m    "quotes": ["error", "single", { "avoidEscape": true, "allowTemplateLiterals": true }],[m
[32m+[m[32m    "semi-spacing": "error",[m
[32m+[m[32m    "semi": "error",[m
[32m+[m[32m    "space-before-blocks": "error",[m
[32m+[m[32m    "space-before-function-paren": ["error", "never"],[m
[32m+[m[32m    "space-in-parens": "error",[m
[32m+[m[32m    "space-infix-ops": "error",[m
[32m+[m[32m    "space-unary-ops": "error",[m
[32m+[m[32m    "spaced-comment": "error",[m
[32m+[m[32m    "unicode-bom": "error",[m
[32m+[m
[32m+[m[32m    "arrow-body-style": "error",[m
[32m+[m[32m    "arrow-spacing": "error",[m
[32m+[m[32m    "no-duplicate-imports": "error",[m
[32m+[m[32m    "no-useless-computed-key": "error",[m
[32m+[m[32m    "no-useless-constructor": "error",[m
[32m+[m[32m    "prefer-arrow-callback": "error",[m
[32m+[m[32m    "prefer-rest-params": "error",[m
[32m+[m[32m    "prefer-spread": "error",[m
[32m+[m[32m    "prefer-template": "error",[m
[32m+[m[32m    "rest-spread-spacing": "error",[m
[32m+[m[32m    "template-curly-spacing": "error",[m
[32m+[m[32m    "yield-star-spacing": "error"[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/node_modules/prism-media/.travis.yml b/node_modules/prism-media/.travis.yml[m
[1mnew file mode 100644[m
[1mindex 0000000..e2c605c[m
[1m--- /dev/null[m
[1m+++ b/node_modules/prism-media/.travis.yml[m
[36m@@ -0,0 +1,6 @@[m
[32m+[m[32mlanguage: node_js[m
[32m+[m[32mnode_js:[m
[32m+[m[32m  - node[m
[32m+[m[32mcache:[m
[32m+[m[32m  directories:[m
[32m+[m[32m    - node_modules[m
\ No newline at end of file[m
[1mdiff --git a/node_modules/prism-media/LICENSE b/node_modules/prism-media/LICENSE[m
[1mnew file mode 100644[m
[1mindex 0000000..8dada3e[m
[1m--- /dev/null[m
[1m+++ b/node_modules/prism-media/LICENSE[m
[36m@@ -0,0 +1,201 @@[m
[32m+[m[32m                                 Apache License[m
[32m+[m[32m                           Version 2.0, January 2004[m
[32m+[m[32m                        http://www.apache.org/licenses/[m
[32m+[m
[32m+[m[32m   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION[m
[32m+[m
[32m+[m[32m   1. Definitions.[m
[32m+[m
[32m+[m[32m      "License" shall mean the terms and conditions for use, reproduction,[m
[32m+[m[32m      and distribution as defined by Sections 1 through 9 of this document.[m
[32m+[m
[32m+[m[32m      "Licensor" shall mean the copyright owner or entity authorized by[m
[32m+[m[32m      the copyright owner that is granting the License.[m
[32m+[m
[32m+[m[32m      "Legal Entity" shall mean the union of the acting entity and all[m
[32m+[m[32m      other entities that control, are controlled by, or are under common[m
[32m+[m[32m      control with that entity. For the purposes of this definition,[m
[32m+[m[32m      "control" means (i) the power, direct or indirect, to cause the[m
[32m+[m[32m      direction or management of such entity, whether by contract or[m
[32m+[m[32m      otherwise, or (ii) ownership of fifty percent (50%) or more of the[m
[32m+[m[32m      outstanding shares, or (iii) beneficial ownership of such entity.[m
[32m+[m
[32m+[m[32m      "You" (or "Your") shall mean an individual or Legal Entity[m
[32m+[m[32m      exercising permissions granted by this License.[m
[32m+[m
[32m+[m[32m      "Source" form shall mean the preferred form for making modifications,[m
[32m+[m[32m      including but not limited to software source code, documentation[m
[32m+[m[32m      source, and configuration files.[m
[32m+[m
[32m+[m[32m      "Object" form shall mean any form resulting from mechanical[m
[32m+[m[32m      transformation or translation of a Source form, including but[m
[32m+[m[32m      not limited to compiled object code, generated documentation,[m
[32m+[m[32m      and conversions to other media types.[m
[32m+[m
[32m+[m[32m      "Work" shall mean the work of authorship, whether in Source or[m
[32m+[m[32m      Object form, made available under the License, as indicated by a[m
[32m+[m[32m      copyright notice that is included in or attached to the work[m
[32m+[m[32m      (an example is provided in the Appendix below).[m
[32m+[m
[32m+[m[32m      "Derivative Works" shall mean any work, whether in Source or Object[m
[32m+[m[32m      form, that is based on (or derived from) the Work and for which the[m
[32m+[m[32m      editorial revisions, annotations, elaborations, or other modifications[m
[32m+[m[32m      represent, as a whole, an original work of authorship. For the purposes[m
[32m+[m[32m      of this License, Derivative Works shall not include works that remain[m
[32m+[m[32m      separable from, or merely link (or bind by name) to the interfaces of,[m
[32m+[m[32m      the Work and Derivative Works thereof.[m
[32m+[m
[32m+[m[32m      "Contribution" shall mean any work of authorship, including[m
[32m+[m[32m      the original version of the Work and any modifications or additions[m
[32m+[m[32m      to that Work or Derivative Works thereof, that is intentionally[m
[32m+[m[32m      submitted to Licensor for inclusion in the Work by the copyright owner[m
[32m+[m[32m      or by an individual or Legal Entity authorized to submit on behalf of[m
[32m+[m[32m      the copyright owner. For the purposes of this definition, "submitted"[m
[32m+[m[32m      means any form of electronic, verbal, or written communication sent[m
[32m+[m[32m      to the Licensor or its representatives, including but not limited to[m
[32m+[m[32m      communication on electronic mailing lists, source code control systems,[m
[32m+[m[32m      and issue tracking systems that are managed by, or on behalf of, the[m
[32m+[m[32m      Licensor for the purpose of discussing and improving the Work, but[m
[32m+[m[32m      excluding communication that is conspicuously marked or otherwise[m
[32m+[m[32m      designated in writing by the copyright owner as "Not a Contribution."[m
[32m+[m
[32m+[m[32m      "Contributor" shall mean Licensor and any individual or Legal Entity[m
[32m+[m[32m      on behalf of whom a Contribution has been received by Licensor and[m
[32m+[m[32m      subsequently incorporated within the Work.[m
[32m+[m
[32m+[m[32m   2. Grant of Copyright License. Subject to the terms and conditions of[m
[32m+[m[32m      this License, each Contributor hereby grants to You a perpetual,[m
[32m+[m[32m      worldwide, non-exclusive, no-charge, royalty-free, irrevocable[m
[32m+[m[32m      copyright license to reproduce, prepare Derivative Works of,[m
[32m+[m[32m      publicly display, publicly perform, sublicense, and distribute the[m
[32m+[m[32m      Work and such Derivative Works in Source or Object form.[m
[32m+[m
[32m+[m[32m   3. Grant of Patent License. Subject to the terms and conditions of[m
[32m+[m[32m      this License, each Contributor hereby grants to You a perpetual,[m
[32m+[m[32m      worldwide, non-exclusive, no-charge, royalty-free, irrevocable[m
[32m+[m[32m      (except as stated in this section) patent license to make, have made,[m
[32m+[m[32m      use, offer to sell, sell, import, and otherwise transfer the Work,[m
[32m+[m[32m      where such license applies only to those patent claims licensable[m
[32m+[m[32m      by such Contributor that are necessarily infringed by their[m
[32m+[m[32m      Contribution(s) alone or by combination of their Contribution(s)[m
[32m+[m[32m      with the Work to which such Contribution(s) was submitted. If You[m
[32m+[m[32m      institute patent litigation against any entity (including a[m
[32m+[m[32m      cross-claim or counterclaim in a lawsuit) alleging that the Work[m
[32m+[m[32m      or a Contribution incorporated within the Work constitutes direct[m
[32m+[m[32m      or contributory patent infringement, then any patent licenses[m
[32m+[m[32m      granted to You under this License for that Work shall terminate[m
[32m+[m[32m      as of the date such litigation is filed.[m
[32m+[m
[32m+[m[32m   4. Redistribution. You may reproduce and distribute copies of the[m
[32m+[m[32m      Work or Derivative Works thereof in any medium, with or without[m
[32m+[m[32m      modifications, and in Source or Object form, provided that You[m
[32m+[m[32m      meet the following conditions:[m
[32m+[m
[32m+[m[32m      (a) You must give any other recipients of the Work or[m
[32m+[m[32m          Derivative Works a copy of this License; and[m
[32m+[m
[32m+[m[32m      (b) You must cause any modified files to carry prominent notices[m
[32m+[m[32m          stating that You changed the files; and[m
[32m+[m
[32m+[m[32m      (c) You must retain, in the Source form of any Derivative Works[m
[32m+[m[32m          that You distribute, all copyright, patent, trademark, and[m
[32m+[m[32m          attribution notices from the Source form of the Work,[m
[32m+[m[32m          excluding those notices that do not pertain to any part of[m
[32m+[m[32m          the Derivative Works; and[m
[32m+[m
[32m+[m[32m      (d) If the Work includes a "NOTICE" text file as part of its[m
[32m+[m[32m          distribution, then any Derivative Works that You distribute must[m
[32m+[m[32m          include a readable copy of the attribution notices contained[m
[32m+[m[32m          within such NOTICE file, excluding those notices that do not[m
[32m+[m[32m          pertain to any part of the Derivative Works, in at least one[m
[32m+[m[32m          of the following places: within a NOTICE text file distributed[m
[32m+[m[32m          as part of the Derivative Works; within the Source form or[m
[32m+[m[32m          documentation, if provided along with the Derivative Works; or,[m
[32m+[m[32m          within a display generated by the Derivative Works, if and[m
[32m+[m[32m          wherever such third-party notices normally appear. The contents[m
[32m+[m[32m          of the NOTICE file are for informational purposes only and[m
[32m+[m[32m          do not modify the License. You may add Your own attribution[m
[32m+[m[32m          notices within Derivative Works that You distribute, alongside[m
[32m+[m[32m          or as an addendum to the NOTICE text from the Work, provided[m
[32m+[m[32m          that such additional attribution notices cannot be construed[m
[32m+[m[32m          as modifying the License.[m
[32m+[m
[32m+[m[32m      You may add Your own copyright statement to Your modifications and[m
[32m+[m[32m      may provide additional or different license terms and conditions[m
[32m+[m[32m      for use, reproduction, or distribution of Your modifications, or[m
[32m+[m[32m      for any such Derivative Works as a whole, provided Your use,[m
[32m+[m[32m      reproduction, and distribution of the Work otherwise complies with[m
[32m+[m[32m      the conditions stated in this License.[m
[32m+[m
[32m+[m[32m   5. Submission of Contributions. Unless You explicitly state otherwise,[m
[32m+[m[32m      any Contribution intentionally submitted for inclusion in the Work[m
[32m+[m[32m      by You to the Licensor shall be under the terms and conditions of[m
[32m+[m[32m      this License, without any additional terms or conditions.[m
[32m+[m[32m      Notwithstanding the above, nothing herein shall supersede or modify[m
[32m+[m[32m      the terms of any separate license agreement you may have executed[m
[32m+[m[32m      with Licensor regarding such Contributions.[m
[32m+[m
[32m+[m[32m   6. Trademarks. This License does not grant permission to use the trade[m
[32m+[m[32m      names, trademarks, service marks, or product names of the Licensor,[m
[32m+[m[32m      except as required for reasonable and customary use in describing the[m
[32m+[m[32m      origin of the Work and reproducing the content of the NOTICE file.[m
[32m+[m
[32m+[m[32m   7. Disclaimer of Warranty. Unless required by applicable law or[m
[32m+[m[32m      agreed to in writing, Licensor provides the Work (and each[m
[32m+[m[32m      Contributor provides its Contributions) on an "AS IS" BASIS,[m
[32m+[m[32m      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or[m
[32m+[m[32m      implied, including, without limitation, any warranties or conditions[m
[32m+[m[32m      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A[m
[32m+[m[32m      PARTICULAR PURPOSE. You are solely responsible for determining the[m
[32m+[m[32m      appropriateness of using or redistributing the Work and assume any[m
[32m+[m[32m      risks associated with Your exercise of permissions under this License.[m
[32m+[m
[32m+[m[32m   8. Limitation of Liability. In no event and under no legal theory,[m
[32m+[m[32m      whether in tort (including negligence), contract, or otherwise,[m
[32m+[m[32m      unless required by applicable law (such as deliberate and grossly[m
[32m+[m[32m      negligent acts) or agreed to in writing, shall any Contributor be[m
[32m+[m[32m      liable to You for damages, including any direct, indirect, special,[m
[32m+[m[32m      incidental, or consequential damages of any character arising as a[m
[32m+[m[32m      result of this License or out of the use or inability to use the[m
[32m+[m[32m      Work (including but not limited to damages for loss of goodwill,[m
[32m+[m[32m      work stoppage, computer failure or malfunction, or any and all[m
[32m+[m[32m      other commercial damages or losses), even if such Contributor[m
[32m+[m[32m      has been advised of the possibility of such damages.[m
[32m+[m
[32m+[m[32m   9. Accepting Warranty or Additional Liability. While redistributing[m
[32m+[m[32m      the Work or Derivative Works thereof, You may choose to offer,[m
[32m+[m[32m      and charge a fee for, acceptance of support, warranty, indemnity,[m
[32m+[m[32m      or other liability obligations and/or rights consistent with this[m
[32m+[m[32m      License. However, in accepting such obligations, You may act only[m
[32m+[m[32m      on Your own behalf and on Your sole responsibility, not on behalf[m
[32m+[m[32m      of any other Contributor, and only if You agree to indemnify,[m
[32m+[m[32m      defend, and hold each Contributor harmless for any liability[m
[32m+[m[32m      incurred by, or claims asserted against, such Contributor by reason[m
[32m+[m[32m      of your accepting any such warranty or additional liability.[m
[32m+[m
[32m+[m[32m   END OF TERMS AND CONDITIONS[m
[32m+[m
[32m+[m[32m   APPENDIX: How to apply the Apache License to your work.[m
[32m+[m
[32m+[m[32m      To apply the Apache License to your work, attach the following[m
[32m+[m[32m      boilerplate notice, with the fields enclosed by brackets "{}"[m
[32m+[m[32m      replaced with your own identifying information. (Don't include[m
[32m+[m[32m      the brackets!)  The text should be enclosed in the appropriate[m
[32m+[m[32m      comment syntax for the file format. We also recommend that a[m
[32m+[m[32m      file or class name and description of purpose be included on the[m
[32m+[m[32m      same "printed page" as the copyright notice for easier[m
[32m+[m[32m      identification within third-party archives.[m
[32m+[m
[32m+[m[32m   Copyright {yyyy} {name of copyright owner}[m
[32m+[m
[32m+[m[32m   Licensed under the Apache License, Version 2.0 (the "License");[m
[32m+[m[32m   you may not use this file except in compliance with the License.[m
[32m+[m[32m   You may obtain a copy of the License at[m
[32m+[m
[32m+[m[32m       http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m
[32m+[m[32m   Unless required by applicable law or agreed to in writing, software[m
[32m+[m[32m   distributed under the License is distributed on an "AS IS" BASIS,[m
[32m+[m[32m   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.[m
[32m+[m[32m   See the License for the specific language governing permissions and[m
[32m+[m[32m   limitations under the License.[m
[1mdiff --git a/node_modules/prism-media/README.md b/node_modules/prism-media/README.md[m
[1mnew file mode 100644[m
[1mindex 0000000..9b3d822[m
[1m--- /dev/null[m
[1m+++ b/node_modules/prism-media/README.md[m
[36m@@ -0,0 +1,29 @@[m
[32m+[m[32m# prism-media[m
[32m+[m[32m[![Build Status](https://travis-ci.org/hydrabolt/prism-media.svg?branch=master)](https://travis-ci.org/hydrabolt/prism-media)[m
[32m+[m[32m[![dependencies](https://david-dm.org/hydrabolt/prism-media/status.svg)](https://david-dm.org/hydrabolt/prism-media)[m
[32m+[m[32m[![devDependencies](https://david-dm.org/hydrabolt/prism-media/dev-status.svg)](https://david-dm.org/hydrabolt/prism-media?type=dev)[m
[32m+[m
[32m+[m[32mMakes programmatically transcoding media easier[m
[32m+[m
[32m+[m[32m`npm install --save hydrabolt/prism-media`[m
[32m+[m
[32m+[m[32m```js[m
[32m+[m[32mconst Prism = require('prism-media');[m
[32m+[m[32mconst fs = require('fs');[m
[32m+[m
[32m+[m[32mconst prism = new Prism();[m
[32m+[m
[32m+[m[32mconst transcoder = prism.transcode({[m
[32m+[m[32m  type: 'ffmpeg',[m
[32m+[m[32m  media: './test/test.mp3',[m
[32m+[m[32m  ffmpegArguments: [[m
[32m+[m[32m    '-analyzeduration', '0',[m
[32m+[m[32m    '-loglevel', '0',[m
[32m+[m[32m    '-f', 's16le',[m
[32m+[m[32m    '-ar', '48000',[m
[32m+[m[32m    '-ac', '2',[m
[32m+[m[32m  ],[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mtranscoder.output.pipe(fs.createWriteStream('./test/test.pcm'));[m
[32m+[m[32m```[m
\ No newline at end of file[m
[1mdiff --git a/node_modules/prism-media/output.opus b/node_modules/prism-media/output.opus[m
[1mnew file mode 100644[m
[1mindex 0000000..e69de29[m
[1mdiff --git a/node_modules/prism-media/package.json b/node_modules/prism-media/package.json[m
[1mnew file mode 100644[m
[1mindex 0000000..b7f2ce1[m
[1m--- /dev/null[m
[1m+++ b/node_modules/prism-media/package.json[m
[36m@@ -0,0 +1,56 @@[m
[32m+[m[32m{[m
[32m+[m[32m  "_from": "prism-media@^0.0.3",[m
[32m+[m[32m  "_id": "prism-media@0.0.3",[m
[32m+[m[32m  "_inBundle": false,[m
[32m+[m[32m  "_integrity": "sha512-c9KkNifSMU/iXT8FFTaBwBMr+rdVcN+H/uNv1o+CuFeTThNZNTOrQ+RgXA1yL/DeLk098duAeRPP3QNPNbhxYQ==",[m
[32m+[m[32m  "_location": "/prism-media",[m
[32m+[m[32m  "_phantomChildren": {},[m
[32m+[m[32m  "_requested": {[m
[32m+[m[32m    "type": "range",[m
[32m+[m[32m    "registry": true,[m
[32m+[m[32m    "raw": "prism-media@^0.0.3",[m
[32m+[m[32m    "name": "prism-media",[m
[32m+[m[32m    "escapedName": "prism-media",[m
[32m+[m[32m    "rawSpec": "^0.0.3",[m
[32m+[m[32m    "saveSpec": null,[m
[32m+[m[32m    "fetchSpec": "^0.0.3"[m
[32m+[m[32m  },[m
[32m+[m[32m  "_requiredBy": [[m
[32m+[m[32m    "/discord.js"[m
[32m+[m[32m  ],[m
[32m+[m[32m  "_resolved": "https://registry.npmjs.org/prism-media/-/prism-media-0.0.3.tgz",[m
[32m+[m[32m  "_shasum": "8842d4fae804f099d3b48a9a38e3c2bab6f4855b",[m
[32m+[m[32m  "_spec": "prism-media@^0.0.3",[m
[32m+[m[32m  "_where": "C:\\Users\\jojo2\\Documents\\Discord Bots\\Discord-Basic-Bot\\node_modules\\discord.js",[m
[32m+[m[32m  "author": {[m
[32m+[m[32m    "name": "Amish Shah",[m
[32m+[m[32m    "email": "amishshah.2k@gmail.com"[m
[32m+[m[32m  },[m
[32m+[m[32m  "bugs": {[m
[32m+[m[32m    "url": "https://github.com/hydrabolt/prism-media/issues"[m
[32m+[m[32m  },[m
[32m+[m[32m  "bundleDependencies": false,[m
[32m+[m[32m  "deprecated": false,[m
[32m+[m[32m  "description": "Makes transcoding media easier",[m
[32m+[m[32m  "devDependencies": {[m
[32m+[m[32m    "eslint": "^3.12.2"[m
[32m+[m[32m  },[m
[32m+[m[32m  "homepage": "https://github.com/hydrabolt/prism-media#readme",[m
[32m+[m[32m  "keywords": [[m
[32m+[m[32m    "audio",[m
[32m+[m[32m    "media",[m
[32m+[m[32m    "ffmpeg"[m
[32m+[m[32m  ],[m
[32m+[m[32m  "license": "Apache-2.0",[m
[32m+[m[32m  "main": "src/index.js",[m
[32m+[m[32m  "name": "prism-media",[m
[32m+[m[32m  "repository": {[m
[32m+[m[32m    "type": "git",[m
[32m+[m[32m    "url": "git+https://github.com/hydrabolt/prism-media.git"[m
[32m+[m[32m  },[m
[32m+[m[32m  "scripts": {[m
[32m+[m[32m    "lint": "eslint src && eslint test",[m
[32m+[m[32m    "test": "npm run lint"[m
[32m+[m[32m  },[m
[32m+[m[32m  "version": "0.0.3"[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/prism-media/src/Prism.js b/node_modules/prism-media/src/Prism.js[m
[1mnew file mode 100644[m
[1mindex 0000000..b2cee9e[m
[1m--- /dev/null[m
[1m+++ b/node_modules/prism-media/src/Prism.js[m
[36m@@ -0,0 +1,17 @@[m
[32m+[m[32mconst MediaTranscoder = require('./transcoders/MediaTranscoder');[m
[32m+[m
[32m+[m[32mclass Prism {[m
[32m+[m[32m  constructor() {[m
[32m+[m[32m    this.transcoder = new MediaTranscoder(this);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  createTranscoder(...args) {[m
[32m+[m[32m    return this.transcode(...args);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  transcode(...args) {[m
[32m+[m[32m    return this.transcoder.transcode(...args);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = Prism;[m
[1mdiff --git a/node_modules/prism-media/src/index.js b/node_modules/prism-media/src/index.js[m
[1mnew file mode 100644[m
[1mindex 0000000..9437f57[m
[1m--- /dev/null[m
[1m+++ b/node_modules/prism-media/src/index.js[m
[36m@@ -0,0 +1,6 @@[m
[32m+[m[32mconst Prism = require('./Prism');[m
[32m+[m[32mconst MediaTranscoder = require('./transcoders/MediaTranscoder');[m
[32m+[m
[32m+[m[32mPrism.MediaTranscoder = MediaTranscoder;[m
[32m+[m
[32m+[m[32mmodule.exports = Prism;[m
[1mdiff --git a/node_modules/prism-media/src/opus/OggOpus.js b/node_modules/prism-media/src/opus/OggOpus.js[m
[1mnew file mode 100644[m
[1mindex 0000000..9a938cd[m
[1m--- /dev/null[m
[1m+++ b/node_modules/prism-media/src/opus/OggOpus.js[m
[36m@@ -0,0 +1,90 @@[m
[32m+[m[32mconst { Transform } = require('stream');[m
[32m+[m
[32m+[m[32mconst OGG_PAGE_HEADER_SIZE = 26;[m
[32m+[m[32mconst STREAM_STRUCTURE_VERSION = 0;[m
[32m+[m
[32m+[m[32mconst OGGS_HEADER = Buffer.from('OggS'.split('').map(x => x.charCodeAt(0)));[m
[32m+[m[32mconst OPUS_HEAD = Buffer.from('OpusHead'.split('').map(x => x.charCodeAt(0)));[m
[32m+[m[32mconst OPUS_TAGS = Buffer.from('OpusTags'.split('').map(x => x.charCodeAt(0)));[m
[32m+[m
[32m+[m[32mclass OggOpusTransform extends Transform {[m
[32m+[m[32m  constructor() {[m
[32m+[m[32m    super();[m
[32m+[m[32m    this._remainder = null;[m
[32m+[m[32m    this._head = null;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  _transform(chunk, encoding, done) {[m
[32m+[m[32m    if (this._remainder) {[m
[32m+[m[32m      chunk = Buffer.concat([this._remainder, chunk]);[m
[32m+[m[32m      this._remainder = null;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    while (chunk) {[m
[32m+[m[32m      try {[m
[32m+[m[32m        const result = this.readPage(chunk);[m
[32m+[m[32m        if (result) chunk = result;[m
[32m+[m[32m        else break;[m
[32m+[m[32m      } catch (err) {[m
[32m+[m[32m        this.emit('error', err);[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m    this._remainder = chunk;[m
[32m+[m[32m    done();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Reads a page from a buffer[m
[32m+[m[32m   * @param {Buffer} chunk The chunk containing the page[m
[32m+[m[32m   * @returns {boolean|Buffer}[m
[32m+[m[32m   */[m
[32m+[m[32m  readPage(chunk) {[m
[32m+[m[32m    if (chunk.length < OGG_PAGE_HEADER_SIZE) {[m
[32m+[m[32m      return false;[m
[32m+[m[32m    }[m
[32m+[m[32m    if (!chunk.slice(0, 4).equals(OGGS_HEADER)) {[m
[32m+[m[32m      throw Error(`capture_pattern is not ${OGGS_HEADER}`);[m
[32m+[m[32m    }[m
[32m+[m[32m    if (chunk.readUInt8(4) !== STREAM_STRUCTURE_VERSION) {[m
[32m+[m[32m      throw Error(`stream_structure_version is not ${STREAM_STRUCTURE_VERSION}`);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    const pageSegments = chunk.readUInt8(26),[m
[32m+[m[32m      table = chunk.slice(27, 27 + pageSegments);[m
[32m+[m
[32m+[m[32m    let sizes = [], totalSize = 0;[m
[32m+[m
[32m+[m[32m    for (let i = 0; i < pageSegments;) {[m
[32m+[m[32m      let size = 0, x = 255;[m
[32m+[m[32m      while (x === 255) {[m
[32m+[m[32m        x = table.readUInt8(i);[m
[32m+[m[32m        i++;[m
[32m+[m[32m        size += x;[m
[32m+[m[32m      }[m
[32m+[m[32m      sizes.push(size);[m
[32m+[m[32m      totalSize += size;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (chunk.length < 27 + pageSegments + totalSize) {[m
[32m+[m[32m      return false;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    let start = 27 + pageSegments;[m
[32m+[m[32m    for (const size of sizes) {[m
[32m+[m[32m      const segment = chunk.slice(start, start + size);[m
[32m+[m[32m      const header = segment.slice(0, 8);[m
[32m+[m[32m      if (this._head) {[m
[32m+[m[32m        if (header.equals(OPUS_TAGS)) this.emit('opusTags', segment);[m
[32m+[m[32m        else this.push(segment);[m
[32m+[m[32m      } else if (header.equals(OPUS_HEAD)) {[m
[32m+[m[32m        this._head = segment;[m
[32m+[m[32m      } else {[m
[32m+[m[32m        throw Error(`Invalid segment ${segment}`);[m
[32m+[m[32m      }[m
[32m+[m[32m      start += size;[m
[32m+[m[32m    }[m
[32m+[m[32m    return chunk.slice(start);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = OggOpusTransform;[m
[1mdiff --git a/node_modules/prism-media/src/transcoders/MediaTranscoder.js b/node_modules/prism-media/src/transcoders/MediaTranscoder.js[m
[1mnew file mode 100644[m
[1mindex 0000000..217e34c[m
[1m--- /dev/null[m
[1m+++ b/node_modules/prism-media/src/transcoders/MediaTranscoder.js[m
[36m@@ -0,0 +1,31 @@[m
[32m+[m[32mconst Ffmpeg = require('./ffmpeg/Ffmpeg');[m
[32m+[m
[32m+[m[32mconst transcoders = [[m
[32m+[m[32m  'ffmpeg',[m
[32m+[m[32m];[m
[32m+[m
[32m+[m[32mclass MediaTranscoder {[m
[32m+[m[32m  constructor(prism) {[m
[32m+[m[32m    this.prism = prism;[m
[32m+[m[32m    this.ffmpeg = new Ffmpeg(this);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  static verifyOptions(options) {[m
[32m+[m[32m    if (!options) throw new Error('Options must be passed to MediaTranscoder.transcode()');[m
[32m+[m[32m    if (!options.type) throw new Error('Options.type must be passed to MediaTranscoder.transcode()');[m
[32m+[m[32m    if (!transcoders.includes(options.type)) throw new Error(`Options.type must be: ${transcoders.join(' ')}`);[m
[32m+[m[32m    return options;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Transcodes a media stream based on specified options[m
[32m+[m[32m   * @param {Object} options the options to use when transcoding[m
[32m+[m[32m   * @returns {ReadableStream} the transcodeed stream[m
[32m+[m[32m   */[m
[32m+[m[32m  transcode(options) {[m
[32m+[m[32m    options = MediaTranscoder.verifyOptions(options);[m
[32m+[m[32m    return this[options.type].transcode(options);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = MediaTranscoder;[m
[1mdiff --git a/node_modules/prism-media/src/transcoders/ffmpeg/Ffmpeg.js b/node_modules/prism-media/src/transcoders/ffmpeg/Ffmpeg.js[m
[1mnew file mode 100644[m
[1mindex 0000000..947b896[m
[1m--- /dev/null[m
[1m+++ b/node_modules/prism-media/src/transcoders/ffmpeg/Ffmpeg.js[m
[36m@@ -0,0 +1,51 @@[m
[32m+[m[32mconst ChildProcess = require('child_process');[m
[32m+[m[32mconst FfmpegProcess = require('./FfmpegProcess');[m
[32m+[m
[32m+[m[32mclass FfmpegTranscoder {[m
[32m+[m[32m  constructor(mediaTranscoder) {[m
[32m+[m[32m    this.mediaTranscoder = mediaTranscoder;[m
[32m+[m[32m    this.command = FfmpegTranscoder.selectFfmpegCommand();[m
[32m+[m[32m    this.processes = [];[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  static verifyOptions(options) {[m
[32m+[m[32m    if (!options) throw new Error('Options not provided!');[m
[32m+[m[32m    if (!options.media) throw new Error('Media must be provided');[m
[32m+[m[32m    if (!options.ffmpegArguments || !(options.ffmpegArguments instanceof Array)) {[m
[32m+[m[32m      throw new Error('FFMPEG Arguments must be an array');[m
[32m+[m[32m    }[m
[32m+[m[32m    if (options.ffmpegArguments.includes('-i')) return options;[m
[32m+[m[32m    if (typeof options.media === 'string') {[m
[32m+[m[32m      options.ffmpegArguments = ['-i', `${options.media}`].concat(options.ffmpegArguments).concat(['pipe:1']);[m
[32m+[m[32m    } else {[m
[32m+[m[32m      options.ffmpegArguments = ['-i', '-'].concat(options.ffmpegArguments).concat(['pipe:1']);[m
[32m+[m[32m    }[m
[32m+[m[32m    return options;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Transcodes an input using FFMPEG[m
[32m+[m[32m   * @param {FfmpegTranscoderOptions} options the options to use[m
[32m+[m[32m   * @returns {FfmpegProcess} the created FFMPEG process[m
[32m+[m[32m   * @throws {FFMPEGOptionsError}[m
[32m+[m[32m   */[m
[32m+[m[32m  transcode(options) {[m
[32m+[m[32m    if (!this.command) this.command = FfmpegTranscoder.selectFfmpegCommand();[m
[32m+[m[32m    const proc = new FfmpegProcess(this, FfmpegTranscoder.verifyOptions(options));[m
[32m+[m[32m    this.processes.push(proc);[m
[32m+[m[32m    return proc;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  static selectFfmpegCommand() {[m
[32m+[m[32m    try {[m
[32m+[m[32m      return require('ffmpeg-binaries');[m
[32m+[m[32m    } catch (err) {[m
[32m+[m[32m      for (const command of ['ffmpeg', 'avconv', './ffmpeg', './avconv']) {[m
[32m+[m[32m        if (!ChildProcess.spawnSync(command, ['-h']).error) return command;[m
[32m+[m[32m      }[m
[32m+[m[32m      throw new Error('FFMPEG not found');[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = FfmpegTranscoder;[m
[1mdiff --git a/node_modules/prism-media/src/transcoders/ffmpeg/FfmpegProcess.js b/node_modules/prism-media/src/transcoders/ffmpeg/FfmpegProcess.js[m
[1mnew file mode 100644[m
[1mindex 0000000..c6561a9[m
[1m--- /dev/null[m
[1m+++ b/node_modules/prism-media/src/transcoders/ffmpeg/FfmpegProcess.js[m
[36m@@ -0,0 +1,95 @@[m
[32m+[m[32mconst EventEmitter = require('events').EventEmitter;[m
[32m+[m[32mconst ChildProcess = require('child_process');[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * A spawned FFMPEG process[m
[32m+[m[32m */[m
[32m+[m[32mclass FfmpegProcess extends EventEmitter {[m
[32m+[m[32m  constructor(ffmpegTranscoder, options) {[m
[32m+[m[32m    super();[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The ffmpeg process[m
[32m+[m[32m     * @type {ChildProcess}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.process = ChildProcess.spawn(ffmpegTranscoder.command, options.ffmpegArguments);[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The FFMPEG transcoder that created this process[m
[32m+[m[32m     * @type {FfmpegTranscoder}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.transcoder = ffmpegTranscoder;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The input media[m
[32m+[m[32m     * @type {?ReadableStream|string}[m
[32m+[m[32m     */[m
[32m+[m[32m    this.inputMedia = options.media;[m
[32m+[m
[32m+[m[32m    if (typeof this.inputMedia !== 'string') {[m
[32m+[m[32m      try {[m
[32m+[m[32m        this.connectStream(this.inputMedia);[m
[32m+[m[32m      } catch (e) {[m
[32m+[m[32m        this.emit('error', e, 'instantiation');[m
[32m+[m[32m      }[m
[32m+[m[32m    } else {[m
[32m+[m[32m      this.attachErrorHandlers();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    this.on('error', this.kill.bind(this));[m
[32m+[m[32m    this.once('end', this.kill.bind(this));[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The ffmpeg output stream[m
[32m+[m[32m   * @type {?ReadableStream}[m
[32m+[m[32m   */[m
[32m+[m[32m  get output() {[m
[32m+[m[32m    return this.process ? this.process.stdout : null;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  attachErrorHandlers() {[m
[32m+[m[32m    this.process.stdin.on('error', e => {[m
[32m+[m[32m      // if not killed[m
[32m+[m[32m      if (this.process) {[m
[32m+[m[32m        this.emit('error', e, 'ffmpegProcess.stdin');[m
[32m+[m[32m      }[m
[32m+[m[32m    });[m
[32m+[m[32m    this.process.stdout.on('error', e => {[m
[32m+[m[32m      // if not killed[m
[32m+[m[32m      if (this.process) {[m
[32m+[m[32m        this.emit('error', e, 'ffmpegProcess.stdout');[m
[32m+[m[32m      }[m
[32m+[m[32m    });[m
[32m+[m[32m    this.process.on('error', e => this.emit('error', e, 'ffmpegProcess'));[m
[32m+[m[32m    this.process.stdout.on('end', () => this.emit('end'));[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Connects an input stream to the ffmpeg process[m
[32m+[m[32m   * @param {ReadableStream} inputMedia the stream to pass to ffmpeg[m
[32m+[m[32m   * @returns {ReadableStream} the ffmpeg output stream[m
[32m+[m[32m   */[m
[32m+[m[32m  connectStream(inputMedia) {[m
[32m+[m[32m    if (!this.process) throw new Error('No FFMPEG process available');[m
[32m+[m[32m    this.inputMedia = inputMedia;[m
[32m+[m[32m    this.inputMedia.pipe(this.process.stdin, { end: false });[m
[32m+[m
[32m+[m[32m    inputMedia.on('error', e => this.emit('error', e, 'inputstream', inputMedia));[m
[32m+[m
[32m+[m[32m    this.attachErrorHandlers();[m
[32m+[m
[32m+[m[32m    return this.process.stdout;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Kills the ffmpeg process[m
[32m+[m[32m   */[m
[32m+[m[32m  kill() {[m
[32m+[m[32m    if (!this.process) return;[m
[32m+[m[32m    if (this.inputMedia && this.inputMedia.unpipe) {[m
[32m+[m[32m      this.inputMedia.unpipe(this.process.stdin);[m
[32m+[m[32m    }[m
[32m+[m[32m    this.process.kill('SIGKILL');[m
[32m+[m[32m    this.process = null;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = FfmpegProcess;[m
[1mdiff --git a/node_modules/prism-media/src/util/Constants.js b/node_modules/prism-media/src/util/Constants.js[m
[1mnew file mode 100644[m
[1mindex 0000000..e69de29[m
[1mdiff --git a/node_modules/prism-media/test/main.js b/node_modules/prism-media/test/main.js[m
[1mnew file mode 100644[m
[1mindex 0000000..495fb2e[m
[1m--- /dev/null[m
[1m+++ b/node_modules/prism-media/test/main.js[m
[36m@@ -0,0 +1,19 @@[m
[32m+[m[32m/* eslint no-console: 0 */[m
[32m+[m[32mconst Prism = require('../');[m
[32m+[m[32mconst fs = require('fs');[m
[32m+[m
[32m+[m[32mconst prism = new Prism();[m
[32m+[m
[32m+[m[32mconst transcoder = prism.transcode({[m
[32m+[m[32m  type: 'ffmpeg',[m
[32m+[m[32m  media: './test/test.mp3',[m
[32m+[m[32m  ffmpegArguments: [[m
[32m+[m[32m    '-analyzeduration', '0',[m
[32m+[m[32m    '-loglevel', '0',[m
[32m+[m[32m    '-f', 's16le',[m
[32m+[m[32m    '-ar', '48000',[m
[32m+[m[32m    '-ac', '2',[m
[32m+[m[32m  ],[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mtranscoder.output.pipe(fs.createWriteStream('./test/test.pcm'));[m
[1mdiff --git a/node_modules/prism-media/test/test.js b/node_modules/prism-media/test/test.js[m
[1mnew file mode 100644[m
[1mindex 0000000..cad8bad[m
[1m--- /dev/null[m
[1m+++ b/node_modules/prism-media/test/test.js[m
[36m@@ -0,0 +1,12 @@[m
[32m+[m[32mconst fs = require('fs');[m
[32m+[m[32mconst OggOpusTransform = require('../src/opus/OggOpus');[m
[32m+[m[32mconst opus = require('node-opus');[m
[32m+[m
[32m+[m[32mconst decoder = new opus.Decoder(48000, 2, 1920);[m
[32m+[m
[32m+[m[32mconst transformer = new OggOpusTransform();[m
[32m+[m
[32m+[m[32mfs.createReadStream('./test/ts.ogg')[m
[32m+[m[32m  .pipe(transformer)[m
[32m+[m[32m  .pipe(decoder)[m
[32m+[m[32m  .pipe(fs.createWriteStream('./output.opus'));[m
[1mdiff --git a/node_modules/snekfetch/.eslintrc.json b/node_modules/snekfetch/.eslintrc.json[m
[1mnew file mode 100644[m
[1mindex 0000000..3dee806[m
[1m--- /dev/null[m
[1m+++ b/node_modules/snekfetch/.eslintrc.json[m
[36m@@ -0,0 +1,161 @@[m
[32m+[m[32m{[m
[32m+[m[32m  "extends": "eslint:recommended",[m
[32m+[m[32m  "parserOptions": {[m
[32m+[m[32m    "ecmaVersion": 2017[m
[32m+[m[32m  },[m
[32m+[m[32m  "env": {[m
[32m+[m[32m    "es6": true,[m
[32m+[m[32m    "node": true,[m
[32m+[m[32m    "browser": true[m
[32m+[m[32m  },[m
[32m+[m[32m  "overrides": [[m
[32m+[m[32m    { "files": ["*.mjs"], "parserOptions": { "sourceType": "module" } },[m
[32m+[m[32m    {[m
[32m+[m[32m      "files": ["*.jsx"],[m
[32m+[m[32m      "parserOptions": {[m
[32m+[m[32m        "sourceType": "module",[m
[32m+[m[32m        "ecmaFeatures": { "jsx": true }[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m  ],[m
[32m+[m[32m  "rules": {[m
[32m+[m[32m    "no-await-in-loop": "warn",[m
[32m+[m[32m    "no-compare-neg-zero": "error",[m
[32m+[m[32m    "no-extra-parens": ["warn", "all", {[m
[32m+[m[32m      "nestedBinaryExpressions": false[m
[32m+[m[32m    }],[m
[32m+[m[32m    "no-template-curly-in-string": "error",[m
[32m+[m[32m    "no-unsafe-negation": "error",[m
[32m+[m[32m    "valid-jsdoc": ["error", {[m
[32m+[m[32m      "requireReturn": false,[m
[32m+[m[32m      "requireReturnDescription": false,[m
[32m+[m[32m      "prefer": {[m
[32m+[m[32m        "return": "returns",[m
[32m+[m[32m        "arg": "param"[m
[32m+[m[32m      },[m
[32m+[m[32m      "preferType": {[m
[32m+[m[32m        "String": "string",[m
[32m+[m[32m        "Number": "number",[m
[32m+[m[32m        "Boolean": "boolean",[m
[32m+[m[32m        "Symbol": "symbol",[m
[32m+[m[32m        "object": "Object",[m
[32m+[m[32m        "function": "Function",[m
[32m+[m[32m        "array": "Array",[m
[32m+[m[32m        "date": "Date",[m
[32m+[m[32m        "error": "Error",[m
[32m+[m[32m        "null": "void"[m
[32m+[m[32m      }[m
[32m+[m[32m    }],[m
[32m+[m
[32m+[m[32m    "accessor-pairs": "warn",[m
[32m+[m[32m    "array-callback-return": "error",[m
[32m+[m[32m    "complexity": "warn",[m
[32m+[m[32m    "consistent-return": "off",[m
[32m+[m[32m    "curly": ["error", "multi-or-nest", "consistent"],[m
[32m+[m[32m    "dot-location": ["error", "property"],[m
[32m+[m[32m    "dot-notation": "error",[m
[32m+[m[32m    "eqeqeq": "error",[m
[32m+[m[32m    "no-empty-function": "error",[m
[32m+[m[32m    "no-floating-decimal": "error",[m
[32m+[m[32m    "no-implied-eval": "error",[m
[32m+[m[32m    "no-invalid-this": "error",[m
[32m+[m[32m    "no-lone-blocks": "error",[m
[32m+[m[32m    "no-multi-spaces": "error",[m
[32m+[m[32m    "no-new-func": "error",[m
[32m+[m[32m    "no-new-wrappers": "error",[m
[32m+[m[32m    "no-new": "error",[m
[32m+[m[32m    "no-octal-escape": "error",[m
[32m+[m[32m    "no-return-assign": "error",[m
[32m+[m[32m    "no-return-await": "error",[m
[32m+[m[32m    "no-self-compare": "error",[m
[32m+[m[32m    "no-sequences": "error",[m
[32m+[m[32m    "no-throw-literal": "error",[m
[32m+[m[32m    "no-unmodified-loop-condition": "error",[m
[32m+[m[32m    "no-unused-expressions": "error",[m
[32m+[m[32m    "no-useless-call": "error",[m
[32m+[m[32m    "no-useless-concat": "error",[m
[32m+[m[32m    "no-useless-escape": "error",[m
[32m+[m[32m    "no-useless-return": "error",[m
[32m+[m[32m    "no-void": "error",[m
[32m+[m[32m    "no-warning-comments": "warn",[m
[32m+[m[32m    "prefer-promise-reject-errors": "error",[m
[32m+[m[32m    "require-await": "warn",[m
[32m+[m[32m    "wrap-iife": "error",[m
[32m+[m[32m    "yoda": "error",[m
[32m+[m
[32m+[m[32m    "no-label-var": "error",[m
[32m+[m[32m    "no-shadow": "error",[m
[32m+[m[32m    "no-undef-init": "error",[m
[32m+[m
[32m+[m[32m    "callback-return": "error",[m
[32m+[m[32m    "handle-callback-err": "error",[m
[32m+[m[32m    "no-mixed-requires": "error",[m
[32m+[m[32m    "no-new-require": "error",[m
[32m+[m[32m    "no-path-concat": "error",[m
[32m+[m
[32m+[m[32m    "array-bracket-spacing": "error",[m
[32m+[m[32m    "block-spacing": "error",[m
[32m+[m[32m    "brace-style": ["error", "1tbs", { "allowSingleLine": true }],[m
[32m+[m[32m    "capitalized-comments": ["off", "always", { "ignoreConsecutiveComments": true }],[m
[32m+[m[32m    "comma-dangle": ["error", "always-multiline"],[m
[32m+[m[32m    "comma-spacing": "error",[m
[32m+[m[32m    "comma-style": "error",[m
[32m+[m[32m    "computed-property-spacing": "error",[m
[32m+[m[32m    "consistent-this": ["error", "$this"],[m
[32m+[m[32m    "eol-last": "error",[m
[32m+[m[32m    "func-names": "error",[m
[32m+[m[32m    "func-name-matching": "error",[m
[32m+[m[32m    "func-style": ["error", "declaration", { "allowArrowFunctions": true }],[m
[32m+[m[32m    "indent": ["error", 2, { "SwitchCase": 1 }],[m
[32m+[m[32m    "key-spacing": "error",[m
[32m+[m[32m    "keyword-spacing": "error",[m
[32m+[m[32m    "max-depth": "error",[m
[32m+[m[32m    "max-len": ["error", 120, 2],[m
[32m+[m[32m    "max-nested-callbacks": ["error", { "max": 4 }],[m
[32m+[m[32m    "max-statements-per-line": ["error", { "max": 2 }],[m
[32m+[m[32m    "new-cap": "off",[m
[32m+[m[32m    "newline-per-chained-call": ["error", { "ignoreChainWithDepth": 3 }],[m
[32m+[m[32m    "no-array-constructor": "error",[m
[32m+[m[32m    "no-inline-comments": "off",[m
[32m+[m[32m    "no-lonely-if": "error",[m
[32m+[m[32m    "no-mixed-operators": "error",[m
[32m+[m[32m    "no-multiple-empty-lines": ["error", { "max": 2, "maxEOF": 1, "maxBOF": 0 }],[m
[32m+[m[32m    "no-new-object": "error",[m
[32m+[m[32m    "no-spaced-func": "error",[m
[32m+[m[32m    "no-trailing-spaces": "error",[m
[32m+[m[32m    "no-unneeded-ternary": "error",[m
[32m+[m[32m    "no-whitespace-before-property": "error",[m
[32m+[m[32m    "nonblock-statement-body-position": ["error", "below"],[m
[32m+[m[32m    "object-curly-spacing": ["error", "always"],[m
[32m+[m[32m    "operator-assignment": "error",[m
[32m+[m[32m    "operator-linebreak": ["error", "after"],[m
[32m+[m[32m    "padded-blocks": ["error", "never"],[m
[32m+[m[32m    "quote-props": ["error", "as-needed"],[m
[32m+[m[32m    "quotes": ["error", "single", { "avoidEscape": true, "allowTemplateLiterals": true }],[m
[32m+[m[32m    "semi-spacing": "error",[m
[32m+[m[32m    "semi": "error",[m
[32m+[m[32m    "space-before-blocks": "error",[m
[32m+[m[32m    "space-before-function-paren": ["error", "never"],[m
[32m+[m[32m    "space-in-parens": "error",[m
[32m+[m[32m    "space-infix-ops": "error",[m
[32m+[m[32m    "space-unary-ops": "error",[m
[32m+[m[32m    "spaced-comment": "error",[m
[32m+[m[32m    "template-tag-spacing": "error",[m
[32m+[m[32m    "unicode-bom": "error",[m
[32m+[m
[32m+[m[32m    "arrow-body-style": "error",[m
[32m+[m[32m    "arrow-parens": ["error", "always"],[m
[32m+[m[32m    "arrow-spacing": "error",[m
[32m+[m[32m    "no-duplicate-imports": "error",[m
[32m+[m[32m    "no-useless-computed-key": "error",[m
[32m+[m[32m    "no-useless-constructor": "error",[m
[32m+[m[32m    "prefer-arrow-callback": "error",[m
[32m+[m[32m    "prefer-numeric-literals": "error",[m
[32m+[m[32m    "prefer-rest-params": "error",[m
[32m+[m[32m    "prefer-spread": "error",[m
[32m+[m[32m    "prefer-template": "error",[m
[32m+[m[32m    "rest-spread-spacing": "error",[m
[32m+[m[32m    "template-curly-spacing": "error",[m
[32m+[m[32m    "yield-star-spacing": "error"[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/snekfetch/.github/ISSUE_TEMPLATE.md b/node_modules/snekfetch/.github/ISSUE_TEMPLATE.md[m
[1mnew file mode 100644[m
[1mindex 0000000..2033e79[m
[1m--- /dev/null[m
[1m+++ b/node_modules/snekfetch/.github/ISSUE_TEMPLATE.md[m
[36m@@ -0,0 +1,14 @@[m
[32m+[m[32mSnekfetch version or commit hash:[m
[32m+[m
[32m+[m
[32m+[m[32mExplaination of issue:[m
[32m+[m
[32m+[m
[32m+[m[32mExample code to reproduce:[m
[32m+[m[32m```js[m
[32m+[m[32m// code here[m
[32m+[m[32m```[m
[32m+[m
[32m+[m
[32m+[m[32m- [ ] Issue occurs in browser[m
[32m+[m[32m- [ ] Issue occurs in node[m
[1mdiff --git a/node_modules/snekfetch/.github/PULL_REQUEST_TEMPLATE.md b/node_modules/snekfetch/.github/PULL_REQUEST_TEMPLATE.md[m
[1mnew file mode 100644[m
[1mindex 0000000..ce0c3f6[m
[1m--- /dev/null[m
[1m+++ b/node_modules/snekfetch/.github/PULL_REQUEST_TEMPLATE.md[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32mif your pr is about typescript go away[m
[1mdiff --git a/node_modules/snekfetch/.travis.yml b/node_modules/snekfetch/.travis.yml[m
[1mnew file mode 100644[m
[1mindex 0000000..31e9136[m
[1m--- /dev/null[m
[1m+++ b/node_modules/snekfetch/.travis.yml[m
[36m@@ -0,0 +1,15 @@[m
[32m+[m[32mlanguage: node_js[m
[32m+[m[32mnode_js:[m
[32m+[m[32m  - "8"[m
[32m+[m[32minstall: npm install[m
[32m+[m[32mjobs:[m
[32m+[m[32m  include:[m
[32m+[m[32m    - stage: test[m
[32m+[m[32m      script: bash ./scripts/travis-test.sh[m
[32m+[m[32m    - stage: deploy[m
[32m+[m[32m      script: bash ./scripts/travis-deploy.sh[m
[32m+[m[32mcache:[m
[32m+[m[32m  directories:[m
[32m+[m[32m    - node_modules[m
[32m+[m[32mnotifications:[m
[32m+[m[32m  email: false[m
[1mdiff --git a/node_modules/snekfetch/CODE_OF_CONDUCT.md b/node_modules/snekfetch/CODE_OF_CONDUCT.md[m
[1mnew file mode 100644[m
[1mindex 0000000..6ee186f[m
[1m--- /dev/null[m
[1m+++ b/node_modules/snekfetch/CODE_OF_CONDUCT.md[m
[36m@@ -0,0 +1,46 @@[m
[32m+[m[32m# Contributor Covenant Code of Conduct[m
[32m+[m
[32m+[m[32m## Our Pledge[m
[32m+[m
[32m+[m[32mIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.[m
[32m+[m
[32m+[m[32m## Our Standards[m
[32m+[m
[32m+[m[32mExamples of behavior that contributes to creating a positive environment include:[m
[32m+[m
[32m+[m[32m* Using welcoming and inclusive language[m
[32m+[m[32m* Being respectful of differing viewpoints and experiences[m
[32m+[m[32m* Gracefully accepting constructive criticism[m
[32m+[m[32m* Focusing on what is best for the community[m
[32m+[m[32m* Showing empathy towards other community members[m
[32m+[m
[32m+[m[32mExamples of unacceptable behavior by participants include:[m
[32m+[m
[32m+[m[32m* The use of sexualized language or imagery and unwelcome sexual attention or advances[m
[32m+[m[32m* Trolling, insulting/derogatory comments, and personal or political attacks[m
[32m+[m[32m* Public or private harassment[m
[32m+[m[32m* Publishing others' private information, such as a physical or electronic address, without explicit permission[m
[32m+[m[32m* Other conduct which could reasonably be considered inappropriate in a professional setting[m
[32m+[m
[32m+[m[32m## Our Responsibilities[m
[32m+[m
[32m+[m[32mProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.[m
[32m+[m
[32m+[m[32mProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.[m
[32m+[m
[32m+[m[32m## Scope[m
[32m+[m
[32m+[m[32mThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.[m
[32m+[m
[32m+[m[32m## Enforcement[m
[32m+[m
[32m+[m[32mInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at me@gus.host. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.[m
[32m+[m
[32m+[m[32mProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.[m
[32m+[m
[32m+[m[32m## Attribution[m
[32m+[m
[32m+[m[32mThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version][m
[32m+[m
[32m+[m[32m[homepage]: http://contributor-covenant.org[m
[32m+[m[32m[version]: http://contributor-covenant.org/version/1/4/[m
[1mdiff --git a/node_modules/snekfetch/CONTRIBUTING.md b/node_modules/snekfetch/CONTRIBUTING.md[m
[1mnew file mode 100644[m
[1mindex 0000000..36b463f[m
[1m--- /dev/null[m
[1m+++ b/node_modules/snekfetch/CONTRIBUTING.md[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32mdon't break stuff when you pr[m
[1mdiff --git a/node_modules/snekfetch/LICENSE b/node_modules/snekfetch/LICENSE[m
[1mnew file mode 100644[m
[1mindex 0000000..eac1233[m
[1m--- /dev/null[m
[1m+++ b/node_modules/snekfetch/LICENSE[m
[36m@@ -0,0 +1,21 @@[m
[32m+[m[32mMIT License[m
[32m+[m
[32m+[m[32mCopyright (c) 2017 Gus Caplan[m
[32m+[m
[32m+[m[32mPermission is hereby granted, free of charge, to any person obtaining a copy[m
[32m+[m[32mof this software and associated documentation files (the "Software"), to deal[m
[32m+[m[32min the Software without restriction, including without limitation the rights[m
[32m+[m[32mto use, copy, modify, merge, publish, distribute, sublicense, and/or sell[m
[32m+[m[32mcopies of the Software, and to permit persons to whom the Software is[m
[32m+[m[32mfurnished to do so, subject to the following conditions:[m
[32m+[m
[32m+[m[32mThe above copyright notice and this permission notice shall be included in all[m
[32m+[m[32mcopies or substantial portions of the Software.[m
[32m+[m
[32m+[m[32mTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR[m
[32m+[m[32mIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,[m
[32m+[m[32mFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE[m
[32m+[m[32mAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER[m
[32m+[m[32mLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,[m
[32m+[m[32mOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE[m
[32m+[m[32mSOFTWARE.[m
[1mdiff --git a/node_modules/snekfetch/README.md b/node_modules/snekfetch/README.md[m
[1mnew file mode 100644[m
[1mindex 0000000..def5ede[m
[1m--- /dev/null[m
[1m+++ b/node_modules/snekfetch/README.md[m
[36m@@ -0,0 +1,49 @@[m
[32m+[m[32m[![npm][download-badge]][npm][m
[32m+[m[32m[![David][dep-badge]][dep-link][m
[32m+[m[32m[![Coverage Status][coverage-badge]][coverage-link][m
[32m+[m[32m[![Build Status][build-badge]][build-link][m
[32m+[m
[32m+[m[32m[![NPM][large-badge]][stats-link][m
[32m+[m
[32m+[m[32m# snekfetch <sup>[![Version Badge][version-badge]][npm]</sup>[m
[32m+[m
[32m+[m[32mSnekfetch is a fast, efficient, and user-friendly library for making HTTP requests.[m
[32m+[m
[32m+[m[32mThe API was inspired by superagent, however it is much smaller and faster.[m
[32m+[m[32mIn fact, in browser, it is a mere 4.4kb.[m
[32m+[m
[32m+[m[32mDocumentation is available at https://snekfetch.js.org/[m
[32m+[m
[32m+[m[32m## Some examples[m
[32m+[m
[32m+[m[32m```javascript[m
[32m+[m[32mconst request = require('snekfetch');[m
[32m+[m
[32m+[m[32mrequest.post('https://httpbin.org/post')[m
[32m+[m[32m  .send({ usingGoodRequestLibrary: true })[m
[32m+[m[32m  .then(r => console.log(r.body)); // r.body is object from json response[m
[32m+[m
[32m+[m[32mrequest.get('https://s.gc.gy/o-SNAKES.jpg')[m
[32m+[m[32m  .then(r => fs.writeFile('download.jpg', r.body)); // r.body is buffer[m
[32m+[m
[32m+[m[32mrequest.get('https://s.gc.gy/o-SNAKES.jpg')[m
[32m+[m[32m  .pipe(fs.createWriteStream('download.jpg')); // pipes[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mAvailable for browser as UMD from [unpkg][unpkg-link][m
[32m+[m[32m```html[m
[32m+[m[32m<script src=https://unpkg.com/snekfetch></script>[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m[npm]: https://npmjs.org/package/snekfetch[m
[32m+[m[32m[large-badge]: https://nodei.co/npm/snekfetch.png?downloads=true&downloadRank=true&stars=true[m
[32m+[m[32m[stats-link]: https://nodei.co/npm/snekfetch/[m
[32m+[m[32m[version-badge]: https://versionbadge.now.sh/snekfetch.svg[m
[32m+[m[32m[download-badge]: https://img.shields.io/npm/dt/snekfetch.svg?maxAge=3600[m
[32m+[m[32m[build-badge]: https://api.travis-ci.org/devsnek/snekfetch.svg?branch=master[m
[32m+[m[32m[build-link]: https://travis-ci.org/devsnek/snekfetch[m
[32m+[m[32m[dep-badge]: https://david-dm.org/devsnek/snekfetch.svg[m
[32m+[m[32m[dep-link]: https://david-dm.org/devsnek/snekfetch[m
[32m+[m[32m[coverage-badge]: https://coveralls.io/repos/github/devsnek/snekfetch/badge.svg?branch=master[m
[32m+[m[32m[coverage-link]: https://coveralls.io/github/devsnek/snekfetch?branch=master[m
[32m+[m[32m[unpkg-link]: https://unpkg.com/[m
[1mdiff --git a/node_modules/snekfetch/browser.js b/node_modules/snekfetch/browser.js[m
[1mnew file mode 100644[m
[1mindex 0000000..0db0aa6[m
[1m--- /dev/null[m
[1m+++ b/node_modules/snekfetch/browser.js[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32m!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.Snekfetch=e():t.Snekfetch=e()}("undefined"!=typeof self?self:this,function(){return function(t){var e={};function s(n){if(e[n])return e[n].exports;var r=e[n]={i:n,l:!1,exports:{}};return t[n].call(r.exports,r,r.exports,s),r.l=!0,r.exports}return s.m=t,s.c=e,s.d=function(t,e,n){s.o(t,e)||Object.defineProperty(t,e,{configurable:!1,enumerable:!0,get:n})},s.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return s.d(e,"a",e),e},s.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},s.p="",s(s.s=0)}([function(t,e,s){t.exports=s(1)},function(t,e,s){const n="undefined"!=typeof window,r=s(2),o=s(n?3:4);class i extends o.Extension{constructor(t,e,s={}){super(),this.options=Object.assign({version:1,qs:r,followRedirects:!0},s),this.request=o.buildRequest.call(this,t,e,s),s.headers&&this.set(s.headers),s.query&&this.query(s.query),s.data&&this.send(s.data)}query(t,e){if(this.request.query||(this.request.query={}),null!==t&&"object"==typeof t)for(const[e,s]of Object.entries(t))this.query(e,s);else this.request.query[t]=e;return this}set(t,e){if(null!==t&&"object"==typeof t)for(const e of Object.keys(t))this.set(e,t[e]);else this.request.setHeader(t,e);return this}attach(...t){const e=this.data instanceof o.FormData?this.data:this.data=new o.FormData;if("object"==typeof t[0])for(const[e,s]of Object.entries(t[0]))this.attach(e,s);else e.append(...t);return this}send(t){if(t instanceof o.FormData||o.shouldSendRaw(t))this.data=t;else if(null!==t&&"object"==typeof t){const e=this.request.getHeader("content-type");let s;e?e.includes("json")?s=JSON.stringify:e.includes("urlencoded")&&(s=this.options.qs.stringify):(this.set("Content-Type","application/json"),s=JSON.stringify),this.data=s(t)}else this.data=t;return this}then(t,e){return this._response?this._response.then(t,e):this._response=o.finalizeRequest.call(this).then(({response:t,raw:e,redirect:s,headers:n})=>{if(s){let e=this.request.method;[301,302].includes(t.statusCode)?("HEAD"!==e&&(e="GET"),this.data=null):303===t.statusCode&&(e="GET");const n=this.request.getHeaders();return delete n.host,new i(e,s,{data:this.data,headers:n,version:this.options.version})}const r=t.statusCode||t.status,a=this,u={request:this.request,get body(){delete u.body;const t=this.headers["content-type"];if(t&&t.includes("application/json"))try{u.body=JSON.parse(u.text)}catch(t){u.body=u.text}else t&&t.includes("application/x-www-form-urlencoded")?u.body=a.options.qs.parse(u.text):u.body=e;return u.body},text:e.toString(),ok:r>=200&&r<400,headers:n||t.headers,status:r,statusText:t.statusText||o.STATUS_CODES[t.statusCode]};if(u.ok)return u;{const t=new Error(`${u.status} ${u.statusText}`.trim());return Object.assign(t,u),Promise.reject(t)}}).then(t,e)}catch(t){return this.then(null,t)}end(t){return this.then(e=>t?t(null,e):e,e=>t?t(e,e.status?e:null):Promise.reject(e))}_finalizeRequest(){if(this.request&&("HEAD"!==this.request.method&&this.set("Accept-Encoding","gzip, deflate"),this.data&&this.data.getBoundary&&this.set("Content-Type",`multipart/form-data; boundary=${this.data.getBoundary()}`),this.request.query)){const[t,e]=this.request.path.split("?");this.request.path=`${t}?${this.options.qs.stringify(this.request.query)}${e?`&${e}`:""}`}}}i.METHODS=o.METHODS.concat("BREW").filter(t=>"M-SEARCH"!==t);for(const t of i.METHODS)i[t.toLowerCase()]=function(e,s){return new(this.prototype instanceof i?this:i)(t,e,s)};t.exports=i},function(t,e){({parse:t=>{const e={};for(const[s,n]of new Window.URLSearchParams(t).entries())e[s]=n;return e},stringify:t=>new window.URLSearchParams(t).toString()})},function(t,e){t.exports={buildRequest:function(t,e){return{method:t,path:e,redirect:this.options.followRedirects?"follow":"manual",headers:{},setHeader(t,e){this.headers[t.toLowerCase()]=e},getHeader(t){return this.headers[t.toLowerCase()]}}},finalizeRequest:function(){return this._finalizeRequest(),this.data&&(this.request.body=this.data),window.fetch(this.request.path,this.request).then(t=>t.text().then(e=>{const s={};for(const[e,n]of t.headers.entries())s[e.toLowerCase()]=n;return{response:t,raw:e,headers:s}}))},shouldSendRaw:()=>!1,METHODS:["GET","HEAD","POST","PUT","DELETE","CONNECT","OPTIONS","PATCH"],STATUS_CODES:{},Extension:Object,FormData:window.FormData}},function(t,e){}])});[m
\ No newline at end of file[m
[1mdiff --git a/node_modules/snekfetch/docs.js b/node_modules/snekfetch/docs.js[m
[1mnew file mode 100644[m
[1mindex 0000000..06b2876[m
[1m--- /dev/null[m
[1m+++ b/node_modules/snekfetch/docs.js[m
[36m@@ -0,0 +1,55 @@[m
[32m+[m[32mconst Docma = require('docma');[m
[32m+[m[32mconst Package = require('./package');[m
[32m+[m
[32m+[m[32mDocma.create()[m
[32m+[m[32m  .build({[m
[32m+[m[32m    app: {[m
[32m+[m[32m      title: Package.name,[m
[32m+[m[32m      base: '/',[m
[32m+[m[32m      entrance: 'content:readme',[m
[32m+[m[32m      routing: 'query',[m
[32m+[m[32m      server: Docma.ServerType.GITHUB,[m
[32m+[m[32m    },[m
[32m+[m[32m    markdown: {[m
[32m+[m[32m      gfm: true,[m
[32m+[m[32m      tables: true,[m
[32m+[m[32m      breaks: false,[m
[32m+[m[32m      pedantic: false,[m
[32m+[m[32m      sanitize: false,[m
[32m+[m[32m      smartLists: false,[m
[32m+[m[32m      smartypants: false,[m
[32m+[m[32m      tasks: false,[m
[32m+[m[32m      emoji: true,[m
[32m+[m[32m    },[m
[32m+[m[32m    src: [[m
[32m+[m[32m      { readme: './README.md' },[m
[32m+[m[32m      { snekfetch: './src/index.js' },[m
[32m+[m[32m    ],[m
[32m+[m[32m    dest: './docs',[m
[32m+[m[32m    jsdoc: {[m
[32m+[m[32m      plugins: ['jsdoc-dynamic'],[m
[32m+[m[32m    },[m
[32m+[m[32m    template: {[m
[32m+[m[32m      options: {[m
[32m+[m[32m        title: Package.name,[m
[32m+[m[32m        navItems: [[m
[32m+[m[32m          {[m
[32m+[m[32m            label: 'Readme',[m
[32m+[m[32m            href: '?content=readme',[m
[32m+[m[32m          },[m
[32m+[m[32m          {[m
[32m+[m[32m            label: 'Documentation',[m
[32m+[m[32m            href: '?api=snekfetch',[m
[32m+[m[32m            iconClass: 'ico-book',[m
[32m+[m[32m          },[m
[32m+[m[32m          {[m
[32m+[m[32m            label: 'GitHub',[m
[32m+[m[32m            href: Package.homepage,[m
[32m+[m[32m            target: '_blank',[m
[32m+[m[32m            iconClass: 'ico-md ico-github',[m
[32m+[m[32m          },[m
[32m+[m[32m        ],[m
[32m+[m[32m      },[m
[32m+[m[32m    },[m
[32m+[m[32m  })[m
[32m+[m[32m  .catch(console.error); // eslint-disable-line no-console[m
[1mdiff --git a/node_modules/snekfetch/esm.mjs b/node_modules/snekfetch/esm.mjs[m
[1mnew file mode 100644[m
[1mindex 0000000..8ec07a6[m
[1m--- /dev/null[m
[1m+++ b/node_modules/snekfetch/esm.mjs[m
[36m@@ -0,0 +1,41 @@[m
[32m+[m[32mimport Snekfetch from './index.js';[m
[32m+[m
[32m+[m[32mexport default Snekfetch;[m
[32m+[m
[32m+[m[32mexport const version = Snekfetch.version;[m
[32m+[m[32mexport const METHODS = Snekfetch.METHODS;[m
[32m+[m
[32m+[m[32mexport const acl = Snekfetch.acl;[m
[32m+[m[32mexport const bind = Snekfetch.bind;[m
[32m+[m[32mexport const checkout = Snekfetch.checkout;[m
[32m+[m[32mexport const connect = Snekfetch.connect;[m
[32m+[m[32mexport const copy = Snekfetch.copy;[m
[32m+[m[32mconst _delete = Snekfetch.delete;[m
[32m+[m[32mexport { _delete as delete };[m
[32m+[m[32mexport const get = Snekfetch.get;[m
[32m+[m[32mexport const head = Snekfetch.head;[m
[32m+[m[32mexport const link = Snekfetch.link;[m
[32m+[m[32mexport const lock = Snekfetch.lock;[m
[32m+[m[32mexport const merge = Snekfetch.merge;[m
[32m+[m[32mexport const mkactivity = Snekfetch.mkactivity;[m
[32m+[m[32mexport const mkcalendar = Snekfetch.mkcalendar;[m
[32m+[m[32mexport const mkcol = Snekfetch.mkcol;[m
[32m+[m[32mexport const move = Snekfetch.move;[m
[32m+[m[32mexport const notify = Snekfetch.notify;[m
[32m+[m[32mexport const options = Snekfetch.options;[m
[32m+[m[32mexport const patch = Snekfetch.patch;[m
[32m+[m[32mexport const post = Snekfetch.post;[m
[32m+[m[32mexport const propfind = Snekfetch.propfind;[m
[32m+[m[32mexport const proppatch = Snekfetch.proppatch;[m
[32m+[m[32mexport const purge = Snekfetch.purge;[m
[32m+[m[32mexport const put = Snekfetch.put;[m
[32m+[m[32mexport const rebind = Snekfetch.rebind;[m
[32m+[m[32mexport const report = Snekfetch.report;[m
[32m+[m[32mexport const search = Snekfetch.search;[m
[32m+[m[32mexport const subscribe = Snekfetch.subscribe;[m
[32m+[m[32mexport const trace = Snekfetch.trace;[m
[32m+[m[32mexport const unbind = Snekfetch.unbind;[m
[32m+[m[32mexport const unlink = Snekfetch.unlink;[m
[32m+[m[32mexport const unlock = Snekfetch.unlock;[m
[32m+[m[32mexport const unsubscribe = Snekfetch.unsubscribe;[m
[32m+[m[32mexport const brew = Snekfetch.brew;[m
[1mdiff --git a/node_modules/snekfetch/index.js b/node_modules/snekfetch/index.js[m
[1mnew file mode 100644[m
[1mindex 0000000..3fc7798[m
[1m--- /dev/null[m
[1m+++ b/node_modules/snekfetch/index.js[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32mmodule.exports = require('./src');[m
[1mdiff --git a/node_modules/snekfetch/package.json b/node_modules/snekfetch/package.json[m
[1mnew file mode 100644[m
[1mindex 0000000..071a1a7[m
[1m--- /dev/null[m
[1m+++ b/node_modules/snekfetch/package.json[m
[36m@@ -0,0 +1,82 @@[m
[32m+[m[32m{[m
[32m+[m[32m  "_from": "snekfetch@^3.6.4",[m
[32m+[m[32m  "_id": "snekfetch@3.6.4",[m
[32m+[m[32m  "_inBundle": false,[m
[32m+[m[32m  "_integrity": "sha512-NjxjITIj04Ffqid5lqr7XdgwM7X61c/Dns073Ly170bPQHLm6jkmelye/eglS++1nfTWktpP6Y2bFXjdPlQqdw==",[m
[32m+[m[32m  "_location": "/snekfetch",[m
[32m+[m[32m  "_phantomChildren": {},[m
[32m+[m[32m  "_requested": {[m
[32m+[m[32m    "type": "range",[m
[32m+[m[32m    "registry": true,[m
[32m+[m[32m    "raw": "snekfetch@^3.6.4",[m
[32m+[m[32m    "name": "snekfetch",[m
[32m+[m[32m    "escapedName": "snekfetch",[m
[32m+[m[32m    "rawSpec": "^3.6.4",[m
[32m+[m[32m    "saveSpec": null,[m
[32m+[m[32m    "fetchSpec": "^3.6.4"[m
[32m+[m[32m  },[m
[32m+[m[32m  "_requiredBy": [[m
[32m+[m[32m    "/discord.js"[m
[32m+[m[32m  ],[m
[32m+[m[32m  "_resolved": "https://registry.npmjs.org/snekfetch/-/snekfetch-3.6.4.tgz",[m
[32m+[m[32m  "_shasum": "d13e80a616d892f3d38daae4289f4d258a645120",[m
[32m+[m[32m  "_spec": "snekfetch@^3.6.4",[m
[32m+[m[32m  "_where": "C:\\Users\\jojo2\\Documents\\Discord Bots\\Discord-Basic-Bot\\node_modules\\discord.js",[m
[32m+[m[32m  "author": {[m
[32m+[m[32m    "name": "Gus Caplan",[m
[32m+[m[32m    "email": "me@gus.host"[m
[32m+[m[32m  },[m
[32m+[m[32m  "browser": {[m
[32m+[m[32m    "./src/node/index.js": false,[m
[32m+[m[32m    "./src/meta.js": false[m
[32m+[m[32m  },[m
[32m+[m[32m  "bugs": {[m
[32m+[m[32m    "url": "https://github.com/devsnek/snekfetch/issues"[m
[32m+[m[32m  },[m
[32m+[m[32m  "bundleDependencies": false,[m
[32m+[m[32m  "dependencies": {},[m
[32m+[m[32m  "deprecated": "use node-fetch instead",[m
[32m+[m[32m  "description": "Just do http requests without all that weird nastiness from other libs",[m
[32m+[m[32m  "devDependencies": {[m
[32m+[m[32m    "@snek/syncify": "0.0.6",[m
[32m+[m[32m    "coveralls": "^3.0.0",[m
[32m+[m[32m    "docma": "^1.5.1",[m
[32m+[m[32m    "eslint": "^4.8.0",[m
[32m+[m[32m    "jest": "^21.2.1",[m
[32m+[m[32m    "jsdoc-dynamic": "^1.0.4",[m
[32m+[m[32m    "json-filter-loader": "^1.0.0",[m
[32m+[m[32m    "node-fetch": "github:bitinn/node-fetch",[m
[32m+[m[32m    "uglifyjs-webpack-plugin": "^1.0.0-beta.2",[m
[32m+[m[32m    "webpack": "^3.8.1"[m
[32m+[m[32m  },[m
[32m+[m[32m  "homepage": "https://snekfetch.js.org/",[m
[32m+[m[32m  "jest": {[m
[32m+[m[32m    "collectCoverage": true,[m
[32m+[m[32m    "collectCoverageFrom": [[m
[32m+[m[32m      "src/**/*.js",[m
[32m+[m[32m      "!src/qs_mock.js",[m
[32m+[m[32m      "!src/node/mimeOfBuffer.js",[m
[32m+[m[32m      "!src/node/transports/http2.js"[m
[32m+[m[32m    ],[m
[32m+[m[32m    "verbose": true[m
[32m+[m[32m  },[m
[32m+[m[32m  "jsdelivr": "browser.js",[m
[32m+[m[32m  "license": "MIT",[m
[32m+[m[32m  "main": "index.js",[m
[32m+[m[32m  "module": "esm.mjs",[m
[32m+[m[32m  "name": "snekfetch",[m
[32m+[m[32m  "repository": {[m
[32m+[m[32m    "type": "git",[m
[32m+[m[32m    "url": "git+https://github.com/devsnek/snekfetch.git"[m
[32m+[m[32m  },[m
[32m+[m[32m  "scripts": {[m
[32m+[m[32m    "build:browser": "webpack",[m
[32m+[m[32m    "docs": "node docs.js",[m
[32m+[m[32m    "lint": "eslint **/*.js",[m
[32m+[m[32m    "prepublishOnly": "npm run build:browser",[m
[32m+[m[32m    "test": "node ./node_modules/.bin/jest",[m
[32m+[m[32m    "test:coveralls": "cat ./coverage/lcov.info | coveralls"[m
[32m+[m[32m  },[m
[32m+[m[32m  "unpkg": "browser.js",[m
[32m+[m[32m  "version": "3.6.4"[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/snekfetch/scripts/travis-deploy.sh b/node_modules/snekfetch/scripts/travis-deploy.sh[m
[1mnew file mode 100644[m
[1mindex 0000000..5af87dc[m
[1m--- /dev/null[m
[1m+++ b/node_modules/snekfetch/scripts/travis-deploy.sh[m
[36m@@ -0,0 +1,29 @@[m
[32m+[m[32m#!/bin/bash[m
[32m+[m[32m# Based on https://github.com/hydrabolt/discord.js-site/blob/master/deploy/deploy.sh[m
[32m+[m
[32m+[m[32mset -e[m
[32m+[m
[32m+[m[32mif [ "$TRAVIS_BRANCH" != "master" -o -n "$TRAVIS_TAG" -o "$TRAVIS_PULL_REQUEST" != "false" ]; then[m
[32m+[m[32m  echo -e "Not building for a non master branch push - building without deploying."[m
[32m+[m[32m  npm run docs[m
[32m+[m[32m  exit 0[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32mecho -e "Building for a master branch push - building and deploying."[m
[32m+[m
[32m+[m[32mREPO=$(git config remote.origin.url)[m
[32m+[m[32mSHA=$(git rev-parse --verify HEAD)[m
[32m+[m
[32m+[m[32mTARGET_BRANCH="gh-pages"[m
[32m+[m[32mgit clone $REPO dist -b $TARGET_BRANCH[m
[32m+[m
[32m+[m[32mnpm run docs[m
[32m+[m
[32m+[m[32mrsync -vau docs/ dist/[m
[32m+[m
[32m+[m[32mcd dist[m
[32m+[m[32mgit add --all .[m
[32m+[m[32mgit config user.name "Travis CI"[m
[32m+[m[32mgit config user.email "${COMMIT_EMAIL}"[m
[32m+[m[32mgit commit -m "Docs build: ${SHA}" || true[m
[32m+[m[32mgit push "https://${GH_TOKEN}@${GH_REF}" $TARGET_BRANCH[m
[1mdiff --git a/node_modules/snekfetch/scripts/travis-test.sh b/node_modules/snekfetch/scripts/travis-test.sh[m
[1mnew file mode 100644[m
[1mindex 0000000..aa4e37d[m
[1m--- /dev/null[m
[1m+++ b/node_modules/snekfetch/scripts/travis-test.sh[m
[36m@@ -0,0 +1,14 @@[m
[32m+[m[32mset -e[m
[32m+[m
[32m+[m[32mnpm run lint[m
[32m+[m
[32m+[m[32mnpm run test[m
[32m+[m
[32m+[m[32mif [ "$TRAVIS_BRANCH" != "master" -o -n "$TRAVIS_TAG" -o "$TRAVIS_PULL_REQUEST" != "false" ]; then[m
[32m+[m[32m  echo -e "Not sending coverage for a non master branch push - covering without sending."[m
[32m+[m[32m  exit 0[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32mecho -e "Generating Coverage for a master branch push - covering and sending."[m
[32m+[m
[32m+[m[32mnpm run test:coveralls[m
[1mdiff --git a/node_modules/snekfetch/src/browser.js b/node_modules/snekfetch/src/browser.js[m
[1mnew file mode 100644[m
[1mindex 0000000..8820892[m
[1m--- /dev/null[m
[1m+++ b/node_modules/snekfetch/src/browser.js[m
[36m@@ -0,0 +1,36 @@[m
[32m+[m[32mfunction buildRequest(method, url) {[m
[32m+[m[32m  return {[m
[32m+[m[32m    method,[m
[32m+[m[32m    path: url,[m
[32m+[m[32m    redirect: this.options.followRedirects ? 'follow' : 'manual',[m
[32m+[m[32m    headers: {},[m
[32m+[m[32m    setHeader(name, value) {[m
[32m+[m[32m      this.headers[name.toLowerCase()] = value;[m
[32m+[m[32m    },[m
[32m+[m[32m    getHeader(name) {[m
[32m+[m[32m      return this.headers[name.toLowerCase()];[m
[32m+[m[32m    },[m
[32m+[m[32m  };[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction finalizeRequest() {[m
[32m+[m[32m  this._finalizeRequest();[m
[32m+[m[32m  if (this.data)[m
[32m+[m[32m    this.request.body = this.data;[m
[32m+[m[32m  return window.fetch(this.request.path, this.request)[m
[32m+[m[32m    .then((r) => r.text().then((t) => {[m
[32m+[m[32m      const headers = {};[m
[32m+[m[32m      for (const [k, v] of r.headers.entries())[m
[32m+[m[32m        headers[k.toLowerCase()] = v;[m
[32m+[m[32m      return { response: r, raw: t, headers };[m
[32m+[m[32m    }));[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = {[m
[32m+[m[32m  buildRequest, finalizeRequest,[m
[32m+[m[32m  shouldSendRaw: () => false,[m
[32m+[m[32m  METHODS: ['GET', 'HEAD', 'POST', 'PUT', 'DELETE', 'CONNECT', 'OPTIONS', 'PATCH'],[m
[32m+[m[32m  STATUS_CODES: {},[m
[32m+[m[32m  Extension: Object,[m
[32m+[m[32m  FormData: window.FormData,[m
[32m+[m[32m};[m
[1mdiff --git a/node_modules/snekfetch/src/index.js b/node_modules/snekfetch/src/index.js[m
[1mnew file mode 100644[m
[1mindex 0000000..5ffd6df[m
[1m--- /dev/null[m
[1m+++ b/node_modules/snekfetch/src/index.js[m
[36m@@ -0,0 +1,256 @@[m
[32m+[m[32mconst browser = typeof window !== 'undefined';[m
[32m+[m[32mconst querystring = require('querystring');[m
[32m+[m[32mconst transport = browser ? require('./browser') : require('./node');[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Snekfetch[m
[32m+[m[32m * @extends Stream.Readable[m
[32m+[m[32m * @extends Promise[m
[32m+[m[32m */[m
[32m+[m[32mclass Snekfetch extends transport.Extension {[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Options to pass to the Snekfetch constructor[m
[32m+[m[32m   * @typedef {object} SnekfetchOptions[m
[32m+[m[32m   * @memberof Snekfetch[m
[32m+[m[32m   * @property {object} [headers] Headers to initialize the request with[m
[32m+[m[32m   * @property {object|string|Buffer} [data] Data to initialize the request with[m
[32m+[m[32m   * @property {string|Object} [query] Query to intialize the request with[m
[32m+[m[32m   * @property {boolean} [followRedirects=true] If the request should follow redirects[m
[32m+[m[32m   * @property {object} [qs=querystring] Querystring module to use, any object providing[m
[32m+[m[32m   * `stringify` and `parse` for querystrings[m
[32m+[m[32m   * @property {number} [version = 1] The http version to use [1 or 2][m
[32m+[m[32m   * @property {external:Agent} [agent] Whether to use an http agent[m
[32m+[m[32m   */[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Create a request.[m
[32m+[m[32m   * Usually you'll want to do `Snekfetch#method(url [, options])` instead of[m
[32m+[m[32m   * `new Snekfetch(method, url [, options])`[m
[32m+[m[32m   * @param {string} method HTTP method[m
[32m+[m[32m   * @param {string} url URL[m
[32m+[m[32m   * @param {SnekfetchOptions} [opts] Options[m
[32m+[m[32m   */[m
[32m+[m[32m  constructor(method, url, opts = {}) {[m
[32m+[m[32m    super();[m
[32m+[m[32m    this.options = Object.assign({ version: 1, qs: querystring, followRedirects: true }, opts);[m
[32m+[m[32m    this.request = transport.buildRequest.call(this, method, url, opts);[m
[32m+[m[32m    if (opts.headers)[m
[32m+[m[32m      this.set(opts.headers);[m
[32m+[m[32m    if (opts.query)[m
[32m+[m[32m      this.query(opts.query);[m
[32m+[m[32m    if (opts.data)[m
[32m+[m[32m      this.send(opts.data);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Add a query param to the request[m
[32m+[m[32m   * @param {string|Object} name Name of query param or object to add to query[m
[32m+[m[32m   * @param {string} [value] If name is a string value, this will be the value of the query param[m
[32m+[m[32m   * @returns {Snekfetch} This request[m
[32m+[m[32m   */[m
[32m+[m[32m  query(name, value) {[m
[32m+[m[32m    if (!this.request.query)[m
[32m+[m[32m      this.request.query = {};[m
[32m+[m[32m    if (name !== null && typeof name === 'object') {[m
[32m+[m[32m      for (const [k, v] of Object.entries(name))[m
[32m+[m[32m        this.query(k, v);[m
[32m+[m[32m    } else {[m
[32m+[m[32m      this.request.query[name] = value;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return this;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Add a header to the request[m
[32m+[m[32m   * @param {string|Object} name Name of query param or object to add to headers[m
[32m+[m[32m   * @param {string} [value] If name is a string value, this will be the value of the header[m
[32m+[m[32m   * @returns {Snekfetch} This request[m
[32m+[m[32m   */[m
[32m+[m[32m  set(name, value) {[m
[32m+[m[32m    if (name !== null && typeof name === 'object') {[m
[32m+[m[32m      for (const key of Object.keys(name))[m
[32m+[m[32m        this.set(key, name[key]);[m
[32m+[m[32m    } else {[m
[32m+[m[32m      this.request.setHeader(name, value);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return this;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Attach a form data object[m
[32m+[m[32m   * @param {string} name Name of the form attachment[m
[32m+[m[32m   * @param {string|Object|Buffer} data Data for the attachment[m
[32m+[m[32m   * @param {string} [filename] Optional filename if form attachment name needs to be overridden[m
[32m+[m[32m   * @returns {Snekfetch} This request[m
[32m+[m[32m   */[m
[32m+[m[32m  attach(...args) {[m
[32m+[m[32m    const form = this.data instanceof transport.FormData ? this.data : this.data = new transport.FormData();[m
[32m+[m[32m    if (typeof args[0] === 'object') {[m
[32m+[m[32m      for (const [k, v] of Object.entries(args[0]))[m
[32m+[m[32m        this.attach(k, v);[m
[32m+[m[32m    } else {[m
[32m+[m[32m      form.append(...args);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return this;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Send data with the request[m
[32m+[m[32m   * @param {string|Buffer|Object} data Data to send[m
[32m+[m[32m   * @returns {Snekfetch} This request[m
[32m+[m[32m   */[m
[32m+[m[32m  send(data) {[m
[32m+[m[32m    if (data instanceof transport.FormData || transport.shouldSendRaw(data)) {[m
[32m+[m[32m      this.data = data;[m
[32m+[m[32m    } else if (data !== null && typeof data === 'object') {[m
[32m+[m[32m      const header = this.request.getHeader('content-type');[m
[32m+[m[32m      let serialize;[m
[32m+[m[32m      if (header) {[m
[32m+[m[32m        if (header.includes('json'))[m
[32m+[m[32m          serialize = JSON.stringify;[m
[32m+[m[32m        else if (header.includes('urlencoded'))[m
[32m+[m[32m          serialize = this.options.qs.stringify;[m
[32m+[m[32m      } else {[m
[32m+[m[32m        this.set('Content-Type', 'application/json');[m
[32m+[m[32m        serialize = JSON.stringify;[m
[32m+[m[32m      }[m
[32m+[m[32m      this.data = serialize(data);[m
[32m+[m[32m    } else {[m
[32m+[m[32m      this.data = data;[m
[32m+[m[32m    }[m
[32m+[m[32m    return this;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  then(resolver, rejector) {[m
[32m+[m[32m    if (this._response)[m
[32m+[m[32m      return this._response.then(resolver, rejector);[m
[32m+[m[32m    // eslint-disable-next-line no-return-assign[m
[32m+[m[32m    return this._response = transport.finalizeRequest.call(this)[m
[32m+[m[32m      .then(({ response, raw, redirect, headers }) => {[m
[32m+[m[32m        if (redirect) {[m
[32m+[m[32m          let method = this.request.method;[m
[32m+[m[32m          if ([301, 302].includes(response.statusCode)) {[m
[32m+[m[32m            if (method !== 'HEAD')[m
[32m+[m[32m              method = 'GET';[m
[32m+[m[32m            this.data = null;[m
[32m+[m[32m          } else if (response.statusCode === 303) {[m
[32m+[m[32m            method = 'GET';[m
[32m+[m[32m          }[m
[32m+[m
[32m+[m[32m          const redirectHeaders = this.request.getHeaders();[m
[32m+[m[32m          delete redirectHeaders.host;[m
[32m+[m[32m          return new Snekfetch(method, redirect, {[m
[32m+[m[32m            data: this.data,[m
[32m+[m[32m            headers: redirectHeaders,[m
[32m+[m[32m            version: this.options.version,[m
[32m+[m[32m          });[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        const statusCode = response.statusCode || response.status;[m
[32m+[m[32m        // forgive me :([m
[32m+[m[32m        const self = this; // eslint-disable-line consistent-this[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Response from Snekfetch[m
[32m+[m[32m         * @typedef {Object} SnekfetchResponse[m
[32m+[m[32m         * @memberof Snekfetch[m
[32m+[m[32m         * @prop {HTTP.Request} request[m
[32m+[m[32m         * @prop {?string|object|Buffer} body Processed response body[m
[32m+[m[32m         * @prop {string} text Raw response body[m
[32m+[m[32m         * @prop {boolean} ok If the response code is >= 200 and < 300[m
[32m+[m[32m         * @prop {number} status HTTP status code[m
[32m+[m[32m         * @prop {string} statusText Human readable HTTP status[m
[32m+[m[32m         */[m
[32m+[m[32m        const res = {[m
[32m+[m[32m          request: this.request,[m
[32m+[m[32m          get body() {[m
[32m+[m[32m            delete res.body;[m
[32m+[m[32m            const type = this.headers['content-type'];[m
[32m+[m[32m            if (type && type.includes('application/json')) {[m
[32m+[m[32m              try {[m
[32m+[m[32m                res.body = JSON.parse(res.text);[m
[32m+[m[32m              } catch (err) {[m
[32m+[m[32m                res.body = res.text;[m
[32m+[m[32m              }[m
[32m+[m[32m            } else if (type && type.includes('application/x-www-form-urlencoded')) {[m
[32m+[m[32m              res.body = self.options.qs.parse(res.text);[m
[32m+[m[32m            } else {[m
[32m+[m[32m              res.body = raw;[m
[32m+[m[32m            }[m
[32m+[m
[32m+[m[32m            return res.body;[m
[32m+[m[32m          },[m
[32m+[m[32m          text: raw.toString(),[m
[32m+[m[32m          ok: statusCode >= 200 && statusCode < 400,[m
[32m+[m[32m          headers: headers || response.headers,[m
[32m+[m[32m          status: statusCode,[m
[32m+[m[32m          statusText: response.statusText || transport.STATUS_CODES[response.statusCode],[m
[32m+[m[32m        };[m
[32m+[m
[32m+[m[32m        if (res.ok) {[m
[32m+[m[32m          return res;[m
[32m+[m[32m        } else {[m
[32m+[m[32m          const err = new Error(`${res.status} ${res.statusText}`.trim());[m
[32m+[m[32m          Object.assign(err, res);[m
[32m+[m[32m          return Promise.reject(err);[m
[32m+[m[32m        }[m
[32m+[m[32m      })[m
[32m+[m[32m      .then(resolver, rejector);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  catch(rejector) {[m
[32m+[m[32m    return this.then(null, rejector);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * End the request[m
[32m+[m[32m   * @param {Function} [cb] Optional callback to handle the response[m
[32m+[m[32m   * @returns {Promise} This request[m
[32m+[m[32m   */[m
[32m+[m[32m  end(cb) {[m
[32m+[m[32m    return this.then([m
[32m+[m[32m      (res) => cb ? cb(null, res) : res,[m
[32m+[m[32m      (err) => cb ? cb(err, err.status ? err : null) : Promise.reject(err)[m
[32m+[m[32m    );[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  _finalizeRequest() {[m
[32m+[m[32m    if (!this.request)[m
[32m+[m[32m      return;[m
[32m+[m
[32m+[m[32m    if (this.request.method !== 'HEAD')[m
[32m+[m[32m      this.set('Accept-Encoding', 'gzip, deflate');[m
[32m+[m[32m    if (this.data && this.data.getBoundary)[m
[32m+[m[32m      this.set('Content-Type', `multipart/form-data; boundary=${this.data.getBoundary()}`);[m
[32m+[m
[32m+[m[32m    if (this.request.query) {[m
[32m+[m[32m      const [path, query] = this.request.path.split('?');[m
[32m+[m[32m      this.request.path = `${path}?${this.options.qs.stringify(this.request.query)}${query ? `&${query}` : ''}`;[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Create a ((THIS)) request[m
[32m+[m[32m * @dynamic this.METHODS[m
[32m+[m[32m * @method Snekfetch.((THIS)lowerCase)[m
[32m+[m[32m * @param {string} url The url to request[m
[32m+[m[32m * @param {Snekfetch.snekfetchOptions} [opts] Options[m
[32m+[m[32m * @returns {Snekfetch}[m
[32m+[m[32m */[m
[32m+[m[32mSnekfetch.METHODS = transport.METHODS.concat('BREW').filter((m) => m !== 'M-SEARCH');[m
[32m+[m[32mfor (const method of Snekfetch.METHODS) {[m
[32m+[m[32m  Snekfetch[method.toLowerCase()] = function runMethod(url, opts) {[m
[32m+[m[32m    const Constructor = this.prototype instanceof Snekfetch ? this : Snekfetch;[m
[32m+[m[32m    return new Constructor(method, url, opts);[m
[32m+[m[32m  };[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = Snekfetch;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * @external Agent[m
[32m+[m[32m * @see {@link https://nodejs.org/api/http.html#http_class_http_agent}[m
[32m+[m[32m */[m
[1mdiff --git a/node_modules/snekfetch/src/node/FormData.js b/node_modules/snekfetch/src/node/FormData.js[m
[1mnew file mode 100644[m
[1mindex 0000000..f8270e2[m
[1m--- /dev/null[m
[1m+++ b/node_modules/snekfetch/src/node/FormData.js[m
[36m@@ -0,0 +1,51 @@[m
[32m+[m[32mconst path = require('path');[m
[32m+[m[32mconst mime = require('./mime');[m
[32m+[m
[32m+[m[32mclass FormData {[m
[32m+[m[32m  constructor() {[m
[32m+[m[32m    this.boundary = `--snekfetch--${Math.random().toString().slice(2, 7)}`;[m
[32m+[m[32m    this.buffers = [];[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  append(name, data, filename) {[m
[32m+[m[32m    if (typeof data === 'undefined')[m
[32m+[m[32m      return;[m
[32m+[m[32m    let str = `\r\n--${this.boundary}\r\nContent-Disposition: form-data; name="${name}"`;[m
[32m+[m[32m    let mimetype = null;[m
[32m+[m[32m    if (filename) {[m
[32m+[m[32m      str += `; filename="${filename}"`;[m
[32m+[m[32m      mimetype = 'application/octet-stream';[m
[32m+[m[32m      const extname = path.extname(filename).slice(1);[m
[32m+[m[32m      if (extname)[m
[32m+[m[32m        mimetype = mime.lookup(extname);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (data instanceof Buffer) {[m
[32m+[m[32m      mimetype = mime.buffer(data);[m
[32m+[m[32m    } else if (typeof data === 'object') {[m
[32m+[m[32m      mimetype = 'application/json';[m
[32m+[m[32m      data = Buffer.from(JSON.stringify(data));[m
[32m+[m[32m    } else {[m
[32m+[m[32m      data = Buffer.from(String(data));[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (mimetype)[m
[32m+[m[32m      str += `\r\nContent-Type: ${mimetype}`;[m
[32m+[m[32m    this.buffers.push(Buffer.from(`${str}\r\n\r\n`));[m
[32m+[m[32m    this.buffers.push(data);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  getBoundary() {[m
[32m+[m[32m    return this.boundary;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  end() {[m
[32m+[m[32m    return Buffer.concat([...this.buffers, Buffer.from(`\r\n--${this.boundary}--`)]);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  get length() {[m
[32m+[m[32m    return this.buffers.reduce((sum, b) => sum + Buffer.byteLength(b), 0);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = FormData;[m
[1mdiff --git a/node_modules/snekfetch/src/node/index.js b/node_modules/snekfetch/src/node/index.js[m
[1mnew file mode 100644[m
[1mindex 0000000..ae9cbc0[m
[1m--- /dev/null[m
[1m+++ b/node_modules/snekfetch/src/node/index.js[m
[36m@@ -0,0 +1,151 @@[m
[32m+[m[32mconst zlib = require('zlib');[m
[32m+[m[32mconst http = require('http');[m
[32m+[m[32mconst https = require('https');[m
[32m+[m[32mconst URL = require('url');[m
[32m+[m[32mconst Stream = require('stream');[m
[32m+[m[32mconst FormData = require('./FormData');[m
[32m+[m
[32m+[m[32mconst Package = require('../../package.json');[m
[32m+[m
[32m+[m[32mconst transports = {[m
[32m+[m[32m  'http:': http,[m
[32m+[m[32m  'https:': https,[m
[32m+[m[32m  'file:': require('./transports/file'),[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mfunction buildRequest(method, url) {[m
[32m+[m[32m  /* istanbul ignore next */[m
[32m+[m[32m  this._read = () => {[m
[32m+[m[32m    this.resume();[m
[32m+[m[32m    if (this._response)[m
[32m+[m[32m      return;[m
[32m+[m[32m    this.catch((err) => this.emit('error', err));[m
[32m+[m[32m  };[m
[32m+[m
[32m+[m[32m  this.options.lastBuiltUrl = url;[m
[32m+[m
[32m+[m[32m  const options = URL.parse(url);[m
[32m+[m[32m  options.encoding = 'utf8';[m
[32m+[m
[32m+[m[32m  if (!options.protocol)[m
[32m+[m[32m    throw new Error('URL must have a valid protocol');[m
[32m+[m
[32m+[m[32m  const transport = transports[options.protocol];[m
[32m+[m[32m  options.method = method.toUpperCase();[m
[32m+[m
[32m+[m[32m  if (this.options.headers)[m
[32m+[m[32m    options.headers = this.options.headers;[m
[32m+[m
[32m+[m[32m  if (this.options.agent)[m
[32m+[m[32m    options.agent = this.options.agent;[m
[32m+[m[32m  else if (transport.Agent && this.options.followRedirects !== false)[m
[32m+[m[32m    options.agent = new transport.Agent({ keepAlive: true });[m
[32m+[m
[32m+[m[32m  if (options.port)[m
[32m+[m[32m    options.port = parseInt(options.port);[m
[32m+[m
[32m+[m[32m  this.options._req = options;[m
[32m+[m[32m  const request = transport.request(options);[m
[32m+[m[32m  if (request.setNoDelay)[m
[32m+[m[32m    request.setNoDelay(true);[m
[32m+[m[32m  return request;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction finalizeRequest() {[m
[32m+[m[32m  return new Promise((resolve, reject) => {[m
[32m+[m[32m    const request = this.request;[m
[32m+[m
[32m+[m[32m    let socket;[m
[32m+[m
[32m+[m[32m    const handleError = (err) => {[m
[32m+[m[32m      if (!err)[m
[32m+[m[32m        err = new Error('Unknown error occured');[m
[32m+[m[32m      err.request = request;[m
[32m+[m[32m      reject(err);[m
[32m+[m[32m      if (socket)[m
[32m+[m[32m        socket.removeListener('error', handleError);[m
[32m+[m[32m    };[m
[32m+[m
[32m+[m[32m    request.once('abort', handleError);[m
[32m+[m[32m    request.once('error', handleError);[m
[32m+[m[32m    request.once('socket', (s) => {[m
[32m+[m[32m      socket = s;[m
[32m+[m[32m      s.once('error', handleError);[m
[32m+[m[32m    });[m
[32m+[m
[32m+[m[32m    request.once('response', (response) => {[m
[32m+[m[32m      if (socket)[m
[32m+[m[32m        socket.removeListener('error', handleError);[m
[32m+[m[32m      let stream = response;[m
[32m+[m[32m      if (shouldUnzip(response)) {[m
[32m+[m[32m        stream = response.pipe(zlib.createUnzip({[m
[32m+[m[32m          flush: zlib.Z_SYNC_FLUSH,[m
[32m+[m[32m          finishFlush: zlib.Z_SYNC_FLUSH,[m
[32m+[m[32m        }));[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      if (this.options.followRedirects !== false && [301, 302, 303, 307, 308].includes(response.statusCode)) {[m
[32m+[m[32m        resolve({[m
[32m+[m[32m          response,[m
[32m+[m[32m          redirect: URL.resolve(this.options.lastBuiltUrl, response.headers.location),[m
[32m+[m[32m        });[m
[32m+[m[32m        response.destroy();[m
[32m+[m[32m      } else {[m
[32m+[m[32m        const body = [];[m
[32m+[m
[32m+[m[32m        stream.on('data', (chunk) => {[m
[32m+[m[32m          if (!this.push(chunk))[m
[32m+[m[32m            this.pause();[m
[32m+[m[32m          body.push(chunk);[m
[32m+[m[32m        });[m
[32m+[m
[32m+[m[32m        stream.once('end', () => {[m
[32m+[m[32m          this.push(null);[m
[32m+[m[32m          const raw = Buffer.concat(body);[m
[32m+[m[32m          resolve({ response, raw, redirect: false });[m
[32m+[m[32m        });[m
[32m+[m[32m      }[m
[32m+[m[32m    });[m
[32m+[m
[32m+[m[32m    if (!this.request.getHeader('user-agent'))[m
[32m+[m[32m      this.set('User-Agent', `snekfetch/${Package.version} (${Package.homepage})`);[m
[32m+[m
[32m+[m[32m    this._finalizeRequest();[m
[32m+[m[32m    let data = this.data;[m
[32m+[m[32m    if (data && data.end)[m
[32m+[m[32m      data = data.end();[m
[32m+[m[32m    if (Array.isArray(data)) {[m
[32m+[m[32m      for (const chunk of data)[m
[32m+[m[32m        request.write(chunk);[m
[32m+[m[32m      request.end();[m
[32m+[m[32m    } else if (data instanceof Stream) {[m
[32m+[m[32m      data.pipe(request);[m
[32m+[m[32m    } else if (data instanceof Buffer) {[m
[32m+[m[32m      request.end(data);[m
[32m+[m[32m    } else if (data) {[m
[32m+[m[32m      request.end(data);[m
[32m+[m[32m    } else {[m
[32m+[m[32m      request.end();[m
[32m+[m[32m    }[m
[32m+[m[32m  });[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction shouldSendRaw(data) {[m
[32m+[m[32m  return data instanceof Buffer || data instanceof Stream;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction shouldUnzip(res) {[m
[32m+[m[32m  if (res.statusCode === 204 || res.statusCode === 304)[m
[32m+[m[32m    return false;[m
[32m+[m[32m  if (res.headers['content-length'] === '0')[m
[32m+[m[32m    return false;[m
[32m+[m[32m  return /^\s*(?:deflate|gzip)\s*$/.test(res.headers['content-encoding']);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = {[m
[32m+[m[32m  buildRequest, finalizeRequest, shouldSendRaw,[m
[32m+[m[32m  METHODS: http.METHODS,[m
[32m+[m[32m  STATUS_CODES: http.STATUS_CODES,[m
[32m+[m[32m  FormData,[m
[32m+[m[32m  Extension: Stream.Readable,[m
[32m+[m[32m};[m
[1mdiff --git a/node_modules/snekfetch/src/node/mime.js b/node_modules/snekfetch/src/node/mime.js[m
[1mnew file mode 100644[m
[1mindex 0000000..8fb7983[m
[1m--- /dev/null[m
[1m+++ b/node_modules/snekfetch/src/node/mime.js[m
[36m@@ -0,0 +1,16 @@[m
[32m+[m[32mconst mimes = require('./mimes.json');[m
[32m+[m[32mconst mimeOfBuffer = require('./mimeOfBuffer.js');[m
[32m+[m
[32m+[m[32mfunction lookupMime(ext) {[m
[32m+[m[32m  return mimes[ext.replace(/^\./, '')] || mimes.bin;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction lookupBuffer(buffer) {[m
[32m+[m[32m  const ret = mimeOfBuffer(buffer);[m
[32m+[m[32m  return ret ? ret.mime : mimes.bin;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = {[m
[32m+[m[32m  buffer: lookupBuffer,[m
[32m+[m[32m  lookup: lookupMime,[m
[32m+[m[32m};[m
[1mdiff --git a/node_modules/snekfetch/src/node/mimeOfBuffer.js b/node_modules/snekfetch/src/node/mimeOfBuffer.js[m
[1mnew file mode 100644[m
[1mindex 0000000..e92ccb8[m
[1m--- /dev/null[m
[1m+++ b/node_modules/snekfetch/src/node/mimeOfBuffer.js[m
[36m@@ -0,0 +1,546 @@[m
[32m+[m[32m/* eslint complexity: 0 */[m
[32m+[m
[32m+[m[32m// from file-type by @sindresorhus under the MIT license[m
[32m+[m[32m// https://github.com/sindresorhus/file-type[m
[32m+[m
[32m+[m[32mfunction mimeOfBuffer(input) {[m
[32m+[m[32m  const buf = new Uint8Array(input);[m
[32m+[m
[32m+[m[32m  if (!(buf && buf.length > 1))[m
[32m+[m[32m    return null;[m
[32m+[m
[32m+[m
[32m+[m[32m  if (buf[0] === 0xFF && buf[1] === 0xD8 && buf[2] === 0xFF) {[m
[32m+[m[32m    return {[m
[32m+[m[32m      ext: 'jpg',[m
[32m+[m[32m      mime: 'image/jpeg',[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if (buf[0] === 0x89 && buf[1] === 0x50 && buf[2] === 0x4E && buf[3] === 0x47) {[m
[32m+[m[32m    return {[m
[32m+[m[32m      ext: 'png',[m
[32m+[m[32m      mime: 'image/png',[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if (buf[0] === 0x47 && buf[1] === 0x49 && buf[2] === 0x46) {[m
[32m+[m[32m    return {[m
[32m+[m[32m      ext: 'gif',[m
[32m+[m[32m      mime: 'image/gif',[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if (buf[8] === 0x57 && buf[9] === 0x45 && buf[10] === 0x42 && buf[11] === 0x50) {[m
[32m+[m[32m    return {[m
[32m+[m[32m      ext: 'webp',[m
[32m+[m[32m      mime: 'image/webp',[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if (buf[0] === 0x46 && buf[1] === 0x4C && buf[2] === 0x49 && buf[3] === 0x46) {[m
[32m+[m[32m    return {[m
[32m+[m[32m      ext: 'flif',[m
[32m+[m[32m      mime: 'image/flif',[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  // needs to be before `tif` check[m
[32m+[m[32m  if ([m
[32m+[m[32m    ((buf[0] === 0x49 && buf[1] === 0x49 && buf[2] === 0x2A && buf[3] === 0x0) ||[m
[32m+[m[32m    (buf[0] === 0x4D && buf[1] === 0x4D && buf[2] === 0x0 && buf[3] === 0x2A)) && buf[8] === 0x43 && buf[9] === 0x52[m
[32m+[m[32m  ) {[m
[32m+[m[32m    return {[m
[32m+[m[32m      ext: 'cr2',[m
[32m+[m[32m      mime: 'image/x-canon-cr2',[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if ([m
[32m+[m[32m    (buf[0] === 0x49 && buf[1] === 0x49 && buf[2] === 0x2A && buf[3] === 0x0) ||[m
[32m+[m[32m    (buf[0] === 0x4D && buf[1] === 0x4D && buf[2] === 0x0 && buf[3] === 0x2A)[m
[32m+[m[32m  ) {[m
[32m+[m[32m    return {[m
[32m+[m[32m      ext: 'tif',[m
[32m+[m[32m      mime: 'image/tiff',[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if (buf[0] === 0x42 && buf[1] === 0x4D) {[m
[32m+[m[32m    return {[m
[32m+[m[32m      ext: 'bmp',[m
[32m+[m[32m      mime: 'image/bmp',[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if (buf[0] === 0x49 && buf[1] === 0x49 && buf[2] === 0xBC) {[m
[32m+[m[32m    return {[m
[32m+[m[32m      ext: 'jxr',[m
[32m+[m[32m      mime: 'image/vnd.ms-photo',[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if (buf[0] === 0x38 && buf[1] === 0x42 && buf[2] === 0x50 && buf[3] === 0x53) {[m
[32m+[m[32m    return {[m
[32m+[m[32m      ext: 'psd',[m
[32m+[m[32m      mime: 'image/vnd.adobe.photoshop',[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  // needs to be before `zip` check[m
[32m+[m[32m  if ([m
[32m+[m[32m    buf[0] === 0x50 && buf[1] === 0x4B && buf[2] === 0x3 && buf[3] === 0x4 && buf[30] === 0x6D && buf[31] === 0x69 &&[m
[32m+[m[32m    buf[32] === 0x6D && buf[33] === 0x65 && buf[34] === 0x74 && buf[35] === 0x79 && buf[36] === 0x70 &&[m
[32m+[m[32m    buf[37] === 0x65 && buf[38] === 0x61 && buf[39] === 0x70 && buf[40] === 0x70 && buf[41] === 0x6C &&[m
[32m+[m[32m    buf[42] === 0x69 && buf[43] === 0x63 && buf[44] === 0x61 && buf[45] === 0x74 && buf[46] === 0x69 &&[m
[32m+[m[32m    buf[47] === 0x6F && buf[48] === 0x6E && buf[49] === 0x2F && buf[50] === 0x65 && buf[51] === 0x70 &&[m
[32m+[m[32m    buf[52] === 0x75 && buf[53] === 0x62 && buf[54] === 0x2B && buf[55] === 0x7A && buf[56] === 0x69 &&[m
[32m+[m[32m    buf[57] === 0x70[m
[32m+[m[32m  ) {[m
[32m+[m[32m    return {[m
[32m+[m[32m      ext: 'epub',[m
[32m+[m[32m      mime: 'application/epub+zip',[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  // needs to be before `zip` check[m
[32m+[m[32m  // assumes signed .xpi from addons.mozilla.org[m
[32m+[m[32m  if ([m
[32m+[m[32m    buf[0] === 0x50 && buf[1] === 0x4B && buf[2] === 0x3 && buf[3] === 0x4 && buf[30] === 0x4D && buf[31] === 0x45 &&[m
[32m+[m[32m    buf[32] === 0x54 && buf[33] === 0x41 && buf[34] === 0x2D && buf[35] === 0x49 && buf[36] === 0x4E &&[m
[32m+[m[32m    buf[37] === 0x46 && buf[38] === 0x2F && buf[39] === 0x6D && buf[40] === 0x6F && buf[41] === 0x7A &&[m
[32m+[m[32m    buf[42] === 0x69 && buf[43] === 0x6C && buf[44] === 0x6C && buf[45] === 0x61 && buf[46] === 0x2E &&[m
[32m+[m[32m    buf[47] === 0x72 && buf[48] === 0x73 && buf[49] === 0x61[m
[32m+[m[32m  ) {[m
[32m+[m[32m    return {[m
[32m+[m[32m      ext: 'xpi',[m
[32m+[m[32m      mime: 'application/x-xpinstall',[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if ([m
[32m+[m[32m    buf[0] === 0x50 && buf[1] === 0x4B && (buf[2] === 0x3 || buf[2] === 0x5 || buf[2] === 0x7) &&[m
[32m+[m[32m    (buf[3] === 0x4 || buf[3] === 0x6 || buf[3] === 0x8)[m
[32m+[m[32m  ) {[m
[32m+[m[32m    return {[m
[32m+[m[32m      ext: 'zip',[m
[32m+[m[32m      mime: 'application/zip',[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if (buf[257] === 0x75 && buf[258] === 0x73 && buf[259] === 0x74 && buf[260] === 0x61 && buf[261] === 0x72) {[m
[32m+[m[32m    return {[m
[32m+[m[32m      ext: 'tar',[m
[32m+[m[32m      mime: 'application/x-tar',[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if ([m
[32m+[m[32m    buf[0] === 0x52 && buf[1] === 0x61 && buf[2] === 0x72 && buf[3] === 0x21 && buf[4] === 0x1A && buf[5] === 0x7 &&[m
[32m+[m[32m    (buf[6] === 0x0 || buf[6] === 0x1)[m
[32m+[m[32m  ) {[m
[32m+[m[32m    return {[m
[32m+[m[32m      ext: 'rar',[m
[32m+[m[32m      mime: 'application/x-rar-compressed',[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if (buf[0] === 0x1F && buf[1] === 0x8B && buf[2] === 0x8) {[m
[32m+[m[32m    return {[m
[32m+[m[32m      ext: 'gz',[m
[32m+[m[32m      mime: 'application/gzip',[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if (buf[0] === 0x42 && buf[1] === 0x5A && buf[2] === 0x68) {[m
[32m+[m[32m    return {[m
[32m+[m[32m      ext: 'bz2',[m
[32m+[m[32m      mime: 'application/x-bzip2',[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if (buf[0] === 0x37 && buf[1] === 0x7A && buf[2] === 0xBC && buf[3] === 0xAF && buf[4] === 0x27 && buf[5] === 0x1C) {[m
[32m+[m[32m    return {[m
[32m+[m[32m      ext: '7z',[m
[32m+[m[32m      mime: 'application/x-7z-compressed',[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if (buf[0] === 0x78 && buf[1] === 0x01) {[m
[32m+[m[32m    return {[m
[32m+[m[32m      ext: 'dmg',[m
[32m+[m[32m      mime: 'application/x-apple-diskimage',[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if ([m
[32m+[m[32m    (buf[0] === 0x0 && buf[1] === 0x0 && buf[2] === 0x0 && (buf[3] === 0x18 || buf[3] === 0x20) && buf[4] === 0x66 &&[m
[32m+[m[32m    buf[5] === 0x74 && buf[6] === 0x79 && buf[7] === 0x70) ||[m
[32m+[m[32m    (buf[0] === 0x33 && buf[1] === 0x67 && buf[2] === 0x70 && buf[3] === 0x35) ||[m
[32m+[m[32m  (buf[0] === 0x0 && buf[1] === 0x0 && buf[2] === 0x0 && buf[3] === 0x1C && buf[4] === 0x66 && buf[5] === 0x74 &&[m
[32m+[m[32m      buf[6] === 0x79 && buf[7] === 0x70 && buf[8] === 0x6D && buf[9] === 0x70 && buf[10] === 0x34 &&[m
[32m+[m[32m      buf[11] === 0x32 && buf[16] === 0x6D && buf[17] === 0x70 && buf[18] === 0x34 && buf[19] === 0x31 &&[m
[32m+[m[32m      buf[20] === 0x6D && buf[21] === 0x70 && buf[22] === 0x34 && buf[23] === 0x32 && buf[24] === 0x69 &&[m
[32m+[m[32m      buf[25] === 0x73 && buf[26] === 0x6F && buf[27] === 0x6D) ||[m
[32m+[m[32m  (buf[0] === 0x0 && buf[1] === 0x0 && buf[2] === 0x0 && buf[3] === 0x1C && buf[4] === 0x66 && buf[5] === 0x74 &&[m
[32m+[m[32m      buf[6] === 0x79 && buf[7] === 0x70 && buf[8] === 0x69 && buf[9] === 0x73 && buf[10] === 0x6F &&[m
[32m+[m[32m      buf[11] === 0x6D) ||[m
[32m+[m[32m  (buf[0] === 0x0 && buf[1] === 0x0 && buf[2] === 0x0 && buf[3] === 0x1c && buf[4] === 0x66 && buf[5] === 0x74 &&[m
[32m+[m[32m      buf[6] === 0x79 && buf[7] === 0x70 && buf[8] === 0x6D && buf[9] === 0x70 && buf[10] === 0x34 &&[m
[32m+[m[32m      buf[11] === 0x32 && buf[12] === 0x0 && buf[13] === 0x0 && buf[14] === 0x0 && buf[15] === 0x0)[m
[32m+[m[32m  ) {[m
[32m+[m[32m    return {[m
[32m+[m[32m      ext: 'mp4',[m
[32m+[m[32m      mime: 'video/mp4',[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if ([m
[32m+[m[32m    buf[0] === 0x0 && buf[1] === 0x0 && buf[2] === 0x0 && buf[3] === 0x1C && buf[4] === 0x66 &&[m
[32m+[m[32m    buf[5] === 0x74 && buf[6] === 0x79 && buf[7] === 0x70 && buf[8] === 0x4D && buf[9] === 0x34 && buf[10] === 0x56[m
[32m+[m[32m  ) {[m
[32m+[m[32m    return {[m
[32m+[m[32m      ext: 'm4v',[m
[32m+[m[32m      mime: 'video/x-m4v',[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if (buf[0] === 0x4D && buf[1] === 0x54 && buf[2] === 0x68 && buf[3] === 0x64) {[m
[32m+[m[32m    return {[m
[32m+[m[32m      ext: 'mid',[m
[32m+[m[32m      mime: 'audio/midi',[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  // https://github.com/threatstack/libmagic/blob/master/magic/Magdir/matroska[m
[32m+[m[32m  if (buf[0] === 0x1A && buf[1] === 0x45 && buf[2] === 0xDF && buf[3] === 0xA3) {[m
[32m+[m[32m    const sliced = buf.subarray(4, 4 + 4096);[m
[32m+[m[32m    const idPos = sliced.findIndex((el, i, arr) => arr[i] === 0x42 && arr[i + 1] === 0x82);[m
[32m+[m
[32m+[m[32m    if (idPos >= 0) {[m
[32m+[m[32m      const docTypePos = idPos + 3;[m
[32m+[m[32m      const findDocType = (type) => Array.from(type).every((c, i) => sliced[docTypePos + i] === c.charCodeAt(0));[m
[32m+[m
[32m+[m[32m      if (findDocType('matroska')) {[m
[32m+[m[32m        return {[m
[32m+[m[32m          ext: 'mkv',[m
[32m+[m[32m          mime: 'video/x-matroska',[m
[32m+[m[32m        };[m
[32m+[m[32m      }[m
[32m+[m[32m      if (findDocType('webm')) {[m
[32m+[m[32m        return {[m
[32m+[m[32m          ext: 'webm',[m
[32m+[m[32m          mime: 'video/webm',[m
[32m+[m[32m        };[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if ([m
[32m+[m[32m    buf[0] === 0x0 && buf[1] === 0x0 && buf[2] === 0x0 && buf[3] === 0x14 && buf[4] === 0x66 && buf[5] === 0x74 &&[m
[32m+[m[32m    buf[6] === 0x79 && buf[7] === 0x70[m
[32m+[m[32m  ) {[m
[32m+[m[32m    return {[m
[32m+[m[32m      ext: 'mov',[m
[32m+[m[32m      mime: 'video/quicktime',[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if ([m
[32m+[m[32m    buf[0] === 0x52 && buf[1] === 0x49 && buf[2] === 0x46 && buf[3] === 0x46 && buf[8] === 0x41 && buf[9] === 0x56 &&[m
[32m+[m[32m    buf[10] === 0x49[m
[32m+[m[32m  ) {[m
[32m+[m[32m    return {[m
[32m+[m[32m      ext: 'avi',[m
[32m+[m[32m      mime: 'video/x-msvideo',[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if ([m
[32m+[m[32m    buf[0] === 0x30 && buf[1] === 0x26 && buf[2] === 0xB2 && buf[3] === 0x75 && buf[4] === 0x8E && buf[5] === 0x66 &&[m
[32m+[m[32m    buf[6] === 0xCF && buf[7] === 0x11 && buf[8] === 0xA6 && buf[9] === 0xD9[m
[32m+[m[32m  ) {[m
[32m+[m[32m    return {[m
[32m+[m[32m      ext: 'wmv',[m
[32m+[m[32m      mime: 'video/x-ms-wmv',[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if (buf[0] === 0x0 && buf[1] === 0x0 && buf[2] === 0x1 && buf[3].toString(16)[0] === 'b') {[m
[32m+[m[32m    return {[m
[32m+[m[32m      ext: 'mpg',[m
[32m+[m[32m      mime: 'video/mpeg',[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if ((buf[0] === 0x49 && buf[1] === 0x44 && buf[2] === 0x33) || (buf[0] === 0xFF && buf[1] === 0xfb)) {[m
[32m+[m[32m    return {[m
[32m+[m[32m      ext: 'mp3',[m
[32m+[m[32m      mime: 'audio/mpeg',[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if ((buf[4] === 0x66 && buf[5] === 0x74 && buf[6] === 0x79 && buf[7] === 0x70 && buf[8] === 0x4D &&[m
[32m+[m[32m    buf[9] === 0x34 && buf[10] === 0x41) || (buf[0] === 0x4D && buf[1] === 0x34 && buf[2] === 0x41 && buf[3] === 0x20)[m
[32m+[m[32m  ) {[m
[32m+[m[32m    return {[m
[32m+[m[32m      ext: 'm4a',[m
[32m+[m[32m      mime: 'audio/m4a',[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  // needs to be before `ogg` check[m
[32m+[m[32m  if ([m
[32m+[m[32m    buf[28] === 0x4F && buf[29] === 0x70 && buf[30] === 0x75 && buf[31] === 0x73 && buf[32] === 0x48 &&[m
[32m+[m[32m    buf[33] === 0x65 && buf[34] === 0x61 && buf[35] === 0x64[m
[32m+[m[32m  ) {[m
[32m+[m[32m    return {[m
[32m+[m[32m      ext: 'opus',[m
[32m+[m[32m      mime: 'audio/opus',[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if (buf[0] === 0x4F && buf[1] === 0x67 && buf[2] === 0x67 && buf[3] === 0x53) {[m
[32m+[m[32m    return {[m
[32m+[m[32m      ext: 'ogg',[m
[32m+[m[32m      mime: 'audio/ogg',[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if (buf[0] === 0x66 && buf[1] === 0x4C && buf[2] === 0x61 && buf[3] === 0x43) {[m
[32m+[m[32m    return {[m
[32m+[m[32m      ext: 'flac',[m
[32m+[m[32m      mime: 'audio/x-flac',[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if ([m
[32m+[m[32m    buf[0] === 0x52 && buf[1] === 0x49 && buf[2] === 0x46 && buf[3] === 0x46 && buf[8] === 0x57 && buf[9] === 0x41 &&[m
[32m+[m[32m    buf[10] === 0x56 && buf[11] === 0x45[m
[32m+[m[32m  ) {[m
[32m+[m[32m    return {[m
[32m+[m[32m      ext: 'wav',[m
[32m+[m[32m      mime: 'audio/x-wav',[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if (buf[0] === 0x23 && buf[1] === 0x21 && buf[2] === 0x41 && buf[3] === 0x4D && buf[4] === 0x52 && buf[5] === 0x0A) {[m
[32m+[m[32m    return {[m
[32m+[m[32m      ext: 'amr',[m
[32m+[m[32m      mime: 'audio/amr',[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if (buf[0] === 0x25 && buf[1] === 0x50 && buf[2] === 0x44 && buf[3] === 0x46) {[m
[32m+[m[32m    return {[m
[32m+[m[32m      ext: 'pdf',[m
[32m+[m[32m      mime: 'application/pdf',[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if (buf[0] === 0x4D && buf[1] === 0x5A) {[m
[32m+[m[32m    return {[m
[32m+[m[32m      ext: 'exe',[m
[32m+[m[32m      mime: 'application/x-msdownload',[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if ((buf[0] === 0x43 || buf[0] === 0x46) && buf[1] === 0x57 && buf[2] === 0x53) {[m
[32m+[m[32m    return {[m
[32m+[m[32m      ext: 'swf',[m
[32m+[m[32m      mime: 'application/x-shockwave-flash',[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if (buf[0] === 0x7B && buf[1] === 0x5C && buf[2] === 0x72 && buf[3] === 0x74 && buf[4] === 0x66) {[m
[32m+[m[32m    return {[m
[32m+[m[32m      ext: 'rtf',[m
[32m+[m[32m      mime: 'application/rtf',[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if ([m
[32m+[m[32m    (buf[0] === 0x77 && buf[1] === 0x4F && buf[2] === 0x46 && buf[3] === 0x46) &&[m
[32m+[m[32m  ([m
[32m+[m[32m    (buf[4] === 0x00 && buf[5] === 0x01 && buf[6] === 0x00 && buf[7] === 0x00) ||[m
[32m+[m[32m   (buf[4] === 0x4F && buf[5] === 0x54 && buf[6] === 0x54 && buf[7] === 0x4F)[m
[32m+[m[32m  )[m
[32m+[m[32m  ) {[m
[32m+[m[32m    return {[m
[32m+[m[32m      ext: 'woff',[m
[32m+[m[32m      mime: 'application/font-woff',[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if ([m
[32m+[m[32m    (buf[0] === 0x77 && buf[1] === 0x4F && buf[2] === 0x46 && buf[3] === 0x32) &&[m
[32m+[m[32m  ([m
[32m+[m[32m    (buf[4] === 0x00 && buf[5] === 0x01 && buf[6] === 0x00 && buf[7] === 0x00) ||[m
[32m+[m[32m   (buf[4] === 0x4F && buf[5] === 0x54 && buf[6] === 0x54 && buf[7] === 0x4F)[m
[32m+[m[32m  )[m
[32m+[m[32m  ) {[m
[32m+[m[32m    return {[m
[32m+[m[32m      ext: 'woff2',[m
[32m+[m[32m      mime: 'application/font-woff',[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if ([m
[32m+[m[32m    (buf[34] === 0x4C && buf[35] === 0x50) &&[m
[32m+[m[32m  ([m
[32m+[m[32m    (buf[8] === 0x00 && buf[9] === 0x00 && buf[10] === 0x01) ||[m
[32m+[m[32m   (buf[8] === 0x01 && buf[9] === 0x00 && buf[10] === 0x02) ||[m
[32m+[m[32m   (buf[8] === 0x02 && buf[9] === 0x00 && buf[10] === 0x02)[m
[32m+[m[32m  )[m
[32m+[m[32m  ) {[m
[32m+[m[32m    return {[m
[32m+[m[32m      ext: 'eot',[m
[32m+[m[32m      mime: 'application/octet-stream',[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if (buf[0] === 0x00 && buf[1] === 0x01 && buf[2] === 0x00 && buf[3] === 0x00 && buf[4] === 0x00) {[m
[32m+[m[32m    return {[m
[32m+[m[32m      ext: 'ttf',[m
[32m+[m[32m      mime: 'application/font-sfnt',[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if (buf[0] === 0x4F && buf[1] === 0x54 && buf[2] === 0x54 && buf[3] === 0x4F && buf[4] === 0x00) {[m
[32m+[m[32m    return {[m
[32m+[m[32m      ext: 'otf',[m
[32m+[m[32m      mime: 'application/font-sfnt',[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if (buf[0] === 0x00 && buf[1] === 0x00 && buf[2] === 0x01 && buf[3] === 0x00) {[m
[32m+[m[32m    return {[m
[32m+[m[32m      ext: 'ico',[m
[32m+[m[32m      mime: 'image/x-icon',[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if (buf[0] === 0x46 && buf[1] === 0x4C && buf[2] === 0x56 && buf[3] === 0x01) {[m
[32m+[m[32m    return {[m
[32m+[m[32m      ext: 'flv',[m
[32m+[m[32m      mime: 'video/x-flv',[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if (buf[0] === 0x25 && buf[1] === 0x21) {[m
[32m+[m[32m    return {[m
[32m+[m[32m      ext: 'ps',[m
[32m+[m[32m      mime: 'application/postscript',[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if (buf[0] === 0xFD && buf[1] === 0x37 && buf[2] === 0x7A && buf[3] === 0x58 && buf[4] === 0x5A && buf[5] === 0x00) {[m
[32m+[m[32m    return {[m
[32m+[m[32m      ext: 'xz',[m
[32m+[m[32m      mime: 'application/x-xz',[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if (buf[0] === 0x53 && buf[1] === 0x51 && buf[2] === 0x4C && buf[3] === 0x69) {[m
[32m+[m[32m    return {[m
[32m+[m[32m      ext: 'sqlite',[m
[32m+[m[32m      mime: 'application/x-sqlite3',[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if (buf[0] === 0x4E && buf[1] === 0x45 && buf[2] === 0x53 && buf[3] === 0x1A) {[m
[32m+[m[32m    return {[m
[32m+[m[32m      ext: 'nes',[m
[32m+[m[32m      mime: 'application/x-nintendo-nes-rom',[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if (buf[0] === 0x43 && buf[1] === 0x72 && buf[2] === 0x32 && buf[3] === 0x34) {[m
[32m+[m[32m    return {[m
[32m+[m[32m      ext: 'crx',[m
[32m+[m[32m      mime: 'application/x-google-chrome-extension',[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if ([m
[32m+[m[32m    (buf[0] === 0x4D && buf[1] === 0x53 && buf[2] === 0x43 && buf[3] === 0x46) ||[m
[32m+[m[32m  (buf[0] === 0x49 && buf[1] === 0x53 && buf[2] === 0x63 && buf[3] === 0x28)[m
[32m+[m[32m  ) {[m
[32m+[m[32m    return {[m
[32m+[m[32m      ext: 'cab',[m
[32m+[m[32m      mime: 'application/vnd.ms-cab-compressed',[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  // needs to be before `ar` check[m
[32m+[m[32m  if ([m
[32m+[m[32m    buf[0] === 0x21 && buf[1] === 0x3C && buf[2] === 0x61 && buf[3] === 0x72 && buf[4] === 0x63 && buf[5] === 0x68 &&[m
[32m+[m[32m    buf[6] === 0x3E && buf[7] === 0x0A && buf[8] === 0x64 && buf[9] === 0x65 && buf[10] === 0x62 && buf[11] === 0x69 &&[m
[32m+[m[32m    buf[12] === 0x61 && buf[13] === 0x6E && buf[14] === 0x2D && buf[15] === 0x62 && buf[16] === 0x69 &&[m
[32m+[m[32m    buf[17] === 0x6E && buf[18] === 0x61 && buf[19] === 0x72 && buf[20] === 0x79[m
[32m+[m[32m  ) {[m
[32m+[m[32m    return {[m
[32m+[m[32m      ext: 'deb',[m
[32m+[m[32m      mime: 'application/x-deb',[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if ([m
[32m+[m[32m    buf[0] === 0x21 && buf[1] === 0x3C && buf[2] === 0x61 && buf[3] === 0x72 && buf[4] === 0x63 && buf[5] === 0x68 &&[m
[32m+[m[32m    buf[6] === 0x3E[m
[32m+[m[32m  ) {[m
[32m+[m[32m    return {[m
[32m+[m[32m      ext: 'ar',[m
[32m+[m[32m      mime: 'application/x-unix-archive',[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if (buf[0] === 0xED && buf[1] === 0xAB && buf[2] === 0xEE && buf[3] === 0xDB) {[m
[32m+[m[32m    return {[m
[32m+[m[32m      ext: 'rpm',[m
[32m+[m[32m      mime: 'application/x-rpm',[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if ([m
[32m+[m[32m    (buf[0] === 0x1F && buf[1] === 0xA0) ||[m
[32m+[m[32m  (buf[0] === 0x1F && buf[1] === 0x9D)[m
[32m+[m[32m  ) {[m
[32m+[m[32m    return {[m
[32m+[m[32m      ext: 'Z',[m
[32m+[m[32m      mime: 'application/x-compress',[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if (buf[0] === 0x4C && buf[1] === 0x5A && buf[2] === 0x49 && buf[3] === 0x50) {[m
[32m+[m[32m    return {[m
[32m+[m[32m      ext: 'lz',[m
[32m+[m[32m      mime: 'application/x-lzip',[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if ([m
[32m+[m[32m    buf[0] === 0xD0 && buf[1] === 0xCF && buf[2] === 0x11 && buf[3] === 0xE0 && buf[4] === 0xA1 && buf[5] === 0xB1 &&[m
[32m+[m[32m    buf[6] === 0x1A && buf[7] === 0xE1[m
[32m+[m[32m  ) {[m
[32m+[m[32m    return {[m
[32m+[m[32m      ext: 'msi',[m
[32m+[m[32m      mime: 'application/x-msi',[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if ([m
[32m+[m[32m    buf[0] === 0x06 && buf[1] === 0x0E && buf[2] === 0x2B && buf[3] === 0x34 && buf[4] === 0x02 && buf[5] === 0x05 &&[m
[32m+[m[32m    buf[6] === 0x01 && buf[7] === 0x01 && buf[8] === 0x0D && buf[9] === 0x01 && buf[10] === 0x02 && buf[11] === 0x01 &&[m
[32m+[m[32m    buf[12] === 0x01 && buf[13] === 0x02[m
[32m+[m[32m  ) {[m
[32m+[m[32m    return {[m
[32m+[m[32m      ext: 'mxf',[m
[32m+[m[32m      mime: 'application/mxf',[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  return null;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = mimeOfBuffer;[m
[1mdiff --git a/node_modules/snekfetch/src/node/mimes.json b/node_modules/snekfetch/src/node/mimes.json[m
[1mnew file mode 100644[m
[1mindex 0000000..928e6c5[m
[1m--- /dev/null[m
[1m+++ b/node_modules/snekfetch/src/node/mimes.json[m
[36m@@ -0,0 +1,1049 @@[m
[32m+[m[32m{[m
[32m+[m[32m  "123": "application/vnd.lotus-1-2-3",[m
[32m+[m[32m  "ez": "application/andrew-inset",[m
[32m+[m[32m  "aw": "application/applixware",[m
[32m+[m[32m  "atom": "application/atom+xml",[m
[32m+[m[32m  "atomcat": "application/atomcat+xml",[m
[32m+[m[32m  "atomsvc": "application/atomsvc+xml",[m
[32m+[m[32m  "bdoc": "application/x-bdoc",[m
[32m+[m[32m  "ccxml": "application/ccxml+xml",[m
[32m+[m[32m  "cdmia": "application/cdmi-capability",[m
[32m+[m[32m  "cdmic": "application/cdmi-container",[m
[32m+[m[32m  "cdmid": "application/cdmi-domain",[m
[32m+[m[32m  "cdmio": "application/cdmi-object",[m
[32m+[m[32m  "cdmiq": "application/cdmi-queue",[m
[32m+[m[32m  "cu": "application/cu-seeme",[m
[32m+[m[32m  "mpd": "application/dash+xml",[m
[32m+[m[32m  "davmount": "application/davmount+xml",[m
[32m+[m[32m  "dbk": "application/docbook+xml",[m
[32m+[m[32m  "dssc": "application/dssc+der",[m
[32m+[m[32m  "xdssc": "application/dssc+xml",[m
[32m+[m[32m  "ecma": "application/ecmascript",[m
[32m+[m[32m  "emma": "application/emma+xml",[m
[32m+[m[32m  "epub": "application/epub+zip",[m
[32m+[m[32m  "exi": "application/exi",[m
[32m+[m[32m  "pfr": "application/font-tdpfr",[m
[32m+[m[32m  "woff": "application/font-woff",[m
[32m+[m[32m  "woff2": "application/font-woff2",[m
[32m+[m[32m  "geojson": "application/geo+json",[m
[32m+[m[32m  "gml": "application/gml+xml",[m
[32m+[m[32m  "gpx": "application/gpx+xml",[m
[32m+[m[32m  "gxf": "application/gxf",[m
[32m+[m[32m  "stk": "application/hyperstudio",[m
[32m+[m[32m  "ink": "application/inkml+xml",[m
[32m+[m[32m  "inkml": "application/inkml+xml",[m
[32m+[m[32m  "ipfix": "application/ipfix",[m
[32m+[m[32m  "jar": "application/java-archive",[m
[32m+[m[32m  "war": "application/java-archive",[m
[32m+[m[32m  "ear": "application/java-archive",[m
[32m+[m[32m  "ser": "application/java-serialized-object",[m
[32m+[m[32m  "class": "application/java-vm",[m
[32m+[m[32m  "js": "application/javascript",[m
[32m+[m[32m  "json": "application/json",[m
[32m+[m[32m  "map": "application/json",[m
[32m+[m[32m  "json5": "application/json5",[m
[32m+[m[32m  "jsonml": "application/jsonml+json",[m
[32m+[m[32m  "jsonld": "application/ld+json",[m
[32m+[m[32m  "lostxml": "application/lost+xml",[m
[32m+[m[32m  "hqx": "application/mac-binhex40",[m
[32m+[m[32m  "cpt": "application/mac-compactpro",[m
[32m+[m[32m  "mads": "application/mads+xml",[m
[32m+[m[32m  "webmanifest": "application/manifest+json",[m
[32m+[m[32m  "mrc": "application/marc",[m
[32m+[m[32m  "mrcx": "application/marcxml+xml",[m
[32m+[m[32m  "ma": "application/mathematica",[m
[32m+[m[32m  "nb": "application/mathematica",[m
[32m+[m[32m  "mb": "application/mathematica",[m
[32m+[m[32m  "mathml": "application/mathml+xml",[m
[32m+[m[32m  "mbox": "application/mbox",[m
[32m+[m[32m  "mscml": "application/mediaservercontrol+xml",[m
[32m+[m[32m  "metalink": "application/metalink+xml",[m
[32m+[m[32m  "meta4": "application/metalink4+xml",[m
[32m+[m[32m  "mets": "application/mets+xml",[m
[32m+[m[32m  "mods": "application/mods+xml",[m
[32m+[m[32m  "m21": "application/mp21",[m
[32m+[m[32m  "mp21": "application/mp21",[m
[32m+[m[32m  "mp4s": "application/mp4",[m
[32m+[m[32m  "m4p": "application/mp4",[m
[32m+[m[32m  "doc": "application/msword",[m
[32m+[m[32m  "dot": "application/msword",[m
[32m+[m[32m  "mxf": "application/mxf",[m
[32m+[m[32m  "bin": "application/octet-stream",[m
[32m+[m[32m  "dms": "application/octet-stream",[m
[32m+[m[32m  "lrf": "application/octet-stream",[m
[32m+[m[32m  "mar": "application/octet-stream",[m
[32m+[m[32m  "so": "application/octet-stream",[m
[32m+[m[32m  "dist": "application/octet-stream",[m
[32m+[m[32m  "distz": "application/octet-stream",[m
[32m+[m[32m  "pkg": "application/octet-stream",[m
[32m+[m[32m  "bpk": "application/octet-stream",[m
[32m+[m[32m  "dump": "application/octet-stream",[m
[32m+[m[32m  "elc": "application/octet-stream",[m
[32m+[m[32m  "deploy": "application/octet-stream",[m
[32m+[m[32m  "exe": "application/x-msdownload",[m
[32m+[m[32m  "dll": "application/x-msdownload",[m
[32m+[m[32m  "deb": "application/x-debian-package",[m
[32m+[m[32m  "dmg": "application/x-apple-diskimage",[m
[32m+[m[32m  "iso": "application/x-iso9660-image",[m
[32m+[m[32m  "img": "application/octet-stream",[m
[32m+[m[32m  "msi": "application/x-msdownload",[m
[32m+[m[32m  "msp": "application/octet-stream",[m
[32m+[m[32m  "msm": "application/octet-stream",[m
[32m+[m[32m  "buffer": "application/octet-stream",[m
[32m+[m[32m  "oda": "application/oda",[m
[32m+[m[32m  "opf": "application/oebps-package+xml",[m
[32m+[m[32m  "ogx": "application/ogg",[m
[32m+[m[32m  "omdoc": "application/omdoc+xml",[m
[32m+[m[32m  "onetoc": "application/onenote",[m
[32m+[m[32m  "onetoc2": "application/onenote",[m
[32m+[m[32m  "onetmp": "application/onenote",[m
[32m+[m[32m  "onepkg": "application/onenote",[m
[32m+[m[32m  "oxps": "application/oxps",[m
[32m+[m[32m  "xer": "application/patch-ops-error+xml",[m
[32m+[m[32m  "pdf": "application/pdf",[m
[32m+[m[32m  "pgp": "application/pgp-encrypted",[m
[32m+[m[32m  "asc": "application/pgp-signature",[m
[32m+[m[32m  "sig": "application/pgp-signature",[m
[32m+[m[32m  "prf": "application/pics-rules",[m
[32m+[m[32m  "p10": "application/pkcs10",[m
[32m+[m[32m  "p7m": "application/pkcs7-mime",[m
[32m+[m[32m  "p7c": "application/pkcs7-mime",[m
[32m+[m[32m  "p7s": "application/pkcs7-signature",[m
[32m+[m[32m  "p8": "application/pkcs8",[m
[32m+[m[32m  "ac": "application/pkix-attr-cert",[m
[32m+[m[32m  "cer": "application/pkix-cert",[m
[32m+[m[32m  "crl": "application/pkix-crl",[m
[32m+[m[32m  "pkipath": "application/pkix-pkipath",[m
[32m+[m[32m  "pki": "application/pkixcmp",[m
[32m+[m[32m  "pls": "application/pls+xml",[m
[32m+[m[32m  "ai": "application/postscript",[m
[32m+[m[32m  "eps": "application/postscript",[m
[32m+[m[32m  "ps": "application/postscript",[m
[32m+[m[32m  "cww": "application/prs.cww",[m
[32m+[m[32m  "pskcxml": "application/pskc+xml",[m
[32m+[m[32m  "rdf": "application/rdf+xml",[m
[32m+[m[32m  "rif": "application/reginfo+xml",[m
[32m+[m[32m  "rnc": "application/relax-ng-compact-syntax",[m
[32m+[m[32m  "rl": "application/resource-lists+xml",[m
[32m+[m[32m  "rld": "application/resource-lists-diff+xml",[m
[32m+[m[32m  "rs": "application/rls-services+xml",[m
[32m+[m[32m  "gbr": "application/rpki-ghostbusters",[m
[32m+[m[32m  "mft": "application/rpki-manifest",[m
[32m+[m[32m  "roa": "application/rpki-roa",[m
[32m+[m[32m  "rsd": "application/rsd+xml",[m
[32m+[m[32m  "rss": "application/rss+xml",[m
[32m+[m[32m  "rtf": "text/rtf",[m
[32m+[m[32m  "sbml": "application/sbml+xml",[m
[32m+[m[32m  "scq": "application/scvp-cv-request",[m
[32m+[m[32m  "scs": "application/scvp-cv-response",[m
[32m+[m[32m  "spq": "application/scvp-vp-request",[m
[32m+[m[32m  "spp": "application/scvp-vp-response",[m
[32m+[m[32m  "sdp": "application/sdp",[m
[32m+[m[32m  "setpay": "application/set-payment-initiation",[m
[32m+[m[32m  "setreg": "application/set-registration-initiation",[m
[32m+[m[32m  "shf": "application/shf+xml",[m
[32m+[m[32m  "smi": "application/smil+xml",[m
[32m+[m[32m  "smil": "application/smil+xml",[m
[32m+[m[32m  "rq": "application/sparql-query",[m
[32m+[m[32m  "srx": "application/sparql-results+xml",[m
[32m+[m[32m  "gram": "application/srgs",[m
[32m+[m[32m  "grxml": "application/srgs+xml",[m
[32m+[m[32m  "sru": "application/sru+xml",[m
[32m+[m[32m  "ssdl": "application/ssdl+xml",[m
[32m+[m[32m  "ssml": "application/ssml+xml",[m
[32m+[m[32m  "tei": "application/tei+xml",[m
[32m+[m[32m  "teicorpus": "application/tei+xml",[m
[32m+[m[32m  "tfi": "application/thraud+xml",[m
[32m+[m[32m  "tsd": "application/timestamped-data",[m
[32m+[m[32m  "plb": "application/vnd.3gpp.pic-bw-large",[m
[32m+[m[32m  "psb": "application/vnd.3gpp.pic-bw-small",[m
[32m+[m[32m  "pvb": "application/vnd.3gpp.pic-bw-var",[m
[32m+[m[32m  "tcap": "application/vnd.3gpp2.tcap",[m
[32m+[m[32m  "pwn": "application/vnd.3m.post-it-notes",[m
[32m+[m[32m  "aso": "application/vnd.accpac.simply.aso",[m
[32m+[m[32m  "imp": "application/vnd.accpac.simply.imp",[m
[32m+[m[32m  "acu": "application/vnd.acucobol",[m
[32m+[m[32m  "atc": "application/vnd.acucorp",[m
[32m+[m[32m  "acutc": "application/vnd.acucorp",[m
[32m+[m[32m  "air": "application/vnd.adobe.air-application-installer-package+zip",[m
[32m+[m[32m  "fcdt": "application/vnd.adobe.formscentral.fcdt",[m
[32m+[m[32m  "fxp": "application/vnd.adobe.fxp",[m
[32m+[m[32m  "fxpl": "application/vnd.adobe.fxp",[m
[32m+[m[32m  "xdp": "application/vnd.adobe.xdp+xml",[m
[32m+[m[32m  "xfdf": "application/vnd.adobe.xfdf",[m
[32m+[m[32m  "ahead": "application/vnd.ahead.space",[m
[32m+[m[32m  "azf": "application/vnd.airzip.filesecure.azf",[m
[32m+[m[32m  "azs": "application/vnd.airzip.filesecure.azs",[m
[32m+[m[32m  "azw": "application/vnd.amazon.ebook",[m
[32m+[m[32m  "acc": "application/vnd.americandynamics.acc",[m
[32m+[m[32m  "ami": "application/vnd.amiga.ami",[m
[32m+[m[32m  "apk": "application/vnd.android.package-archive",[m
[32m+[m[32m  "cii": "application/vnd.anser-web-certificate-issue-initiation",[m
[32m+[m[32m  "fti": "application/vnd.anser-web-funds-transfer-initiation",[m
[32m+[m[32m  "atx": "application/vnd.antix.game-component",[m
[32m+[m[32m  "mpkg": "application/vnd.apple.installer+xml",[m
[32m+[m[32m  "m3u8": "application/vnd.apple.mpegurl",[m
[32m+[m[32m  "pkpass": "application/vnd.apple.pkpass",[m
[32m+[m[32m  "swi": "application/vnd.aristanetworks.swi",[m
[32m+[m[32m  "iota": "application/vnd.astraea-software.iota",[m
[32m+[m[32m  "aep": "application/vnd.audiograph",[m
[32m+[m[32m  "mpm": "application/vnd.blueice.multipass",[m
[32m+[m[32m  "bmi": "application/vnd.bmi",[m
[32m+[m[32m  "rep": "application/vnd.businessobjects",[m
[32m+[m[32m  "cdxml": "application/vnd.chemdraw+xml",[m
[32m+[m[32m  "mmd": "application/vnd.chipnuts.karaoke-mmd",[m
[32m+[m[32m  "cdy": "application/vnd.cinderella",[m
[32m+[m[32m  "cla": "application/vnd.claymore",[m
[32m+[m[32m  "rp9": "application/vnd.cloanto.rp9",[m
[32m+[m[32m  "c4g": "application/vnd.clonk.c4group",[m
[32m+[m[32m  "c4d": "application/vnd.clonk.c4group",[m
[32m+[m[32m  "c4f": "application/vnd.clonk.c4group",[m
[32m+[m[32m  "c4p": "application/vnd.clonk.c4group",[m
[32m+[m[32m  "c4u": "application/vnd.clonk.c4group",[m
[32m+[m[32m  "c11amc": "application/vnd.cluetrust.cartomobile-config",[m
[32m+[m[32m  "c11amz": "application/vnd.cluetrust.cartomobile-config-pkg",[m
[32m+[m[32m  "csp": "application/vnd.commonspace",[m
[32m+[m[32m  "cdbcmsg": "application/vnd.contact.cmsg",[m
[32m+[m[32m  "cmc": "application/vnd.cosmocaller",[m
[32m+[m[32m  "clkx": "application/vnd.crick.clicker",[m
[32m+[m[32m  "clkk": "application/vnd.crick.clicker.keyboard",[m
[32m+[m[32m  "clkp": "application/vnd.crick.clicker.palette",[m
[32m+[m[32m  "clkt": "application/vnd.crick.clicker.template",[m
[32m+[m[32m  "clkw": "application/vnd.crick.clicker.wordbank",[m
[32m+[m[32m  "wbs": "application/vnd.criticaltools.wbs+xml",[m
[32m+[m[32m  "pml": "application/vnd.ctc-posml",[m
[32m+[m[32m  "ppd": "application/vnd.cups-ppd",[m
[32m+[m[32m  "car": "application/vnd.curl.car",[m
[32m+[m[32m  "pcurl": "application/vnd.curl.pcurl",[m
[32m+[m[32m  "dart": "application/vnd.dart",[m
[32m+[m[32m  "rdz": "application/vnd.data-vision.rdz",[m
[32m+[m[32m  "uvf": "application/vnd.dece.data",[m
[32m+[m[32m  "uvvf": "application/vnd.dece.data",[m
[32m+[m[32m  "uvd": "application/vnd.dece.data",[m
[32m+[m[32m  "uvvd": "application/vnd.dece.data",[m
[32m+[m[32m  "uvt": "application/vnd.dece.ttml+xml",[m
[32m+[m[32m  "uvvt": "application/vnd.dece.ttml+xml",[m
[32m+[m[32m  "uvx": "application/vnd.dece.unspecified",[m
[32m+[m[32m  "uvvx": "application/vnd.dece.unspecified",[m
[32m+[m[32m  "uvz": "application/vnd.dece.zip",[m
[32m+[m[32m  "uvvz": "application/vnd.dece.zip",[m
[32m+[m[32m  "fe_launch": "application/vnd.denovo.fcselayout-link",[m
[32m+[m[32m  "dna": "application/vnd.dna",[m
[32m+[m[32m  "mlp": "application/vnd.dolby.mlp",[m
[32m+[m[32m  "dpg": "application/vnd.dpgraph",[m
[32m+[m[32m  "dfac": "application/vnd.dreamfactory",[m
[32m+[m[32m  "kpxx": "application/vnd.ds-keypoint",[m
[32m+[m[32m  "ait": "application/vnd.dvb.ait",[m
[32m+[m[32m  "svc": "application/vnd.dvb.service",[m
[32m+[m[32m  "geo": "application/vnd.dynageo",[m
[32m+[m[32m  "mag": "application/vnd.ecowin.chart",[m
[32m+[m[32m  "nml": "application/vnd.enliven",[m
[32m+[m[32m  "esf": "application/vnd.epson.esf",[m
[32m+[m[32m  "msf": "application/vnd.epson.msf",[m
[32m+[m[32m  "qam": "application/vnd.epson.quickanime",[m
[32m+[m[32m  "slt": "application/vnd.epson.salt",[m
[32m+[m[32m  "ssf": "application/vnd.epson.ssf",[m
[32m+[m[32m  "es3": "application/vnd.eszigno3+xml",[m
[32m+[m[32m  "et3": "application/vnd.eszigno3+xml",[m
[32m+[m[32m  "ez2": "application/vnd.ezpix-album",[m
[32m+[m[32m  "ez3": "application/vnd.ezpix-package",[m
[32m+[m[32m  "fdf": "application/vnd.fdf",[m
[32m+[m[32m  "mseed": "application/vnd.fdsn.mseed",[m
[32m+[m[32m  "seed": "application/vnd.fdsn.seed",[m
[32m+[m[32m  "dataless": "application/vnd.fdsn.seed",[m
[32m+[m[32m  "gph": "application/vnd.flographit",[m
[32m+[m[32m  "ftc": "application/vnd.fluxtime.clip",[m
[32m+[m[32m  "fm": "application/vnd.framemaker",[m
[32m+[m[32m  "frame": "application/vnd.framemaker",[m
[32m+[m[32m  "maker": "application/vnd.framemaker",[m
[32m+[m[32m  "book": "application/vnd.framemaker",[m
[32m+[m[32m  "fnc": "application/vnd.frogans.fnc",[m
[32m+[m[32m  "ltf": "application/vnd.frogans.ltf",[m
[32m+[m[32m  "fsc": "application/vnd.fsc.weblaunch",[m
[32m+[m[32m  "oas": "application/vnd.fujitsu.oasys",[m
[32m+[m[32m  "oa2": "application/vnd.fujitsu.oasys2",[m
[32m+[m[32m  "oa3": "application/vnd.fujitsu.oasys3",[m
[32m+[m[32m  "fg5": "application/vnd.fujitsu.oasysgp",[m
[32m+[m[32m  "bh2": "application/vnd.fujitsu.oasysprs",[m
[32m+[m[32m  "ddd": "application/vnd.fujixerox.ddd",[m
[32m+[m[32m  "xdw": "application/vnd.fujixerox.docuworks",[m
[32m+[m[32m  "xbd": "application/vnd.fujixerox.docuworks.binder",[m
[32m+[m[32m  "fzs": "application/vnd.fuzzysheet",[m
[32m+[m[32m  "txd": "application/vnd.genomatix.tuxedo",[m
[32m+[m[32m  "ggb": "application/vnd.geogebra.file",[m
[32m+[m[32m  "ggt": "application/vnd.geogebra.tool",[m
[32m+[m[32m  "gex": "application/vnd.geometry-explorer",[m
[32m+[m[32m  "gre": "application/vnd.geometry-explorer",[m
[32m+[m[32m  "gxt": "application/vnd.geonext",[m
[32m+[m[32m  "g2w": "application/vnd.geoplan",[m
[32m+[m[32m  "g3w": "application/vnd.geospace",[m
[32m+[m[32m  "gmx": "application/vnd.gmx",[m
[32m+[m[32m  "gdoc": "application/vnd.google-apps.document",[m
[32m+[m[32m  "gslides": "application/vnd.google-apps.presentation",[m
[32m+[m[32m  "gsheet": "application/vnd.google-apps.spreadsheet",[m
[32m+[m[32m  "kml": "application/vnd.google-earth.kml+xml",[m
[32m+[m[32m  "kmz": "application/vnd.google-earth.kmz",[m
[32m+[m[32m  "gqf": "application/vnd.grafeq",[m
[32m+[m[32m  "gqs": "application/vnd.grafeq",[m
[32m+[m[32m  "gac": "application/vnd.groove-account",[m
[32m+[m[32m  "ghf": "application/vnd.groove-help",[m
[32m+[m[32m  "gim": "application/vnd.groove-identity-message",[m
[32m+[m[32m  "grv": "application/vnd.groove-injector",[m
[32m+[m[32m  "gtm": "application/vnd.groove-tool-message",[m
[32m+[m[32m  "tpl": "application/vnd.groove-tool-template",[m
[32m+[m[32m  "vcg": "application/vnd.groove-vcard",[m
[32m+[m[32m  "hal": "application/vnd.hal+xml",[m
[32m+[m[32m  "zmm": "application/vnd.handheld-entertainment+xml",[m
[32m+[m[32m  "hbci": "application/vnd.hbci",[m
[32m+[m[32m  "les": "application/vnd.hhe.lesson-player",[m
[32m+[m[32m  "hpgl": "application/vnd.hp-hpgl",[m
[32m+[m[32m  "hpid": "application/vnd.hp-hpid",[m
[32m+[m[32m  "hps": "application/vnd.hp-hps",[m
[32m+[m[32m  "jlt": "application/vnd.hp-jlyt",[m
[32m+[m[32m  "pcl": "application/vnd.hp-pcl",[m
[32m+[m[32m  "pclxl": "application/vnd.hp-pclxl",[m
[32m+[m[32m  "sfd-hdstx": "application/vnd.hydrostatix.sof-data",[m
[32m+[m[32m  "mpy": "application/vnd.ibm.minipay",[m
[32m+[m[32m  "afp": "application/vnd.ibm.modcap",[m
[32m+[m[32m  "listafp": "application/vnd.ibm.modcap",[m
[32m+[m[32m  "list3820": "application/vnd.ibm.modcap",[m
[32m+[m[32m  "irm": "application/vnd.ibm.rights-management",[m
[32m+[m[32m  "sc": "application/vnd.ibm.secure-container",[m
[32m+[m[32m  "icc": "application/vnd.iccprofile",[m
[32m+[m[32m  "icm": "application/vnd.iccprofile",[m
[32m+[m[32m  "igl": "application/vnd.igloader",[m
[32m+[m[32m  "ivp": "application/vnd.immervision-ivp",[m
[32m+[m[32m  "ivu": "application/vnd.immervision-ivu",[m
[32m+[m[32m  "igm": "application/vnd.insors.igm",[m
[32m+[m[32m  "xpw": "application/vnd.intercon.formnet",[m
[32m+[m[32m  "xpx": "application/vnd.intercon.formnet",[m
[32m+[m[32m  "i2g": "application/vnd.intergeo",[m
[32m+[m[32m  "qbo": "application/vnd.intu.qbo",[m
[32m+[m[32m  "qfx": "application/vnd.intu.qfx",[m
[32m+[m[32m  "rcprofile": "application/vnd.ipunplugged.rcprofile",[m
[32m+[m[32m  "irp": "application/vnd.irepository.package+xml",[m
[32m+[m[32m  "xpr": "application/vnd.is-xpr",[m
[32m+[m[32m  "fcs": "application/vnd.isac.fcs",[m
[32m+[m[32m  "jam": "application/vnd.jam",[m
[32m+[m[32m  "rms": "application/vnd.jcp.javame.midlet-rms",[m
[32m+[m[32m  "jisp": "application/vnd.jisp",[m
[32m+[m[32m  "joda": "application/vnd.joost.joda-archive",[m
[32m+[m[32m  "ktz": "application/vnd.kahootz",[m
[32m+[m[32m  "ktr": "application/vnd.kahootz",[m
[32m+[m[32m  "karbon": "application/vnd.kde.karbon",[m
[32m+[m[32m  "chrt": "application/vnd.kde.kchart",[m
[32m+[m[32m  "kfo": "application/vnd.kde.kformula",[m
[32m+[m[32m  "flw": "application/vnd.kde.kivio",[m
[32m+[m[32m  "kon": "application/vnd.kde.kontour",[m
[32m+[m[32m  "kpr": "application/vnd.kde.kpresenter",[m
[32m+[m[32m  "kpt": "application/vnd.kde.kpresenter",[m
[32m+[m[32m  "ksp": "application/vnd.kde.kspread",[m
[32m+[m[32m  "kwd": "application/vnd.kde.kword",[m
[32m+[m[32m  "kwt": "application/vnd.kde.kword",[m
[32m+[m[32m  "htke": "application/vnd.kenameaapp",[m
[32m+[m[32m  "kia": "application/vnd.kidspiration",[m
[32m+[m[32m  "kne": "application/vnd.kinar",[m
[32m+[m[32m  "knp": "application/vnd.kinar",[m
[32m+[m[32m  "skp": "application/vnd.koan",[m
[32m+[m[32m  "skd": "application/vnd.koan",[m
[32m+[m[32m  "skt": "application/vnd.koan",[m
[32m+[m[32m  "skm": "application/vnd.koan",[m
[32m+[m[32m  "sse": "application/vnd.kodak-descriptor",[m
[32m+[m[32m  "lasxml": "application/vnd.las.las+xml",[m
[32m+[m[32m  "lbd": "application/vnd.llamagraphics.life-balance.desktop",[m
[32m+[m[32m  "lbe": "application/vnd.llamagraphics.life-balance.exchange+xml",[m
[32m+[m[32m  "apr": "application/vnd.lotus-approach",[m
[32m+[m[32m  "pre": "application/vnd.lotus-freelance",[m
[32m+[m[32m  "nsf": "application/vnd.lotus-notes",[m
[32m+[m[32m  "org": "application/vnd.lotus-organizer",[m
[32m+[m[32m  "scm": "application/vnd.lotus-screencam",[m
[32m+[m[32m  "lwp": "application/vnd.lotus-wordpro",[m
[32m+[m[32m  "portpkg": "application/vnd.macports.portpkg",[m
[32m+[m[32m  "mcd": "application/vnd.mcd",[m
[32m+[m[32m  "mc1": "application/vnd.medcalcdata",[m
[32m+[m[32m  "cdkey": "application/vnd.mediastation.cdkey",[m
[32m+[m[32m  "mwf": "application/vnd.mfer",[m
[32m+[m[32m  "mfm": "application/vnd.mfmp",[m
[32m+[m[32m  "flo": "application/vnd.micrografx.flo",[m
[32m+[m[32m  "igx": "application/vnd.micrografx.igx",[m
[32m+[m[32m  "mif": "application/vnd.mif",[m
[32m+[m[32m  "daf": "application/vnd.mobius.daf",[m
[32m+[m[32m  "dis": "application/vnd.mobius.dis",[m
[32m+[m[32m  "mbk": "application/vnd.mobius.mbk",[m
[32m+[m[32m  "mqy": "application/vnd.mobius.mqy",[m
[32m+[m[32m  "msl": "application/vnd.mobius.msl",[m
[32m+[m[32m  "plc": "application/vnd.mobius.plc",[m
[32m+[m[32m  "txf": "application/vnd.mobius.txf",[m
[32m+[m[32m  "mpn": "application/vnd.mophun.application",[m
[32m+[m[32m  "mpc": "application/vnd.mophun.certificate",[m
[32m+[m[32m  "xul": "application/vnd.mozilla.xul+xml",[m
[32m+[m[32m  "cil": "application/vnd.ms-artgalry",[m
[32m+[m[32m  "cab": "application/vnd.ms-cab-compressed",[m
[32m+[m[32m  "xls": "application/vnd.ms-excel",[m
[32m+[m[32m  "xlm": "application/vnd.ms-excel",[m
[32m+[m[32m  "xla": "application/vnd.ms-excel",[m
[32m+[m[32m  "xlc": "application/vnd.ms-excel",[m
[32m+[m[32m  "xlt": "application/vnd.ms-excel",[m
[32m+[m[32m  "xlw": "application/vnd.ms-excel",[m
[32m+[m[32m  "xlam": "application/vnd.ms-excel.addin.macroenabled.12",[m
[32m+[m[32m  "xlsb": "application/vnd.ms-excel.sheet.binary.macroenabled.12",[m
[32m+[m[32m  "xlsm": "application/vnd.ms-excel.sheet.macroenabled.12",[m
[32m+[m[32m  "xltm": "application/vnd.ms-excel.template.macroenabled.12",[m
[32m+[m[32m  "eot": "application/vnd.ms-fontobject",[m
[32m+[m[32m  "chm": "application/vnd.ms-htmlhelp",[m
[32m+[m[32m  "ims": "application/vnd.ms-ims",[m
[32m+[m[32m  "lrm": "application/vnd.ms-lrm",[m
[32m+[m[32m  "thmx": "application/vnd.ms-officetheme",[m
[32m+[m[32m  "cat": "application/vnd.ms-pki.seccat",[m
[32m+[m[32m  "stl": "application/vnd.ms-pki.stl",[m
[32m+[m[32m  "ppt": "application/vnd.ms-powerpoint",[m
[32m+[m[32m  "pps": "application/vnd.ms-powerpoint",[m
[32m+[m[32m  "pot": "application/vnd.ms-powerpoint",[m
[32m+[m[32m  "ppam": "application/vnd.ms-powerpoint.addin.macroenabled.12",[m
[32m+[m[32m  "pptm": "application/vnd.ms-powerpoint.presentation.macroenabled.12",[m
[32m+[m[32m  "sldm": "application/vnd.ms-powerpoint.slide.macroenabled.12",[m
[32m+[m[32m  "ppsm": "application/vnd.ms-powerpoint.slideshow.macroenabled.12",[m
[32m+[m[32m  "potm": "application/vnd.ms-powerpoint.template.macroenabled.12",[m
[32m+[m[32m  "mpp": "application/vnd.ms-project",[m
[32m+[m[32m  "mpt": "application/vnd.ms-project",[m
[32m+[m[32m  "docm": "application/vnd.ms-word.document.macroenabled.12",[m
[32m+[m[32m  "dotm": "application/vnd.ms-word.template.macroenabled.12",[m
[32m+[m[32m  "wps": "application/vnd.ms-works",[m
[32m+[m[32m  "wks": "application/vnd.ms-works",[m
[32m+[m[32m  "wcm": "application/vnd.ms-works",[m
[32m+[m[32m  "wdb": "application/vnd.ms-works",[m
[32m+[m[32m  "wpl": "application/vnd.ms-wpl",[m
[32m+[m[32m  "xps": "application/vnd.ms-xpsdocument",[m
[32m+[m[32m  "mseq": "application/vnd.mseq",[m
[32m+[m[32m  "mus": "application/vnd.musician",[m
[32m+[m[32m  "msty": "application/vnd.muvee.style",[m
[32m+[m[32m  "taglet": "application/vnd.mynfc",[m
[32m+[m[32m  "nlu": "application/vnd.neurolanguage.nlu",[m
[32m+[m[32m  "ntf": "application/vnd.nitf",[m
[32m+[m[32m  "nitf": "application/vnd.nitf",[m
[32m+[m[32m  "nnd": "application/vnd.noblenet-directory",[m
[32m+[m[32m  "nns": "application/vnd.noblenet-sealer",[m
[32m+[m[32m  "nnw": "application/vnd.noblenet-web",[m
[32m+[m[32m  "ngdat": "application/vnd.nokia.n-gage.data",[m
[32m+[m[32m  "n-gage": "application/vnd.nokia.n-gage.symbian.install",[m
[32m+[m[32m  "rpst": "application/vnd.nokia.radio-preset",[m
[32m+[m[32m  "rpss": "application/vnd.nokia.radio-presets",[m
[32m+[m[32m  "edm": "application/vnd.novadigm.edm",[m
[32m+[m[32m  "edx": "application/vnd.novadigm.edx",[m
[32m+[m[32m  "ext": "application/vnd.novadigm.ext",[m
[32m+[m[32m  "odc": "application/vnd.oasis.opendocument.chart",[m
[32m+[m[32m  "otc": "application/vnd.oasis.opendocument.chart-template",[m
[32m+[m[32m  "odb": "application/vnd.oasis.opendocument.database",[m
[32m+[m[32m  "odf": "application/vnd.oasis.opendocument.formula",[m
[32m+[m[32m  "odft": "application/vnd.oasis.opendocument.formula-template",[m
[32m+[m[32m  "odg": "application/vnd.oasis.opendocument.graphics",[m
[32m+[m[32m  "otg": "application/vnd.oasis.opendocument.graphics-template",[m
[32m+[m[32m  "odi": "application/vnd.oasis.opendocument.image",[m
[32m+[m[32m  "oti": "application/vnd.oasis.opendocument.image-template",[m
[32m+[m[32m  "odp": "application/vnd.oasis.opendocument.presentation",[m
[32m+[m[32m  "otp": "application/vnd.oasis.opendocument.presentation-template",[m
[32m+[m[32m  "ods": "application/vnd.oasis.opendocument.spreadsheet",[m
[32m+[m[32m  "ots": "application/vnd.oasis.opendocument.spreadsheet-template",[m
[32m+[m[32m  "odt": "application/vnd.oasis.opendocument.text",[m
[32m+[m[32m  "odm": "application/vnd.oasis.opendocument.text-master",[m
[32m+[m[32m  "ott": "application/vnd.oasis.opendocument.text-template",[m
[32m+[m[32m  "oth": "application/vnd.oasis.opendocument.text-web",[m
[32m+[m[32m  "xo": "application/vnd.olpc-sugar",[m
[32m+[m[32m  "dd2": "application/vnd.oma.dd2+xml",[m
[32m+[m[32m  "oxt": "application/vnd.openofficeorg.extension",[m
[32m+[m[32m  "pptx": "application/vnd.openxmlformats-officedocument.presentationml.presentation",[m
[32m+[m[32m  "sldx": "application/vnd.openxmlformats-officedocument.presentationml.slide",[m
[32m+[m[32m  "ppsx": "application/vnd.openxmlformats-officedocument.presentationml.slideshow",[m
[32m+[m[32m  "potx": "application/vnd.openxmlformats-officedocument.presentationml.template",[m
[32m+[m[32m  "xlsx": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",[m
[32m+[m[32m  "xltx": "application/vnd.openxmlformats-officedocument.spreadsheetml.template",[m
[32m+[m[32m  "docx": "application/vnd.openxmlformats-officedocument.wordprocessingml.document",[m
[32m+[m[32m  "dotx": "application/vnd.openxmlformats-officedocument.wordprocessingml.template",[m
[32m+[m[32m  "mgp": "application/vnd.osgeo.mapguide.package",[m
[32m+[m[32m  "dp": "application/vnd.osgi.dp",[m
[32m+[m[32m  "esa": "application/vnd.osgi.subsystem",[m
[32m+[m[32m  "pdb": "application/x-pilot",[m
[32m+[m[32m  "pqa": "application/vnd.palm",[m
[32m+[m[32m  "oprc": "application/vnd.palm",[m
[32m+[m[32m  "paw": "application/vnd.pawaafile",[m
[32m+[m[32m  "str": "application/vnd.pg.format",[m
[32m+[m[32m  "ei6": "application/vnd.pg.osasli",[m
[32m+[m[32m  "efif": "application/vnd.picsel",[m
[32m+[m[32m  "wg": "application/vnd.pmi.widget",[m
[32m+[m[32m  "plf": "application/vnd.pocketlearn",[m
[32m+[m[32m  "pbd": "application/vnd.powerbuilder6",[m
[32m+[m[32m  "box": "application/vnd.previewsystems.box",[m
[32m+[m[32m  "mgz": "application/vnd.proteus.magazine",[m
[32m+[m[32m  "qps": "application/vnd.publishare-delta-tree",[m
[32m+[m[32m  "ptid": "application/vnd.pvi.ptid1",[m
[32m+[m[32m  "qxd": "application/vnd.quark.quarkxpress",[m
[32m+[m[32m  "qxt": "application/vnd.quark.quarkxpress",[m
[32m+[m[32m  "qwd": "application/vnd.quark.quarkxpress",[m
[32m+[m[32m  "qwt": "application/vnd.quark.quarkxpress",[m
[32m+[m[32m  "qxl": "application/vnd.quark.quarkxpress",[m
[32m+[m[32m  "qxb": "application/vnd.quark.quarkxpress",[m
[32m+[m[32m  "bed": "application/vnd.realvnc.bed",[m
[32m+[m[32m  "mxl": "application/vnd.recordare.musicxml",[m
[32m+[m[32m  "musicxml": "application/vnd.recordare.musicxml+xml",[m
[32m+[m[32m  "cryptonote": "application/vnd.rig.cryptonote",[m
[32m+[m[32m  "cod": "application/vnd.rim.cod",[m
[32m+[m[32m  "rm": "application/vnd.rn-realmedia",[m
[32m+[m[32m  "rmvb": "application/vnd.rn-realmedia-vbr",[m
[32m+[m[32m  "link66": "application/vnd.route66.link66+xml",[m
[32m+[m[32m  "st": "application/vnd.sailingtracker.track",[m
[32m+[m[32m  "see": "application/vnd.seemail",[m
[32m+[m[32m  "sema": "application/vnd.sema",[m
[32m+[m[32m  "semd": "application/vnd.semd",[m
[32m+[m[32m  "semf": "application/vnd.semf",[m
[32m+[m[32m  "ifm": "application/vnd.shana.informed.formdata",[m
[32m+[m[32m  "itp": "application/vnd.shana.informed.formtemplate",[m
[32m+[m[32m  "iif": "application/vnd.shana.informed.interchange",[m
[32m+[m[32m  "ipk": "application/vnd.shana.informed.package",[m
[32m+[m[32m  "twd": "application/vnd.simtech-mindmapper",[m
[32m+[m[32m  "twds": "application/vnd.simtech-mindmapper",[m
[32m+[m[32m  "mmf": "application/vnd.smaf",[m
[32m+[m[32m  "teacher": "application/vnd.smart.teacher",[m
[32m+[m[32m  "sdkm": "application/vnd.solent.sdkm+xml",[m
[32m+[m[32m  "sdkd": "application/vnd.solent.sdkm+xml",[m
[32m+[m[32m  "dxp": "application/vnd.spotfire.dxp",[m
[32m+[m[32m  "sfs": "application/vnd.spotfire.sfs",[m
[32m+[m[32m  "sdc": "application/vnd.stardivision.calc",[m
[32m+[m[32m  "sda": "application/vnd.stardivision.draw",[m
[32m+[m[32m  "sdd": "application/vnd.stardivision.impress",[m
[32m+[m[32m  "smf": "application/vnd.stardivision.math",[m
[32m+[m[32m  "sdw": "application/vnd.stardivision.writer",[m
[32m+[m[32m  "vor": "application/vnd.stardivision.writer",[m
[32m+[m[32m  "sgl": "application/vnd.stardivision.writer-global",[m
[32m+[m[32m  "smzip": "application/vnd.stepmania.package",[m
[32m+[m[32m  "sm": "application/vnd.stepmania.stepchart",[m
[32m+[m[32m  "sxc": "application/vnd.sun.xml.calc",[m
[32m+[m[32m  "stc": "application/vnd.sun.xml.calc.template",[m
[32m+[m[32m  "sxd": "application/vnd.sun.xml.draw",[m
[32m+[m[32m  "std": "application/vnd.sun.xml.draw.template",[m
[32m+[m[32m  "sxi": "application/vnd.sun.xml.impress",[m
[32m+[m[32m  "sti": "application/vnd.sun.xml.impress.template",[m
[32m+[m[32m  "sxm": "application/vnd.sun.xml.math",[m
[32m+[m[32m  "sxw": "application/vnd.sun.xml.writer",[m
[32m+[m[32m  "sxg": "application/vnd.sun.xml.writer.global",[m
[32m+[m[32m  "stw": "application/vnd.sun.xml.writer.template",[m
[32m+[m[32m  "sus": "application/vnd.sus-calendar",[m
[32m+[m[32m  "susp": "application/vnd.sus-calendar",[m
[32m+[m[32m  "svd": "application/vnd.svd",[m
[32m+[m[32m  "sis": "application/vnd.symbian.install",[m
[32m+[m[32m  "sisx": "application/vnd.symbian.install",[m
[32m+[m[32m  "xsm": "application/vnd.syncml+xml",[m
[32m+[m[32m  "bdm": "application/vnd.syncml.dm+wbxml",[m
[32m+[m[32m  "xdm": "application/vnd.syncml.dm+xml",[m
[32m+[m[32m  "tao": "application/vnd.tao.intent-module-archive",[m
[32m+[m[32m  "pcap": "application/vnd.tcpdump.pcap",[m
[32m+[m[32m  "cap": "application/vnd.tcpdump.pcap",[m
[32m+[m[32m  "dmp": "application/vnd.tcpdump.pcap",[m
[32m+[m[32m  "tmo": "application/vnd.tmobile-livetv",[m
[32m+[m[32m  "tpt": "application/vnd.trid.tpt",[m
[32m+[m[32m  "mxs": "application/vnd.triscape.mxs",[m
[32m+[m[32m  "tra": "application/vnd.trueapp",[m
[32m+[m[32m  "ufd": "application/vnd.ufdl",[m
[32m+[m[32m  "ufdl": "application/vnd.ufdl",[m
[32m+[m[32m  "utz": "application/vnd.uiq.theme",[m
[32m+[m[32m  "umj": "application/vnd.umajin",[m
[32m+[m[32m  "unityweb": "application/vnd.unity",[m
[32m+[m[32m  "uoml": "application/vnd.uoml+xml",[m
[32m+[m[32m  "vcx": "application/vnd.vcx",[m
[32m+[m[32m  "vsd": "application/vnd.visio",[m
[32m+[m[32m  "vst": "application/vnd.visio",[m
[32m+[m[32m  "vss": "application/vnd.visio",[m
[32m+[m[32m  "vsw": "application/vnd.visio",[m
[32m+[m[32m  "vis": "application/vnd.visionary",[m
[32m+[m[32m  "vsf": "application/vnd.vsf",[m
[32m+[m[32m  "wbxml": "application/vnd.wap.wbxml",[m
[32m+[m[32m  "wmlc": "application/vnd.wap.wmlc",[m
[32m+[m[32m  "wmlsc": "application/vnd.wap.wmlscriptc",[m
[32m+[m[32m  "wtb": "application/vnd.webturbo",[m
[32m+[m[32m  "nbp": "application/vnd.wolfram.player",[m
[32m+[m[32m  "wpd": "application/vnd.wordperfect",[m
[32m+[m[32m  "wqd": "application/vnd.wqd",[m
[32m+[m[32m  "stf": "application/vnd.wt.stf",[m
[32m+[m[32m  "xar": "application/vnd.xara",[m
[32m+[m[32m  "xfdl": "application/vnd.xfdl",[m
[32m+[m[32m  "hvd": "application/vnd.yamaha.hv-dic",[m
[32m+[m[32m  "hvs": "application/vnd.yamaha.hv-script",[m
[32m+[m[32m  "hvp": "application/vnd.yamaha.hv-voice",[m
[32m+[m[32m  "osf": "application/vnd.yamaha.openscoreformat",[m
[32m+[m[32m  "osfpvg": "application/vnd.yamaha.openscoreformat.osfpvg+xml",[m
[32m+[m[32m  "saf": "application/vnd.yamaha.smaf-audio",[m
[32m+[m[32m  "spf": "application/vnd.yamaha.smaf-phrase",[m
[32m+[m[32m  "cmp": "application/vnd.yellowriver-custom-menu",[m
[32m+[m[32m  "zir": "application/vnd.zul",[m
[32m+[m[32m  "zirz": "application/vnd.zul",[m
[32m+[m[32m  "zaz": "application/vnd.zzazz.deck+xml",[m
[32m+[m[32m  "vxml": "application/voicexml+xml",[m
[32m+[m[32m  "wgt": "application/widget",[m
[32m+[m[32m  "hlp": "application/winhlp",[m
[32m+[m[32m  "wsdl": "application/wsdl+xml",[m
[32m+[m[32m  "wspolicy": "application/wspolicy+xml",[m
[32m+[m[32m  "7z": "application/x-7z-compressed",[m
[32m+[m[32m  "abw": "application/x-abiword",[m
[32m+[m[32m  "ace": "application/x-ace-compressed",[m
[32m+[m[32m  "aab": "application/x-authorware-bin",[m
[32m+[m[32m  "x32": "application/x-authorware-bin",[m
[32m+[m[32m  "u32": "application/x-authorware-bin",[m
[32m+[m[32m  "vox": "application/x-authorware-bin",[m
[32m+[m[32m  "aam": "application/x-authorware-map",[m
[32m+[m[32m  "aas": "application/x-authorware-seg",[m
[32m+[m[32m  "bcpio": "application/x-bcpio",[m
[32m+[m[32m  "torrent": "application/x-bittorrent",[m
[32m+[m[32m  "blb": "application/x-blorb",[m
[32m+[m[32m  "blorb": "application/x-blorb",[m
[32m+[m[32m  "bz": "application/x-bzip",[m
[32m+[m[32m  "bz2": "application/x-bzip2",[m
[32m+[m[32m  "boz": "application/x-bzip2",[m
[32m+[m[32m  "cbr": "application/x-cbr",[m
[32m+[m[32m  "cba": "application/x-cbr",[m
[32m+[m[32m  "cbt": "application/x-cbr",[m
[32m+[m[32m  "cbz": "application/x-cbr",[m
[32m+[m[32m  "cb7": "application/x-cbr",[m
[32m+[m[32m  "vcd": "application/x-cdlink",[m
[32m+[m[32m  "cfs": "application/x-cfs-compressed",[m
[32m+[m[32m  "chat": "application/x-chat",[m
[32m+[m[32m  "pgn": "application/x-chess-pgn",[m
[32m+[m[32m  "crx": "application/x-chrome-extension",[m
[32m+[m[32m  "cco": "application/x-cocoa",[m
[32m+[m[32m  "nsc": "application/x-conference",[m
[32m+[m[32m  "cpio": "application/x-cpio",[m
[32m+[m[32m  "csh": "application/x-csh",[m
[32m+[m[32m  "udeb": "application/x-debian-package",[m
[32m+[m[32m  "dgc": "application/x-dgc-compressed",[m
[32m+[m[32m  "dir": "application/x-director",[m
[32m+[m[32m  "dcr": "application/x-director",[m
[32m+[m[32m  "dxr": "application/x-director",[m
[32m+[m[32m  "cst": "application/x-director",[m
[32m+[m[32m  "cct": "application/x-director",[m
[32m+[m[32m  "cxt": "application/x-director",[m
[32m+[m[32m  "w3d": "application/x-director",[m
[32m+[m[32m  "fgd": "application/x-director",[m
[32m+[m[32m  "swa": "application/x-director",[m
[32m+[m[32m  "wad": "application/x-doom",[m
[32m+[m[32m  "ncx": "application/x-dtbncx+xml",[m
[32m+[m[32m  "dtb": "application/x-dtbook+xml",[m
[32m+[m[32m  "res": "application/x-dtbresource+xml",[m
[32m+[m[32m  "dvi": "application/x-dvi",[m
[32m+[m[32m  "evy": "application/x-envoy",[m
[32m+[m[32m  "eva": "application/x-eva",[m
[32m+[m[32m  "bdf": "application/x-font-bdf",[m
[32m+[m[32m  "gsf": "application/x-font-ghostscript",[m
[32m+[m[32m  "psf": "application/x-font-linux-psf",[m
[32m+[m[32m  "otf": "font/opentype",[m
[32m+[m[32m  "pcf": "application/x-font-pcf",[m
[32m+[m[32m  "snf": "application/x-font-snf",[m
[32m+[m[32m  "ttf": "application/x-font-ttf",[m
[32m+[m[32m  "ttc": "application/x-font-ttf",[m
[32m+[m[32m  "pfa": "application/x-font-type1",[m
[32m+[m[32m  "pfb": "application/x-font-type1",[m
[32m+[m[32m  "pfm": "application/x-font-type1",[m
[32m+[m[32m  "afm": "application/x-font-type1",[m
[32m+[m[32m  "arc": "application/x-freearc",[m
[32m+[m[32m  "spl": "application/x-futuresplash",[m
[32m+[m[32m  "gca": "application/x-gca-compressed",[m
[32m+[m[32m  "ulx": "application/x-glulx",[m
[32m+[m[32m  "gnumeric": "application/x-gnumeric",[m
[32m+[m[32m  "gramps": "application/x-gramps-xml",[m
[32m+[m[32m  "gtar": "application/x-gtar",[m
[32m+[m[32m  "hdf": "application/x-hdf",[m
[32m+[m[32m  "php": "application/x-httpd-php",[m
[32m+[m[32m  "install": "application/x-install-instructions",[m
[32m+[m[32m  "jardiff": "application/x-java-archive-diff",[m
[32m+[m[32m  "jnlp": "application/x-java-jnlp-file",[m
[32m+[m[32m  "latex": "application/x-latex",[m
[32m+[m[32m  "luac": "application/x-lua-bytecode",[m
[32m+[m[32m  "lzh": "application/x-lzh-compressed",[m
[32m+[m[32m  "lha": "application/x-lzh-compressed",[m
[32m+[m[32m  "run": "application/x-makeself",[m
[32m+[m[32m  "mie": "application/x-mie",[m
[32m+[m[32m  "prc": "application/x-pilot",[m
[32m+[m[32m  "mobi": "application/x-mobipocket-ebook",[m
[32m+[m[32m  "application": "application/x-ms-application",[m
[32m+[m[32m  "lnk": "application/x-ms-shortcut",[m
[32m+[m[32m  "wmd": "application/x-ms-wmd",[m
[32m+[m[32m  "wmz": "application/x-msmetafile",[m
[32m+[m[32m  "xbap": "application/x-ms-xbap",[m
[32m+[m[32m  "mdb": "application/x-msaccess",[m
[32m+[m[32m  "obd": "application/x-msbinder",[m
[32m+[m[32m  "crd": "application/x-mscardfile",[m
[32m+[m[32m  "clp": "application/x-msclip",[m
[32m+[m[32m  "com": "application/x-msdownload",[m
[32m+[m[32m  "bat": "application/x-msdownload",[m
[32m+[m[32m  "mvb": "application/x-msmediaview",[m
[32m+[m[32m  "m13": "application/x-msmediaview",[m
[32m+[m[32m  "m14": "application/x-msmediaview",[m
[32m+[m[32m  "wmf": "application/x-msmetafile",[m
[32m+[m[32m  "emf": "application/x-msmetafile",[m
[32m+[m[32m  "emz": "application/x-msmetafile",[m
[32m+[m[32m  "mny": "application/x-msmoney",[m
[32m+[m[32m  "pub": "application/x-mspublisher",[m
[32m+[m[32m  "scd": "application/x-msschedule",[m
[32m+[m[32m  "trm": "application/x-msterminal",[m
[32m+[m[32m  "wri": "application/x-mswrite",[m
[32m+[m[32m  "nc": "application/x-netcdf",[m
[32m+[m[32m  "cdf": "application/x-netcdf",[m
[32m+[m[32m  "pac": "application/x-ns-proxy-autoconfig",[m
[32m+[m[32m  "nzb": "application/x-nzb",[m
[32m+[m[32m  "pl": "application/x-perl",[m
[32m+[m[32m  "pm": "application/x-perl",[m
[32m+[m[32m  "p12": "application/x-pkcs12",[m
[32m+[m[32m  "pfx": "application/x-pkcs12",[m
[32m+[m[32m  "p7b": "application/x-pkcs7-certificates",[m
[32m+[m[32m  "spc": "application/x-pkcs7-certificates",[m
[32m+[m[32m  "p7r": "application/x-pkcs7-certreqresp",[m
[32m+[m[32m  "rar": "application/x-rar-compressed",[m
[32m+[m[32m  "rpm": "application/x-redhat-package-manager",[m
[32m+[m[32m  "ris": "application/x-research-info-systems",[m
[32m+[m[32m  "sea": "application/x-sea",[m
[32m+[m[32m  "sh": "application/x-sh",[m
[32m+[m[32m  "shar": "application/x-shar",[m
[32m+[m[32m  "swf": "application/x-shockwave-flash",[m
[32m+[m[32m  "xap": "application/x-silverlight-app",[m
[32m+[m[32m  "sql": "application/x-sql",[m
[32m+[m[32m  "sit": "application/x-stuffit",[m
[32m+[m[32m  "sitx": "application/x-stuffitx",[m
[32m+[m[32m  "srt": "application/x-subrip",[m
[32m+[m[32m  "sv4cpio": "application/x-sv4cpio",[m
[32m+[m[32m  "sv4crc": "application/x-sv4crc",[m
[32m+[m[32m  "t3": "application/x-t3vm-image",[m
[32m+[m[32m  "gam": "application/x-tads",[m
[32m+[m[32m  "tar": "application/x-tar",[m
[32m+[m[32m  "tcl": "application/x-tcl",[m
[32m+[m[32m  "tk": "application/x-tcl",[m
[32m+[m[32m  "tex": "application/x-tex",[m
[32m+[m[32m  "tfm": "application/x-tex-tfm",[m
[32m+[m[32m  "texinfo": "application/x-texinfo",[m
[32m+[m[32m  "texi": "application/x-texinfo",[m
[32m+[m[32m  "obj": "application/x-tgif",[m
[32m+[m[32m  "ustar": "application/x-ustar",[m
[32m+[m[32m  "src": "application/x-wais-source",[m
[32m+[m[32m  "webapp": "application/x-web-app-manifest+json",[m
[32m+[m[32m  "der": "application/x-x509-ca-cert",[m
[32m+[m[32m  "crt": "application/x-x509-ca-cert",[m
[32m+[m[32m  "pem": "application/x-x509-ca-cert",[m
[32m+[m[32m  "fig": "application/x-xfig",[m
[32m+[m[32m  "xlf": "application/x-xliff+xml",[m
[32m+[m[32m  "xpi": "application/x-xpinstall",[m
[32m+[m[32m  "xz": "application/x-xz",[m
[32m+[m[32m  "z1": "application/x-zmachine",[m
[32m+[m[32m  "z2": "application/x-zmachine",[m
[32m+[m[32m  "z3": "application/x-zmachine",[m
[32m+[m[32m  "z4": "application/x-zmachine",[m
[32m+[m[32m  "z5": "application/x-zmachine",[m
[32m+[m[32m  "z6": "application/x-zmachine",[m
[32m+[m[32m  "z7": "application/x-zmachine",[m
[32m+[m[32m  "z8": "application/x-zmachine",[m
[32m+[m[32m  "xaml": "application/xaml+xml",[m
[32m+[m[32m  "xdf": "application/xcap-diff+xml",[m
[32m+[m[32m  "xenc": "application/xenc+xml",[m
[32m+[m[32m  "xhtml": "application/xhtml+xml",[m
[32m+[m[32m  "xht": "application/xhtml+xml",[m
[32m+[m[32m  "xml": "text/xml",[m
[32m+[m[32m  "xsl": "application/xml",[m
[32m+[m[32m  "xsd": "application/xml",[m
[32m+[m[32m  "rng": "application/xml",[m
[32m+[m[32m  "dtd": "application/xml-dtd",[m
[32m+[m[32m  "xop": "application/xop+xml",[m
[32m+[m[32m  "xpl": "application/xproc+xml",[m
[32m+[m[32m  "xslt": "application/xslt+xml",[m
[32m+[m[32m  "xspf": "application/xspf+xml",[m
[32m+[m[32m  "mxml": "application/xv+xml",[m
[32m+[m[32m  "xhvml": "application/xv+xml",[m
[32m+[m[32m  "xvml": "application/xv+xml",[m
[32m+[m[32m  "xvm": "application/xv+xml",[m
[32m+[m[32m  "yang": "application/yang",[m
[32m+[m[32m  "yin": "application/yin+xml",[m
[32m+[m[32m  "zip": "application/zip",[m
[32m+[m[32m  "3gpp": "video/3gpp",[m
[32m+[m[32m  "adp": "audio/adpcm",[m
[32m+[m[32m  "au": "audio/basic",[m
[32m+[m[32m  "snd": "audio/basic",[m
[32m+[m[32m  "mid": "audio/midi",[m
[32m+[m[32m  "midi": "audio/midi",[m
[32m+[m[32m  "kar": "audio/midi",[m
[32m+[m[32m  "rmi": "audio/midi",[m
[32m+[m[32m  "mp3": "audio/mpeg",[m
[32m+[m[32m  "m4a": "audio/x-m4a",[m
[32m+[m[32m  "mp4a": "audio/mp4",[m
[32m+[m[32m  "mpga": "audio/mpeg",[m
[32m+[m[32m  "mp2": "audio/mpeg",[m
[32m+[m[32m  "mp2a": "audio/mpeg",[m
[32m+[m[32m  "m2a": "audio/mpeg",[m
[32m+[m[32m  "m3a": "audio/mpeg",[m
[32m+[m[32m  "oga": "audio/ogg",[m
[32m+[m[32m  "ogg": "audio/ogg",[m
[32m+[m[32m  "spx": "audio/ogg",[m
[32m+[m[32m  "s3m": "audio/s3m",[m
[32m+[m[32m  "sil": "audio/silk",[m
[32m+[m[32m  "uva": "audio/vnd.dece.audio",[m
[32m+[m[32m  "uvva": "audio/vnd.dece.audio",[m
[32m+[m[32m  "eol": "audio/vnd.digital-winds",[m
[32m+[m[32m  "dra": "audio/vnd.dra",[m
[32m+[m[32m  "dts": "audio/vnd.dts",[m
[32m+[m[32m  "dtshd": "audio/vnd.dts.hd",[m
[32m+[m[32m  "lvp": "audio/vnd.lucent.voice",[m
[32m+[m[32m  "pya": "audio/vnd.ms-playready.media.pya",[m
[32m+[m[32m  "ecelp4800": "audio/vnd.nuera.ecelp4800",[m
[32m+[m[32m  "ecelp7470": "audio/vnd.nuera.ecelp7470",[m
[32m+[m[32m  "ecelp9600": "audio/vnd.nuera.ecelp9600",[m
[32m+[m[32m  "rip": "audio/vnd.rip",[m
[32m+[m[32m  "wav": "audio/x-wav",[m
[32m+[m[32m  "weba": "audio/webm",[m
[32m+[m[32m  "aac": "audio/x-aac",[m
[32m+[m[32m  "aif": "audio/x-aiff",[m
[32m+[m[32m  "aiff": "audio/x-aiff",[m
[32m+[m[32m  "aifc": "audio/x-aiff",[m
[32m+[m[32m  "caf": "audio/x-caf",[m
[32m+[m[32m  "flac": "audio/x-flac",[m
[32m+[m[32m  "mka": "audio/x-matroska",[m
[32m+[m[32m  "m3u": "audio/x-mpegurl",[m
[32m+[m[32m  "wax": "audio/x-ms-wax",[m
[32m+[m[32m  "wma": "audio/x-ms-wma",[m
[32m+[m[32m  "ram": "audio/x-pn-realaudio",[m
[32m+[m[32m  "ra": "audio/x-realaudio",[m
[32m+[m[32m  "rmp": "audio/x-pn-realaudio-plugin",[m
[32m+[m[32m  "xm": "audio/xm",[m
[32m+[m[32m  "cdx": "chemical/x-cdx",[m
[32m+[m[32m  "cif": "chemical/x-cif",[m
[32m+[m[32m  "cmdf": "chemical/x-cmdf",[m
[32m+[m[32m  "cml": "chemical/x-cml",[m
[32m+[m[32m  "csml": "chemical/x-csml",[m
[32m+[m[32m  "xyz": "chemical/x-xyz",[m
[32m+[m[32m  "bmp": "image/x-ms-bmp",[m
[32m+[m[32m  "cgm": "image/cgm",[m
[32m+[m[32m  "g3": "image/g3fax",[m
[32m+[m[32m  "gif": "image/gif",[m
[32m+[m[32m  "ief": "image/ief",[m
[32m+[m[32m  "jpeg": "image/jpeg",[m
[32m+[m[32m  "jpg": "image/jpeg",[m
[32m+[m[32m  "jpe": "image/jpeg",[m
[32m+[m[32m  "ktx": "image/ktx",[m
[32m+[m[32m  "png": "image/png",[m
[32m+[m[32m  "btif": "image/prs.btif",[m
[32m+[m[32m  "sgi": "image/sgi",[m
[32m+[m[32m  "svg": "image/svg+xml",[m
[32m+[m[32m  "svgz": "image/svg+xml",[m
[32m+[m[32m  "tiff": "image/tiff",[m
[32m+[m[32m  "tif": "image/tiff",[m
[32m+[m[32m  "psd": "image/vnd.adobe.photoshop",[m
[32m+[m[32m  "uvi": "image/vnd.dece.graphic",[m
[32m+[m[32m  "uvvi": "image/vnd.dece.graphic",[m
[32m+[m[32m  "uvg": "image/vnd.dece.graphic",[m
[32m+[m[32m  "uvvg": "image/vnd.dece.graphic",[m
[32m+[m[32m  "djvu": "image/vnd.djvu",[m
[32m+[m[32m  "djv": "image/vnd.djvu",[m
[32m+[m[32m  "sub": "text/vnd.dvb.subtitle",[m
[32m+[m[32m  "dwg": "image/vnd.dwg",[m
[32m+[m[32m  "dxf": "image/vnd.dxf",[m
[32m+[m[32m  "fbs": "image/vnd.fastbidsheet",[m
[32m+[m[32m  "fpx": "image/vnd.fpx",[m
[32m+[m[32m  "fst": "image/vnd.fst",[m
[32m+[m[32m  "mmr": "image/vnd.fujixerox.edmics-mmr",[m
[32m+[m[32m  "rlc": "image/vnd.fujixerox.edmics-rlc",[m
[32m+[m[32m  "mdi": "image/vnd.ms-modi",[m
[32m+[m[32m  "wdp": "image/vnd.ms-photo",[m
[32m+[m[32m  "npx": "image/vnd.net-fpx",[m
[32m+[m[32m  "wbmp": "image/vnd.wap.wbmp",[m
[32m+[m[32m  "xif": "image/vnd.xiff",[m
[32m+[m[32m  "webp": "image/webp",[m
[32m+[m[32m  "3ds": "image/x-3ds",[m
[32m+[m[32m  "ras": "image/x-cmu-raster",[m
[32m+[m[32m  "cmx": "image/x-cmx",[m
[32m+[m[32m  "fh": "image/x-freehand",[m
[32m+[m[32m  "fhc": "image/x-freehand",[m
[32m+[m[32m  "fh4": "image/x-freehand",[m
[32m+[m[32m  "fh5": "image/x-freehand",[m
[32m+[m[32m  "fh7": "image/x-freehand",[m
[32m+[m[32m  "ico": "image/x-icon",[m
[32m+[m[32m  "jng": "image/x-jng",[m
[32m+[m[32m  "sid": "image/x-mrsid-image",[m
[32m+[m[32m  "pcx": "image/x-pcx",[m
[32m+[m[32m  "pic": "image/x-pict",[m
[32m+[m[32m  "pct": "image/x-pict",[m
[32m+[m[32m  "pnm": "image/x-portable-anymap",[m
[32m+[m[32m  "pbm": "image/x-portable-bitmap",[m
[32m+[m[32m  "pgm": "image/x-portable-graymap",[m
[32m+[m[32m  "ppm": "image/x-portable-pixmap",[m
[32m+[m[32m  "rgb": "image/x-rgb",[m
[32m+[m[32m  "tga": "image/x-tga",[m
[32m+[m[32m  "xbm": "image/x-xbitmap",[m
[32m+[m[32m  "xpm": "image/x-xpixmap",[m
[32m+[m[32m  "xwd": "image/x-xwindowdump",[m
[32m+[m[32m  "eml": "message/rfc822",[m
[32m+[m[32m  "mime": "message/rfc822",[m
[32m+[m[32m  "igs": "model/iges",[m
[32m+[m[32m  "iges": "model/iges",[m
[32m+[m[32m  "msh": "model/mesh",[m
[32m+[m[32m  "mesh": "model/mesh",[m
[32m+[m[32m  "silo": "model/mesh",[m
[32m+[m[32m  "dae": "model/vnd.collada+xml",[m
[32m+[m[32m  "dwf": "model/vnd.dwf",[m
[32m+[m[32m  "gdl": "model/vnd.gdl",[m
[32m+[m[32m  "gtw": "model/vnd.gtw",[m
[32m+[m[32m  "mts": "model/vnd.mts",[m
[32m+[m[32m  "vtu": "model/vnd.vtu",[m
[32m+[m[32m  "wrl": "model/vrml",[m
[32m+[m[32m  "vrml": "model/vrml",[m
[32m+[m[32m  "x3db": "model/x3d+binary",[m
[32m+[m[32m  "x3dbz": "model/x3d+binary",[m
[32m+[m[32m  "x3dv": "model/x3d+vrml",[m
[32m+[m[32m  "x3dvz": "model/x3d+vrml",[m
[32m+[m[32m  "x3d": "model/x3d+xml",[m
[32m+[m[32m  "x3dz": "model/x3d+xml",[m
[32m+[m[32m  "appcache": "text/cache-manifest",[m
[32m+[m[32m  "manifest": "text/cache-manifest",[m
[32m+[m[32m  "ics": "text/calendar",[m
[32m+[m[32m  "ifb": "text/calendar",[m
[32m+[m[32m  "coffee": "text/coffeescript",[m
[32m+[m[32m  "litcoffee": "text/coffeescript",[m
[32m+[m[32m  "css": "text/css",[m
[32m+[m[32m  "csv": "text/csv",[m
[32m+[m[32m  "hjson": "text/hjson",[m
[32m+[m[32m  "html": "text/html",[m
[32m+[m[32m  "htm": "text/html",[m
[32m+[m[32m  "shtml": "text/html",[m
[32m+[m[32m  "jade": "text/jade",[m
[32m+[m[32m  "jsx": "text/jsx",[m
[32m+[m[32m  "less": "text/less",[m
[32m+[m[32m  "mml": "text/mathml",[m
[32m+[m[32m  "n3": "text/n3",[m
[32m+[m[32m  "txt": "text/plain",[m
[32m+[m[32m  "text": "text/plain",[m
[32m+[m[32m  "conf": "text/plain",[m
[32m+[m[32m  "def": "text/plain",[m
[32m+[m[32m  "list": "text/plain",[m
[32m+[m[32m  "log": "text/plain",[m
[32m+[m[32m  "in": "text/plain",[m
[32m+[m[32m  "ini": "text/plain",[m
[32m+[m[32m  "dsc": "text/prs.lines.tag",[m
[32m+[m[32m  "rtx": "text/richtext",[m
[32m+[m[32m  "sgml": "text/sgml",[m
[32m+[m[32m  "sgm": "text/sgml",[m
[32m+[m[32m  "slim": "text/slim",[m
[32m+[m[32m  "slm": "text/slim",[m
[32m+[m[32m  "stylus": "text/stylus",[m
[32m+[m[32m  "styl": "text/stylus",[m
[32m+[m[32m  "tsv": "text/tab-separated-values",[m
[32m+[m[32m  "t": "text/troff",[m
[32m+[m[32m  "tr": "text/troff",[m
[32m+[m[32m  "roff": "text/troff",[m
[32m+[m[32m  "man": "text/troff",[m
[32m+[m[32m  "me": "text/troff",[m
[32m+[m[32m  "ms": "text/troff",[m
[32m+[m[32m  "ttl": "text/turtle",[m
[32m+[m[32m  "uri": "text/uri-list",[m
[32m+[m[32m  "uris": "text/uri-list",[m
[32m+[m[32m  "urls": "text/uri-list",[m
[32m+[m[32m  "vcard": "text/vcard",[m
[32m+[m[32m  "curl": "text/vnd.curl",[m
[32m+[m[32m  "dcurl": "text/vnd.curl.dcurl",[m
[32m+[m[32m  "mcurl": "text/vnd.curl.mcurl",[m
[32m+[m[32m  "scurl": "text/vnd.curl.scurl",[m
[32m+[m[32m  "fly": "text/vnd.fly",[m
[32m+[m[32m  "flx": "text/vnd.fmi.flexstor",[m
[32m+[m[32m  "gv": "text/vnd.graphviz",[m
[32m+[m[32m  "3dml": "text/vnd.in3d.3dml",[m
[32m+[m[32m  "spot": "text/vnd.in3d.spot",[m
[32m+[m[32m  "jad": "text/vnd.sun.j2me.app-descriptor",[m
[32m+[m[32m  "wml": "text/vnd.wap.wml",[m
[32m+[m[32m  "wmls": "text/vnd.wap.wmlscript",[m
[32m+[m[32m  "vtt": "text/vtt",[m
[32m+[m[32m  "s": "text/x-asm",[m
[32m+[m[32m  "asm": "text/x-asm",[m
[32m+[m[32m  "c": "text/x-c",[m
[32m+[m[32m  "cc": "text/x-c",[m
[32m+[m[32m  "cxx": "text/x-c",[m
[32m+[m[32m  "cpp": "text/x-c",[m
[32m+[m[32m  "h": "text/x-c",[m
[32m+[m[32m  "hh": "text/x-c",[m
[32m+[m[32m  "dic": "text/x-c",[m
[32m+[m[32m  "htc": "text/x-component",[m
[32m+[m[32m  "f": "text/x-fortran",[m
[32m+[m[32m  "for": "text/x-fortran",[m
[32m+[m[32m  "f77": "text/x-fortran",[m
[32m+[m[32m  "f90": "text/x-fortran",[m
[32m+[m[32m  "hbs": "text/x-handlebars-template",[m
[32m+[m[32m  "java": "text/x-java-source",[m
[32m+[m[32m  "lua": "text/x-lua",[m
[32m+[m[32m  "markdown": "text/x-markdown",[m
[32m+[m[32m  "md": "text/x-markdown",[m
[32m+[m[32m  "mkd": "text/x-markdown",[m
[32m+[m[32m  "nfo": "text/x-nfo",[m
[32m+[m[32m  "opml": "text/x-opml",[m
[32m+[m[32m  "p": "text/x-pascal",[m
[32m+[m[32m  "pas": "text/x-pascal",[m
[32m+[m[32m  "pde": "text/x-processing",[m
[32m+[m[32m  "sass": "text/x-sass",[m
[32m+[m[32m  "scss": "text/x-scss",[m
[32m+[m[32m  "etx": "text/x-setext",[m
[32m+[m[32m  "sfv": "text/x-sfv",[m
[32m+[m[32m  "ymp": "text/x-suse-ymp",[m
[32m+[m[32m  "uu": "text/x-uuencode",[m
[32m+[m[32m  "vcs": "text/x-vcalendar",[m
[32m+[m[32m  "vcf": "text/x-vcard",[m
[32m+[m[32m  "yaml": "text/yaml",[m
[32m+[m[32m  "yml": "text/yaml",[m
[32m+[m[32m  "3gp": "video/3gpp",[m
[32m+[m[32m  "3g2": "video/3gpp2",[m
[32m+[m[32m  "h261": "video/h261",[m
[32m+[m[32m  "h263": "video/h263",[m
[32m+[m[32m  "h264": "video/h264",[m
[32m+[m[32m  "jpgv": "video/jpeg",[m
[32m+[m[32m  "jpm": "video/jpm",[m
[32m+[m[32m  "jpgm": "video/jpm",[m
[32m+[m[32m  "mj2": "video/mj2",[m
[32m+[m[32m  "mjp2": "video/mj2",[m
[32m+[m[32m  "ts": "video/mp2t",[m
[32m+[m[32m  "mp4": "video/mp4",[m
[32m+[m[32m  "mp4v": "video/mp4",[m
[32m+[m[32m  "mpg4": "video/mp4",[m
[32m+[m[32m  "mpeg": "video/mpeg",[m
[32m+[m[32m  "mpg": "video/mpeg",[m
[32m+[m[32m  "mpe": "video/mpeg",[m
[32m+[m[32m  "m1v": "video/mpeg",[m
[32m+[m[32m  "m2v": "video/mpeg",[m
[32m+[m[32m  "ogv": "video/ogg",[m
[32m+[m[32m  "qt": "video/quicktime",[m
[32m+[m[32m  "mov": "video/quicktime",[m
[32m+[m[32m  "uvh": "video/vnd.dece.hd",[m
[32m+[m[32m  "uvvh": "video/vnd.dece.hd",[m
[32m+[m[32m  "uvm": "video/vnd.dece.mobile",[m
[32m+[m[32m  "uvvm": "video/vnd.dece.mobile",[m
[32m+[m[32m  "uvp": "video/vnd.dece.pd",[m
[32m+[m[32m  "uvvp": "video/vnd.dece.pd",[m
[32m+[m[32m  "uvs": "video/vnd.dece.sd",[m
[32m+[m[32m  "uvvs": "video/vnd.dece.sd",[m
[32m+[m[32m  "uvv": "video/vnd.dece.video",[m
[32m+[m[32m  "uvvv": "video/vnd.dece.video",[m
[32m+[m[32m  "dvb": "video/vnd.dvb.file",[m
[32m+[m[32m  "fvt": "video/vnd.fvt",[m
[32m+[m[32m  "mxu": "video/vnd.mpegurl",[m
[32m+[m[32m  "m4u": "video/vnd.mpegurl",[m
[32m+[m[32m  "pyv": "video/vnd.ms-playready.media.pyv",[m
[32m+[m[32m  "uvu": "video/vnd.uvvu.mp4",[m
[32m+[m[32m  "uvvu": "video/vnd.uvvu.mp4",[m
[32m+[m[32m  "viv": "video/vnd.vivo",[m
[32m+[m[32m  "webm": "video/webm",[m
[32m+[m[32m  "f4v": "video/x-f4v",[m
[32m+[m[32m  "fli": "video/x-fli",[m
[32m+[m[32m  "flv": "video/x-flv",[m
[32m+[m[32m  "m4v": "video/x-m4v",[m
[32m+[m[32m  "mkv": "video/x-matroska",[m
[32m+[m[32m  "mk3d": "video/x-matroska",[m
[32m+[m[32m  "mks": "video/x-matroska",[m
[32m+[m[32m  "mng": "video/x-mng",[m
[32m+[m[32m  "asf": "video/x-ms-asf",[m
[32m+[m[32m  "asx": "video/x-ms-asf",[m
[32m+[m[32m  "vob": "video/x-ms-vob",[m
[32m+[m[32m  "wm": "video/x-ms-wm",[m
[32m+[m[32m  "wmv": "video/x-ms-wmv",[m
[32m+[m[32m  "wmx": "video/x-ms-wmx",[m
[32m+[m[32m  "wvx": "video/x-ms-wvx",[m
[32m+[m[32m  "avi": "video/x-msvideo",[m
[32m+[m[32m  "movie": "video/x-sgi-movie",[m
[32m+[m[32m  "smv": "video/x-smv",[m
[32m+[m[32m  "ice": "x-conference/x-cooltalk"[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/snekfetch/src/node/transports/ResponseStream.js b/node_modules/snekfetch/src/node/transports/ResponseStream.js[m
[1mnew file mode 100644[m
[1mindex 0000000..1d40101[m
[1m--- /dev/null[m
[1m+++ b/node_modules/snekfetch/src/node/transports/ResponseStream.js[m
[36m@@ -0,0 +1,24 @@[m
[32m+[m[32mconst Stream = require('stream');[m
[32m+[m
[32m+[m[32mclass ResponseStream extends Stream.Readable {[m
[32m+[m[32m  constructor() {[m
[32m+[m[32m    super();[m
[32m+[m[32m    this.statusCode = 200;[m
[32m+[m[32m    this.status = 'OK';[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  error(code, message) {[m
[32m+[m[32m    this.statusCode = code;[m
[32m+[m[32m    this.status = message;[m
[32m+[m[32m    return this;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  on(event, handler) {[m
[32m+[m[32m    if (['end', 'open'].includes(event))[m
[32m+[m[32m      handler();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  _read() {} // eslint-disable-line no-empty-function[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = ResponseStream;[m
[1mdiff --git a/node_modules/snekfetch/src/node/transports/file.js b/node_modules/snekfetch/src/node/transports/file.js[m
[1mnew file mode 100644[m
[1mindex 0000000..a30c5fe[m
[1m--- /dev/null[m
[1m+++ b/node_modules/snekfetch/src/node/transports/file.js[m
[36m@@ -0,0 +1,113 @@[m
[32m+[m[32mconst fs = require('fs');[m
[32m+[m[32mconst path = require('path');[m
[32m+[m[32mconst mime = require('../mime');[m
[32m+[m[32mconst EventEmitter = require('events');[m
[32m+[m[32mconst ResponseStream = require('./ResponseStream');[m
[32m+[m
[32m+[m[32mconst methods = {[m
[32m+[m[32m  GET: (filename, req) => {[m
[32m+[m[32m    req.end = () => {[m
[32m+[m[32m      const stream = should404(filename) ?[m
[32m+[m[32m        new ResponseStream().error(404, `ENOENT: no such file or directory, open '${filename}'`) :[m
[32m+[m[32m        fs.createReadStream(filename);[m
[32m+[m[32m      req.res = stream;[m
[32m+[m[32m      stream.headers = {[m
[32m+[m[32m        'content-length': 0,[m
[32m+[m[32m        'content-type': mime.lookup(path.extname(filename)),[m
[32m+[m[32m      };[m
[32m+[m[32m      stream.on('open', () => {[m
[32m+[m[32m        req.emit('response', stream);[m
[32m+[m[32m      });[m
[32m+[m[32m      if (stream instanceof ResponseStream)[m
[32m+[m[32m        return;[m
[32m+[m[32m      stream.statusCode = 200;[m
[32m+[m[32m      stream.on('end', () => {[m
[32m+[m[32m        stream.headers['content-length'] = stream.bytesRead;[m
[32m+[m[32m      });[m
[32m+[m[32m      /* istanbul ignore next */[m
[32m+[m[32m      stream.on('error', (err) => {[m
[32m+[m[32m        stream.statusCode = 400;[m
[32m+[m[32m        stream.status = err.message;[m
[32m+[m[32m      });[m
[32m+[m[32m    };[m
[32m+[m[32m  },[m
[32m+[m[32m  POST: (filename, req) => {[m
[32m+[m[32m    const chunks = [];[m
[32m+[m[32m    /* istanbul ignore next */[m
[32m+[m[32m    req.write = (data) => {[m
[32m+[m[32m      chunks.push(data);[m
[32m+[m[32m    };[m
[32m+[m[32m    req.end = (data) => {[m
[32m+[m[32m      chunks.push(data);[m
[32m+[m[32m      const stream = fs.createWriteStream(filename);[m
[32m+[m[32m      const standin = new ResponseStream();[m
[32m+[m[32m      req.res = standin;[m
[32m+[m[32m      standin.headers = {[m
[32m+[m[32m        'content-length': 0,[m
[32m+[m[32m        'content-type': mime.lookup(path.extname(filename)),[m
[32m+[m[32m      };[m
[32m+[m[32m      stream.on('finish', () => {[m
[32m+[m[32m        req.emit('response', standin);[m
[32m+[m[32m      });[m
[32m+[m[32m      stream.on('open', () => {[m
[32m+[m[32m        (function write() {[m
[32m+[m[32m          const chunk = chunks.shift();[m
[32m+[m[32m          if (!chunk)[m
[32m+[m[32m            return;[m
[32m+[m[32m          /* istanbul ignore next */[m
[32m+[m[32m          if (!stream.write(chunk))[m
[32m+[m[32m            stream.once('drain', write);[m
[32m+[m[32m          else[m
[32m+[m[32m            write();[m
[32m+[m[32m        }());[m
[32m+[m[32m        stream.end();[m
[32m+[m[32m      });[m
[32m+[m[32m    };[m
[32m+[m[32m  },[m
[32m+[m[32m  DELETE: (filename, req) => {[m
[32m+[m[32m    req.end = () => {[m
[32m+[m[32m      const stream = new ResponseStream();[m
[32m+[m[32m      req.res = stream;[m
[32m+[m[32m      stream.headers = {[m
[32m+[m[32m        'content-length': 0,[m
[32m+[m[32m        'content-type': mime.lookup(path.extname(filename)),[m
[32m+[m[32m      };[m
[32m+[m[32m      fs.unlink(filename, (err) => {[m
[32m+[m[32m        req.emit('response', err ? stream.error(400, err.message) : stream);[m
[32m+[m[32m      });[m
[32m+[m[32m    };[m
[32m+[m[32m  },[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mclass Req extends EventEmitter {[m
[32m+[m[32m  constructor() {[m
[32m+[m[32m    super();[m
[32m+[m[32m    this._headers = {};[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  setHeader() {} // eslint-disable-line no-empty-function[m
[32m+[m[32m  getHeader() {} // eslint-disable-line no-empty-function[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction request(options) {[m
[32m+[m[32m  const method = methods[options.method];[m
[32m+[m[32m  if (!method)[m
[32m+[m[32m    throw new Error(`Invalid request method for file: "${options.method}"`);[m
[32m+[m[32m  const filename = options.href.replace('file://', '');[m
[32m+[m
[32m+[m[32m  const req = new Req();[m
[32m+[m[32m  method(filename, req, options);[m
[32m+[m[32m  return req;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction should404(p) {[m
[32m+[m[32m  try {[m
[32m+[m[32m    return fs.lstatSync(p).isDirectory();[m
[32m+[m[32m  } catch (err) {[m
[32m+[m[32m    return true;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = {[m
[32m+[m[32m  request,[m
[32m+[m[32m};[m
[1mdiff --git a/node_modules/snekfetch/src/node/transports/http2.js b/node_modules/snekfetch/src/node/transports/http2.js[m
[1mnew file mode 100644[m
[1mindex 0000000..326b32e[m
[1m--- /dev/null[m
[1m+++ b/node_modules/snekfetch/src/node/transports/http2.js[m
[36m@@ -0,0 +1,102 @@[m
[32m+[m[32mconst http = require('http');[m
[32m+[m[32mconst Stream = require('stream');[m
[32m+[m[32mconst EventEmitter = require('events');[m
[32m+[m[32mconst http2 = (() => {[m
[32m+[m[32m  try {[m
[32m+[m[32m    const h2 = require('http2');[m
[32m+[m[32m    if (!h2.constants)[m
[32m+[m[32m      throw new Error('DAMN_YOU_NPM_HTTP2');[m
[32m+[m[32m    return h2;[m
[32m+[m[32m  } catch (err) {[m
[32m+[m[32m    return {[m
[32m+[m[32m      constants: {},[m
[32m+[m[32m      connect: () => {[m
[32m+[m[32m        throw new Error('Please run node with --expose-http2 to use the http2 request transport');[m
[32m+[m[32m      },[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m[32m})();[m
[32m+[m
[32m+[m[32mconst {[m
[32m+[m[32m  HTTP2_HEADER_PATH,[m
[32m+[m[32m  HTTP2_HEADER_METHOD,[m
[32m+[m[32m  HTTP2_HEADER_STATUS,[m
[32m+[m[32m} = http2.constants;[m
[32m+[m
[32m+[m[32mclass Http2Request extends EventEmitter {[m
[32m+[m[32m  constructor(options) {[m
[32m+[m[32m    super();[m
[32m+[m[32m    this.options = options;[m
[32m+[m[32m    this._headers = {[m
[32m+[m[32m      [HTTP2_HEADER_PATH]: options.pathname,[m
[32m+[m[32m      [HTTP2_HEADER_METHOD]: options.method.toUpperCase(),[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  setHeader(name, value) {[m
[32m+[m[32m    this._headers[name.toLowerCase()] = value;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  getHeader(name) {[m
[32m+[m[32m    return this._headers[name];[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  getHeaders() {[m
[32m+[m[32m    return this._headers;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  get path() {[m
[32m+[m[32m    return this._headers[HTTP2_HEADER_PATH];[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  set path(path) {[m
[32m+[m[32m    this._headers[HTTP2_HEADER_PATH] = path;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  end(data) {[m
[32m+[m[32m    const options = this.options;[m
[32m+[m[32m    const client = http2.connect(`${options.protocol}//${options.hostname}`);[m
[32m+[m[32m    const req = client.request(this._headers);[m
[32m+[m[32m    const stream = new Stream.PassThrough();[m
[32m+[m
[32m+[m[32m    client.once('error', (e) => this.emit('error', e));[m
[32m+[m[32m    client.once('frameError', (e) => this.emit('error', e));[m
[32m+[m
[32m+[m[32m    req.once('error', (e) => this.emit('error', e));[m
[32m+[m
[32m+[m[32m    req.once('response', (headers) => {[m
[32m+[m[32m      stream.headers = headers;[m
[32m+[m[32m      stream.statusCode = headers[HTTP2_HEADER_STATUS];[m
[32m+[m[32m      stream.status = http.STATUS_CODES[stream.statusCode];[m
[32m+[m
[32m+[m[32m      this.emit('response', stream);[m
[32m+[m[32m      this.response = stream;[m
[32m+[m
[32m+[m[32m      req.on('data', (chunk) => {[m
[32m+[m[32m        if (!stream.push(chunk))[m
[32m+[m[32m          req.pause();[m
[32m+[m[32m      });[m
[32m+[m
[32m+[m[32m      req.once('end', () => {[m
[32m+[m[32m        stream.push(null);[m
[32m+[m[32m        client.destroy();[m
[32m+[m[32m      });[m
[32m+[m
[32m+[m[32m      stream.once('error', (err) => {[m
[32m+[m[32m        stream.statusCode = 400;[m
[32m+[m[32m        stream.status = err.message;[m
[32m+[m[32m      });[m
[32m+[m[32m    });[m
[32m+[m
[32m+[m[32m    req.end(data);[m
[32m+[m
[32m+[m[32m    return req;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m[32mfunction request(options) {[m
[32m+[m[32m  return new Http2Request(options);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = { request };[m
[1mdiff --git a/node_modules/snekfetch/src/qs_mock.js b/node_modules/snekfetch/src/qs_mock.js[m
[1mnew file mode 100644[m
[1mindex 0000000..a8e4807[m
[1m--- /dev/null[m
[1m+++ b/node_modules/snekfetch/src/qs_mock.js[m
[36m@@ -0,0 +1,9 @@[m
[32m+[m[32mexports = {[m
[32m+[m[32m  parse: (str) => {[m
[32m+[m[32m    const parsed = {};[m
[32m+[m[32m    for (const [k, v] of new Window.URLSearchParams(str).entries())[m
[32m+[m[32m      parsed[k] = v;[m
[32m+[m[32m    return parsed;[m
[32m+[m[32m  },[m
[32m+[m[32m  stringify: (obj) => new window.URLSearchParams(obj).toString(),[m
[32m+[m[32m};[m
[1mdiff --git a/node_modules/snekfetch/sync.js b/node_modules/snekfetch/sync.js[m
[1mnew file mode 100644[m
[1mindex 0000000..5531136[m
[1m--- /dev/null[m
[1m+++ b/node_modules/snekfetch/sync.js[m
[36m@@ -0,0 +1,15 @@[m
[32m+[m[32mtry {[m
[32m+[m[32m  var syncify = require('@snek/syncify');[m
[32m+[m[32m} catch (err) {[m
[32m+[m[32m  throw new Error('Using sync requires @snek/syncify (npm install @snek/syncify)');[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mconst Snekfetch = require('.');[m
[32m+[m
[32m+[m[32mclass SnekfetchSync extends Snekfetch {[m
[32m+[m[32m  end() {[m
[32m+[m[32m    return syncify(super.end());[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = SnekfetchSync;[m
[1mdiff --git a/node_modules/snekfetch/test/.eslintrc.json b/node_modules/snekfetch/test/.eslintrc.json[m
[1mnew file mode 100644[m
[1mindex 0000000..063ae8c[m
[1m--- /dev/null[m
[1m+++ b/node_modules/snekfetch/test/.eslintrc.json[m
[36m@@ -0,0 +1,4 @@[m
[32m+[m[32m{[m
[32m+[m[32m  "extends": ["../.eslintrc.json"],[m
[32m+[m[32m  "env": { "jest": true }[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/snekfetch/test/browser/http1.test.js b/node_modules/snekfetch/test/browser/http1.test.js[m
[1mnew file mode 100644[m
[1mindex 0000000..8ce2b94[m
[1m--- /dev/null[m
[1m+++ b/node_modules/snekfetch/test/browser/http1.test.js[m
[36m@@ -0,0 +1,7 @@[m
[32m+[m[32m/**[m
[32m+[m[32m * @jest-environment jsdom[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mglobal.HTTP_VERSION = 1;[m
[32m+[m
[32m+[m[32mrequire('./main');[m
[1mdiff --git a/node_modules/snekfetch/test/browser/http2.test.js b/node_modules/snekfetch/test/browser/http2.test.js[m
[1mnew file mode 100644[m
[1mindex 0000000..19c51cf[m
[1m--- /dev/null[m
[1m+++ b/node_modules/snekfetch/test/browser/http2.test.js[m
[36m@@ -0,0 +1,7 @@[m
[32m+[m[32m/**[m
[32m+[m[32m * @jest-environment jsdom[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mglobal.HTTP_VERSION = 2;[m
[32m+[m
[32m+[m[32mrequire('./main');[m
[1mdiff --git a/node_modules/snekfetch/test/browser/main.js b/node_modules/snekfetch/test/browser/main.js[m
[1mnew file mode 100644[m
[1mindex 0000000..7562ace[m
[1m--- /dev/null[m
[1m+++ b/node_modules/snekfetch/test/browser/main.js[m
[36m@@ -0,0 +1,5 @@[m
[32m+[m[32mwindow.fetch = require('node-fetch');[m
[32m+[m[32mwindow.URLSearchParams = require('url').URLSearchParams;[m
[32m+[m[32mwindow.FormData = require('form-data');[m
[32m+[m
[32m+[m[32mrequire('../main');[m
[1mdiff --git a/node_modules/snekfetch/test/interop.js b/node_modules/snekfetch/test/interop.js[m
[1mnew file mode 100644[m
[1mindex 0000000..d63ff10[m
[1m--- /dev/null[m
[1m+++ b/node_modules/snekfetch/test/interop.js[m
[36m@@ -0,0 +1,22 @@[m
[32m+[m[32mfunction makeProxy(fetch) {[m
[32m+[m[32m  return new Proxy(fetch, {[m
[32m+[m[32m    get(target, prop) {[m
[32m+[m[32m      const p = target[prop];[m
[32m+[m[32m      if (typeof p === 'function') {[m
[32m+[m[32m        return (url, options = {}) =>[m
[32m+[m[32m          p.call(target, url, Object.assign(options, { version: global.HTTP_VERSION }));[m
[32m+[m[32m      }[m
[32m+[m[32m      return p;[m
[32m+[m[32m    },[m
[32m+[m[32m  });[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mexports.Snekfetch = makeProxy(require('../'));[m
[32m+[m[32mtry {[m
[32m+[m[32m  exports.SnekfetchSync = makeProxy(require('../sync'));[m
[32m+[m[32m} catch (err) {} // eslint-disable-line no-empty[m
[32m+[m
[32m+[m[32mexports.TestRoot = global.HTTP_VERSION === 2 ?[m
[32m+[m[32m  'https://nghttp2.org/httpbin' :[m
[32m+[m[32m  'https://httpbin.org';[m
[32m+[m
[1mdiff --git a/node_modules/snekfetch/test/main.js b/node_modules/snekfetch/test/main.js[m
[1mnew file mode 100644[m
[1mindex 0000000..87f60fc[m
[1m--- /dev/null[m
[1m+++ b/node_modules/snekfetch/test/main.js[m
[36m@@ -0,0 +1,152 @@[m
[32m+[m[32mconst { Snekfetch, TestRoot } = require('./interop');[m
[32m+[m
[32m+[m[32mconst server = require('./server');[m
[32m+[m
[32m+[m[32mfunction makeTestObj({ unicode = true, numbers = false } = {}) {[m
[32m+[m[32m  const test = {[m
[32m+[m[32m    Hello: 'world',[m
[32m+[m[32m    Test: numbers ? 1337 : '1337',[m
[32m+[m[32m  };[m
[32m+[m[32m  if (unicode)[m
[32m+[m[32m    test.Unicode = '( ͡° ͜ʖ ͡°)';[m
[32m+[m[32m  return {[m
[32m+[m[32m    test,[m
[32m+[m[32m    check: (obj) => {[m
[32m+[m[32m      expect(obj).not.toBeUndefined();[m
[32m+[m[32m      expect(obj.Hello).toBe(test.Hello);[m
[32m+[m[32m      expect(obj.Test).toBe(test.Test);[m
[32m+[m[32m      if (unicode)[m
[32m+[m[32m        expect(obj.Unicode).toBe(test.Unicode);[m
[32m+[m[32m    },[m
[32m+[m[32m  };[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mtest('should return a promise', () => {[m
[32m+[m[32m  expect(Snekfetch.get(`${TestRoot}/get`).end())[m
[32m+[m[32m    .toBeInstanceOf(Promise);[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mtest('should reject with error on network failure', () => {[m
[32m+[m[32m  const invalid = 'http://localhost:0/';[m
[32m+[m[32m  /* https://gc.gy/❥ȗ.png[m
[32m+[m[32m   return expect(Snekfetch.get(invalid).end())[m
[32m+[m[32m    .rejects.toBeInstanceOf(Error);*/[m
[32m+[m[32m  return Snekfetch.get(invalid).catch((err) => {[m
[32m+[m[32m    expect(err.name).toMatch(/(Fetch)?Error/);[m
[32m+[m[32m  });[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mtest('should resolve on success', () =>[m
[32m+[m[32m  Snekfetch.get(`${TestRoot}/get`).then((res) => {[m
[32m+[m[32m    expect(res.status).toBe(200);[m
[32m+[m[32m    expect(res.ok).toBe(true);[m
[32m+[m[32m    expect(res).toHaveProperty('text');[m
[32m+[m[32m    expect(res).toHaveProperty('body');[m
[32m+[m[32m  })[m
[32m+[m[32m);[m
[32m+[m
[32m+[m[32mtest('end should work', () =>[m
[32m+[m[32m  Snekfetch.get(`${TestRoot}/get`).end((err, res) => {[m
[32m+[m[32m    expect(err).toBe(null);[m
[32m+[m[32m    expect(res.body).not.toBeUndefined();[m
[32m+[m[32m  })[m
[32m+[m[32m);[m
[32m+[m
[32m+[m[32mtest('should reject if response is not between 200 and 300', () =>[m
[32m+[m[32m  Snekfetch.get(`${TestRoot}/404`).catch((err) => {[m
[32m+[m[32m    expect(err.status).toBe(404);[m
[32m+[m[32m    expect(err.ok).toBe(false);[m
[32m+[m[32m  })[m
[32m+[m[32m);[m
[32m+[m
[32m+[m[32mtest('unzipping works', () =>[m
[32m+[m[32m  Snekfetch.get(`${TestRoot}/gzip`)[m
[32m+[m[32m    .then((res) => {[m
[32m+[m[32m      expect(res.body).not.toBeUndefined();[m
[32m+[m[32m      expect(res.body.gzipped).toBe(true);[m
[32m+[m[32m    })[m
[32m+[m[32m);[m
[32m+[m
[32m+[m[32mtest('query should work', () => {[m
[32m+[m[32m  const { test, check } = makeTestObj();[m
[32m+[m[32m  Promise.all([[m
[32m+[m[32m    Snekfetch.get(`${TestRoot}/get?inline=true`)[m
[32m+[m[32m      .query(test).end(),[m
[32m+[m[32m    Snekfetch.get(`${TestRoot}/get?inline=true`, { query: test })[m
[32m+[m[32m      .end(),[m
[32m+[m[32m  ])[m
[32m+[m[32m    .then((ress) => {[m
[32m+[m[32m      for (const res of ress) {[m
[32m+[m[32m        const { args } = res.body;[m
[32m+[m[32m        check(args);[m
[32m+[m[32m        expect(args.inline).toBe('true');[m
[32m+[m[32m      }[m
[32m+[m[32m    });[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mtest('headers should work', () => {[m
[32m+[m[32m  const { test, check } = makeTestObj({ unicode: false });[m
[32m+[m[32m  return Promise.all([[m
[32m+[m[32m    Snekfetch.get(`${TestRoot}/get`)[m
[32m+[m[32m      .set(test).end(),[m
[32m+[m[32m    Snekfetch.get(`${TestRoot}/get`, { headers: test })[m
[32m+[m[32m      .end(),[m
[32m+[m[32m  ])[m
[32m+[m[32m    .then((ress) => {[m
[32m+[m[32m      for (const res of ress)[m
[32m+[m[32m        check(res.body.headers);[m
[32m+[m[32m    });[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mtest('attach should work', () => {[m
[32m+[m[32m  const { test, check } = makeTestObj();[m
[32m+[m[32m  return Snekfetch.post(`${TestRoot}/post`)[m
[32m+[m[32m    .attach(test)[m
[32m+[m[32m    .then((res) => check(res.body.form));[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mtest('send should work with json', () => {[m
[32m+[m[32m  const { test, check } = makeTestObj({ numbers: true });[m
[32m+[m[32m  return Promise.all([[m
[32m+[m[32m    Snekfetch.post(`${TestRoot}/post`)[m
[32m+[m[32m      .send(test).end(),[m
[32m+[m[32m    Snekfetch.post(`${TestRoot}/post`, { data: test })[m
[32m+[m[32m      .end(),[m
[32m+[m[32m  ])[m
[32m+[m[32m    .then((ress) => {[m
[32m+[m[32m      for (const res of ress)[m
[32m+[m[32m        check(res.body.json);[m
[32m+[m[32m    });[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mtest('send should work with urlencoded', () => {[m
[32m+[m[32m  const { test, check } = makeTestObj();[m
[32m+[m[32m  return Snekfetch.post(`${TestRoot}/post`)[m
[32m+[m[32m    .set('content-type', 'application/x-www-form-urlencoded')[m
[32m+[m[32m    .send(test)[m
[32m+[m[32m    .then((res) => check(res.body.form));[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mtest('invalid json is just text', () =>[m
[32m+[m[32m  Snekfetch.get(`http://localhost:${server.port}/invalid-json`)[m
[32m+[m[32m    .then((res) => {[m
[32m+[m[32m      expect(res.body).toBe('{ "a": 1');[m
[32m+[m[32m    })[m
[32m+[m[32m);[m
[32m+[m
[32m+[m[32mtest('x-www-form-urlencoded response body', () =>[m
[32m+[m[32m  Snekfetch.get(`http://localhost:${server.port}/form-urlencoded`)[m
[32m+[m[32m    .then((res) => {[m
[32m+[m[32m      const { body } = res;[m
[32m+[m[32m      expect(body.test).toBe('1');[m
[32m+[m[32m      expect(body.hello).toBe('world');[m
[32m+[m[32m    })[m
[32m+[m[32m);[m
[32m+[m
[32m+[m[32mtest('redirects', () =>[m
[32m+[m[32m  Snekfetch.get(`${TestRoot}/redirect/1`)[m
[32m+[m[32m    .then((res) => {[m
[32m+[m[32m      expect(res.body).not.toBeUndefined();[m
[32m+[m[32m      expect(res.body.url).toBe(`${TestRoot}/get`);[m
[32m+[m[32m    })[m
[32m+[m[32m);[m
[1mdiff --git a/node_modules/snekfetch/test/node/file.test.js b/node_modules/snekfetch/test/node/file.test.js[m
[1mnew file mode 100644[m
[1mindex 0000000..8ec0fd0[m
[1m--- /dev/null[m
[1m+++ b/node_modules/snekfetch/test/node/file.test.js[m
[36m@@ -0,0 +1,47 @@[m
[32m+[m[32m/**[m
[32m+[m[32m * @jest-environment node[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mconst fs = require('fs');[m
[32m+[m[32mconst { Snekfetch } = require('../interop');[m
[32m+[m
[32m+[m[32mconst resolve = (x) => require.resolve(x);[m
[32m+[m
[32m+[m[32mtest('node/file get', () => {[m
[32m+[m[32m  const original = fs.readFileSync(resolve('../../package.json')).toString();[m
[32m+[m[32m  return Snekfetch.get(`file://${resolve('../../package.json')}`)[m
[32m+[m[32m    .then((res) => {[m
[32m+[m[32m      expect(res.text).toBe(original);[m
[32m+[m[32m    });[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mtest('node/file post', () => {[m
[32m+[m[32m  const content = 'wow this is a\n\ntest!!';[m
[32m+[m[32m  const file = './test_file_post.txt';[m
[32m+[m[32m  return Snekfetch.post(`file://${file}`)[m
[32m+[m[32m    .send(content)[m
[32m+[m[32m    .then(() => Snekfetch.get(`file://${file}`))[m
[32m+[m[32m    .then((res) => {[m
[32m+[m[32m      expect(res.text).toBe(content);[m
[32m+[m[32m    })[m
[32m+[m[32m    .then(() => {[m
[32m+[m[32m      fs.unlinkSync(file);[m
[32m+[m[32m    });[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mtest('node/file delete', () => {[m
[32m+[m[32m  const file = './test_file_delete.txt';[m
[32m+[m[32m  fs.closeSync(fs.openSync(file, 'w'));[m
[32m+[m[32m  expect(fs.existsSync(file)).toBe(true);[m
[32m+[m[32m  return Snekfetch.delete(`file://${file}`)[m
[32m+[m[32m    .then(() => {[m
[32m+[m[32m      expect(fs.existsSync(file)).toBe(false);[m
[32m+[m[32m    });[m
[32m+[m[32m});[m
[32m+[m
[32m+[m
[32m+[m[32mtest('node/file invalid method', () => {[m
[32m+[m[32m  expect(() => {[m
[32m+[m[32m    Snekfetch.options('file:///dev/urandom');[m
[32m+[m[32m  }).toThrow(/Invalid request method for file:/);[m
[32m+[m[32m});[m
[1mdiff --git a/node_modules/snekfetch/test/node/http1.test.js b/node_modules/snekfetch/test/node/http1.test.js[m
[1mnew file mode 100644[m
[1mindex 0000000..00f91f4[m
[1m--- /dev/null[m
[1m+++ b/node_modules/snekfetch/test/node/http1.test.js[m
[36m@@ -0,0 +1,7 @@[m
[32m+[m[32m/**[m
[32m+[m[32m * @jest-environment node[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mglobal.HTTP_VERSION = 1;[m
[32m+[m
[32m+[m[32mrequire('./main');[m
[1mdiff --git a/node_modules/snekfetch/test/node/http2.test.js.disabled b/node_modules/snekfetch/test/node/http2.test.js.disabled[m
[1mnew file mode 100644[m
[1mindex 0000000..daf49d9[m
[1m--- /dev/null[m
[1m+++ b/node_modules/snekfetch/test/node/http2.test.js.disabled[m
[36m@@ -0,0 +1,7 @@[m
[32m+[m[32m/**[m
[32m+[m[32m * @jest-environment node[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mglobal.HTTP_VERSION = 2;[m
[32m+[m
[32m+[m[32mrequire('./main');[m
[1mdiff --git a/node_modules/snekfetch/test/node/main.js b/node_modules/snekfetch/test/node/main.js[m
[1mnew file mode 100644[m
[1mindex 0000000..b811ec9[m
[1m--- /dev/null[m
[1m+++ b/node_modules/snekfetch/test/node/main.js[m
[36m@@ -0,0 +1,26 @@[m
[32m+[m[32mconst fs = require('fs');[m
[32m+[m
[32m+[m[32mconst { Snekfetch, TestRoot } = require('../interop');[m
[32m+[m
[32m+[m[32mrequire('../main');[m
[32m+[m
[32m+[m[32mtest('node/pipe get', (done) => {[m
[32m+[m[32m  Snekfetch.get(`${TestRoot}/get`)[m
[32m+[m[32m    .pipe(fs.createWriteStream('/dev/null'))[m
[32m+[m[32m    .on('finish', done);[m
[32m+[m[32m});[m
[32m+[m
[32m+[m
[32m+[m[32mtest('node/FormData json works', () =>[m
[32m+[m[32m  Snekfetch.post(`${TestRoot}/post`)[m
[32m+[m[32m    .attach('object', { a: 1 })[m
[32m+[m[32m    .then((res) => {[m
[32m+[m[32m      const { form } = res.body;[m
[32m+[m[32m      expect(form.object).toBe('{"a":1}');[m
[32m+[m[32m    })[m
[32m+[m[32m);[m
[32m+[m
[32m+[m[32mtest('node/rawsend post', () =>[m
[32m+[m[32m  Snekfetch.post(`${TestRoot}/post`)[m
[32m+[m[32m    .send(Buffer.from('memes')).end()[m
[32m+[m[32m);[m
[1mdiff --git a/node_modules/snekfetch/test/node/sync.test.js b/node_modules/snekfetch/test/node/sync.test.js[m
[1mnew file mode 100644[m
[1mindex 0000000..0c7187f[m
[1m--- /dev/null[m
[1m+++ b/node_modules/snekfetch/test/node/sync.test.js[m
[36m@@ -0,0 +1,10 @@[m
[32m+[m[32m/**[m
[32m+[m[32m * @jest-environment node[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mconst { SnekfetchSync, TestRoot } = require('../interop');[m
[32m+[m
[32m+[m[32mtest('sync get', SnekfetchSync && (() => {[m
[32m+[m[32m  const res = SnekfetchSync.get(`${TestRoot}/get`).end();[m
[32m+[m[32m  expect(res.body).not.toBeUndefined();[m
[32m+[m[32m}));[m
[1mdiff --git a/node_modules/snekfetch/test/node/util.test.js b/node_modules/snekfetch/test/node/util.test.js[m
[1mnew file mode 100644[m
[1mindex 0000000..1e71573[m
[1m--- /dev/null[m
[1m+++ b/node_modules/snekfetch/test/node/util.test.js[m
[36m@@ -0,0 +1,17 @@[m
[32m+[m[32mconst FormData = require('../../src/node/FormData');[m
[32m+[m[32mconst mime = require('../../src/node/mime');[m
[32m+[m
[32m+[m[32mtest('node/FormData behaves predictably', () => {[m
[32m+[m[32m  const f = new FormData();[m
[32m+[m[32m  f.append('hello');[m
[32m+[m[32m  f.append('hello', 'world');[m
[32m+[m[32m  expect(f.length).toBe(77);[m
[32m+[m[32m  f.append('meme', 'dream', 'name');[m
[32m+[m[32m  expect(f.length).toBe(210);[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mtest('node/mimes behaves predictably', () => {[m
[32m+[m[32m  expect(mime.lookup('js')).toBe('application/javascript');[m
[32m+[m[32m  expect(mime.lookup('nope')).toBe('application/octet-stream');[m
[32m+[m[32m  expect(mime.buffer([0xFF, 0xD8, 0xFF])).toBe('image/jpeg');[m
[32m+[m[32m});[m
[1mdiff --git a/node_modules/snekfetch/test/server.js b/node_modules/snekfetch/test/server.js[m
[1mnew file mode 100644[m
[1mindex 0000000..ac75cca[m
[1m--- /dev/null[m
[1m+++ b/node_modules/snekfetch/test/server.js[m
[36m@@ -0,0 +1,41 @@[m
[32m+[m[32mconst http = require('http');[m
[32m+[m
[32m+[m[32mconst ref = require.main === module;[m
[32m+[m
[32m+[m[32mconst server = http.createServer((req, res) => {[m
[32m+[m[32m  if (!ref)[m
[32m+[m[32m    req.connection.unref();[m
[32m+[m[32m  switch (req.url) {[m
[32m+[m[32m    case '/invalid-json':[m
[32m+[m[32m      res.setHeader('Content-Type', 'application/json');[m
[32m+[m[32m      res.end('{ "a": 1');[m
[32m+[m[32m      break;[m
[32m+[m[32m    case '/form-urlencoded':[m
[32m+[m[32m      res.setHeader('Content-Type', 'application/x-www-form-urlencoded');[m
[32m+[m[32m      res.end('test=1&hello=world');[m
[32m+[m[32m      break;[m
[32m+[m[32m    case '/echo': {[m
[32m+[m[32m      let body = '';[m
[32m+[m[32m      req.on('data', (c) => { body += c; });[m
[32m+[m[32m      req.on('end', () => {[m
[32m+[m[32m        res.end(body);[m
[32m+[m[32m      });[m
[32m+[m[32m      break;[m
[32m+[m[32m    }[m
[32m+[m[32m    default:[m
[32m+[m[32m      res.end();[m
[32m+[m[32m      break;[m
[32m+[m[32m  }[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mserver.on('connection', (socket) => {[m
[32m+[m[32m  if (!ref)[m
[32m+[m[32m    socket.unref();[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mserver.listen(0);[m
[32m+[m
[32m+[m[32mexports.port = server.address().port;[m
[32m+[m
[32m+[m[32mif (ref)[m
[32m+[m[32m  console.log(exports.port); // eslint-disable-line no-console[m
[1mdiff --git a/node_modules/snekfetch/webpack.config.js b/node_modules/snekfetch/webpack.config.js[m
[1mnew file mode 100644[m
[1mindex 0000000..a72be5a[m
[1m--- /dev/null[m
[1m+++ b/node_modules/snekfetch/webpack.config.js[m
[36m@@ -0,0 +1,18 @@[m
[32m+[m[32mconst UglifyJSPlugin = require('uglifyjs-webpack-plugin');[m
[32m+[m
[32m+[m[32mmodule.exports = {[m
[32m+[m[32m  entry: require.resolve('.'),[m
[32m+[m[32m  output: {[m
[32m+[m[32m    filename: 'browser.js',[m
[32m+[m[32m    library: 'Snekfetch',[m
[32m+[m[32m    libraryTarget: 'umd',[m
[32m+[m[32m  },[m
[32m+[m[32m  plugins: [[m
[32m+[m[32m    new UglifyJSPlugin(),[m
[32m+[m[32m  ],[m
[32m+[m[32m  resolve: {[m
[32m+[m[32m    alias: {[m
[32m+[m[32m      querystring: require.resolve('./src/qs_mock'),[m
[32m+[m[32m    },[m
[32m+[m[32m  },[m
[32m+[m[32m};[m
[1mdiff --git a/node_modules/tweetnacl/AUTHORS.md b/node_modules/tweetnacl/AUTHORS.md[m
[1mnew file mode 100644[m
[1mindex 0000000..598bc2d[m
[1m--- /dev/null[m
[1m+++ b/node_modules/tweetnacl/AUTHORS.md[m
[36m@@ -0,0 +1,27 @@[m
[32m+[m[32mList of TweetNaCl.js authors[m
[32m+[m[32m============================[m
[32m+[m
[32m+[m[32m    Format: Name (GitHub username or URL)[m
[32m+[m
[32m+[m[32m* Dmitry Chestnykh (@dchest)[m
[32m+[m[32m* Devi Mandiri (@devi)[m
[32m+[m[32m* AndSDev (@AndSDev)[m
[32m+[m
[32m+[m[32mList of authors of third-party public domain code from which TweetNaCl.js code was derived[m
[32m+[m[32m==========================================================================================[m
[32m+[m
[32m+[m[32m[TweetNaCl](http://tweetnacl.cr.yp.to/)[m
[32m+[m[32m--------------------------------------[m
[32m+[m
[32m+[m[32m* Bernard van Gastel[m
[32m+[m[32m* Daniel J. Bernstein <http://cr.yp.to/djb.html>[m
[32m+[m[32m* Peter Schwabe <http://www.cryptojedi.org/users/peter/>[m
[32m+[m[32m* Sjaak Smetsers <http://www.cs.ru.nl/~sjakie/>[m
[32m+[m[32m* Tanja Lange <http://hyperelliptic.org/tanja>[m
[32m+[m[32m* Wesley Janssen[m
[32m+[m
[32m+[m
[32m+[m[32m[Poly1305-donna](https://github.com/floodyberry/poly1305-donna)[m
[32m+[m[32m--------------------------------------------------------------[m
[32m+[m
[32m+[m[32m* Andrew Moon (@floodyberry)[m
[1mdiff --git a/node_modules/tweetnacl/CHANGELOG.md b/node_modules/tweetnacl/CHANGELOG.md[m
[1mnew file mode 100644[m
[1mindex 0000000..1d9e332[m
[1m--- /dev/null[m
[1m+++ b/node_modules/tweetnacl/CHANGELOG.md[m
[36m@@ -0,0 +1,256 @@[m
[32m+[m[32mTweetNaCl.js Changelog[m
[32m+[m[32m======================[m
[32m+[m
[32m+[m[32mv1.0.0[m
[32m+[m[32m------[m
[32m+[m
[32m+[m[32mNo code changes from v1.0.0-rc.1.[m
[32m+[m
[32m+[m
[32m+[m[32mv1.0.0-rc.1[m
[32m+[m[32m-----------[m
[32m+[m
[32m+[m[32m* **IMPORTANT!** In previous versions, `nacl.secretbox.open`, `nacl.box.open`,[m
[32m+[m[32m  and `nacl.box.after` returned `false` when opening failed (for example, when[m
[32m+[m[32m  using incorrect key, nonce, or when input was maliciously or accidentally[m
[32m+[m[32m  modified after encryption). This version instead returns `null`.[m
[32m+[m
[32m+[m[32m  The usual way to check for this condition:[m
[32m+[m
[32m+[m[32m  `if (!result) { ... }`[m
[32m+[m
[32m+[m[32m  is correct and will continue to work.[m
[32m+[m
[32m+[m[32m  However, direct comparison with `false`:[m
[32m+[m
[32m+[m[32m  `if (result == false) { ... }`[m
[32m+[m
[32m+[m[32m  it will no longer work and **will not detect failure**. Please check[m
[32m+[m[32m  your code for this condition.[m
[32m+[m
[32m+[m[32m  (`nacl.sign.open` always returned `null`, so it is not affected.)[m
[32m+[m
[32m+[m
[32m+[m[32m* Arguments type check now uses `instanceof Uint8Array` instead of `Object.prototype.toString`.[m
[32m+[m[32m* Removed deprecation checks for `nacl.util` (moved to a[m
[32m+[m[32m  [separate package](https://github.com/dchest/tweetnacl-util-js) in v0.14.0).[m
[32m+[m[32m* Removed deprecation checks for the old signature API (changed in v0.10.0).[m
[32m+[m[32m* Improved benchmarking.[m
[32m+[m
[32m+[m[32mv0.14.5[m
[32m+[m[32m-------[m
[32m+[m
[32m+[m[32m* Fixed incomplete return types in TypeScript typings.[m
[32m+[m[32m* Replaced COPYING.txt with LICENSE file, which now has public domain dedication[m
[32m+[m[32m  text from The Unlicense. License fields in package.json and bower.json have[m
[32m+[m[32m  been set to "Unlicense". The project was and will be in the public domain --[m
[32m+[m[32m  this change just makes it easier for automated tools to know about this fact by[m
[32m+[m[32m  using the widely recognized and SPDX-compatible template for public domain[m
[32m+[m[32m  dedication.[m
[32m+[m
[32m+[m
[32m+[m[32mv0.14.4[m
[32m+[m[32m-------[m
[32m+[m
[32m+[m[32m* Added TypeScript type definitions (contributed by @AndSDev).[m
[32m+[m[32m* Improved benchmarking code.[m
[32m+[m
[32m+[m
[32m+[m[32mv0.14.3[m
[32m+[m[32m-------[m
[32m+[m
[32m+[m[32mFixed a bug in the fast version of Poly1305 and brought it back.[m
[32m+[m
[32m+[m[32mThanks to @floodyberry for promptly responding and fixing the original C code:[m
[32m+[m
[32m+[m[32m> "The issue was not properly detecting if st->h was >= 2^130 - 5, coupled with[m
[32m+[m[32m> [testing mistake] not catching the failure. The chance of the bug affecting[m
[32m+[m[32m> anything in the real world is essentially zero luckily, but it's good to have[m
[32m+[m[32m> it fixed."[m
[32m+[m
[32m+[m[32mhttps://github.com/floodyberry/poly1305-donna/issues/2#issuecomment-202698577[m
[32m+[m
[32m+[m
[32m+[m[32mv0.14.2[m
[32m+[m[32m-------[m
[32m+[m
[32m+[m[32mSwitched Poly1305 fast version back to original (slow) version due to a bug.[m
[32m+[m
[32m+[m
[32m+[m[32mv0.14.1[m
[32m+[m[32m-------[m
[32m+[m
[32m+[m[32mNo code changes, just tweaked packaging and added COPYING.txt.[m
[32m+[m
[32m+[m
[32m+[m[32mv0.14.0[m
[32m+[m[32m-------[m
[32m+[m
[32m+[m[32m* **Breaking change!** All functions from `nacl.util` have been removed. These[m
[32m+[m[32m  functions are no longer available:[m
[32m+[m
[32m+[m[32m      nacl.util.decodeUTF8[m
[32m+[m[32m      nacl.util.encodeUTF8[m
[32m+[m[32m      nacl.util.decodeBase64[m
[32m+[m[32m      nacl.util.encodeBase64[m
[32m+[m
[32m+[m[32m  If want to continue using them, you can include[m
[32m+[m[32m  <https://github.com/dchest/tweetnacl-util-js> package:[m
[32m+[m
[32m+[m[32m      <script src="nacl.min.js"></script>[m
[32m+[m[32m      <script src="nacl-util.min.js"></script>[m
[32m+[m
[32m+[m[32m  or[m
[32m+[m
[32m+[m[32m      var nacl = require('tweetnacl');[m
[32m+[m[32m      nacl.util = require('tweetnacl-util');[m
[32m+[m
[32m+[m[32m  However it is recommended to use better packages that have wider[m
[32m+[m[32m  compatibility and better performance. Functions from `nacl.util` were never[m
[32m+[m[32m  intended to be robust solution for string conversion and were included for[m
[32m+[m[32m  convenience: cryptography library is not the right place for them.[m
[32m+[m
[32m+[m[32m  Currently calling these functions will throw error pointing to[m
[32m+[m[32m  `tweetnacl-util-js` (in the next version this error message will be removed).[m
[32m+[m
[32m+[m[32m* Improved detection of available random number generators, making it possible[m
[32m+[m[32m  to use `nacl.randomBytes` and related functions in Web Workers without[m
[32m+[m[32m  changes.[m
[32m+[m
[32m+[m[32m* Changes to testing (see README).[m
[32m+[m
[32m+[m
[32m+[m[32mv0.13.3[m
[32m+[m[32m-------[m
[32m+[m
[32m+[m[32mNo code changes.[m
[32m+[m
[32m+[m[32m* Reverted license field in package.json to "Public domain".[m
[32m+[m
[32m+[m[32m* Fixed typo in README.[m
[32m+[m
[32m+[m
[32m+[m[32mv0.13.2[m
[32m+[m[32m-------[m
[32m+[m
[32m+[m[32m* Fixed undefined variable bug in fast version of Poly1305. No worries, this[m
[32m+[m[32m  bug was *never* triggered.[m
[32m+[m
[32m+[m[32m* Specified CC0 public domain dedication.[m
[32m+[m
[32m+[m[32m* Updated development dependencies.[m
[32m+[m
[32m+[m
[32m+[m[32mv0.13.1[m
[32m+[m[32m-------[m
[32m+[m
[32m+[m[32m* Exclude `crypto` and `buffer` modules from browserify builds.[m
[32m+[m
[32m+[m
[32m+[m[32mv0.13.0[m
[32m+[m[32m-------[m
[32m+[m
[32m+[m[32m* Made `nacl-fast` the default version in NPM package. Now[m
[32m+[m[32m  `require("tweetnacl")` will use fast version; to get the original version,[m
[32m+[m[32m  use `require("tweetnacl/nacl.js")`.[m
[32m+[m
[32m+[m[32m* Cleanup temporary array after generating random bytes.[m
[32m+[m
[32m+[m
[32m+[m[32mv0.12.2[m
[32m+[m[32m-------[m
[32m+[m
[32m+[m[32m* Improved performance of curve operations, making `nacl.scalarMult`, `nacl.box`,[m
[32m+[m[32m  `nacl.sign` and related functions up to 3x faster in `nacl-fast` version.[m
[32m+[m
[32m+[m
[32m+[m[32mv0.12.1[m
[32m+[m[32m-------[m
[32m+[m
[32m+[m[32m* Significantly improved performance of Salsa20 (~1.5x faster) and[m
[32m+[m[32m  Poly1305 (~3.5x faster) in `nacl-fast` version.[m
[32m+[m
[32m+[m
[32m+[m[32mv0.12.0[m
[32m+[m[32m-------[m
[32m+[m
[32m+[m[32m* Instead of using the given secret key directly, TweetNaCl.js now copies it to[m
[32m+[m[32m  a new array in `nacl.box.keyPair.fromSecretKey` and[m
[32m+[m[32m  `nacl.sign.keyPair.fromSecretKey`.[m
[32m+[m
[32m+[m
[32m+[m[32mv0.11.2[m
[32m+[m[32m-------[m
[32m+[m
[32m+[m[32m* Added new constant: `nacl.sign.seedLength`.[m
[32m+[m
[32m+[m
[32m+[m[32mv0.11.1[m
[32m+[m[32m-------[m
[32m+[m
[32m+[m[32m* Even faster hash for both short and long inputs (in `nacl-fast`).[m
[32m+[m
[32m+[m
[32m+[m[32mv0.11.0[m
[32m+[m[32m-------[m
[32m+[m
[32m+[m[32m* Implement `nacl.sign.keyPair.fromSeed` to enable creation of sign key pairs[m
[32m+[m[32m  deterministically from a 32-byte seed. (It behaves like[m
[32m+[m[32m  [libsodium's](http://doc.libsodium.org/public-key_cryptography/public-key_signatures.html)[m
[32m+[m[32m  `crypto_sign_seed_keypair`: the seed becomes a secret part of the secret key.)[m
[32m+[m
[32m+[m[32m* Fast version now has an improved hash implementation that is 2x-5x faster.[m
[32m+[m
[32m+[m[32m* Fixed benchmarks, which may have produced incorrect measurements.[m
[32m+[m
[32m+[m
[32m+[m[32mv0.10.1[m
[32m+[m[32m-------[m
[32m+[m
[32m+[m[32m* Exported undocumented `nacl.lowlevel.crypto_core_hsalsa20`.[m
[32m+[m
[32m+[m
[32m+[m[32mv0.10.0[m
[32m+[m[32m-------[m
[32m+[m
[32m+[m[32m* **Signature API breaking change!** `nacl.sign` and `nacl.sign.open` now deal[m
[32m+[m[32m with signed messages, and new `nacl.sign.detached` and[m
[32m+[m[32m `nacl.sign.detached.verify` are available.[m
[32m+[m
[32m+[m[32m Previously, `nacl.sign` returned a signature, and `nacl.sign.open` accepted a[m
[32m+[m[32m message and "detached" signature. This was unlike NaCl's API, which dealt with[m
[32m+[m[32m signed messages (concatenation of signature and message).[m
[32m+[m
[32m+[m[32m The new API is:[m
[32m+[m
[32m+[m[32m      nacl.sign(message, secretKey) -> signedMessage[m
[32m+[m[32m      nacl.sign.open(signedMessage, publicKey) -> message | null[m
[32m+[m
[32m+[m[32m Since detached signatures are common, two new API functions were introduced:[m
[32m+[m
[32m+[m[32m      nacl.sign.detached(message, secretKey) -> signature[m
[32m+[m[32m      nacl.sign.detached.verify(message, signature, publicKey) -> true | false[m
[32m+[m
[32m+[m[32m (Note that it's `verify`, not `open`, and it returns a boolean value, unlike[m
[32m+[m[32m `open`, which returns an "unsigned" message.)[m
[32m+[m
[32m+[m[32m* NPM package now comes without `test` directory to keep it small.[m
[32m+[m
[32m+[m
[32m+[m[32mv0.9.2[m
[32m+[m[32m------[m
[32m+[m
[32m+[m[32m* Improved documentation.[m
[32m+[m[32m* Fast version: increased theoretical message size limit from 2^32-1 to 2^52[m
[32m+[m[32m  bytes in Poly1305 (and thus, secretbox and box). However this has no impact[m
[32m+[m[32m  in practice since JavaScript arrays or ArrayBuffers are limited to 32-bit[m
[32m+[m[32m  indexes, and most implementations won't allocate more than a gigabyte or so.[m
[32m+[m[32m  (Obviously, there are no tests for the correctness of implementation.) Also,[m
[32m+[m[32m  it's not recommended to use messages that large without splitting them into[m
[32m+[m[32m  smaller packets anyway.[m
[32m+[m
[32m+[m
[32m+[m[32mv0.9.1[m
[32m+[m[32m------[m
[32m+[m
[32m+[m[32m* Initial release[m
[1mdiff --git a/node_modules/tweetnacl/LICENSE b/node_modules/tweetnacl/LICENSE[m
[1mnew file mode 100644[m
[1mindex 0000000..cf1ab25[m
[1m--- /dev/null[m
[1m+++ b/node_modules/tweetnacl/LICENSE[m
[36m@@ -0,0 +1,24 @@[m
[32m+[m[32mThis is free and unencumbered software released into the public domain.[m
[32m+[m
[32m+[m[32mAnyone is free to copy, modify, publish, use, compile, sell, or[m
[32m+[m[32mdistribute this software, either in source code form or as a compiled[m
[32m+[m[32mbinary, for any purpose, commercial or non-commercial, and by any[m
[32m+[m[32mmeans.[m
[32m+[m
[32m+[m[32mIn jurisdictions that recognize copyright laws, the author or authors[m
[32m+[m[32mof this software dedicate any and all copyright interest in the[m
[32m+[m[32msoftware to the public domain. We make this dedication for the benefit[m
[32m+[m[32mof the public at large and to the detriment of our heirs and[m
[32m+[m[32msuccessors. We intend this dedication to be an overt act of[m
[32m+[m[32mrelinquishment in perpetuity of all present and future rights to this[m
[32m+[m[32msoftware under copyright law.[m
[32m+[m
[32m+[m[32mTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,[m
[32m+[m[32mEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF[m
[32m+[m[32mMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.[m
[32m+[m[32mIN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR[m
[32m+[m[32mOTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,[m
[32m+[m[32mARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR[m
[32m+[m[32mOTHER DEALINGS IN THE SOFTWARE.[m
[32m+[m
[32m+[m[32mFor more information, please refer to <http://unlicense.org>[m
[1mdiff --git a/node_modules/tweetnacl/PULL_REQUEST_TEMPLATE.md b/node_modules/tweetnacl/PULL_REQUEST_TEMPLATE.md[m
[1mnew file mode 100644[m
[1mindex 0000000..a8eb4a9[m
[1m--- /dev/null[m
[1m+++ b/node_modules/tweetnacl/PULL_REQUEST_TEMPLATE.md[m
[36m@@ -0,0 +1,20 @@[m
[32m+[m[32m# Important![m
[32m+[m
[32m+[m[32mIf your contribution is not trivial (not a typo fix, etc.), we can only accept[m
[32m+[m[32mit if you dedicate your copyright for the contribution to the public domain.[m
[32m+[m[32mMake sure you understand what it means (see http://unlicense.org/)! If you[m
[32m+[m[32magree, please add yourself to AUTHORS.md file, and include the following text[m
[32m+[m[32mto your pull request description or a comment in it:[m
[32m+[m
[32m+[m[32m------------------------------------------------------------------------------[m
[32m+[m
[32m+[m[32m    I dedicate any and all copyright interest in this software to the[m
[32m+[m[32m    public domain. I make this dedication for the benefit of the public at[m
[32m+[m[32m    large and to the detriment of my heirs and successors. I intend this[m
[32m+[m[32m    dedication to be an overt act of relinquishment in perpetuity of all[m
[32m+[m[32m    present and future rights to this software under copyright law.[m
[32m+[m
[32m+[m[32m    Anyone is free to copy, modify, publish, use, compile, sell, or[m
[32m+[m[32m    distribute this software, either in source code form or as a compiled[m
[32m+[m[32m    binary, for any purpose, commercial or non-commercial, and by any[m
[32m+[m[32m    means.[m
[1mdiff --git a/node_modules/tweetnacl/README.md b/node_modules/tweetnacl/README.md[m
[1mnew file mode 100644[m
[1mindex 0000000..a20fcae[m
[1m--- /dev/null[m
[1m+++ b/node_modules/tweetnacl/README.md[m
[36m@@ -0,0 +1,494 @@[m
[32m+[m[32mTweetNaCl.js[m
[32m+[m[32m============[m
[32m+[m
[32m+[m[32mPort of [TweetNaCl](http://tweetnacl.cr.yp.to) / [NaCl](http://nacl.cr.yp.to/)[m
[32m+[m[32mto JavaScript for modern browsers and Node.js. Public domain.[m
[32m+[m
[32m+[m[32m[![Build Status](https://travis-ci.org/dchest/tweetnacl-js.svg?branch=master)[m
[32m+[m[32m](https://travis-ci.org/dchest/tweetnacl-js)[m
[32m+[m
[32m+[m[32mDemo: <https://dchest.github.io/tweetnacl-js/>[m
[32m+[m
[32m+[m[32mDocumentation[m
[32m+[m[32m=============[m
[32m+[m
[32m+[m[32m* [Overview](#overview)[m
[32m+[m[32m* [Audits](#audits)[m
[32m+[m[32m* [Installation](#installation)[m
[32m+[m[32m* [Examples](#examples)[m
[32m+[m[32m* [Usage](#usage)[m
[32m+[m[32m  * [Public-key authenticated encryption (box)](#public-key-authenticated-encryption-box)[m
[32m+[m[32m  * [Secret-key authenticated encryption (secretbox)](#secret-key-authenticated-encryption-secretbox)[m
[32m+[m[32m  * [Scalar multiplication](#scalar-multiplication)[m
[32m+[m[32m  * [Signatures](#signatures)[m
[32m+[m[32m  * [Hashing](#hashing)[m
[32m+[m[32m  * [Random bytes generation](#random-bytes-generation)[m
[32m+[m[32m  * [Constant-time comparison](#constant-time-comparison)[m
[32m+[m[32m* [System requirements](#system-requirements)[m
[32m+[m[32m* [Development and testing](#development-and-testing)[m
[32m+[m[32m* [Benchmarks](#benchmarks)[m
[32m+[m[32m* [Contributors](#contributors)[m
[32m+[m[32m* [Who uses it](#who-uses-it)[m
[32m+[m
[32m+[m
[32m+[m[32mOverview[m
[32m+[m[32m--------[m
[32m+[m
[32m+[m[32mThe primary goal of this project is to produce a translation of TweetNaCl to[m
[32m+[m[32mJavaScript which is as close as possible to the original C implementation, plus[m
[32m+[m[32ma thin layer of idiomatic high-level API on top of it.[m
[32m+[m
[32m+[m[32mThere are two versions, you can use either of them:[m
[32m+[m
[32m+[m[32m* `nacl.js` is the port of TweetNaCl with minimum differences from the[m
[32m+[m[32m  original + high-level API.[m
[32m+[m
[32m+[m[32m* `nacl-fast.js` is like `nacl.js`, but with some functions replaced with[m
[32m+[m[32m  faster versions. (Used by default when importing NPM package.)[m
[32m+[m
[32m+[m
[32m+[m[32mAudits[m
[32m+[m[32m------[m
[32m+[m
[32m+[m[32mTweetNaCl.js has been audited by [Cure53](https://cure53.de/) in January-February[m
[32m+[m[32m2017 (audit was sponsored by [Deletype](https://deletype.com)):[m
[32m+[m
[32m+[m[32m> The overall outcome of this audit signals a particularly positive assessment[m
[32m+[m[32m> for TweetNaCl-js, as the testing team was unable to find any security[m
[32m+[m[32m> problems in the library. It has to be noted that this is an exceptionally[m
[32m+[m[32m> rare result of a source code audit for any project and must be seen as a true[m
[32m+[m[32m> testament to a development proceeding with security at its core.[m
[32m+[m[32m>[m
[32m+[m[32m> To reiterate, the TweetNaCl-js project, the source code was found to be[m
[32m+[m[32m> bug-free at this point.[m
[32m+[m[32m>[m
[32m+[m[32m> [...][m
[32m+[m[32m>[m
[32m+[m[32m> In sum, the testing team is happy to recommend the TweetNaCl-js project as[m
[32m+[m[32m> likely one of the safer and more secure cryptographic tools among its[m
[32m+[m[32m> competition.[m
[32m+[m
[32m+[m[32m[Read full audit report](https://cure53.de/tweetnacl.pdf)[m
[32m+[m
[32m+[m
[32m+[m[32mInstallation[m
[32m+[m[32m------------[m
[32m+[m
[32m+[m[32mYou can install TweetNaCl.js via a package manager:[m
[32m+[m
[32m+[m[32m[Yarn](https://yarnpkg.com/):[m
[32m+[m
[32m+[m[32m    $ yarn add tweetnacl[m
[32m+[m
[32m+[m[32m[NPM](https://www.npmjs.org/):[m
[32m+[m
[32m+[m[32m    $ npm install tweetnacl[m
[32m+[m
[32m+[m[32mor [download source code](https://github.com/dchest/tweetnacl-js/releases).[m
[32m+[m
[32m+[m
[32m+[m[32mExamples[m
[32m+[m[32m--------[m
[32m+[m[32mYou can find usage examples in our [wiki](https://github.com/dchest/tweetnacl-js/wiki/Examples).[m
[32m+[m
[32m+[m
[32m+[m[32mUsage[m
[32m+[m[32m-----[m
[32m+[m
[32m+[m[32mAll API functions accept and return bytes as `Uint8Array`s.  If you need to[m
[32m+[m[32mencode or decode strings, use functions from[m
[32m+[m[32m<https://github.com/dchest/tweetnacl-util-js> or one of the more robust codec[m
[32m+[m[32mpackages.[m
[32m+[m
[32m+[m[32mIn Node.js v4 and later `Buffer` objects are backed by `Uint8Array`s, so you[m
[32m+[m[32mcan freely pass them to TweetNaCl.js functions as arguments. The returned[m
[32m+[m[32mobjects are still `Uint8Array`s, so if you need `Buffer`s, you'll have to[m
[32m+[m[32mconvert them manually; make sure to convert using copying: `Buffer.from(array)`[m
[32m+[m[32m(or `new Buffer(array)` in Node.js v4 or earlier), instead of sharing:[m
[32m+[m[32m`Buffer.from(array.buffer)` (or `new Buffer(array.buffer)` Node 4 or earlier),[m
[32m+[m[32mbecause some functions return subarrays of their buffers.[m
[32m+[m
[32m+[m
[32m+[m[32m### Public-key authenticated encryption (box)[m
[32m+[m
[32m+[m[32mImplements *x25519-xsalsa20-poly1305*.[m
[32m+[m
[32m+[m[32m#### nacl.box.keyPair()[m
[32m+[m
[32m+[m[32mGenerates a new random key pair for box and returns it as an object with[m
[32m+[m[32m`publicKey` and `secretKey` members:[m
[32m+[m
[32m+[m[32m    {[m
[32m+[m[32m       publicKey: ...,  // Uint8Array with 32-byte public key[m
[32m+[m[32m       secretKey: ...   // Uint8Array with 32-byte secret key[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m
[32m+[m[32m#### nacl.box.keyPair.fromSecretKey(secretKey)[m
[32m+[m
[32m+[m[32mReturns a key pair for box with public key corresponding to the given secret[m
[32m+[m[32mkey.[m
[32m+[m
[32m+[m[32m#### nacl.box(message, nonce, theirPublicKey, mySecretKey)[m
[32m+[m
[32m+[m[32mEncrypts and authenticates message using peer's public key, our secret key, and[m
[32m+[m[32mthe given nonce, which must be unique for each distinct message for a key pair.[m
[32m+[m
[32m+[m[32mReturns an encrypted and authenticated message, which is[m
[32m+[m[32m`nacl.box.overheadLength` longer than the original message.[m
[32m+[m
[32m+[m[32m#### nacl.box.open(box, nonce, theirPublicKey, mySecretKey)[m
[32m+[m
[32m+[m[32mAuthenticates and decrypts the given box with peer's public key, our secret[m
[32m+[m[32mkey, and the given nonce.[m
[32m+[m
[32m+[m[32mReturns the original message, or `null` if authentication fails.[m
[32m+[m
[32m+[m[32m#### nacl.box.before(theirPublicKey, mySecretKey)[m
[32m+[m
[32m+[m[32mReturns a precomputed shared key which can be used in `nacl.box.after` and[m
[32m+[m[32m`nacl.box.open.after`.[m
[32m+[m
[32m+[m[32m#### nacl.box.after(message, nonce, sharedKey)[m
[32m+[m
[32m+[m[32mSame as `nacl.box`, but uses a shared key precomputed with `nacl.box.before`.[m
[32m+[m
[32m+[m[32m#### nacl.box.open.after(box, nonce, sharedKey)[m
[32m+[m
[32m+[m[32mSame as `nacl.box.open`, but uses a shared key precomputed with `nacl.box.before`.[m
[32m+[m
[32m+[m[32m#### Constants[m
[32m+[m
[32m+[m[32m##### nacl.box.publicKeyLength = 32[m
[32m+[m
[32m+[m[32mLength of public key in bytes.[m
[32m+[m
[32m+[m[32m##### nacl.box.secretKeyLength = 32[m
[32m+[m
[32m+[m[32mLength of secret key in bytes.[m
[32m+[m
[32m+[m[32m##### nacl.box.sharedKeyLength = 32[m
[32m+[m
[32m+[m[32mLength of precomputed shared key in bytes.[m
[32m+[m
[32m+[m[32m##### nacl.box.nonceLength = 24[m
[32m+[m
[32m+[m[32mLength of nonce in bytes.[m
[32m+[m
[32m+[m[32m##### nacl.box.overheadLength = 16[m
[32m+[m
[32m+[m[32mLength of overhead added to box compared to original message.[m
[32m+[m
[32m+[m
[32m+[m[32m### Secret-key authenticated encryption (secretbox)[m
[32m+[m
[32m+[m[32mImplements *xsalsa20-poly1305*.[m
[32m+[m
[32m+[m[32m#### nacl.secretbox(message, nonce, key)[m
[32m+[m
[32m+[m[32mEncrypts and authenticates message using the key and the nonce. The nonce must[m
[32m+[m[32mbe unique for each distinct message for this key.[m
[32m+[m
[32m+[m[32mReturns an encrypted and authenticated message, which is[m
[32m+[m[32m`nacl.secretbox.overheadLength` longer than the original message.[m
[32m+[m
[32m+[m[32m#### nacl.secretbox.open(box, nonce, key)[m
[32m+[m
[32m+[m[32mAuthenticates and decrypts the given secret box using the key and the nonce.[m
[32m+[m
[32m+[m[32mReturns the original message, or `null` if authentication fails.[m
[32m+[m
[32m+[m[32m#### Constants[m
[32m+[m
[32m+[m[32m##### nacl.secretbox.keyLength = 32[m
[32m+[m
[32m+[m[32mLength of key in bytes.[m
[32m+[m
[32m+[m[32m##### nacl.secretbox.nonceLength = 24[m
[32m+[m
[32m+[m[32mLength of nonce in bytes.[m
[32m+[m
[32m+[m[32m##### nacl.secretbox.overheadLength = 16[m
[32m+[m
[32m+[m[32mLength of overhead added to secret box compared to original message.[m
[32m+[m
[32m+[m
[32m+[m[32m### Scalar multiplication[m
[32m+[m
[32m+[m[32mImplements *x25519*.[m
[32m+[m
[32m+[m[32m#### nacl.scalarMult(n, p)[m
[32m+[m
[32m+[m[32mMultiplies an integer `n` by a group element `p` and returns the resulting[m
[32m+[m[32mgroup element.[m
[32m+[m
[32m+[m[32m#### nacl.scalarMult.base(n)[m
[32m+[m
[32m+[m[32mMultiplies an integer `n` by a standard group element and returns the resulting[m
[32m+[m[32mgroup element.[m
[32m+[m
[32m+[m[32m#### Constants[m
[32m+[m
[32m+[m[32m##### nacl.scalarMult.scalarLength = 32[m
[32m+[m
[32m+[m[32mLength of scalar in bytes.[m
[32m+[m
[32m+[m[32m##### nacl.scalarMult.groupElementLength = 32[m
[32m+[m
[32m+[m[32mLength of group element in bytes.[m
[32m+[m
[32m+[m
[32m+[m[32m### Signatures[m
[32m+[m
[32m+[m[32mImplements [ed25519](http://ed25519.cr.yp.to).[m
[32m+[m
[32m+[m[32m#### nacl.sign.keyPair()[m
[32m+[m
[32m+[m[32mGenerates new random key pair for signing and returns it as an object with[m
[32m+[m[32m`publicKey` and `secretKey` members:[m
[32m+[m
[32m+[m[32m    {[m
[32m+[m[32m       publicKey: ...,  // Uint8Array with 32-byte public key[m
[32m+[m[32m       secretKey: ...   // Uint8Array with 64-byte secret key[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m#### nacl.sign.keyPair.fromSecretKey(secretKey)[m
[32m+[m
[32m+[m[32mReturns a signing key pair with public key corresponding to the given[m
[32m+[m[32m64-byte secret key. The secret key must have been generated by[m
[32m+[m[32m`nacl.sign.keyPair` or `nacl.sign.keyPair.fromSeed`.[m
[32m+[m
[32m+[m[32m#### nacl.sign.keyPair.fromSeed(seed)[m
[32m+[m
[32m+[m[32mReturns a new signing key pair generated deterministically from a 32-byte seed.[m
[32m+[m[32mThe seed must contain enough entropy to be secure. This method is not[m
[32m+[m[32mrecommended for general use: instead, use `nacl.sign.keyPair` to generate a new[m
[32m+[m[32mkey pair from a random seed.[m
[32m+[m
[32m+[m[32m#### nacl.sign(message, secretKey)[m
[32m+[m
[32m+[m[32mSigns the message using the secret key and returns a signed message.[m
[32m+[m
[32m+[m[32m#### nacl.sign.open(signedMessage, publicKey)[m
[32m+[m
[32m+[m[32mVerifies the signed message and returns the message without signature.[m
[32m+[m
[32m+[m[32mReturns `null` if verification failed.[m
[32m+[m
[32m+[m[32m#### nacl.sign.detached(message, secretKey)[m
[32m+[m
[32m+[m[32mSigns the message using the secret key and returns a signature.[m
[32m+[m
[32m+[m[32m#### nacl.sign.detached.verify(message, signature, publicKey)[m
[32m+[m
[32m+[m[32mVerifies the signature for the message and returns `true` if verification[m
[32m+[m[32msucceeded or `false` if it failed.[m
[32m+[m
[32m+[m[32m#### Constants[m
[32m+[m
[32m+[m[32m##### nacl.sign.publicKeyLength = 32[m
[32m+[m
[32m+[m[32mLength of signing public key in bytes.[m
[32m+[m
[32m+[m[32m##### nacl.sign.secretKeyLength = 64[m
[32m+[m
[32m+[m[32mLength of signing secret key in bytes.[m
[32m+[m
[32m+[m[32m##### nacl.sign.seedLength = 32[m
[32m+[m
[32m+[m[32mLength of seed for `nacl.sign.keyPair.fromSeed` in bytes.[m
[32m+[m
[32m+[m[32m##### nacl.sign.signatureLength = 64[m
[32m+[m
[32m+[m[32mLength of signature in bytes.[m
[32m+[m
[32m+[m
[32m+[m[32m### Hashing[m
[32m+[m
[32m+[m[32mImplements *SHA-512*.[m
[32m+[m
[32m+[m[32m#### nacl.hash(message)[m
[32m+[m
[32m+[m[32mReturns SHA-512 hash of the message.[m
[32m+[m
[32m+[m[32m#### Constants[m
[32m+[m
[32m+[m[32m##### nacl.hash.hashLength = 64[m
[32m+[m
[32m+[m[32mLength of hash in bytes.[m
[32m+[m
[32m+[m
[32m+[m[32m### Random bytes generation[m
[32m+[m
[32m+[m[32m#### nacl.randomBytes(length)[m
[32m+[m
[32m+[m[32mReturns a `Uint8Array` of the given length containing random bytes of[m
[32m+[m[32mcryptographic quality.[m
[32m+[m
[32m+[m[32m**Implementation note**[m
[32m+[m
[32m+[m[32mTweetNaCl.js uses the following methods to generate random bytes,[m
[32m+[m[32mdepending on the platform it runs on:[m
[32m+[m
[32m+[m[32m* `window.crypto.getRandomValues` (WebCrypto standard)[m
[32m+[m[32m* `window.msCrypto.getRandomValues` (Internet Explorer 11)[m
[32m+[m[32m* `crypto.randomBytes` (Node.js)[m
[32m+[m
[32m+[m[32mIf the platform doesn't provide a suitable PRNG, the following functions,[m
[32m+[m[32mwhich require random numbers, will throw exception:[m
[32m+[m
[32m+[m[32m* `nacl.randomBytes`[m
[32m+[m[32m* `nacl.box.keyPair`[m
[32m+[m[32m* `nacl.sign.keyPair`[m
[32m+[m
[32m+[m[32mOther functions are deterministic and will continue working.[m
[32m+[m
[32m+[m[32mIf a platform you are targeting doesn't implement secure random number[m
[32m+[m[32mgenerator, but you somehow have a cryptographically-strong source of entropy[m
[32m+[m[32m(not `Math.random`!), and you know what you are doing, you can plug it into[m
[32m+[m[32mTweetNaCl.js like this:[m
[32m+[m
[32m+[m[32m    nacl.setPRNG(function(x, n) {[m
[32m+[m[32m      // ... copy n random bytes into x ...[m
[32m+[m[32m    });[m
[32m+[m
[32m+[m[32mNote that `nacl.setPRNG` *completely replaces* internal random byte generator[m
[32m+[m[32mwith the one provided.[m
[32m+[m
[32m+[m
[32m+[m[32m### Constant-time comparison[m
[32m+[m
[32m+[m[32m#### nacl.verify(x, y)[m
[32m+[m
[32m+[m[32mCompares `x` and `y` in constant time and returns `true` if their lengths are[m
[32m+[m[32mnon-zero and equal, and their contents are equal.[m
[32m+[m
[32m+[m[32mReturns `false` if either of the arguments has zero length, or arguments have[m
[32m+[m[32mdifferent lengths, or their contents differ.[m
[32m+[m
[32m+[m
[32m+[m[32mSystem requirements[m
[32m+[m[32m-------------------[m
[32m+[m
[32m+[m[32mTweetNaCl.js supports modern browsers that have a cryptographically secure[m
[32m+[m[32mpseudorandom number generator and typed arrays, including the latest versions[m
[32m+[m[32mof:[m
[32m+[m
[32m+[m[32m* Chrome[m
[32m+[m[32m* Firefox[m
[32m+[m[32m* Safari (Mac, iOS)[m
[32m+[m[32m* Internet Explorer 11[m
[32m+[m
[32m+[m[32mOther systems:[m
[32m+[m
[32m+[m[32m* Node.js[m
[32m+[m
[32m+[m
[32m+[m[32mDevelopment and testing[m
[32m+[m[32m------------------------[m
[32m+[m
[32m+[m[32mInstall NPM modules needed for development:[m
[32m+[m
[32m+[m[32m    $ npm install[m
[32m+[m
[32m+[m[32mTo build minified versions:[m
[32m+[m
[32m+[m[32m    $ npm run build[m
[32m+[m
[32m+[m[32mTests use minified version, so make sure to rebuild it every time you change[m
[32m+[m[32m`nacl.js` or `nacl-fast.js`.[m
[32m+[m
[32m+[m[32m### Testing[m
[32m+[m
[32m+[m[32mTo run tests in Node.js:[m
[32m+[m
[32m+[m[32m    $ npm run test-node[m
[32m+[m
[32m+[m[32mBy default all tests described here work on `nacl.min.js`. To test other[m
[32m+[m[32mversions, set environment variable `NACL_SRC` to the file name you want to test.[m
[32m+[m[32mFor example, the following command will test fast minified version:[m
[32m+[m
[32m+[m[32m    $ NACL_SRC=nacl-fast.min.js npm run test-node[m
[32m+[m
[32m+[m[32mTo run full suite of tests in Node.js, including comparing outputs of[m
[32m+[m[32mJavaScript port to outputs of the original C version:[m
[32m+[m
[32m+[m[32m    $ npm run test-node-all[m
[32m+[m
[32m+[m[32mTo prepare tests for browsers:[m
[32m+[m
[32m+[m[32m    $ npm run build-test-browser[m
[32m+[m
[32m+[m[32mand then open `test/browser/test.html` (or `test/browser/test-fast.html`) to[m
[32m+[m[32mrun them.[m
[32m+[m
[32m+[m[32mTo run tests in both Node and Electron:[m
[32m+[m
[32m+[m[32m    $ npm test[m
[32m+[m
[32m+[m[32m### Benchmarking[m
[32m+[m
[32m+[m[32mTo run benchmarks in Node.js:[m
[32m+[m
[32m+[m[32m    $ npm run bench[m
[32m+[m[32m    $ NACL_SRC=nacl-fast.min.js npm run bench[m
[32m+[m
[32m+[m[32mTo run benchmarks in a browser, open `test/benchmark/bench.html` (or[m
[32m+[m[32m`test/benchmark/bench-fast.html`).[m
[32m+[m
[32m+[m
[32m+[m[32mBenchmarks[m
[32m+[m[32m----------[m
[32m+[m
[32m+[m[32mFor reference, here are benchmarks from MacBook Pro (Retina, 13-inch, Mid 2014)[m
[32m+[m[32mlaptop with 2.6 GHz Intel Core i5 CPU (Intel) in Chrome 53/OS X and Xiaomi Redmi[m
[32m+[m[32mNote 3 smartphone with 1.8 GHz Qualcomm Snapdragon 650 64-bit CPU (ARM) in[m
[32m+[m[32mChrome 52/Android:[m
[32m+[m
[32m+[m[32m|               | nacl.js Intel | nacl-fast.js Intel  |   nacl.js ARM | nacl-fast.js ARM  |[m
[32m+[m[32m| ------------- |:-------------:|:-------------------:|:-------------:|:-----------------:|[m
[32m+[m[32m| salsa20       | 1.3 MB/s      | 128 MB/s            |  0.4 MB/s     |  43 MB/s          |[m
[32m+[m[32m| poly1305      | 13 MB/s       | 171 MB/s            |  4 MB/s       |  52 MB/s          |[m
[32m+[m[32m| hash          | 4 MB/s        | 34 MB/s             |  0.9 MB/s     |  12 MB/s          |[m
[32m+[m[32m| secretbox 1K  | 1113 op/s     | 57583 op/s          |  334 op/s     |  14227 op/s       |[m
[32m+[m[32m| box 1K        | 145 op/s      | 718 op/s            |  37 op/s      |  368 op/s         |[m
[32m+[m[32m| scalarMult    | 171 op/s      | 733 op/s            |  56 op/s      |  380 op/s         |[m
[32m+[m[32m| sign          | 77  op/s      | 200 op/s            |  20 op/s      |  61 op/s          |[m
[32m+[m[32m| sign.open     | 39  op/s      | 102  op/s           |  11 op/s      |  31 op/s          |[m
[32m+[m
[32m+[m[32m(You can run benchmarks on your devices by clicking on the links at the bottom[m
[32m+[m[32mof the [home page](https://tweetnacl.js.org)).[m
[32m+[m
[32m+[m[32mIn short, with *nacl-fast.js* and 1024-byte messages you can expect to encrypt and[m
[32m+[m[32mauthenticate more than 57000 messages per second on a typical laptop or more than[m
[32m+[m[32m14000 messages per second on a $170 smartphone, sign about 200 and verify 100[m
[32m+[m[32mmessages per second on a laptop or 60 and 30 messages per second on a smartphone,[m
[32m+[m[32mper CPU core (with Web Workers you can do these operations in parallel),[m
[32m+[m[32mwhich is good enough for most applications.[m
[32m+[m
[32m+[m
[32m+[m[32mContributors[m
[32m+[m[32m------------[m
[32m+[m
[32m+[m[32mSee AUTHORS.md file.[m
[32m+[m
[32m+[m
[32m+[m[32mThird-party libraries based on TweetNaCl.js[m
[32m+[m[32m-------------------------------------------[m
[32m+[m
[32m+[m[32m* [forward-secrecy](https://github.com/alax/forward-secrecy) — Axolotl ratchet implementation[m
[32m+[m[32m* [nacl-stream](https://github.com/dchest/nacl-stream-js) - streaming encryption[m
[32m+[m[32m* [tweetnacl-auth-js](https://github.com/dchest/tweetnacl-auth-js) — implementation of [`crypto_auth`](http://nacl.cr.yp.to/auth.html)[m
[32m+[m[32m* [tweetnacl-sealed-box](https://github.com/whs/tweetnacl-sealed-box) — implementation of [`sealed boxes`](https://download.libsodium.org/doc/public-key_cryptography/sealed_boxes.html)[m
[32m+[m[32m* [chloride](https://github.com/dominictarr/chloride) - unified API for various NaCl modules[m
[32m+[m
[32m+[m
[32m+[m[32mWho uses it[m
[32m+[m[32m-----------[m
[32m+[m
[32m+[m[32mSome notable users of TweetNaCl.js:[m
[32m+[m
[32m+[m[32m* [MEGA](https://github.com/meganz/webclient)[m
[32m+[m[32m* [Peerio](https://www.peerio.com/)[m
[32m+[m[32m* [Stellar](https://www.stellar.org/)[m
[32m+[m[32m* [miniLock](http://minilock.io/)[m
[1mdiff --git a/node_modules/tweetnacl/nacl-fast.js b/node_modules/tweetnacl/nacl-fast.js[m
[1mnew file mode 100644[m
[1mindex 0000000..34b82e7[m
[1m--- /dev/null[m
[1m+++ b/node_modules/tweetnacl/nacl-fast.js[m
[36m@@ -0,0 +1,2377 @@[m
[32m+[m[32m(function(nacl) {[m
[32m+[m[32m'use strict';[m
[32m+[m
[32m+[m[32m// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.[m
[32m+[m[32m// Public domain.[m
[32m+[m[32m//[m
[32m+[m[32m// Implementation derived from TweetNaCl version 20140427.[m
[32m+[m[32m// See for details: http://tweetnacl.cr.yp.to/[m
[32m+[m
[32m+[m[32mvar gf = function(init) {[m
[32m+[m[32m  var i, r = new Float64Array(16);[m
[32m+[m[32m  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];[m
[32m+[m[32m  return r;[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m//  Pluggable, initialized in high-level API below.[m
[32m+[m[32mvar randombytes = function(/* x, n */) { throw new Error('no PRNG'); };[m
[32m+[m
[32m+[m[32mvar _0 = new Uint8Array(16);[m
[32m+[m[32mvar _9 = new Uint8Array(32); _9[0] = 9;[m
[32m+[m
[32m+[m[32mvar gf0 = gf(),[m
[32m+[m[32m    gf1 = gf([1]),[m
[32m+[m[32m    _121665 = gf([0xdb41, 1]),[m
[32m+[m[32m    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),[m
[32m+[m[32m    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),[m
[32m+[m[32m    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),[m
[32m+[m[32m    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),[m
[32m+[m[32m    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);[m
[32m+[m
[32m+[m[32mfunction ts64(x, i, h, l) {[m
[32m+[m[32m  x[i]   = (h >> 24) & 0xff;[m
[32m+[m[32m  x[i+1] = (h >> 16) & 0xff;[m
[32m+[m[32m  x[i+2] = (h >>  8) & 0xff;[m
[32m+[m[32m  x[i+3] = h & 0xff;[m
[32m+[m[32m  x[i+4] = (l >> 24)  & 0xff;[m
[32m+[m[32m  x[i+5] = (l >> 16)  & 0xff;[m
[32m+[m[32m  x[i+6] = (l >>  8)  & 0xff;[m
[32m+[m[32m  x[i+7] = l & 0xff;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction vn(x, xi, y, yi, n) {[m
[32m+[m[32m  var i,d = 0;[m
[32m+[m[32m  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];[m
[32m+[m[32m  return (1 & ((d - 1) >>> 8)) - 1;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction crypto_verify_16(x, xi, y, yi) {[m
[32m+[m[32m  return vn(x,xi,y,yi,16);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction crypto_verify_32(x, xi, y, yi) {[m
[32m+[m[32m  return vn(x,xi,y,yi,32);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction core_salsa20(o, p, k, c) {[m
[32m+[m[32m  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,[m
[32m+[m[32m      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,[m
[32m+[m[32m      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,[m
[32m+[m[32m      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,[m
[32m+[m[32m      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,[m
[32m+[m[32m      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,[m
[32m+[m[32m      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,[m
[32m+[m[32m      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,[m
[32m+[m[32m      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,[m
[32m+[m[32m      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,[m
[32m+[m[32m      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,[m
[32m+[m[32m      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,[m
[32m+[m[32m      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,[m
[32m+[m[32m      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,[m
[32m+[m[32m      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,[m
[32m+[m[32m      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;[m
[32m+[m
[32m+[m[32m  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,[m
[32m+[m[32m      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,[m
[32m+[m[32m      x15 = j15, u;[m
[32m+[m
[32m+[m[32m  for (var i = 0; i < 20; i += 2) {[m
[32m+[m[32m    u = x0 + x12 | 0;[m
[32m+[m[32m    x4 ^= u<<7 | u>>>(32-7);[m
[32m+[m[32m    u = x4 + x0 | 0;[m
[32m+[m[32m    x8 ^= u<<9 | u>>>(32-9);[m
[32m+[m[32m    u = x8 + x4 | 0;[m
[32m+[m[32m    x12 ^= u<<13 | u>>>(32-13);[m
[32m+[m[32m    u = x12 + x8 | 0;[m
[32m+[m[32m    x0 ^= u<<18 | u>>>(32-18);[m
[32m+[m
[32m+[m[32m    u = x5 + x1 | 0;[m
[32m+[m[32m    x9 ^= u<<7 | u>>>(32-7);[m
[32m+[m[32m    u = x9 + x5 | 0;[m
[32m+[m[32m    x13 ^= u<<9 | u>>>(32-9);[m
[32m+[m[32m    u = x13 + x9 | 0;[m
[32m+[m[32m    x1 ^= u<<13 | u>>>(32-13);[m
[32m+[m[32m    u = x1 + x13 | 0;[m
[32m+[m[32m    x5 ^= u<<18 | u>>>(32-18);[m
[32m+[m
[32m+[m[32m    u = x10 + x6 | 0;[m
[32m+[m[32m    x14 ^= u<<7 | u>>>(32-7);[m
[32m+[m[32m    u = x14 + x10 | 0;[m
[32m+[m[32m    x2 ^= u<<9 | u>>>(32-9);[m
[32m+[m[32m    u = x2 + x14 | 0;[m
[32m+[m[32m    x6 ^= u<<13 | u>>>(32-13);[m
[32m+[m[32m    u = x6 + x2 | 0;[m
[32m+[m[32m    x10 ^= u<<18 | u>>>(32-18);[m
[32m+[m
[32m+[m[32m    u = x15 + x11 | 0;[m
[32m+[m[32m    x3 ^= u<<7 | u>>>(32-7);[m
[32m+[m[32m    u = x3 + x15 | 0;[m
[32m+[m[32m    x7 ^= u<<9 | u>>>(32-9);[m
[32m+[m[32m    u = x7 + x3 | 0;[m
[32m+[m[32m    x11 ^= u<<13 | u>>>(32-13);[m
[32m+[m[32m    u = x11 + x7 | 0;[m
[32m+[m[32m    x15 ^= u<<18 | u>>>(32-18);[m
[32m+[m
[32m+[m[32m    u = x0 + x3 | 0;[m
[32m+[m[32m    x1 ^= u<<7 | u>>>(32-7);[m
[32m+[m[32m    u = x1 + x0 | 0;[m
[32m+[m[32m    x2 ^= u<<9 | u>>>(32-9);[m
[32m+[m[32m    u = x2 + x1 | 0;[m
[32m+[m[32m    x3 ^= u<<13 | u>>>(32-13);[m
[32m+[m[32m    u = x3 + x2 | 0;[m
[32m+[m[32m    x0 ^= u<<18 | u>>>(32-18);[m
[32m+[m
[32m+[m[32m    u = x5 + x4 | 0;[m
[32m+[m[32m    x6 ^= u<<7 | u>>>(32-7);[m
[32m+[m[32m    u = x6 + x5 | 0;[m
[32m+[m[32m    x7 ^= u<<9 | u>>>(32-9);[m
[32m+[m[32m    u = x7 + x6 | 0;[m
[32m+[m[32m    x4 ^= u<<13 | u>>>(32-13);[m
[32m+[m[32m    u = x4 + x7 | 0;[m
[32m+[m[32m    x5 ^= u<<18 | u>>>(32-18);[m
[32m+[m
[32m+[m[32m    u = x10 + x9 | 0;[m
[32m+[m[32m    x11 ^= u<<7 | u>>>(32-7);[m
[32m+[m[32m    u = x11 + x10 | 0;[m
[32m+[m[32m    x8 ^= u<<9 | u>>>(32-9);[m
[32m+[m[32m    u = x8 + x11 | 0;[m
[32m+[m[32m    x9 ^= u<<13 | u>>>(32-13);[m
[32m+[m[32m    u = x9 + x8 | 0;[m
[32m+[m[32m    x10 ^= u<<18 | u>>>(32-18);[m
[32m+[m
[32m+[m[32m    u = x15 + x14 | 0;[m
[32m+[m[32m    x12 ^= u<<7 | u>>>(32-7);[m
[32m+[m[32m    u = x12 + x15 | 0;[m
[32m+[m[32m    x13 ^= u<<9 | u>>>(32-9);[m
[32m+[m[32m    u = x13 + x12 | 0;[m
[32m+[m[32m    x14 ^= u<<13 | u>>>(32-13);[m
[32m+[m[32m    u = x14 + x13 | 0;[m
[32m+[m[32m    x15 ^= u<<18 | u>>>(32-18);[m
[32m+[m[32m  }[m
[32m+[m[32m   x0 =  x0 +  j0 | 0;[m
[32m+[m[32m   x1 =  x1 +  j1 | 0;[m
[32m+[m[32m   x2 =  x2 +  j2 | 0;[m
[32m+[m[32m   x3 =  x3 +  j3 | 0;[m
[32m+[m[32m   x4 =  x4 +  j4 | 0;[m
[32m+[m[32m   x5 =  x5 +  j5 | 0;[m
[32m+[m[32m   x6 =  x6 +  j6 | 0;[m
[32m+[m[32m   x7 =  x7 +  j7 | 0;[m
[32m+[m[32m   x8 =  x8 +  j8 | 0;[m
[32m+[m[32m   x9 =  x9 +  j9 | 0;[m
[32m+[m[32m  x10 = x10 + j10 | 0;[m
[32m+[m[32m  x11 = x11 + j11 | 0;[m
[32m+[m[32m  x12 = x12 + j12 | 0;[m
[32m+[m[32m  x13 = x13 + j13 | 0;[m
[32m+[m[32m  x14 = x14 + j14 | 0;[m
[32m+[m[32m  x15 = x15 + j15 | 0;[m
[32m+[m
[32m+[m[32m  o[ 0] = x0 >>>  0 & 0xff;[m
[32m+[m[32m  o[ 1] = x0 >>>  8 & 0xff;[m
[32m+[m[32m  o[ 2] = x0 >>> 16 & 0xff;[m
[32m+[m[32m  o[ 3] = x0 >>> 24 & 0xff;[m
[32m+[m
[32m+[m[32m  o[ 4] = x1 >>>  0 & 0xff;[m
[32m+[m[32m  o[ 5] = x1 >>>  8 & 0xff;[m
[32m+[m[32m  o[ 6] = x1 >>> 16 & 0xff;[m
[32m+[m[32m  o[ 7] = x1 >>> 24 & 0xff;[m
[32m+[m
[32m+[m[32m  o[ 8] = x2 >>>  0 & 0xff;[m
[32m+[m[32m  o[ 9] = x2 >>>  8 & 0xff;[m
[32m+[m[32m  o[10] = x2 >>> 16 & 0xff;[m
[32m+[m[32m  o[11] = x2 >>> 24 & 0xff;[m
[32m+[m
[32m+[m[32m  o[12] = x3 >>>  0 & 0xff;[m
[32m+[m[32m  o[13] = x3 >>>  8 & 0xff;[m
[32m+[m[32m  o[14] = x3 >>> 16 & 0xff;[m
[32m+[m[32m  o[15] = x3 >>> 24 & 0xff;[m
[32m+[m
[32m+[m[32m  o[16] = x4 >>>  0 & 0xff;[m
[32m+[m[32m  o[17] = x4 >>>  8 & 0xff;[m
[32m+[m[32m  o[18] = x4 >>> 16 & 0xff;[m
[32m+[m[32m  o[19] = x4 >>> 24 & 0xff;[m
[32m+[m
[32m+[m[32m  o[20] = x5 >>>  0 & 0xff;[m
[32m+[m[32m  o[21] = x5 >>>  8 & 0xff;[m
[32m+[m[32m  o[22] = x5 >>> 16 & 0xff;[m
[32m+[m[32m  o[23] = x5 >>> 24 & 0xff;[m
[32m+[m
[32m+[m[32m  o[24] = x6 >>>  0 & 0xff;[m
[32m+[m[32m  o[25] = x6 >>>  8 & 0xff;[m
[32m+[m[32m  o[26] = x6 >>> 16 & 0xff;[m
[32m+[m[32m  o[27] = x6 >>> 24 & 0xff;[m
[32m+[m
[32m+[m[32m  o[28] = x7 >>>  0 & 0xff;[m
[32m+[m[32m  o[29] = x7 >>>  8 & 0xff;[m
[32m+[m[32m  o[30] = x7 >>> 16 & 0xff;[m
[32m+[m[32m  o[31] = x7 >>> 24 & 0xff;[m
[32m+[m
[32m+[m[32m  o[32] = x8 >>>  0 & 0xff;[m
[32m+[m[32m  o[33] = x8 >>>  8 & 0xff;[m
[32m+[m[32m  o[34] = x8 >>> 16 & 0xff;[m
[32m+[m[32m  o[35] = x8 >>> 24 & 0xff;[m
[32m+[m
[32m+[m[32m  o[36] = x9 >>>  0 & 0xff;[m
[32m+[m[32m  o[37] = x9 >>>  8 & 0xff;[m
[32m+[m[32m  o[38] = x9 >>> 16 & 0xff;[m
[32m+[m[32m  o[39] = x9 >>> 24 & 0xff;[m
[32m+[m
[32m+[m[32m  o[40] = x10 >>>  0 & 0xff;[m
[32m+[m[32m  o[41] = x10 >>>  8 & 0xff;[m
[32m+[m[32m  o[42] = x10 >>> 16 & 0xff;[m
[32m+[m[32m  o[43] = x10 >>> 24 & 0xff;[m
[32m+[m
[32m+[m[32m  o[44] = x11 >>>  0 & 0xff;[m
[32m+[m[32m  o[45] = x11 >>>  8 & 0xff;[m
[32m+[m[32m  o[46] = x11 >>> 16 & 0xff;[m
[32m+[m[32m  o[47] = x11 >>> 24 & 0xff;[m
[32m+[m
[32m+[m[32m  o[48] = x12 >>>  0 & 0xff;[m
[32m+[m[32m  o[49] = x12 >>>  8 & 0xff;[m
[32m+[m[32m  o[50] = x12 >>> 16 & 0xff;[m
[32m+[m[32m  o[51] = x12 >>> 24 & 0xff;[m
[32m+[m
[32m+[m[32m  o[52] = x13 >>>  0 & 0xff;[m
[32m+[m[32m  o[53] = x13 >>>  8 & 0xff;[m
[32m+[m[32m  o[54] = x13 >>> 16 & 0xff;[m
[32m+[m[32m  o[55] = x13 >>> 24 & 0xff;[m
[32m+[m
[32m+[m[32m  o[56] = x14 >>>  0 & 0xff;[m
[32m+[m[32m  o[57] = x14 >>>  8 & 0xff;[m
[32m+[m[32m  o[58] = x14 >>> 16 & 0xff;[m
[32m+[m[32m  o[59] = x14 >>> 24 & 0xff;[m
[32m+[m
[32m+[m[32m  o[60] = x15 >>>  0 & 0xff;[m
[32m+[m[32m  o[61] = x15 >>>  8 & 0xff;[m
[32m+[m[32m  o[62] = x15 >>> 16 & 0xff;[m
[32m+[m[32m  o[63] = x15 >>> 24 & 0xff;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction core_hsalsa20(o,p,k,c) {[m
[32m+[m[32m  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,[m
[32m+[m[32m      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,[m
[32m+[m[32m      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,[m
[32m+[m[32m      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,[m
[32m+[m[32m      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,[m
[32m+[m[32m      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,[m
[32m+[m[32m      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,[m
[32m+[m[32m      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,[m
[32m+[m[32m      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,[m
[32m+[m[32m      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,[m
[32m+[m[32m      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,[m
[32m+[m[32m      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,[m
[32m+[m[32m      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,[m
[32m+[m[32m      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,[m
[32m+[m[32m      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,[m
[32m+[m[32m      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;[m
[32m+[m
[32m+[m[32m  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,[m
[32m+[m[32m      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,[m
[32m+[m[32m      x15 = j15, u;[m
[32m+[m
[32m+[m[32m  for (var i = 0; i < 20; i += 2) {[m
[32m+[m[32m    u = x0 + x12 | 0;[m
[32m+[m[32m    x4 ^= u<<7 | u>>>(32-7);[m
[32m+[m[32m    u = x4 + x0 | 0;[m
[32m+[m[32m    x8 ^= u<<9 | u>>>(32-9);[m
[32m+[m[32m    u = x8 + x4 | 0;[m
[32m+[m[32m    x12 ^= u<<13 | u>>>(32-13);[m
[32m+[m[32m    u = x12 + x8 | 0;[m
[32m+[m[32m    x0 ^= u<<18 | u>>>(32-18);[m
[32m+[m
[32m+[m[32m    u = x5 + x1 | 0;[m
[32m+[m[32m    x9 ^= u<<7 | u>>>(32-7);[m
[32m+[m[32m    u = x9 + x5 | 0;[m
[32m+[m[32m    x13 ^= u<<9 | u>>>(32-9);[m
[32m+[m[32m    u = x13 + x9 | 0;[m
[32m+[m[32m    x1 ^= u<<13 | u>>>(32-13);[m
[32m+[m[32m    u = x1 + x13 | 0;[m
[32m+[m[32m    x5 ^= u<<18 | u>>>(32-18);[m
[32m+[m
[32m+[m[32m    u = x10 + x6 | 0;[m
[32m+[m[32m    x14 ^= u<<7 | u>>>(32-7);[m
[32m+[m[32m    u = x14 + x10 | 0;[m
[32m+[m[32m    x2 ^= u<<9 | u>>>(32-9);[m
[32m+[m[32m    u = x2 + x14 | 0;[m
[32m+[m[32m    x6 ^= u<<13 | u>>>(32-13);[m
[32m+[m[32m    u = x6 + x2 | 0;[m
[32m+[m[32m    x10 ^= u<<18 | u>>>(32-18);[m
[32m+[m
[32m+[m[32m    u = x15 + x11 | 0;[m
[32m+[m[32m    x3 ^= u<<7 | u>>>(32-7);[m
[32m+[m[32m    u = x3 + x15 | 0;[m
[32m+[m[32m    x7 ^= u<<9 | u>>>(32-9);[m
[32m+[m[32m    u = x7 + x3 | 0;[m
[32m+[m[32m    x11 ^= u<<13 | u>>>(32-13);[m
[32m+[m[32m    u = x11 + x7 | 0;[m
[32m+[m[32m    x15 ^= u<<18 | u>>>(32-18);[m
[32m+[m
[32m+[m[32m    u = x0 + x3 | 0;[m
[32m+[m[32m    x1 ^= u<<7 | u>>>(32-7);[m
[32m+[m[32m    u = x1 + x0 | 0;[m
[32m+[m[32m    x2 ^= u<<9 | u>>>(32-9);[m
[32m+[m[32m    u = x2 + x1 | 0;[m
[32m+[m[32m    x3 ^= u<<13 | u>>>(32-13);[m
[32m+[m[32m    u = x3 + x2 | 0;[m
[32m+[m[32m    x0 ^= u<<18 | u>>>(32-18);[m
[32m+[m
[32m+[m[32m    u = x5 + x4 | 0;[m
[32m+[m[32m    x6 ^= u<<7 | u>>>(32-7);[m
[32m+[m[32m    u = x6 + x5 | 0;[m
[32m+[m[32m    x7 ^= u<<9 | u>>>(32-9);[m
[32m+[m[32m    u = x7 + x6 | 0;[m
[32m+[m[32m    x4 ^= u<<13 | u>>>(32-13);[m
[32m+[m[32m    u = x4 + x7 | 0;[m
[32m+[m[32m    x5 ^= u<<18 | u>>>(32-18);[m
[32m+[m
[32m+[m[32m    u = x10 + x9 | 0;[m
[32m+[m[32m    x11 ^= u<<7 | u>>>(32-7);[m
[32m+[m[32m    u = x11 + x10 | 0;[m
[32m+[m[32m    x8 ^= u<<9 | u>>>(32-9);[m
[32m+[m[32m    u = x8 + x11 | 0;[m
[32m+[m[32m    x9 ^= u<<13 | u>>>(32-13);[m
[32m+[m[32m    u = x9 + x8 | 0;[m
[32m+[m[32m    x10 ^= u<<18 | u>>>(32-18);[m
[32m+[m
[32m+[m[32m    u = x15 + x14 | 0;[m
[32m+[m[32m    x12 ^= u<<7 | u>>>(32-7);[m
[32m+[m[32m    u = x12 + x15 | 0;[m
[32m+[m[32m    x13 ^= u<<9 | u>>>(32-9);[m
[32m+[m[32m    u = x13 + x12 | 0;[m
[32m+[m[32m    x14 ^= u<<13 | u>>>(32-13);[m
[32m+[m[32m    u = x14 + x13 | 0;[m
[32m+[m[32m    x15 ^= u<<18 | u>>>(32-18);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  o[ 0] = x0 >>>  0 & 0xff;[m
[32m+[m[32m  o[ 1] = x0 >>>  8 & 0xff;[m
[32m+[m[32m  o[ 2] = x0 >>> 16 & 0xff;[m
[32m+[m[32m  o[ 3] = x0 >>> 24 & 0xff;[m
[32m+[m
[32m+[m[32m  o[ 4] = x5 >>>  0 & 0xff;[m
[32m+[m[32m  o[ 5] = x5 >>>  8 & 0xff;[m
[32m+[m[32m  o[ 6] = x5 >>> 16 & 0xff;[m
[32m+[m[32m  o[ 7] = x5 >>> 24 & 0xff;[m
[32m+[m
[32m+[m[32m  o[ 8] = x10 >>>  0 & 0xff;[m
[32m+[m[32m  o[ 9] = x10 >>>  8 & 0xff;[m
[32m+[m[32m  o[10] = x10 >>> 16 & 0xff;[m
[32m+[m[32m  o[11] = x10 >>> 24 & 0xff;[m
[32m+[m
[32m+[m[32m  o[12] = x15 >>>  0 & 0xff;[m
[32m+[m[32m  o[13] = x15 >>>  8 & 0xff;[m
[32m+[m[32m  o[14] = x15 >>> 16 & 0xff;[m
[32m+[m[32m  o[15] = x15 >>> 24 & 0xff;[m
[32m+[m
[32m+[m[32m  o[16] = x6 >>>  0 & 0xff;[m
[32m+[m[32m  o[17] = x6 >>>  8 & 0xff;[m
[32m+[m[32m  o[18] = x6 >>> 16 & 0xff;[m
[32m+[m[32m  o[19] = x6 >>> 24 & 0xff;[m
[32m+[m
[32m+[m[32m  o[20] = x7 >>>  0 & 0xff;[m
[32m+[m[32m  o[21] = x7 >>>  8 & 0xff;[m
[32m+[m[32m  o[22] = x7 >>> 16 & 0xff;[m
[32m+[m[32m  o[23] = x7 >>> 24 & 0xff;[m
[32m+[m
[32m+[m[32m  o[24] = x8 >>>  0 & 0xff;[m
[32m+[m[32m  o[25] = x8 >>>  8 & 0xff;[m
[32m+[m[32m  o[26] = x8 >>> 16 & 0xff;[m
[32m+[m[32m  o[27] = x8 >>> 24 & 0xff;[m
[32m+[m
[32m+[m[32m  o[28] = x9 >>>  0 & 0xff;[m
[32m+[m[32m  o[29] = x9 >>>  8 & 0xff;[m
[32m+[m[32m  o[30] = x9 >>> 16 & 0xff;[m
[32m+[m[32m  o[31] = x9 >>> 24 & 0xff;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction crypto_core_salsa20(out,inp,k,c) {[m
[32m+[m[32m  core_salsa20(out,inp,k,c);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction crypto_core_hsalsa20(out,inp,k,c) {[m
[32m+[m[32m  core_hsalsa20(out,inp,k,c);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mvar sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);[m
[32m+[m[32m            // "expand 32-byte k"[m
[32m+[m
[32m+[m[32mfunction crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {[m
[32m+[m[32m  var z = new Uint8Array(16), x = new Uint8Array(64);[m
[32m+[m[32m  var u, i;[m
[32m+[m[32m  for (i = 0; i < 16; i++) z[i] = 0;[m
[32m+[m[32m  for (i = 0; i < 8; i++) z[i] = n[i];[m
[32m+[m[32m  while (b >= 64) {[m
[32m+[m[32m    crypto_core_salsa20(x,z,k,sigma);[m
[32m+[m[32m    for (i = 0; i < 64; i++) c[cpos+i] = m[mpos+i] ^ x[i];[m
[32m+[m[32m    u = 1;[m
[32m+[m[32m    for (i = 8; i < 16; i++) {[m
[32m+[m[32m      u = u + (z[i] & 0xff) | 0;[m
[32m+[m[32m      z[i] = u & 0xff;[m
[32m+[m[32m      u >>>= 8;[m
[32m+[m[32m    }[m
[32m+[m[32m    b -= 64;[m
[32m+[m[32m    cpos += 64;[m
[32m+[m[32m    mpos += 64;[m
[32m+[m[32m  }[m
[32m+[m[32m  if (b > 0) {[m
[32m+[m[32m    crypto_core_salsa20(x,z,k,sigma);[m
[32m+[m[32m    for (i = 0; i < b; i++) c[cpos+i] = m[mpos+i] ^ x[i];[m
[32m+[m[32m  }[m
[32m+[m[32m  return 0;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction crypto_stream_salsa20(c,cpos,b,n,k) {[m
[32m+[m[32m  var z = new Uint8Array(16), x = new Uint8Array(64);[m
[32m+[m[32m  var u, i;[m
[32m+[m[32m  for (i = 0; i < 16; i++) z[i] = 0;[m
[32m+[m[32m  for (i = 0; i < 8; i++) z[i] = n[i];[m
[32m+[m[32m  while (b >= 64) {[m
[32m+[m[32m    crypto_core_salsa20(x,z,k,sigma);[m
[32m+[m[32m    for (i = 0; i < 64; i++) c[cpos+i] = x[i];[m
[32m+[m[32m    u = 1;[m
[32m+[m[32m    for (i = 8; i < 16; i++) {[m
[32m+[m[32m      u = u + (z[i] & 0xff) | 0;[m
[32m+[m[32m      z[i] = u & 0xff;[m
[32m+[m[32m      u >>>= 8;[m
[32m+[m[32m    }[m
[32m+[m[32m    b -= 64;[m
[32m+[m[32m    cpos += 64;[m
[32m+[m[32m  }[m
[32m+[m[32m  if (b > 0) {[m
[32m+[m[32m    crypto_core_salsa20(x,z,k,sigma);[m
[32m+[m[32m    for (i = 0; i < b; i++) c[cpos+i] = x[i];[m
[32m+[m[32m  }[m
[32m+[m[32m  return 0;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction crypto_stream(c,cpos,d,n,k) {[m
[32m+[m[32m  var s = new Uint8Array(32);[m
[32m+[m[32m  crypto_core_hsalsa20(s,n,k,sigma);[m
[32m+[m[32m  var sn = new Uint8Array(8);[m
[32m+[m[32m  for (var i = 0; i < 8; i++) sn[i] = n[i+16];[m
[32m+[m[32m  return crypto_stream_salsa20(c,cpos,d,sn,s);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction crypto_stream_xor(c,cpos,m,mpos,d,n,k) {[m
[32m+[m[32m  var s = new Uint8Array(32);[m
[32m+[m[32m  crypto_core_hsalsa20(s,n,k,sigma);[m
[32m+[m[32m  var sn = new Uint8Array(8);[m
[32m+[m[32m  for (var i = 0; i < 8; i++) sn[i] = n[i+16];[m
[32m+[m[32m  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,sn,s);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m* Port of Andrew Moon's Poly1305-donna-16. Public domain.[m
[32m+[m[32m* https://github.com/floodyberry/poly1305-donna[m
[32m+[m[32m*/[m
[32m+[m
[32m+[m[32mvar poly1305 = function(key) {[m
[32m+[m[32m  this.buffer = new Uint8Array(16);[m
[32m+[m[32m  this.r = new Uint16Array(10);[m
[32m+[m[32m  this.h = new Uint16Array(10);[m
[32m+[m[32m  this.pad = new Uint16Array(8);[m
[32m+[m[32m  this.leftover = 0;[m
[32m+[m[32m  this.fin = 0;[m
[32m+[m
[32m+[m[32m  var t0, t1, t2, t3, t4, t5, t6, t7;[m
[32m+[m
[32m+[m[32m  t0 = key[ 0] & 0xff | (key[ 1] & 0xff) << 8; this.r[0] = ( t0                     ) & 0x1fff;[m
[32m+[m[32m  t1 = key[ 2] & 0xff | (key[ 3] & 0xff) << 8; this.r[1] = ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;[m
[32m+[m[32m  t2 = key[ 4] & 0xff | (key[ 5] & 0xff) << 8; this.r[2] = ((t1 >>> 10) | (t2 <<  6)) & 0x1f03;[m
[32m+[m[32m  t3 = key[ 6] & 0xff | (key[ 7] & 0xff) << 8; this.r[3] = ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;[m
[32m+[m[32m  t4 = key[ 8] & 0xff | (key[ 9] & 0xff) << 8; this.r[4] = ((t3 >>>  4) | (t4 << 12)) & 0x00ff;[m
[32m+[m[32m  this.r[5] = ((t4 >>>  1)) & 0x1ffe;[m
[32m+[m[32m  t5 = key[10] & 0xff | (key[11] & 0xff) << 8; this.r[6] = ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;[m
[32m+[m[32m  t6 = key[12] & 0xff | (key[13] & 0xff) << 8; this.r[7] = ((t5 >>> 11) | (t6 <<  5)) & 0x1f81;[m
[32m+[m[32m  t7 = key[14] & 0xff | (key[15] & 0xff) << 8; this.r[8] = ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;[m
[32m+[m[32m  this.r[9] = ((t7 >>>  5)) & 0x007f;[m
[32m+[m
[32m+[m[32m  this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;[m
[32m+[m[32m  this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;[m
[32m+[m[32m  this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;[m
[32m+[m[32m  this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;[m
[32m+[m[32m  this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;[m
[32m+[m[32m  this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;[m
[32m+[m[32m  this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;[m
[32m+[m[32m  this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mpoly1305.prototype.blocks = function(m, mpos, bytes) {[m
[32m+[m[32m  var hibit = this.fin ? 0 : (1 << 11);[m
[32m+[m[32m  var t0, t1, t2, t3, t4, t5, t6, t7, c;[m
[32m+[m[32m  var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;[m
[32m+[m
[32m+[m[32m  var h0 = this.h[0],[m
[32m+[m[32m      h1 = this.h[1],[m
[32m+[m[32m      h2 = this.h[2],[m
[32m+[m[32m      h3 = this.h[3],[m
[32m+[m[32m      h4 = this.h[4],[m
[32m+[m[32m      h5 = this.h[5],[m
[32m+[m[32m      h6 = this.h[6],[m
[32m+[m[32m      h7 = this.h[7],[m
[32m+[m[32m      h8 = this.h[8],[m
[32m+[m[32m      h9 = this.h[9];[m
[32m+[m
[32m+[m[32m  var r0 = this.r[0],[m
[32m+[m[32m      r1 = this.r[1],[m
[32m+[m[32m      r2 = this.r[2],[m
[32m+[m[32m      r3 = this.r[3],[m
[32m+[m[32m      r4 = this.r[4],[m
[32m+[m[32m      r5 = this.r[5],[m
[32m+[m[32m      r6 = this.r[6],[m
[32m+[m[32m      r7 = this.r[7],[m
[32m+[m[32m      r8 = this.r[8],[m
[32m+[m[32m      r9 = this.r[9];[m
[32m+[m
[32m+[m[32m  while (bytes >= 16) {[m
[32m+[m[32m    t0 = m[mpos+ 0] & 0xff | (m[mpos+ 1] & 0xff) << 8; h0 += ( t0                     ) & 0x1fff;[m
[32m+[m[32m    t1 = m[mpos+ 2] & 0xff | (m[mpos+ 3] & 0xff) << 8; h1 += ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;[m
[32m+[m[32m    t2 = m[mpos+ 4] & 0xff | (m[mpos+ 5] & 0xff) << 8; h2 += ((t1 >>> 10) | (t2 <<  6)) & 0x1fff;[m
[32m+[m[32m    t3 = m[mpos+ 6] & 0xff | (m[mpos+ 7] & 0xff) << 8; h3 += ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;[m
[32m+[m[32m    t4 = m[mpos+ 8] & 0xff | (m[mpos+ 9] & 0xff) << 8; h4 += ((t3 >>>  4) | (t4 << 12)) & 0x1fff;[m
[32m+[m[32m    h5 += ((t4 >>>  1)) & 0x1fff;[m
[32m+[m[32m    t5 = m[mpos+10] & 0xff | (m[mpos+11] & 0xff) << 8; h6 += ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;[m
[32m+[m[32m    t6 = m[mpos+12] & 0xff | (m[mpos+13] & 0xff) << 8; h7 += ((t5 >>> 11) | (t6 <<  5)) & 0x1fff;[m
[32m+[m[32m    t7 = m[mpos+14] & 0xff | (m[mpos+15] & 0xff) << 8; h8 += ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;[m
[32m+[m[32m    h9 += ((t7 >>> 5)) | hibit;[m
[32m+[m
[32m+[m[32m    c = 0;[m
[32m+[m
[32m+[m[32m    d0 = c;[m
[32m+[m[32m    d0 += h0 * r0;[m
[32m+[m[32m    d0 += h1 * (5 * r9);[m
[32m+[m[32m    d0 += h2 * (5 * r8);[m
[32m+[m[32m    d0 += h3 * (5 * r7);[m
[32m+[m[32m    d0 += h4 * (5 * r6);[m
[32m+[m[32m    c = (d0 >>> 13); d0 &= 0x1fff;[m
[32m+[m[32m    d0 += h5 * (5 * r5);[m
[32m+[m[32m    d0 += h6 * (5 * r4);[m
[32m+[m[32m    d0 += h7 * (5 * r3);[m
[32m+[m[32m    d0 += h8 * (5 * r2);[m
[32m+[m[32m    d0 += h9 * (5 * r1);[m
[32m+[m[32m    c += (d0 >>> 13); d0 &= 0x1fff;[m
[32m+[m
[32m+[m[32m    d1 = c;[m
[32m+[m[32m    d1 += h0 * r1;[m
[32m+[m[32m    d1 += h1 * r0;[m
[32m+[m[32m    d1 += h2 * (5 * r9);[m
[32m+[m[32m    d1 += h3 * (5 * r8);[m
[32m+[m[32m    d1 += h4 * (5 * r7);[m
[32m+[m[32m    c = (d1 >>> 13); d1 &= 0x1fff;[m
[32m+[m[32m    d1 += h5 * (5 * r6);[m
[32m+[m[32m    d1 += h6 * (5 * r5);[m
[32m+[m[32m    d1 += h7 * (5 * r4);[m
[32m+[m[32m    d1 += h8 * (5 * r3);[m
[32m+[m[32m    d1 += h9 * (5 * r2);[m
[32m+[m[32m    c += (d1 >>> 13); d1 &= 0x1fff;[m
[32m+[m
[32m+[m[32m    d2 = c;[m
[32m+[m[32m    d2 += h0 * r2;[m
[32m+[m[32m    d2 += h1 * r1;[m
[32m+[m[32m    d2 += h2 * r0;[m
[32m+[m[32m    d2 += h3 * (5 * r9);[m
[32m+[m[32m    d2 += h4 * (5 * r8);[m
[32m+[m[32m    c = (d2 >>> 13); d2 &= 0x1fff;[m
[32m+[m[32m    d2 += h5 * (5 * r7);[m
[32m+[m[32m    d2 += h6 * (5 * r6);[m
[32m+[m[32m    d2 += h7 * (5 * r5);[m
[32m+[m[32m    d2 += h8 * (5 * r4);[m
[32m+[m[32m    d2 += h9 * (5 * r3);[m
[32m+[m[32m    c += (d2 >>> 13); d2 &= 0x1fff;[m
[32m+[m
[32m+[m[32m    d3 = c;[m
[32m+[m[32m    d3 += h0 * r3;[m
[32m+[m[32m    d3 += h1 * r2;[m
[32m+[m[32m    d3 += h2 * r1;[m
[32m+[m[32m    d3 += h3 * r0;[m
[32m+[m[32m    d3 += h4 * (5 * r9);[m
[32m+[m[32m    c = (d3 >>> 13); d3 &= 0x1fff;[m
[32m+[m[32m    d3 += h5 * (5 * r8);[m
[32m+[m[32m    d3 += h6 * (5 * r7);[m
[32m+[m[32m    d3 += h7 * (5 * r6);[m
[32m+[m[32m    d3 += h8 * (5 * r5);[m
[32m+[m[32m    d3 += h9 * (5 * r4);[m
[32m+[m[32m    c += (d3 >>> 13); d3 &= 0x1fff;[m
[32m+[m
[32m+[m[32m    d4 = c;[m
[32m+[m[32m    d4 += h0 * r4;[m
[32m+[m[32m    d4 += h1 * r3;[m
[32m+[m[32m    d4 += h2 * r2;[m
[32m+[m[32m    d4 += h3 * r1;[m
[32m+[m[32m    d4 += h4 * r0;[m
[32m+[m[32m    c = (d4 >>> 13); d4 &= 0x1fff;[m
[32m+[m[32m    d4 += h5 * (5 * r9);[m
[32m+[m[32m    d4 += h6 * (5 * r8);[m
[32m+[m[32m    d4 += h7 * (5 * r7);[m
[32m+[m[32m    d4 += h8 * (5 * r6);[m
[32m+[m[32m    d4 += h9 * (5 * r5);[m
[32m+[m[32m    c += (d4 >>> 13); d4 &= 0x1fff;[m
[32m+[m
[32m+[m[32m    d5 = c;[m
[32m+[m[32m    d5 += h0 * r5;[m
[32m+[m[32m    d5 += h1 * r4;[m
[32m+[m[32m    d5 += h2 * r3;[m
[32m+[m[32m    d5 += h3 * r2;[m
[32m+[m[32m    d5 += h4 * r1;[m
[32m+[m[32m    c = (d5 >>> 13); d5 &= 0x1fff;[m
[32m+[m[32m    d5 += h5 * r0;[m
[32m+[m[32m    d5 += h6 * (5 * r9);[m
[32m+[m[32m    d5 += h7 * (5 * r8);[m
[32m+[m[32m    d5 += h8 * (5 * r7);[m
[32m+[m[32m    d5 += h9 * (5 * r6);[m
[32m+[m[32m    c += (d5 >>> 13); d5 &= 0x1fff;[m
[32m+[m
[32m+[m[32m    d6 = c;[m
[32m+[m[32m    d6 += h0 * r6;[m
[32m+[m[32m    d6 += h1 * r5;[m
[32m+[m[32m    d6 += h2 * r4;[m
[32m+[m[32m    d6 += h3 * r3;[m
[32m+[m[32m    d6 += h4 * r2;[m
[32m+[m[32m    c = (d6 >>> 13); d6 &= 0x1fff;[m
[32m+[m[32m    d6 += h5 * r1;[m
[32m+[m[32m    d6 += h6 * r0;[m
[32m+[m[32m    d6 += h7 * (5 * r9);[m
[32m+[m[32m    d6 += h8 * (5 * r8);[m
[32m+[m[32m    d6 += h9 * (5 * r7);[m
[32m+[m[32m    c += (d6 >>> 13); d6 &= 0x1fff;[m
[32m+[m
[32m+[m[32m    d7 = c;[m
[32m+[m[32m    d7 += h0 * r7;[m
[32m+[m[32m    d7 += h1 * r6;[m
[32m+[m[32m    d7 += h2 * r5;[m
[32m+[m[32m    d7 += h3 * r4;[m
[32m+[m[32m    d7 += h4 * r3;[m
[32m+[m[32m    c = (d7 >>> 13); d7 &= 0x1fff;[m
[32m+[m[32m    d7 += h5 * r2;[m
[32m+[m[32m    d7 += h6 * r1;[m
[32m+[m[32m    d7 += h7 * r0;[m
[32m+[m[32m    d7 += h8 * (5 * r9);[m
[32m+[m[32m    d7 += h9 * (5 * r8);[m
[32m+[m[32m    c += (d7 >>> 13); d7 &= 0x1fff;[m
[32m+[m
[32m+[m[32m    d8 = c;[m
[32m+[m[32m    d8 += h0 * r8;[m
[32m+[m[32m    d8 += h1 * r7;[m
[32m+[m[32m    d8 += h2 * r6;[m
[32m+[m[32m    d8 += h3 * r5;[m
[32m+[m[32m    d8 += h4 * r4;[m
[32m+[m[32m    c = (d8 >>> 13); d8 &= 0x1fff;[m
[32m+[m[32m    d8 += h5 * r3;[m
[32m+[m[32m    d8 += h6 * r2;[m
[32m+[m[32m    d8 += h7 * r1;[m
[32m+[m[32m    d8 += h8 * r0;[m
[32m+[m[32m    d8 += h9 * (5 * r9);[m
[32m+[m[32m    c += (d8 >>> 13); d8 &= 0x1fff;[m
[32m+[m
[32m+[m[32m    d9 = c;[m
[32m+[m[32m    d9 += h0 * r9;[m
[32m+[m[32m    d9 += h1 * r8;[m
[32m+[m[32m    d9 += h2 * r7;[m
[32m+[m[32m    d9 += h3 * r6;[m
[32m+[m[32m    d9 += h4 * r5;[m
[32m+[m[32m    c = (d9 >>> 13); d9 &= 0x1fff;[m
[32m+[m[32m    d9 += h5 * r4;[m
[32m+[m[32m    d9 += h6 * r3;[m
[32m+[m[32m    d9 += h7 * r2;[m
[32m+[m[32m    d9 += h8 * r1;[m
[32m+[m[32m    d9 += h9 * r0;[m
[32m+[m[32m    c += (d9 >>> 13); d9 &= 0x1fff;[m
[32m+[m
[32m+[m[32m    c = (((c << 2) + c)) | 0;[m
[32m+[m[32m    c = (c + d0) | 0;[m
[32m+[m[32m    d0 = c & 0x1fff;[m
[32m+[m[32m    c = (c >>> 13);[m
[32m+[m[32m    d1 += c;[m
[32m+[m
[32m+[m[32m    h0 = d0;[m
[32m+[m[32m    h1 = d1;[m
[32m+[m[32m    h2 = d2;[m
[32m+[m[32m    h3 = d3;[m
[32m+[m[32m    h4 = d4;[m
[32m+[m[32m    h5 = d5;[m
[32m+[m[32m    h6 = d6;[m
[32m+[m[32m    h7 = d7;[m
[32m+[m[32m    h8 = d8;[m
[32m+[m[32m    h9 = d9;[m
[32m+[m
[32m+[m[32m    mpos += 16;[m
[32m+[m[32m    bytes -= 16;[m
[32m+[m[32m  }[m
[32m+[m[32m  this.h[0] = h0;[m
[32m+[m[32m  this.h[1] = h1;[m
[32m+[m[32m  this.h[2] = h2;[m
[32m+[m[32m  this.h[3] = h3;[m
[32m+[m[32m  this.h[4] = h4;[m
[32m+[m[32m  this.h[5] = h5;[m
[32m+[m[32m  this.h[6] = h6;[m
[32m+[m[32m  this.h[7] = h7;[m
[32m+[m[32m  this.h[8] = h8;[m
[32m+[m[32m  this.h[9] = h9;[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mpoly1305.prototype.finish = function(mac, macpos) {[m
[32m+[m[32m  var g = new Uint16Array(10);[m
[32m+[m[32m  var c, mask, f, i;[m
[32m+[m
[32m+[m[32m  if (this.leftover) {[m
[32m+[m[32m    i = this.leftover;[m
[32m+[m[32m    this.buffer[i++] = 1;[m
[32m+[m[32m    for (; i < 16; i++) this.buffer[i] = 0;[m
[32m+[m[32m    this.fin = 1;[m
[32m+[m[32m    this.blocks(this.buffer, 0, 16);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  c = this.h[1] >>> 13;[m
[32m+[m[32m  this.h[1] &= 0x1fff;[m
[32m+[m[32m  for (i = 2; i < 10; i++) {[m
[32m+[m[32m    this.h[i] += c;[m
[32m+[m[32m    c = this.h[i] >>> 13;[m
[32m+[m[32m    this.h[i] &= 0x1fff;[m
[32m+[m[32m  }[m
[32m+[m[32m  this.h[0] += (c * 5);[m
[32m+[m[32m  c = this.h[0] >>> 13;[m
[32m+[m[32m  this.h[0] &= 0x1fff;[m
[32m+[m[32m  this.h[1] += c;[m
[32m+[m[32m  c = this.h[1] >>> 13;[m
[32m+[m[32m  this.h[1] &= 0x1fff;[m
[32m+[m[32m  this.h[2] += c;[m
[32m+[m
[32m+[m[32m  g[0] = this.h[0] + 5;[m
[32m+[m[32m  c = g[0] >>> 13;[m
[32m+[m[32m  g[0] &= 0x1fff;[m
[32m+[m[32m  for (i = 1; i < 10; i++) {[m
[32m+[m[32m    g[i] = this.h[i] + c;[m
[32m+[m[32m    c = g[i] >>> 13;[m
[32m+[m[32m    g[i] &= 0x1fff;[m
[32m+[m[32m  }[m
[32m+[m[32m  g[9] -= (1 << 13);[m
[32m+[m
[32m+[m[32m  mask = (c ^ 1) - 1;[m
[32m+[m[32m  for (i = 0; i < 10; i++) g[i] &= mask;[m
[32m+[m[32m  mask = ~mask;[m
[32m+[m[32m  for (i = 0; i < 10; i++) this.h[i] = (this.h[i] & mask) | g[i];[m
[32m+[m
[32m+[m[32m  this.h[0] = ((this.h[0]       ) | (this.h[1] << 13)                    ) & 0xffff;[m
[32m+[m[32m  this.h[1] = ((this.h[1] >>>  3) | (this.h[2] << 10)                    ) & 0xffff;[m
[32m+[m[32m  this.h[2] = ((this.h[2] >>>  6) | (this.h[3] <<  7)                    ) & 0xffff;[m
[32m+[m[32m  this.h[3] = ((this.h[3] >>>  9) | (this.h[4] <<  4)                    ) & 0xffff;[m
[32m+[m[32m  this.h[4] = ((this.h[4] >>> 12) | (this.h[5] <<  1) | (this.h[6] << 14)) & 0xffff;[m
[32m+[m[32m  this.h[5] = ((this.h[6] >>>  2) | (this.h[7] << 11)                    ) & 0xffff;[m
[32m+[m[32m  this.h[6] = ((this.h[7] >>>  5) | (this.h[8] <<  8)                    ) & 0xffff;[m
[32m+[m[32m  this.h[7] = ((this.h[8] >>>  8) | (this.h[9] <<  5)                    ) & 0xffff;[m
[32m+[m
[32m+[m[32m  f = this.h[0] + this.pad[0];[m
[32m+[m[32m  this.h[0] = f & 0xffff;[m
[32m+[m[32m  for (i = 1; i < 8; i++) {[m
[32m+[m[32m    f = (((this.h[i] + this.pad[i]) | 0) + (f >>> 16)) | 0;[m
[32m+[m[32m    this.h[i] = f & 0xffff;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  mac[macpos+ 0] = (this.h[0] >>> 0) & 0xff;[m
[32m+[m[32m  mac[macpos+ 1] = (this.h[0] >>> 8) & 0xff;[m
[32m+[m[32m  mac[macpos+ 2] = (this.h[1] >>> 0) & 0xff;[m
[32m+[m[32m  mac[macpos+ 3] = (this.h[1] >>> 8) & 0xff;[m
[32m+[m[32m  mac[macpos+ 4] = (this.h[2] >>> 0) & 0xff;[m
[32m+[m[32m  mac[macpos+ 5] = (this.h[2] >>> 8) & 0xff;[m
[32m+[m[32m  mac[macpos+ 6] = (this.h[3] >>> 0) & 0xff;[m
[32m+[m[32m  mac[macpos+ 7] = (this.h[3] >>> 8) & 0xff;[m
[32m+[m[32m  mac[macpos+ 8] = (this.h[4] >>> 0) & 0xff;[m
[32m+[m[32m  mac[macpos+ 9] = (this.h[4] >>> 8) & 0xff;[m
[32m+[m[32m  mac[macpos+10] = (this.h[5] >>> 0) & 0xff;[m
[32m+[m[32m  mac[macpos+11] = (this.h[5] >>> 8) & 0xff;[m
[32m+[m[32m  mac[macpos+12] = (this.h[6] >>> 0) & 0xff;[m
[32m+[m[32m  mac[macpos+13] = (this.h[6] >>> 8) & 0xff;[m
[32m+[m[32m  mac[macpos+14] = (this.h[7] >>> 0) & 0xff;[m
[32m+[m[32m  mac[macpos+15] = (this.h[7] >>> 8) & 0xff;[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mpoly1305.prototype.update = function(m, mpos, bytes) {[m
[32m+[m[32m  var i, want;[m
[32m+[m
[32m+[m[32m  if (this.leftover) {[m
[32m+[m[32m    want = (16 - this.leftover);[m
[32m+[m[32m    if (want > bytes)[m
[32m+[m[32m      want = bytes;[m
[32m+[m[32m    for (i = 0; i < want; i++)[m
[32m+[m[32m      this.buffer[this.leftover + i] = m[mpos+i];[m
[32m+[m[32m    bytes -= want;[m
[32m+[m[32m    mpos += want;[m
[32m+[m[32m    this.leftover += want;[m
[32m+[m[32m    if (this.leftover < 16)[m
[32m+[m[32m      return;[m
[32m+[m[32m    this.blocks(this.buffer, 0, 16);[m
[32m+[m[32m    this.leftover = 0;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if (bytes >= 16) {[m
[32m+[m[32m    want = bytes - (bytes % 16);[m
[32m+[m[32m    this.blocks(m, mpos, want);[m
[32m+[m[32m    mpos += want;[m
[32m+[m[32m    bytes -= want;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if (bytes) {[m
[32m+[m[32m    for (i = 0; i < bytes; i++)[m
[32m+[m[32m      this.buffer[this.leftover + i] = m[mpos+i];[m
[32m+[m[32m    this.leftover += bytes;[m
[32m+[m[32m  }[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mfunction crypto_onetimeauth(out, outpos, m, mpos, n, k) {[m
[32m+[m[32m  var s = new poly1305(k);[m
[32m+[m[32m  s.update(m, mpos, n);[m
[32m+[m[32m  s.finish(out, outpos);[m
[32m+[m[32m  return 0;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {[m
[32m+[m[32m  var x = new Uint8Array(16);[m
[32m+[m[32m  crypto_onetimeauth(x,0,m,mpos,n,k);[m
[32m+[m[32m  return crypto_verify_16(h,hpos,x,0);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction crypto_secretbox(c,m,d,n,k) {[m
[32m+[m[32m  var i;[m
[32m+[m[32m  if (d < 32) return -1;[m
[32m+[m[32m  crypto_stream_xor(c,0,m,0,d,n,k);[m
[32m+[m[32m  crypto_onetimeauth(c, 16, c, 32, d - 32, c);[m
[32m+[m[32m  for (i = 0; i < 16; i++) c[i] = 0;[m
[32m+[m[32m  return 0;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction crypto_secretbox_open(m,c,d,n,k) {[m
[32m+[m[32m  var i;[m
[32m+[m[32m  var x = new Uint8Array(32);[m
[32m+[m[32m  if (d < 32) return -1;[m
[32m+[m[32m  crypto_stream(x,0,32,n,k);[m
[32m+[m[32m  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;[m
[32m+[m[32m  crypto_stream_xor(m,0,c,0,d,n,k);[m
[32m+[m[32m  for (i = 0; i < 32; i++) m[i] = 0;[m
[32m+[m[32m  return 0;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction set25519(r, a) {[m
[32m+[m[32m  var i;[m
[32m+[m[32m  for (i = 0; i < 16; i++) r[i] = a[i]|0;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction car25519(o) {[m
[32m+[m[32m  var i, v, c = 1;[m
[32m+[m[32m  for (i = 0; i < 16; i++) {[m
[32m+[m[32m    v = o[i] + c + 65535;[m
[32m+[m[32m    c = Math.floor(v / 65536);[m
[32m+[m[32m    o[i] = v - c * 65536;[m
[32m+[m[32m  }[m
[32m+[m[32m  o[0] += c-1 + 37 * (c-1);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction sel25519(p, q, b) {[m
[32m+[m[32m  var t, c = ~(b-1);[m
[32m+[m[32m  for (var i = 0; i < 16; i++) {[m
[32m+[m[32m    t = c & (p[i] ^ q[i]);[m
[32m+[m[32m    p[i] ^= t;[m
[32m+[m[32m    q[i] ^= t;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction pack25519(o, n) {[m
[32m+[m[32m  var i, j, b;[m
[32m+[m[32m  var m = gf(), t = gf();[m
[32m+[m[32m  for (i = 0; i < 16; i++) t[i] = n[i];[m
[32m+[m[32m  car25519(t);[m
[32m+[m[32m  car25519(t);[m
[32m+[m[32m  car25519(t);[m
[32m+[m[32m  for (j = 0; j < 2; j++) {[m
[32m+[m[32m    m[0] = t[0] - 0xffed;[m
[32m+[m[32m    for (i = 1; i < 15; i++) {[m
[32m+[m[32m      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);[m
[32m+[m[32m      m[i-1] &= 0xffff;[m
[32m+[m[32m    }[m
[32m+[m[32m    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);[m
[32m+[m[32m    b = (m[15]>>16) & 1;[m
[32m+[m[32m    m[14] &= 0xffff;[m
[32m+[m[32m    sel25519(t, m, 1-b);[m
[32m+[m[32m  }[m
[32m+[m[32m  for (i = 0; i < 16; i++) {[m
[32m+[m[32m    o[2*i] = t[i] & 0xff;[m
[32m+[m[32m    o[2*i+1] = t[i]>>8;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction neq25519(a, b) {[m
[32m+[m[32m  var c = new Uint8Array(32), d = new Uint8Array(32);[m
[32m+[m[32m  pack25519(c, a);[m
[32m+[m[32m  pack25519(d, b);[m
[32m+[m[32m  return crypto_verify_32(c, 0, d, 0);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction par25519(a) {[m
[32m+[m[32m  var d = new Uint8Array(32);[m
[32m+[m[32m  pack25519(d, a);[m
[32m+[m[32m  return d[0] & 1;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction unpack25519(o, n) {[m
[32m+[m[32m  var i;[m
[32m+[m[32m  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);[m
[32m+[m[32m  o[15] &= 0x7fff;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction A(o, a, b) {[m
[32m+[m[32m  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction Z(o, a, b) {[m
[32m+[m[32m  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction M(o, a, b) {[m
[32m+[m[32m  var v, c,[m
[32m+[m[32m     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,[m
[32m+[m[32m     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,[m
[32m+[m[32m    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,[m
[32m+[m[32m    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,[m
[32m+[m[32m    b0 = b[0],[m
[32m+[m[32m    b1 = b[1],[m
[32m+[m[32m    b2 = b[2],[m
[32m+[m[32m    b3 = b[3],[m
[32m+[m[32m    b4 = b[4],[m
[32m+[m[32m    b5 = b[5],[m
[32m+[m[32m    b6 = b[6],[m
[32m+[m[32m    b7 = b[7],[m
[32m+[m[32m    b8 = b[8],[m
[32m+[m[32m    b9 = b[9],[m
[32m+[m[32m    b10 = b[10],[m
[32m+[m[32m    b11 = b[11],[m
[32m+[m[32m    b12 = b[12],[m
[32m+[m[32m    b13 = b[13],[m
[32m+[m[32m    b14 = b[14],[m
[32m+[m[32m    b15 = b[15];[m
[32m+[m
[32m+[m[32m  v = a[0];[m
[32m+[m[32m  t0 += v * b0;[m
[32m+[m[32m  t1 += v * b1;[m
[32m+[m[32m  t2 += v * b2;[m
[32m+[m[32m  t3 += v * b3;[m
[32m+[m[32m  t4 += v * b4;[m
[32m+[m[32m  t5 += v * b5;[m
[32m+[m[32m  t6 += v * b6;[m
[32m+[m[32m  t7 += v * b7;[m
[32m+[m[32m  t8 += v * b8;[m
[32m+[m[32m  t9 += v * b9;[m
[32m+[m[32m  t10 += v * b10;[m
[32m+[m[32m  t11 += v * b11;[m
[32m+[m[32m  t12 += v * b12;[m
[32m+[m[32m  t13 += v * b13;[m
[32m+[m[32m  t14 += v * b14;[m
[32m+[m[32m  t15 += v * b15;[m
[32m+[m[32m  v = a[1];[m
[32m+[m[32m  t1 += v * b0;[m
[32m+[m[32m  t2 += v * b1;[m
[32m+[m[32m  t3 += v * b2;[m
[32m+[m[32m  t4 += v * b3;[m
[32m+[m[32m  t5 += v * b4;[m
[32m+[m[32m  t6 += v * b5;[m
[32m+[m[32m  t7 += v * b6;[m
[32m+[m[32m  t8 += v * b7;[m
[32m+[m[32m  t9 += v * b8;[m
[32m+[m[32m  t10 += v * b9;[m
[32m+[m[32m  t11 += v * b10;[m
[32m+[m[32m  t12 += v * b11;[m
[32m+[m[32m  t13 += v * b12;[m
[32m+[m[32m  t14 += v * b13;[m
[32m+[m[32m  t15 += v * b14;[m
[32m+[m[32m  t16 += v * b15;[m
[32m+[m[32m  v = a[2];[m
[32m+[m[32m  t2 += v * b0;[m
[32m+[m[32m  t3 += v * b1;[m
[32m+[m[32m  t4 += v * b2;[m
[32m+[m[32m  t5 += v * b3;[m
[32m+[m[32m  t6 += v * b4;[m
[32m+[m[32m  t7 += v * b5;[m
[32m+[m[32m  t8 += v * b6;[m
[32m+[m[32m  t9 += v * b7;[m
[32m+[m[32m  t10 += v * b8;[m
[32m+[m[32m  t11 += v * b9;[m
[32m+[m[32m  t12 += v * b10;[m
[32m+[m[32m  t13 += v * b11;[m
[32m+[m[32m  t14 += v * b12;[m
[32m+[m[32m  t15 += v * b13;[m
[32m+[m[32m  t16 += v * b14;[m
[32m+[m[32m  t17 += v * b15;[m
[32m+[m[32m  v = a[3];[m
[32m+[m[32m  t3 += v * b0;[m
[32m+[m[32m  t4 += v * b1;[m
[32m+[m[32m  t5 += v * b2;[m
[32m+[m[32m  t6 += v * b3;[m
[32m+[m[32m  t7 += v * b4;[m
[32m+[m[32m  t8 += v * b5;[m
[32m+[m[32m  t9 += v * b6;[m
[32m+[m[32m  t10 += v * b7;[m
[32m+[m[32m  t11 += v * b8;[m
[32m+[m[32m  t12 += v * b9;[m
[32m+[m[32m  t13 += v * b10;[m
[32m+[m[32m  t14 += v * b11;[m
[32m+[m[32m  t15 += v * b12;[m
[32m+[m[32m  t16 += v * b13;[m
[32m+[m[32m  t17 += v * b14;[m
[32m+[m[32m  t18 += v * b15;[m
[32m+[m[32m  v = a[4];[m
[32m+[m[32m  t4 += v * b0;[m
[32m+[m[32m  t5 += v * b1;[m
[32m+[m[32m  t6 += v * b2;[m
[32m+[m[32m  t7 += v * b3;[m
[32m+[m[32m  t8 += v * b4;[m
[32m+[m[32m  t9 += v * b5;[m
[32m+[m[32m  t10 += v * b6;[m
[32m+[m[32m  t11 += v * b7;[m
[32m+[m[32m  t12 += v * b8;[m
[32m+[m[32m  t13 += v * b9;[m
[32m+[m[32m  t14 += v * b10;[m
[32m+[m[32m  t15 += v * b11;[m
[32m+[m[32m  t16 += v * b12;[m
[32m+[m[32m  t17 += v * b13;[m
[32m+[m[32m  t18 += v * b14;[m
[32m+[m[32m  t19 += v * b15;[m
[32m+[m[32m  v = a[5];[m
[32m+[m[32m  t5 += v * b0;[m
[32m+[m[32m  t6 += v * b1;[m
[32m+[m[32m  t7 += v * b2;[m
[32m+[m[32m  t8 += v * b3;[m
[32m+[m[32m  t9 += v * b4;[m
[32m+[m[32m  t10 += v * b5;[m
[32m+[m[32m  t11 += v * b6;[m
[32m+[m[32m  t12 += v * b7;[m
[32m+[m[32m  t13 += v * b8;[m
[32m+[m[32m  t14 += v * b9;[m
[32m+[m[32m  t15 += v * b10;[m
[32m+[m[32m  t16 += v * b11;[m
[32m+[m[32m  t17 += v * b12;[m
[32m+[m[32m  t18 += v * b13;[m
[32m+[m[32m  t19 += v * b14;[m
[32m+[m[32m  t20 += v * b15;[m
[32m+[m[32m  v = a[6];[m
[32m+[m[32m  t6 += v * b0;[m
[32m+[m[32m  t7 += v * b1;[m
[32m+[m[32m  t8 += v * b2;[m
[32m+[m[32m  t9 += v * b3;[m
[32m+[m[32m  t10 += v * b4;[m
[32m+[m[32m  t11 += v * b5;[m
[32m+[m[32m  t12 += v * b6;[m
[32m+[m[32m  t13 += v * b7;[m
[32m+[m[32m  t14 += v * b8;[m
[32m+[m[32m  t15 += v * b9;[m
[32m+[m[32m  t16 += v * b10;[m
[32m+[m[32m  t17 += v * b11;[m
[32m+[m[32m  t18 += v * b12;[m
[32m+[m[32m  t19 += v * b13;[m
[32m+[m[32m  t20 += v * b14;[m
[32m+[m[32m  t21 += v * b15;[m
[32m+[m[32m  v = a[7];[m
[32m+[m[32m  t7 += v * b0;[m
[32m+[m[32m  t8 += v * b1;[m
[32m+[m[32m  t9 += v * b2;[m
[32m+[m[32m  t10 += v * b3;[m
[32m+[m[32m  t11 += v * b4;[m
[32m+[m[32m  t12 += v * b5;[m
[32m+[m[32m  t13 += v * b6;[m
[32m+[m[32m  t14 += v * b7;[m
[32m+[m[32m  t15 += v * b8;[m
[32m+[m[32m  t16 += v * b9;[m
[32m+[m[32m  t17 += v * b10;[m
[32m+[m[32m  t18 += v * b11;[m
[32m+[m[32m  t19 += v * b12;[m
[32m+[m[32m  t20 += v * b13;[m
[32m+[m[32m  t21 += v * b14;[m
[32m+[m[32m  t22 += v * b15;[m
[32m+[m[32m  v = a[8];[m
[32m+[m[32m  t8 += v * b0;[m
[32m+[m[32m  t9 += v * b1;[m
[32m+[m[32m  t10 += v * b2;[m
[32m+[m[32m  t11 += v * b3;[m
[32m+[m[32m  t12 += v * b4;[m
[32m+[m[32m  t13 += v * b5;[m
[32m+[m[32m  t14 += v * b6;[m
[32m+[m[32m  t15 += v * b7;[m
[32m+[m[32m  t16 += v * b8;[m
[32m+[m[32m  t17 += v * b9;[m
[32m+[m[32m  t18 += v * b10;[m
[32m+[m[32m  t19 += v * b11;[m
[32m+[m[32m  t20 += v * b12;[m
[32m+[m[32m  t21 += v * b13;[m
[32m+[m[32m  t22 += v * b14;[m
[32m+[m[32m  t23 += v * b15;[m
[32m+[m[32m  v = a[9];[m
[32m+[m[32m  t9 += v * b0;[m
[32m+[m[32m  t10 += v * b1;[m
[32m+[m[32m  t11 += v * b2;[m
[32m+[m[32m  t12 += v * b3;[m
[32m+[m[32m  t13 += v * b4;[m
[32m+[m[32m  t14 += v * b5;[m
[32m+[m[32m  t15 += v * b6;[m
[32m+[m[32m  t16 += v * b7;[m
[32m+[m[32m  t17 += v * b8;[m
[32m+[m[32m  t18 += v * b9;[m
[32m+[m[32m  t19 += v * b10;[m
[32m+[m[32m  t20 += v * b11;[m
[32m+[m[32m  t21 += v * b12;[m
[32m+[m[32m  t22 += v * b13;[m
[32m+[m[32m  t23 += v * b14;[m
[32m+[m[32m  t24 += v * b15;[m
[32m+[m[32m  v = a[10];[m
[32m+[m[32m  t10 += v * b0;[m
[32m+[m[32m  t11 += v * b1;[m
[32m+[m[32m  t12 += v * b2;[m
[32m+[m[32m  t13 += v * b3;[m
[32m+[m[32m  t14 += v * b4;[m
[32m+[m[32m  t15 += v * b5;[m
[32m+[m[32m  t16 += v * b6;[m
[32m+[m[32m  t17 += v * b7;[m
[32m+[m[32m  t18 += v * b8;[m
[32m+[m[32m  t19 += v * b9;[m
[32m+[m[32m  t20 += v * b10;[m
[32m+[m[32m  t21 += v * b11;[m
[32m+[m[32m  t22 += v * b12;[m
[32m+[m[32m  t23 += v * b13;[m
[32m+[m[32m  t24 += v * b14;[m
[32m+[m[32m  t25 += v * b15;[m
[32m+[m[32m  v = a[11];[m
[32m+[m[32m  t11 += v * b0;[m
[32m+[m[32m  t12 += v * b1;[m
[32m+[m[32m  t13 += v * b2;[m
[32m+[m[32m  t14 += v * b3;[m
[32m+[m[32m  t15 += v * b4;[m
[32m+[m[32m  t16 += v * b5;[m
[32m+[m[32m  t17 += v * b6;[m
[32m+[m[32m  t18 += v * b7;[m
[32m+[m[32m  t19 += v * b8;[m
[32m+[m[32m  t20 += v * b9;[m
[32m+[m[32m  t21 += v * b10;[m
[32m+[m[32m  t22 += v * b11;[m
[32m+[m[32m  t23 += v * b12;[m
[32m+[m[32m  t24 += v * b13;[m
[32m+[m[32m  t25 += v * b14;[m
[32m+[m[32m  t26 += v * b15;[m
[32m+[m[32m  v = a[12];[m
[32m+[m[32m  t12 += v * b0;[m
[32m+[m[32m  t13 += v * b1;[m
[32m+[m[32m  t14 += v * b2;[m
[32m+[m[32m  t15 += v * b3;[m
[32m+[m[32m  t16 += v * b4;[m
[32m+[m[32m  t17 += v * b5;[m
[32m+[m[32m  t18 += v * b6;[m
[32m+[m[32m  t19 += v * b7;[m
[32m+[m[32m  t20 += v * b8;[m
[32m+[m[32m  t21 += v * b9;[m
[32m+[m[32m  t22 += v * b10;[m
[32m+[m[32m  t23 += v * b11;[m
[32m+[m[32m  t24 += v * b12;[m
[32m+[m[32m  t25 += v * b13;[m
[32m+[m[32m  t26 += v * b14;[m
[32m+[m[32m  t27 += v * b15;[m
[32m+[m[32m  v = a[13];[m
[32m+[m[32m  t13 += v * b0;[m
[32m+[m[32m  t14 += v * b1;[m
[32m+[m[32m  t15 += v * b2;[m
[32m+[m[32m  t16 += v * b3;[m
[32m+[m[32m  t17 += v * b4;[m
[32m+[m[32m  t18 += v * b5;[m
[32m+[m[32m  t19 += v * b6;[m
[32m+[m[32m  t20 += v * b7;[m
[32m+[m[32m  t21 += v * b8;[m
[32m+[m[32m  t22 += v * b9;[m
[32m+[m[32m  t23 += v * b10;[m
[32m+[m[32m  t24 += v * b11;[m
[32m+[m[32m  t25 += v * b12;[m
[32m+[m[32m  t26 += v * b13;[m
[32m+[m[32m  t27 += v * b14;[m
[32m+[m[32m  t28 += v * b15;[m
[32m+[m[32m  v = a[14];[m
[32m+[m[32m  t14 += v * b0;[m
[32m+[m[32m  t15 += v * b1;[m
[32m+[m[32m  t16 += v * b2;[m
[32m+[m[32m  t17 += v * b3;[m
[32m+[m[32m  t18 += v * b4;[m
[32m+[m[32m  t19 += v * b5;[m
[32m+[m[32m  t20 += v * b6;[m
[32m+[m[32m  t21 += v * b7;[m
[32m+[m[32m  t22 += v * b8;[m
[32m+[m[32m  t23 += v * b9;[m
[32m+[m[32m  t24 += v * b10;[m
[32m+[m[32m  t25 += v * b11;[m
[32m+[m[32m  t26 += v * b12;[m
[32m+[m[32m  t27 += v * b13;[m
[32m+[m[32m  t28 += v * b14;[m
[32m+[m[32m  t29 += v * b15;[m
[32m+[m[32m  v = a[15];[m
[32m+[m[32m  t15 += v * b0;[m
[32m+[m[32m  t16 += v * b1;[m
[32m+[m[32m  t17 += v * b2;[m
[32m+[m[32m  t18 += v * b3;[m
[32m+[m[32m  t19 += v * b4;[m
[32m+[m[32m  t20 += v * b5;[m
[32m+[m[32m  t21 += v * b6;[m
[32m+[m[32m  t22 += v * b7;[m
[32m+[m[32m  t23 += v * b8;[m
[32m+[m[32m  t24 += v * b9;[m
[32m+[m[32m  t25 += v * b10;[m
[32m+[m[32m  t26 += v * b11;[m
[32m+[m[32m  t27 += v * b12;[m
[32m+[m[32m  t28 += v * b13;[m
[32m+[m[32m  t29 += v * b14;[m
[32m+[m[32m  t30 += v * b15;[m
[32m+[m
[32m+[m[32m  t0  += 38 * t16;[m
[32m+[m[32m  t1  += 38 * t17;[m
[32m+[m[32m  t2  += 38 * t18;[m
[32m+[m[32m  t3  += 38 * t19;[m
[32m+[m[32m  t4  += 38 * t20;[m
[32m+[m[32m  t5  += 38 * t21;[m
[32m+[m[32m  t6  += 38 * t22;[m
[32m+[m[32m  t7  += 38 * t23;[m
[32m+[m[32m  t8  += 38 * t24;[m
[32m+[m[32m  t9  += 38 * t25;[m
[32m+[m[32m  t10 += 38 * t26;[m
[32m+[m[32m  t11 += 38 * t27;[m
[32m+[m[32m  t12 += 38 * t28;[m
[32m+[m[32m  t13 += 38 * t29;[m
[32m+[m[32m  t14 += 38 * t30;[m
[32m+[m[32m  // t15 left as is[m
[32m+[m
[32m+[m[32m  // first car[m
[32m+[m[32m  c = 1;[m
[32m+[m[32m  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;[m
[32m+[m[32m  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;[m
[32m+[m[32m  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;[m
[32m+[m[32m  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;[m
[32m+[m[32m  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;[m
[32m+[m[32m  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;[m
[32m+[m[32m  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;[m
[32m+[m[32m  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;[m
[32m+[m[32m  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;[m
[32m+[m[32m  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;[m
[32m+[m[32m  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;[m
[32m+[m[32m  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;[m
[32m+[m[32m  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;[m
[32m+[m[32m  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;[m
[32m+[m[32m  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;[m
[32m+[m[32m  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;[m
[32m+[m[32m  t0 += c-1 + 37 * (c-1);[m
[32m+[m
[32m+[m[32m  // second car[m
[32m+[m[32m  c = 1;[m
[32m+[m[32m  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;[m
[32m+[m[32m  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;[m
[32m+[m[32m  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;[m
[32m+[m[32m  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;[m
[32m+[m[32m  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;[m
[32m+[m[32m  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;[m
[32m+[m[32m  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;[m
[32m+[m[32m  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;[m
[32m+[m[32m  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;[m
[32m+[m[32m  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;[m
[32m+[m[32m  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;[m
[32m+[m[32m  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;[m
[32m+[m[32m  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;[m
[32m+[m[32m  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;[m
[32m+[m[32m  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;[m
[32m+[m[32m  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;[m
[32m+[m[32m  t0 += c-1 + 37 * (c-1);[m
[32m+[m
[32m+[m[32m  o[ 0] = t0;[m
[32m+[m[32m  o[ 1] = t1;[m
[32m+[m[32m  o[ 2] = t2;[m
[32m+[m[32m  o[ 3] = t3;[m
[32m+[m[32m  o[ 4] = t4;[m
[32m+[m[32m  o[ 5] = t5;[m
[32m+[m[32m  o[ 6] = t6;[m
[32m+[m[32m  o[ 7] = t7;[m
[32m+[m[32m  o[ 8] = t8;[m
[32m+[m[32m  o[ 9] = t9;[m
[32m+[m[32m  o[10] = t10;[m
[32m+[m[32m  o[11] = t11;[m
[32m+[m[32m  o[12] = t12;[m
[32m+[m[32m  o[13] = t13;[m
[32m+[m[32m  o[14] = t14;[m
[32m+[m[32m  o[15] = t15;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction S(o, a) {[m
[32m+[m[32m  M(o, a, a);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction inv25519(o, i) {[m
[32m+[m[32m  var c = gf();[m
[32m+[m[32m  var a;[m
[32m+[m[32m  for (a = 0; a < 16; a++) c[a] = i[a];[m
[32m+[m[32m  for (a = 253; a >= 0; a--) {[m
[32m+[m[32m    S(c, c);[m
[32m+[m[32m    if(a !== 2 && a !== 4) M(c, c, i);[m
[32m+[m[32m  }[m
[32m+[m[32m  for (a = 0; a < 16; a++) o[a] = c[a];[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction pow2523(o, i) {[m
[32m+[m[32m  var c = gf();[m
[32m+[m[32m  var a;[m
[32m+[m[32m  for (a = 0; a < 16; a++) c[a] = i[a];[m
[32m+[m[32m  for (a = 250; a >= 0; a--) {[m
[32m+[m[32m      S(c, c);[m
[32m+[m[32m      if(a !== 1) M(c, c, i);[m
[32m+[m[32m  }[m
[32m+[m[32m  for (a = 0; a < 16; a++) o[a] = c[a];[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction crypto_scalarmult(q, n, p) {[m
[32m+[m[32m  var z = new Uint8Array(32);[m
[32m+[m[32m  var x = new Float64Array(80), r, i;[m
[32m+[m[32m  var a = gf(), b = gf(), c = gf(),[m
[32m+[m[32m      d = gf(), e = gf(), f = gf();[m
[32m+[m[32m  for (i = 0; i < 31; i++) z[i] = n[i];[m
[32m+[m[32m  z[31]=(n[31]&127)|64;[m
[32m+[m[32m  z[0]&=248;[m
[32m+[m[32m  unpack25519(x,p);[m
[32m+[m[32m  for (i = 0; i < 16; i++) {[m
[32m+[m[32m    b[i]=x[i];[m
[32m+[m[32m    d[i]=a[i]=c[i]=0;[m
[32m+[m[32m  }[m
[32m+[m[32m  a[0]=d[0]=1;[m
[32m+[m[32m  for (i=254; i>=0; --i) {[m
[32m+[m[32m    r=(z[i>>>3]>>>(i&7))&1;[m
[32m+[m[32m    sel25519(a,b,r);[m
[32m+[m[32m    sel25519(c,d,r);[m
[32m+[m[32m    A(e,a,c);[m
[32m+[m[32m    Z(a,a,c);[m
[32m+[m[32m    A(c,b,d);[m
[32m+[m[32m    Z(b,b,d);[m
[32m+[m[32m    S(d,e);[m
[32m+[m[32m    S(f,a);[m
[32m+[m[32m    M(a,c,a);[m
[32m+[m[32m    M(c,b,e);[m
[32m+[m[32m    A(e,a,c);[m
[32m+[m[32m    Z(a,a,c);[m
[32m+[m[32m    S(b,a);[m
[32m+[m[32m    Z(c,d,f);[m
[32m+[m[32m    M(a,c,_121665);[m
[32m+[m[32m    A(a,a,d);[m
[32m+[m[32m    M(c,c,a);[m
[32m+[m[32m    M(a,d,f);[m
[32m+[m[32m    M(d,b,x);[m
[32m+[m[32m    S(b,e);[m
[32m+[m[32m    sel25519(a,b,r);[m
[32m+[m[32m    sel25519(c,d,r);[m
[32m+[m[32m  }[m
[32m+[m[32m  for (i = 0; i < 16; i++) {[m
[32m+[m[32m    x[i+16]=a[i];[m
[32m+[m[32m    x[i+32]=c[i];[m
[32m+[m[32m    x[i+48]=b[i];[m
[32m+[m[32m    x[i+64]=d[i];[m
[32m+[m[32m  }[m
[32m+[m[32m  var x32 = x.subarray(32);[m
[32m+[m[32m  var x16 = x.subarray(16);[m
[32m+[m[32m  inv25519(x32,x32);[m
[32m+[m[32m  M(x16,x16,x32);[m
[32m+[m[32m  pack25519(q,x16);[m
[32m+[m[32m  return 0;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction crypto_scalarmult_base(q, n) {[m
[32m+[m[32m  return crypto_scalarmult(q, n, _9);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction crypto_box_keypair(y, x) {[m
[32m+[m[32m  randombytes(x, 32);[m
[32m+[m[32m  return crypto_scalarmult_base(y, x);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction crypto_box_beforenm(k, y, x) {[m
[32m+[m[32m  var s = new Uint8Array(32);[m
[32m+[m[32m  crypto_scalarmult(s, x, y);[m
[32m+[m[32m  return crypto_core_hsalsa20(k, _0, s, sigma);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mvar crypto_box_afternm = crypto_secretbox;[m
[32m+[m[32mvar crypto_box_open_afternm = crypto_secretbox_open;[m
[32m+[m
[32m+[m[32mfunction crypto_box(c, m, d, n, y, x) {[m
[32m+[m[32m  var k = new Uint8Array(32);[m
[32m+[m[32m  crypto_box_beforenm(k, y, x);[m
[32m+[m[32m  return crypto_box_afternm(c, m, d, n, k);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction crypto_box_open(m, c, d, n, y, x) {[m
[32m+[m[32m  var k = new Uint8Array(32);[m
[32m+[m[32m  crypto_box_beforenm(k, y, x);[m
[32m+[m[32m  return crypto_box_open_afternm(m, c, d, n, k);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mvar K = [[m
[32m+[m[32m  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,[m
[32m+[m[32m  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,[m
[32m+[m[32m  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,[m
[32m+[m[32m  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,[m
[32m+[m[32m  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,[m
[32m+[m[32m  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,[m
[32m+[m[32m  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,[m
[32m+[m[32m  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,[m
[32m+[m[32m  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,[m
[32m+[m[32m  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,[m
[32m+[m[32m  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,[m
[32m+[m[32m  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,[m
[32m+[m[32m  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,[m
[32m+[m[32m  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,[m
[32m+[m[32m  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,[m
[32m+[m[32m  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,[m
[32m+[m[32m  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,[m
[32m+[m[32m  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,[m
[32m+[m[32m  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,[m
[32m+[m[32m  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,[m
[32m+[m[32m  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,[m
[32m+[m[32m  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,[m
[32m+[m[32m  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,[m
[32m+[m[32m  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,[m
[32m+[m[32m  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,[m
[32m+[m[32m  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,[m
[32m+[m[32m  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,[m
[32m+[m[32m  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,[m
[32m+[m[32m  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,[m
[32m+[m[32m  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,[m
[32m+[m[32m  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,[m
[32m+[m[32m  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,[m
[32m+[m[32m  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,[m
[32m+[m[32m  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,[m
[32m+[m[32m  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,[m
[32m+[m[32m  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,[m
[32m+[m[32m  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,[m
[32m+[m[32m  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,[m
[32m+[m[32m  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,[m
[32m+[m[32m  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817[m
[32m+[m[32m];[m
[32m+[m
[32m+[m[32mfunction crypto_hashblocks_hl(hh, hl, m, n) {[m
[32m+[m[32m  var wh = new Int32Array(16), wl = new Int32Array(16),[m
[32m+[m[32m      bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7,[m
[32m+[m[32m      bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7,[m
[32m+[m[32m      th, tl, i, j, h, l, a, b, c, d;[m
[32m+[m
[32m+[m[32m  var ah0 = hh[0],[m
[32m+[m[32m      ah1 = hh[1],[m
[32m+[m[32m      ah2 = hh[2],[m
[32m+[m[32m      ah3 = hh[3],[m
[32m+[m[32m      ah4 = hh[4],[m
[32m+[m[32m      ah5 = hh[5],[m
[32m+[m[32m      ah6 = hh[6],[m
[32m+[m[32m      ah7 = hh[7],[m
[32m+[m
[32m+[m[32m      al0 = hl[0],[m
[32m+[m[32m      al1 = hl[1],[m
[32m+[m[32m      al2 = hl[2],[m
[32m+[m[32m      al3 = hl[3],[m
[32m+[m[32m      al4 = hl[4],[m
[32m+[m[32m      al5 = hl[5],[m
[32m+[m[32m      al6 = hl[6],[m
[32m+[m[32m      al7 = hl[7];[m
[32m+[m
[32m+[m[32m  var pos = 0;[m
[32m+[m[32m  while (n >= 128) {[m
[32m+[m[32m    for (i = 0; i < 16; i++) {[m
[32m+[m[32m      j = 8 * i + pos;[m
[32m+[m[32m      wh[i] = (m[j+0] << 24) | (m[j+1] << 16) | (m[j+2] << 8) | m[j+3];[m
[32m+[m[32m      wl[i] = (m[j+4] << 24) | (m[j+5] << 16) | (m[j+6] << 8) | m[j+7];[m
[32m+[m[32m    }[m
[32m+[m[32m    for (i = 0; i < 80; i++) {[m
[32m+[m[32m      bh0 = ah0;[m
[32m+[m[32m      bh1 = ah1;[m
[32m+[m[32m      bh2 = ah2;[m
[32m+[m[32m      bh3 = ah3;[m
[32m+[m[32m      bh4 = ah4;[m
[32m+[m[32m      bh5 = ah5;[m
[32m+[m[32m      bh6 = ah6;[m
[32m+[m[32m      bh7 = ah7;[m
[32m+[m
[32m+[m[32m      bl0 = al0;[m
[32m+[m[32m      bl1 = al1;[m
[32m+[m[32m      bl2 = al2;[m
[32m+[m[32m      bl3 = al3;[m
[32m+[m[32m      bl4 = al4;[m
[32m+[m[32m      bl5 = al5;[m
[32m+[m[32m      bl6 = al6;[m
[32m+[m[32m      bl7 = al7;[m
[32m+[m
[32m+[m[32m      // add[m
[32m+[m[32m      h = ah7;[m
[32m+[m[32m      l = al7;[m
[32m+[m
[32m+[m[32m      a = l & 0xffff; b = l >>> 16;[m
[32m+[m[32m      c = h & 0xffff; d = h >>> 16;[m
[32m+[m
[32m+[m[32m      // Sigma1[m
[32m+[m[32m      h = ((ah4 >>> 14) | (al4 << (32-14))) ^ ((ah4 >>> 18) | (al4 << (32-18))) ^ ((al4 >>> (41-32)) | (ah4 << (32-(41-32))));[m
[32m+[m[32m      l = ((al4 >>> 14) | (ah4 << (32-14))) ^ ((al4 >>> 18) | (ah4 << (32-18))) ^ ((ah4 >>> (41-32)) | (al4 << (32-(41-32))));[m
[32m+[m
[32m+[m[32m      a += l & 0xffff; b += l >>> 16;[m
[32m+[m[32m      c += h & 0xffff; d += h >>> 16;[m
[32m+[m
[32m+[m[32m      // Ch[m
[32m+[m[32m      h = (ah4 & ah5) ^ (~ah4 & ah6);[m
[32m+[m[32m      l = (al4 & al5) ^ (~al4 & al6);[m
[32m+[m
[32m+[m[32m      a += l & 0xffff; b += l >>> 16;[m
[32m+[m[32m      c += h & 0xffff; d += h >>> 16;[m
[32m+[m
[32m+[m[32m      // K[m
[32m+[m[32m      h = K[i*2];[m
[32m+[m[32m      l = K[i*2+1];[m
[32m+[m
[32m+[m[32m      a += l & 0xffff; b += l >>> 16;[m
[32m+[m[32m      c += h & 0xffff; d += h >>> 16;[m
[32m+[m
[32m+[m[32m      // w[m
[32m+[m[32m      h = wh[i%16];[m
[32m+[m[32m      l = wl[i%16];[m
[32m+[m
[32m+[m[32m      a += l & 0xffff; b += l >>> 16;[m
[32m+[m[32m      c += h & 0xffff; d += h >>> 16;[m
[32m+[m
[32m+[m[32m      b += a >>> 16;[m
[32m+[m[32m      c += b >>> 16;[m
[32m+[m[32m      d += c >>> 16;[m
[32m+[m
[32m+[m[32m      th = c & 0xffff | d << 16;[m
[32m+[m[32m      tl = a & 0xffff | b << 16;[m
[32m+[m
[32m+[m[32m      // add[m
[32m+[m[32m      h = th;[m
[32m+[m[32m      l = tl;[m
[32m+[m
[32m+[m[32m      a = l & 0xffff; b = l >>> 16;[m
[32m+[m[32m      c = h & 0xffff; d = h >>> 16;[m
[32m+[m
[32m+[m[32m      // Sigma0[m
[32m+[m[32m      h = ((ah0 >>> 28) | (al0 << (32-28))) ^ ((al0 >>> (34-32)) | (ah0 << (32-(34-32)))) ^ ((al0 >>> (39-32)) | (ah0 << (32-(39-32))));[m
[32m+[m[32m      l = ((al0 >>> 28) | (ah0 << (32-28))) ^ ((ah0 >>> (34-32)) | (al0 << (32-(34-32)))) ^ ((ah0 >>> (39-32)) | (al0 << (32-(39-32))));[m
[32m+[m
[32m+[m[32m      a += l & 0xffff; b += l >>> 16;[m
[32m+[m[32m      c += h & 0xffff; d += h >>> 16;[m
[32m+[m
[32m+[m[32m      // Maj[m
[32m+[m[32m      h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);[m
[32m+[m[32m      l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);[m
[32m+[m
[32m+[m[32m      a += l & 0xffff; b += l >>> 16;[m
[32m+[m[32m      c += h & 0xffff; d += h >>> 16;[m
[32m+[m
[32m+[m[32m      b += a >>> 16;[m
[32m+[m[32m      c += b >>> 16;[m
[32m+[m[32m      d += c >>> 16;[m
[32m+[m
[32m+[m[32m      bh7 = (c & 0xffff) | (d << 16);[m
[32m+[m[32m      bl7 = (a & 0xffff) | (b << 16);[m
[32m+[m
[32m+[m[32m      // add[m
[32m+[m[32m      h = bh3;[m
[32m+[m[32m      l = bl3;[m
[32m+[m
[32m+[m[32m      a = l & 0xffff; b = l >>> 16;[m
[32m+[m[32m      c = h & 0xffff; d = h >>> 16;[m
[32m+[m
[32m+[m[32m      h = th;[m
[32m+[m[32m      l = tl;[m
[32m+[m
[32m+[m[32m      a += l & 0xffff; b += l >>> 16;[m
[32m+[m[32m      c += h & 0xffff; d += h >>> 16;[m
[32m+[m
[32m+[m[32m      b += a >>> 16;[m
[32m+[m[32m      c += b >>> 16;[m
[32m+[m[32m      d += c >>> 16;[m
[32m+[m
[32m+[m[32m      bh3 = (c & 0xffff) | (d << 16);[m
[32m+[m[32m      bl3 = (a & 0xffff) | (b << 16);[m
[32m+[m
[32m+[m[32m      ah1 = bh0;[m
[32m+[m[32m      ah2 = bh1;[m
[32m+[m[32m      ah3 = bh2;[m
[32m+[m[32m      ah4 = bh3;[m
[32m+[m[32m      ah5 = bh4;[m
[32m+[m[32m      ah6 = bh5;[m
[32m+[m[32m      ah7 = bh6;[m
[32m+[m[32m      ah0 = bh7;[m
[32m+[m
[32m+[m[32m      al1 = bl0;[m
[32m+[m[32m      al2 = bl1;[m
[32m+[m[32m      al3 = bl2;[m
[32m+[m[32m      al4 = bl3;[m
[32m+[m[32m      al5 = bl4;[m
[32m+[m[32m      al6 = bl5;[m
[32m+[m[32m      al7 = bl6;[m
[32m+[m[32m      al0 = bl7;[m
[32m+[m
[32m+[m[32m      if (i%16 === 15) {[m
[32m+[m[32m        for (j = 0; j < 16; j++) {[m
[32m+[m[32m          // add[m
[32m+[m[32m          h = wh[j];[m
[32m+[m[32m          l = wl[j];[m
[32m+[m
[32m+[m[32m          a = l & 0xffff; b = l >>> 16;[m
[32m+[m[32m          c = h & 0xffff; d = h >>> 16;[m
[32m+[m
[32m+[m[32m          h = wh[(j+9)%16];[m
[32m+[m[32m          l = wl[(j+9)%16];[m
[32m+[m
[32m+[m[32m          a += l & 0xffff; b += l >>> 16;[m
[32m+[m[32m          c += h & 0xffff; d += h >>> 16;[m
[32m+[m
[32m+[m[32m          // sigma0[m
[32m+[m[32m          th = wh[(j+1)%16];[m
[32m+[m[32m          tl = wl[(j+1)%16];[m
[32m+[m[32m          h = ((th >>> 1) | (tl << (32-1))) ^ ((th >>> 8) | (tl << (32-8))) ^ (th >>> 7);[m
[32m+[m[32m          l = ((tl >>> 1) | (th << (32-1))) ^ ((tl >>> 8) | (th << (32-8))) ^ ((tl >>> 7) | (th << (32-7)));[m
[32m+[m
[32m+[m[32m          a += l & 0xffff; b += l >>> 16;[m
[32m+[m[32m          c += h & 0xffff; d += h >>> 16;[m
[32m+[m
[32m+[m[32m          // sigma1[m
[32m+[m[32m          th = wh[(j+14)%16];[m
[32m+[m[32m          tl = wl[(j+14)%16];[m
[32m+[m[32m          h = ((th >>> 19) | (tl << (32-19))) ^ ((tl >>> (61-32)) | (th << (32-(61-32)))) ^ (th >>> 6);[m
[32m+[m[32m          l = ((tl >>> 19) | (th << (32-19))) ^ ((th >>> (61-32)) | (tl << (32-(61-32)))) ^ ((tl >>> 6) | (th << (32-6)));[m
[32m+[m
[32m+[m[32m          a += l & 0xffff; b += l >>> 16;[m
[32m+[m[32m          c += h & 0xffff; d += h >>> 16;[m
[32m+[m
[32m+[m[32m          b += a >>> 16;[m
[32m+[m[32m          c += b >>> 16;[m
[32m+[m[32m          d += c >>> 16;[m
[32m+[m
[32m+[m[32m          wh[j] = (c & 0xffff) | (d << 16);[m
[32m+[m[32m          wl[j] = (a & 0xffff) | (b << 16);[m
[32m+[m[32m        }[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // add[m
[32m+[m[32m    h = ah0;[m
[32m+[m[32m    l = al0;[m
[32m+[m
[32m+[m[32m    a = l & 0xffff; b = l >>> 16;[m
[32m+[m[32m    c = h & 0xffff; d = h >>> 16;[m
[32m+[m
[32m+[m[32m    h = hh[0];[m
[32m+[m[32m    l = hl[0];[m
[32m+[m
[32m+[m[32m    a += l & 0xffff; b += l >>> 16;[m
[32m+[m[32m    c += h & 0xffff; d += h >>> 16;[m
[32m+[m
[32m+[m[32m    b += a >>> 16;[m
[32m+[m[32m    c += b >>> 16;[m
[32m+[m[32m    d += c >>> 16;[m
[32m+[m
[32m+[m[32m    hh[0] = ah0 = (c & 0xffff) | (d << 16);[m
[32m+[m[32m    hl[0] = al0 = (a & 0xffff) | (b << 16);[m
[32m+[m
[32m+[m[32m    h = ah1;[m
[32m+[m[32m    l = al1;[m
[32m+[m
[32m+[m[32m    a = l & 0xffff; b = l >>> 16;[m
[32m+[m[32m    c = h & 0xffff; d = h >>> 16;[m
[32m+[m
[32m+[m[32m    h = hh[1];[m
[32m+[m[32m    l = hl[1];[m
[32m+[m
[32m+[m[32m    a += l & 0xffff; b += l >>> 16;[m
[32m+[m[32m    c += h & 0xffff; d += h >>> 16;[m
[32m+[m
[32m+[m[32m    b += a >>> 16;[m
[32m+[m[32m    c += b >>> 16;[m
[32m+[m[32m    d += c >>> 16;[m
[32m+[m
[32m+[m[32m    hh[1] = ah1 = (c & 0xffff) | (d << 16);[m
[32m+[m[32m    hl[1] = al1 = (a & 0xffff) | (b << 16);[m
[32m+[m
[32m+[m[32m    h = ah2;[m
[32m+[m[32m    l = al2;[m
[32m+[m
[32m+[m[32m    a = l & 0xffff; b = l >>> 16;[m
[32m+[m[32m    c = h & 0xffff; d = h >>> 16;[m
[32m+[m
[32m+[m[32m    h = hh[2];[m
[32m+[m[32m    l = hl[2];[m
[32m+[m
[32m+[m[32m    a += l & 0xffff; b += l >>> 16;[m
[32m+[m[32m    c += h & 0xffff; d += h >>> 16;[m
[32m+[m
[32m+[m[32m    b += a >>> 16;[m
[32m+[m[32m    c += b >>> 16;[m
[32m+[m[32m    d += c >>> 16;[m
[32m+[m
[32m+[m[32m    hh[2] = ah2 = (c & 0xffff) | (d << 16);[m
[32m+[m[32m    hl[2] = al2 = (a & 0xffff) | (b << 16);[m
[32m+[m
[32m+[m[32m    h = ah3;[m
[32m+[m[32m    l = al3;[m
[32m+[m
[32m+[m[32m    a = l & 0xffff; b = l >>> 16;[m
[32m+[m[32m    c = h & 0xffff; d = h >>> 16;[m
[32m+[m
[32m+[m[32m    h = hh[3];[m
[32m+[m[32m    l = hl[3];[m
[32m+[m
[32m+[m[32m    a += l & 0xffff; b += l >>> 16;[m
[32m+[m[32m    c += h & 0xffff; d += h >>> 16;[m
[32m+[m
[32m+[m[32m    b += a >>> 16;[m
[32m+[m[32m    c += b >>> 16;[m
[32m+[m[32m    d += c >>> 16;[m
[32m+[m
[32m+[m[32m    hh[3] = ah3 = (c & 0xffff) | (d << 16);[m
[32m+[m[32m    hl[3] = al3 = (a & 0xffff) | (b << 16);[m
[32m+[m
[32m+[m[32m    h = ah4;[m
[32m+[m[32m    l = al4;[m
[32m+[m
[32m+[m[32m    a = l & 0xffff; b = l >>> 16;[m
[32m+[m[32m    c = h & 0xffff; d = h >>> 16;[m
[32m+[m
[32m+[m[32m    h = hh[4];[m
[32m+[m[32m    l = hl[4];[m
[32m+[m
[32m+[m[32m    a += l & 0xffff; b += l >>> 16;[m
[32m+[m[32m    c += h & 0xffff; d += h >>> 16;[m
[32m+[m
[32m+[m[32m    b += a >>> 16;[m
[32m+[m[32m    c += b >>> 16;[m
[32m+[m[32m    d += c >>> 16;[m
[32m+[m
[32m+[m[32m    hh[4] = ah4 = (c & 0xffff) | (d << 16);[m
[32m+[m[32m    hl[4] = al4 = (a & 0xffff) | (b << 16);[m
[32m+[m
[32m+[m[32m    h = ah5;[m
[32m+[m[32m    l = al5;[m
[32m+[m
[32m+[m[32m    a = l & 0xffff; b = l >>> 16;[m
[32m+[m[32m    c = h & 0xffff; d = h >>> 16;[m
[32m+[m
[32m+[m[32m    h = hh[5];[m
[32m+[m[32m    l = hl[5];[m
[32m+[m
[32m+[m[32m    a += l & 0xffff; b += l >>> 16;[m
[32m+[m[32m    c += h & 0xffff; d += h >>> 16;[m
[32m+[m
[32m+[m[32m    b += a >>> 16;[m
[32m+[m[32m    c += b >>> 16;[m
[32m+[m[32m    d += c >>> 16;[m
[32m+[m
[32m+[m[32m    hh[5] = ah5 = (c & 0xffff) | (d << 16);[m
[32m+[m[32m    hl[5] = al5 = (a & 0xffff) | (b << 16);[m
[32m+[m
[32m+[m[32m    h = ah6;[m
[32m+[m[32m    l = al6;[m
[32m+[m
[32m+[m[32m    a = l & 0xffff; b = l >>> 16;[m
[32m+[m[32m    c = h & 0xffff; d = h >>> 16;[m
[32m+[m
[32m+[m[32m    h = hh[6];[m
[32m+[m[32m    l = hl[6];[m
[32m+[m
[32m+[m[32m    a += l & 0xffff; b += l >>> 16;[m
[32m+[m[32m    c += h & 0xffff; d += h >>> 16;[m
[32m+[m
[32m+[m[32m    b += a >>> 16;[m
[32m+[m[32m    c += b >>> 16;[m
[32m+[m[32m    d += c >>> 16;[m
[32m+[m
[32m+[m[32m    hh[6] = ah6 = (c & 0xffff) | (d << 16);[m
[32m+[m[32m    hl[6] = al6 = (a & 0xffff) | (b << 16);[m
[32m+[m
[32m+[m[32m    h = ah7;[m
[32m+[m[32m    l = al7;[m
[32m+[m
[32m+[m[32m    a = l & 0xffff; b = l >>> 16;[m
[32m+[m[32m    c = h & 0xffff; d = h >>> 16;[m
[32m+[m
[32m+[m[32m    h = hh[7];[m
[32m+[m[32m    l = hl[7];[m
[32m+[m
[32m+[m[32m    a += l & 0xffff; b += l >>> 16;[m
[32m+[m[32m    c += h & 0xffff; d += h >>> 16;[m
[32m+[m
[32m+[m[32m    b += a >>> 16;[m
[32m+[m[32m    c += b >>> 16;[m
[32m+[m[32m    d += c >>> 16;[m
[32m+[m
[32m+[m[32m    hh[7] = ah7 = (c & 0xffff) | (d << 16);[m
[32m+[m[32m    hl[7] = al7 = (a & 0xffff) | (b << 16);[m
[32m+[m
[32m+[m[32m    pos += 128;[m
[32m+[m[32m    n -= 128;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  return n;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction crypto_hash(out, m, n) {[m
[32m+[m[32m  var hh = new Int32Array(8),[m
[32m+[m[32m      hl = new Int32Array(8),[m
[32m+[m[32m      x = new Uint8Array(256),[m
[32m+[m[32m      i, b = n;[m
[32m+[m
[32m+[m[32m  hh[0] = 0x6a09e667;[m
[32m+[m[32m  hh[1] = 0xbb67ae85;[m
[32m+[m[32m  hh[2] = 0x3c6ef372;[m
[32m+[m[32m  hh[3] = 0xa54ff53a;[m
[32m+[m[32m  hh[4] = 0x510e527f;[m
[32m+[m[32m  hh[5] = 0x9b05688c;[m
[32m+[m[32m  hh[6] = 0x1f83d9ab;[m
[32m+[m[32m  hh[7] = 0x5be0cd19;[m
[32m+[m
[32m+[m[32m  hl[0] = 0xf3bcc908;[m
[32m+[m[32m  hl[1] = 0x84caa73b;[m
[32m+[m[32m  hl[2] = 0xfe94f82b;[m
[32m+[m[32m  hl[3] = 0x5f1d36f1;[m
[32m+[m[32m  hl[4] = 0xade682d1;[m
[32m+[m[32m  hl[5] = 0x2b3e6c1f;[m
[32m+[m[32m  hl[6] = 0xfb41bd6b;[m
[32m+[m[32m  hl[7] = 0x137e2179;[m
[32m+[m
[32m+[m[32m  crypto_hashblocks_hl(hh, hl, m, n);[m
[32m+[m[32m  n %= 128;[m
[32m+[m
[32m+[m[32m  for (i = 0; i < n; i++) x[i] = m[b-n+i];[m
[32m+[m[32m  x[n] = 128;[m
[32m+[m
[32m+[m[32m  n = 256-128*(n<112?1:0);[m
[32m+[m[32m  x[n-9] = 0;[m
[32m+[m[32m  ts64(x, n-8,  (b / 0x20000000) | 0, b << 3);[m
[32m+[m[32m  crypto_hashblocks_hl(hh, hl, x, n);[m
[32m+[m
[32m+[m[32m  for (i = 0; i < 8; i++) ts64(out, 8*i, hh[i], hl[i]);[m
[32m+[m
[32m+[m[32m  return 0;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction add(p, q) {[m
[32m+[m[32m  var a = gf(), b = gf(), c = gf(),[m
[32m+[m[32m      d = gf(), e = gf(), f = gf(),[m
[32m+[m[32m      g = gf(), h = gf(), t = gf();[m
[32m+[m
[32m+[m[32m  Z(a, p[1], p[0]);[m
[32m+[m[32m  Z(t, q[1], q[0]);[m
[32m+[m[32m  M(a, a, t);[m
[32m+[m[32m  A(b, p[0], p[1]);[m
[32m+[m[32m  A(t, q[0], q[1]);[m
[32m+[m[32m  M(b, b, t);[m
[32m+[m[32m  M(c, p[3], q[3]);[m
[32m+[m[32m  M(c, c, D2);[m
[32m+[m[32m  M(d, p[2], q[2]);[m
[32m+[m[32m  A(d, d, d);[m
[32m+[m[32m  Z(e, b, a);[m
[32m+[m[32m  Z(f, d, c);[m
[32m+[m[32m  A(g, d, c);[m
[32m+[m[32m  A(h, b, a);[m
[32m+[m
[32m+[m[32m  M(p[0], e, f);[m
[32m+[m[32m  M(p[1], h, g);[m
[32m+[m[32m  M(p[2], g, f);[m
[32m+[m[32m  M(p[3], e, h);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction cswap(p, q, b) {[m
[32m+[m[32m  var i;[m
[32m+[m[32m  for (i = 0; i < 4; i++) {[m
[32m+[m[32m    sel25519(p[i], q[i], b);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction pack(r, p) {[m
[32m+[m[32m  var tx = gf(), ty = gf(), zi = gf();[m
[32m+[m[32m  inv25519(zi, p[2]);[m
[32m+[m[32m  M(tx, p[0], zi);[m
[32m+[m[32m  M(ty, p[1], zi);[m
[32m+[m[32m  pack25519(r, ty);[m
[32m+[m[32m  r[31] ^= par25519(tx) << 7;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction scalarmult(p, q, s) {[m
[32m+[m[32m  var b, i;[m
[32m+[m[32m  set25519(p[0], gf0);[m
[32m+[m[32m  set25519(p[1], gf1);[m
[32m+[m[32m  set25519(p[2], gf1);[m
[32m+[m[32m  set25519(p[3], gf0);[m
[32m+[m[32m  for (i = 255; i >= 0; --i) {[m
[32m+[m[32m    b = (s[(i/8)|0] >> (i&7)) & 1;[m
[32m+[m[32m    cswap(p, q, b);[m
[32m+[m[32m    add(q, p);[m
[32m+[m[32m    add(p, p);[m
[32m+[m[32m    cswap(p, q, b);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction scalarbase(p, s) {[m
[32m+[m[32m  var q = [gf(), gf(), gf(), gf()];[m
[32m+[m[32m  set25519(q[0], X);[m
[32m+[m[32m  set25519(q[1], Y);[m
[32m+[m[32m  set25519(q[2], gf1);[m
[32m+[m[32m  M(q[3], X, Y);[m
[32m+[m[32m  scalarmult(p, q, s);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction crypto_sign_keypair(pk, sk, seeded) {[m
[32m+[m[32m  var d = new Uint8Array(64);[m
[32m+[m[32m  var p = [gf(), gf(), gf(), gf()];[m
[32m+[m[32m  var i;[m
[32m+[m
[32m+[m[32m  if (!seeded) randombytes(sk, 32);[m
[32m+[m[32m  crypto_hash(d, sk, 32);[m
[32m+[m[32m  d[0] &= 248;[m
[32m+[m[32m  d[31] &= 127;[m
[32m+[m[32m  d[31] |= 64;[m
[32m+[m
[32m+[m[32m  scalarbase(p, d);[m
[32m+[m[32m  pack(pk, p);[m
[32m+[m
[32m+[m[32m  for (i = 0; i < 32; i++) sk[i+32] = pk[i];[m
[32m+[m[32m  return 0;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mvar L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);[m
[32m+[m
[32m+[m[32mfunction modL(r, x) {[m
[32m+[m[32m  var carry, i, j, k;[m
[32m+[m[32m  for (i = 63; i >= 32; --i) {[m
[32m+[m[32m    carry = 0;[m
[32m+[m[32m    for (j = i - 32, k = i - 12; j < k; ++j) {[m
[32m+[m[32m      x[j] += carry - 16 * x[i] * L[j - (i - 32)];[m
[32m+[m[32m      carry = (x[j] + 128) >> 8;[m
[32m+[m[32m      x[j] -= carry * 256;[m
[32m+[m[32m    }[m
[32m+[m[32m    x[j] += carry;[m
[32m+[m[32m    x[i] = 0;[m
[32m+[m[32m  }[m
[32m+[m[32m  carry = 0;[m
[32m+[m[32m  for (j = 0; j < 32; j++) {[m
[32m+[m[32m    x[j] += carry - (x[31] >> 4) * L[j];[m
[32m+[m[32m    carry = x[j] >> 8;[m
[32m+[m[32m    x[j] &= 255;[m
[32m+[m[32m  }[m
[32m+[m[32m  for (j = 0; j < 32; j++) x[j] -= carry * L[j];[m
[32m+[m[32m  for (i = 0; i < 32; i++) {[m
[32m+[m[32m    x[i+1] += x[i] >> 8;[m
[32m+[m[32m    r[i] = x[i] & 255;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction reduce(r) {[m
[32m+[m[32m  var x = new Float64Array(64), i;[m
[32m+[m[32m  for (i = 0; i < 64; i++) x[i] = r[i];[m
[32m+[m[32m  for (i = 0; i < 64; i++) r[i] = 0;[m
[32m+[m[32m  modL(r, x);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m// Note: difference from C - smlen returned, not passed as argument.[m
[32m+[m[32mfunction crypto_sign(sm, m, n, sk) {[m
[32m+[m[32m  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);[m
[32m+[m[32m  var i, j, x = new Float64Array(64);[m
[32m+[m[32m  var p = [gf(), gf(), gf(), gf()];[m
[32m+[m
[32m+[m[32m  crypto_hash(d, sk, 32);[m
[32m+[m[32m  d[0] &= 248;[m
[32m+[m[32m  d[31] &= 127;[m
[32m+[m[32m  d[31] |= 64;[m
[32m+[m
[32m+[m[32m  var smlen = n + 64;[m
[32m+[m[32m  for (i = 0; i < n; i++) sm[64 + i] = m[i];[m
[32m+[m[32m  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];[m
[32m+[m
[32m+[m[32m  crypto_hash(r, sm.subarray(32), n+32);[m
[32m+[m[32m  reduce(r);[m
[32m+[m[32m  scalarbase(p, r);[m
[32m+[m[32m  pack(sm, p);[m
[32m+[m
[32m+[m[32m  for (i = 32; i < 64; i++) sm[i] = sk[i];[m
[32m+[m[32m  crypto_hash(h, sm, n + 64);[m
[32m+[m[32m  reduce(h);[m
[32m+[m
[32m+[m[32m  for (i = 0; i < 64; i++) x[i] = 0;[m
[32m+[m[32m  for (i = 0; i < 32; i++) x[i] = r[i];[m
[32m+[m[32m  for (i = 0; i < 32; i++) {[m
[32m+[m[32m    for (j = 0; j < 32; j++) {[m
[32m+[m[32m      x[i+j] += h[i] * d[j];[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  modL(sm.subarray(32), x);[m
[32m+[m[32m  return smlen;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction unpackneg(r, p) {[m
[32m+[m[32m  var t = gf(), chk = gf(), num = gf(),[m
[32m+[m[32m      den = gf(), den2 = gf(), den4 = gf(),[m
[32m+[m[32m      den6 = gf();[m
[32m+[m
[32m+[m[32m  set25519(r[2], gf1);[m
[32m+[m[32m  unpack25519(r[1], p);[m
[32m+[m[32m  S(num, r[1]);[m
[32m+[m[32m  M(den, num, D);[m
[32m+[m[32m  Z(num, num, r[2]);[m
[32m+[m[32m  A(den, r[2], den);[m
[32m+[m
[32m+[m[32m  S(den2, den);[m
[32m+[m[32m  S(den4, den2);[m
[32m+[m[32m  M(den6, den4, den2);[m
[32m+[m[32m  M(t, den6, num);[m
[32m+[m[32m  M(t, t, den);[m
[32m+[m
[32m+[m[32m  pow2523(t, t);[m
[32m+[m[32m  M(t, t, num);[m
[32m+[m[32m  M(t, t, den);[m
[32m+[m[32m  M(t, t, den);[m
[32m+[m[32m  M(r[0], t, den);[m
[32m+[m
[32m+[m[32m  S(chk, r[0]);[m
[32m+[m[32m  M(chk, chk, den);[m
[32m+[m[32m  if (neq25519(chk, num)) M(r[0], r[0], I);[m
[32m+[m
[32m+[m[32m  S(chk, r[0]);[m
[32m+[m[32m  M(chk, chk, den);[m
[32m+[m[32m  if (neq25519(chk, num)) return -1;[m
[32m+[m
[32m+[m[32m  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);[m
[32m+[m
[32m+[m[32m  M(r[3], r[0], r[1]);[m
[32m+[m[32m  return 0;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction crypto_sign_open(m, sm, n, pk) {[m
[32m+[m[32m  var i, mlen;[m
[32m+[m[32m  var t = new Uint8Array(32), h = new Uint8Array(64);[m
[32m+[m[32m  var p = [gf(), gf(), gf(), gf()],[m
[32m+[m[32m      q = [gf(), gf(), gf(), gf()];[m
[32m+[m
[32m+[m[32m  mlen = -1;[m
[32m+[m[32m  if (n < 64) return -1;[m
[32m+[m
[32m+[m[32m  if (unpackneg(q, pk)) return -1;[m
[32m+[m
[32m+[m[32m  for (i = 0; i < n; i++) m[i] = sm[i];[m
[32m+[m[32m  for (i = 0; i < 32; i++) m[i+32] = pk[i];[m
[32m+[m[32m  crypto_hash(h, m, n);[m
[32m+[m[32m  reduce(h);[m
[32m+[m[32m  scalarmult(p, q, h);[m
[32m+[m
[32m+[m[32m  scalarbase(q, sm.subarray(32));[m
[32m+[m[32m  add(p, q);[m
[32m+[m[32m  pack(t, p);[m
[32m+[m
[32m+[m[32m  n -= 64;[m
[32m+[m[32m  if (crypto_verify_32(sm, 0, t, 0)) {[m
[32m+[m[32m    for (i = 0; i < n; i++) m[i] = 0;[m
[32m+[m[32m    return -1;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  for (i = 0; i < n; i++) m[i] = sm[i + 64];[m
[32m+[m[32m  mlen = n;[m
[32m+[m[32m  return mlen;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mvar crypto_secretbox_KEYBYTES = 32,[m
[32m+[m[32m    crypto_secretbox_NONCEBYTES = 24,[m
[32m+[m[32m    crypto_secretbox_ZEROBYTES = 32,[m
[32m+[m[32m    crypto_secretbox_BOXZEROBYTES = 16,[m
[32m+[m[32m    crypto_scalarmult_BYTES = 32,[m
[32m+[m[32m    crypto_scalarmult_SCALARBYTES = 32,[m
[32m+[m[32m    crypto_box_PUBLICKEYBYTES = 32,[m
[32m+[m[32m    crypto_box_SECRETKEYBYTES = 32,[m
[32m+[m[32m    crypto_box_BEFORENMBYTES = 32,[m
[32m+[m[32m    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,[m
[32m+[m[32m    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,[m
[32m+[m[32m    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,[m
[32m+[m[32m    crypto_sign_BYTES = 64,[m
[32m+[m[32m    crypto_sign_PUBLICKEYBYTES = 32,[m
[32m+[m[32m    crypto_sign_SECRETKEYBYTES = 64,[m
[32m+[m[32m    crypto_sign_SEEDBYTES = 32,[m
[32m+[m[32m    crypto_hash_BYTES = 64;[m
[32m+[m
[32m+[m[32mnacl.lowlevel = {[m
[32m+[m[32m  crypto_core_hsalsa20: crypto_core_hsalsa20,[m
[32m+[m[32m  crypto_stream_xor: crypto_stream_xor,[m
[32m+[m[32m  crypto_stream: crypto_stream,[m
[32m+[m[32m  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,[m
[32m+[m[32m  crypto_stream_salsa20: crypto_stream_salsa20,[m
[32m+[m[32m  crypto_onetimeauth: crypto_onetimeauth,[m
[32m+[m[32m  crypto_onetimeauth_verify: crypto_onetimeauth_verify,[m
[32m+[m[32m  crypto_verify_16: crypto_verify_16,[m
[32m+[m[32m  crypto_verify_32: crypto_verify_32,[m
[32m+[m[32m  crypto_secretbox: crypto_secretbox,[m
[32m+[m[32m  crypto_secretbox_open: crypto_secretbox_open,[m
[32m+[m[32m  crypto_scalarmult: crypto_scalarmult,[m
[32m+[m[32m  crypto_scalarmult_base: crypto_scalarmult_base,[m
[32m+[m[32m  crypto_box_beforenm: crypto_box_beforenm,[m
[32m+[m[32m  crypto_box_afternm: crypto_box_afternm,[m
[32m+[m[32m  crypto_box: crypto_box,[m
[32m+[m[32m  crypto_box_open: crypto_box_open,[m
[32m+[m[32m  crypto_box_keypair: crypto_box_keypair,[m
[32m+[m[32m  crypto_hash: crypto_hash,[m
[32m+[m[32m  crypto_sign: crypto_sign,[m
[32m+[m[32m  crypto_sign_keypair: crypto_sign_keypair,[m
[32m+[m[32m  crypto_sign_open: crypto_sign_open,[m
[32m+[m
[32m+[m[32m  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,[m
[32m+[m[32m  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,[m
[32m+[m[32m  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,[m
[32m+[m[32m  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,[m
[32m+[m[32m  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,[m
[32m+[m[32m  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,[m
[32m+[m[32m  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,[m
[32m+[m[32m  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,[m
[32m+[m[32m  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,[m
[32m+[m[32m  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,[m
[32m+[m[32m  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,[m
[32m+[m[32m  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,[m
[32m+[m[32m  crypto_sign_BYTES: crypto_sign_BYTES,[m
[32m+[m[32m  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,[m
[32m+[m[32m  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,[m
[32m+[m[32m  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,[m
[32m+[m[32m  crypto_hash_BYTES: crypto_hash_BYTES[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m/* High-level API */[m
[32m+[m
[32m+[m[32mfunction checkLengths(k, n) {[m
[32m+[m[32m  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');[m
[32m+[m[32m  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction checkBoxLengths(pk, sk) {[m
[32m+[m[32m  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');[m
[32m+[m[32m  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction checkArrayTypes() {[m
[32m+[m[32m  for (var i = 0; i < arguments.length; i++) {[m
[32m+[m[32m    if (!(arguments[i] instanceof Uint8Array))[m
[32m+[m[32m      throw new TypeError('unexpected type, use Uint8Array');[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction cleanup(arr) {[m
[32m+[m[32m  for (var i = 0; i < arr.length; i++) arr[i] = 0;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mnacl.randomBytes = function(n) {[m
[32m+[m[32m  var b = new Uint8Array(n);[m
[32m+[m[32m  randombytes(b, n);[m
[32m+[m[32m  return b;[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mnacl.secretbox = function(msg, nonce, key) {[m
[32m+[m[32m  checkArrayTypes(msg, nonce, key);[m
[32m+[m[32m  checkLengths(key, nonce);[m
[32m+[m[32m  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);[m
[32m+[m[32m  var c = new Uint8Array(m.length);[m
[32m+[m[32m  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];[m
[32m+[m[32m  crypto_secretbox(c, m, m.length, nonce, key);[m
[32m+[m[32m  return c.subarray(crypto_secretbox_BOXZEROBYTES);[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mnacl.secretbox.open = function(box, nonce, key) {[m
[32m+[m[32m  checkArrayTypes(box, nonce, key);[m
[32m+[m[32m  checkLengths(key, nonce);[m
[32m+[m[32m  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);[m
[32m+[m[32m  var m = new Uint8Array(c.length);[m
[32m+[m[32m  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];[m
[32m+[m[32m  if (c.length < 32) return null;[m
[32m+[m[32m  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;[m
[32m+[m[32m  return m.subarray(crypto_secretbox_ZEROBYTES);[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mnacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;[m
[32m+[m[32mnacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;[m
[32m+[m[32mnacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;[m
[32m+[m
[32m+[m[32mnacl.scalarMult = function(n, p) {[m
[32m+[m[32m  checkArrayTypes(n, p);[m
[32m+[m[32m  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');[m
[32m+[m[32m  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');[m
[32m+[m[32m  var q = new Uint8Array(crypto_scalarmult_BYTES);[m
[32m+[m[32m  crypto_scalarmult(q, n, p);[m
[32m+[m[32m  return q;[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mnacl.scalarMult.base = function(n) {[m
[32m+[m[32m  checkArrayTypes(n);[m
[32m+[m[32m  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');[m
[32m+[m[32m  var q = new Uint8Array(crypto_scalarmult_BYTES);[m
[32m+[m[32m  crypto_scalarmult_base(q, n);[m
[32m+[m[32m  return q;[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mnacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;[m
[32m+[m[32mnacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;[m
[32m+[m
[32m+[m[32mnacl.box = function(msg, nonce, publicKey, secretKey) {[m
[32m+[m[32m  var k = nacl.box.before(publicKey, secretKey);[m
[32m+[m[32m  return nacl.secretbox(msg, nonce, k);[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mnacl.box.before = function(publicKey, secretKey) {[m
[32m+[m[32m  checkArrayTypes(publicKey, secretKey);[m
[32m+[m[32m  checkBoxLengths(publicKey, secretKey);[m
[32m+[m[32m  var k = new Uint8Array(crypto_box_BEFORENMBYTES);[m
[32m+[m[32m  crypto_box_beforenm(k, publicKey, secretKey);[m
[32m+[m[32m  return k;[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mnacl.box.after = nacl.secretbox;[m
[32m+[m
[32m+[m[32mnacl.box.open = function(msg, nonce, publicKey, secretKey) {[m
[32m+[m[32m  var k = nacl.box.before(publicKey, secretKey);[m
[32m+[m[32m  return nacl.secretbox.open(msg, nonce, k);[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mnacl.box.open.after = nacl.secretbox.open;[m
[32m+[m
[32m+[m[32mnacl.box.keyPair = function() {[m
[32m+[m[32m  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);[m
[32m+[m[32m  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);[m
[32m+[m[32m  crypto_box_keypair(pk, sk);[m
[32m+[m[32m  return {publicKey: pk, secretKey: sk};[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mnacl.box.keyPair.fromSecretKey = function(secretKey) {[m
[32m+[m[32m  checkArrayTypes(secretKey);[m
[32m+[m[32m  if (secretKey.length !== crypto_box_SECRETKEYBYTES)[m
[32m+[m[32m    throw new Error('bad secret key size');[m
[32m+[m[32m  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);[m
[32m+[m[32m  crypto_scalarmult_base(pk, secretKey);[m
[32m+[m[32m  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mnacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;[m
[32m+[m[32mnacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;[m
[32m+[m[32mnacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;[m
[32m+[m[32mnacl.box.nonceLength = crypto_box_NONCEBYTES;[m
[32m+[m[32mnacl.box.overheadLength = nacl.secretbox.overheadLength;[m
[32m+[m
[32m+[m[32mnacl.sign = function(msg, secretKey) {[m
[32m+[m[32m  checkArrayTypes(msg, secretKey);[m
[32m+[m[32m  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)[m
[32m+[m[32m    throw new Error('bad secret key size');[m
[32m+[m[32m  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);[m
[32m+[m[32m  crypto_sign(signedMsg, msg, msg.length, secretKey);[m
[32m+[m[32m  return signedMsg;[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mnacl.sign.open = function(signedMsg, publicKey) {[m
[32m+[m[32m  checkArrayTypes(signedMsg, publicKey);[m
[32m+[m[32m  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)[m
[32m+[m[32m    throw new Error('bad public key size');[m
[32m+[m[32m  var tmp = new Uint8Array(signedMsg.length);[m
[32m+[m[32m  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);[m
[32m+[m[32m  if (mlen < 0) return null;[m
[32m+[m[32m  var m = new Uint8Array(mlen);[m
[32m+[m[32m  for (var i = 0; i < m.length; i++) m[i] = tmp[i];[m
[32m+[m[32m  return m;[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mnacl.sign.detached = function(msg, secretKey) {[m
[32m+[m[32m  var signedMsg = nacl.sign(msg, secretKey);[m
[32m+[m[32m  var sig = new Uint8Array(crypto_sign_BYTES);[m
[32m+[m[32m  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];[m
[32m+[m[32m  return sig;[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mnacl.sign.detached.verify = function(msg, sig, publicKey) {[m
[32m+[m[32m  checkArrayTypes(msg, sig, publicKey);[m
[32m+[m[32m  if (sig.length !== crypto_sign_BYTES)[m
[32m+[m[32m    throw new Error('bad signature size');[m
[32m+[m[32m  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)[m
[32m+[m[32m    throw new Error('bad public key size');[m
[32m+[m[32m  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);[m
[32m+[m[32m  var m = new Uint8Array(crypto_sign_BYTES + msg.length);[m
[32m+[m[32m  var i;[m
[32m+[m[32m  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];[m
[32m+[m[32m  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];[m
[32m+[m[32m  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mnacl.sign.keyPair = function() {[m
[32m+[m[32m  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);[m
[32m+[m[32m  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);[m
[32m+[m[32m  crypto_sign_keypair(pk, sk);[m
[32m+[m[32m  return {publicKey: pk, secretKey: sk};[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mnacl.sign.keyPair.fromSecretKey = function(secretKey) {[m
[32m+[m[32m  checkArrayTypes(secretKey);[m
[32m+[m[32m  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)[m
[32m+[m[32m    throw new Error('bad secret key size');[m
[32m+[m[32m  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);[m
[32m+[m[32m  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];[m
[32m+[m[32m  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mnacl.sign.keyPair.fromSeed = function(seed) {[m
[32m+[m[32m  checkArrayTypes(seed);[m
[32m+[m[32m  if (seed.length !== crypto_sign_SEEDBYTES)[m
[32m+[m[32m    throw new Error('bad seed size');[m
[32m+[m[32m  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);[m
[32m+[m[32m  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);[m
[32m+[m[32m  for (var i = 0; i < 32; i++) sk[i] = seed[i];[m
[32m+[m[32m  crypto_sign_keypair(pk, sk, true);[m
[32m+[m[32m  return {publicKey: pk, secretKey: sk};[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mnacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;[m
[32m+[m[32mnacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;[m
[32m+[m[32mnacl.sign.seedLength = crypto_sign_SEEDBYTES;[m
[32m+[m[32mnacl.sign.signatureLength = crypto_sign_BYTES;[m
[32m+[m
[32m+[m[32mnacl.hash = function(msg) {[m
[32m+[m[32m  checkArrayTypes(msg);[m
[32m+[m[32m  var h = new Uint8Array(crypto_hash_BYTES);[m
[32m+[m[32m  crypto_hash(h, msg, msg.length);[m
[32m+[m[32m  return h;[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mnacl.hash.hashLength = crypto_hash_BYTES;[m
[32m+[m
[32m+[m[32mnacl.verify = function(x, y) {[m
[32m+[m[32m  checkArrayTypes(x, y);[m
[32m+[m[32m  // Zero length arguments are considered not equal.[m
[32m+[m[32m  if (x.length === 0 || y.length === 0) return false;[m
[32m+[m[32m  if (x.length !== y.length) return false;[m
[32m+[m[32m  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mnacl.setPRNG = function(fn) {[m
[32m+[m[32m  randombytes = fn;[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m(function() {[m
[32m+[m[32m  // Initialize PRNG if environment provides CSPRNG.[m
[32m+[m[32m  // If not, methods calling randombytes will throw.[m
[32m+[m[32m  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;[m
[32m+[m[32m  if (crypto && crypto.getRandomValues) {[m
[32m+[m[32m    // Browsers.[m
[32m+[m[32m    var QUOTA = 65536;[m
[32m+[m[32m    nacl.setPRNG(function(x, n) {[m
[32m+[m[32m      var i, v = new Uint8Array(n);[m
[32m+[m[32m      for (i = 0; i < n; i += QUOTA) {[m
[32m+[m[32m        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));[m
[32m+[m[32m      }[m
[32m+[m[32m      for (i = 0; i < n; i++) x[i] = v[i];[m
[32m+[m[32m      cleanup(v);[m
[32m+[m[32m    });[m
[32m+[m[32m  } else if (typeof require !== 'undefined') {[m
[32m+[m[32m    // Node.js.[m
[32m+[m[32m    crypto = require('crypto');[m
[32m+[m[32m    if (crypto && crypto.randomBytes) {[m
[32m+[m[32m      nacl.setPRNG(function(x, n) {[m
[32m+[m[32m        var i, v = crypto.randomBytes(n);[m
[32m+[m[32m        for (i = 0; i < n; i++) x[i] = v[i];[m
[32m+[m[32m        cleanup(v);[m
[32m+[m[32m      });[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m})();[m
[32m+[m
[32m+[m[32m})(typeof module !== 'undefined' && module.exports ? module.exports : (self.nacl = self.nacl || {}));[m
[1mdiff --git a/node_modules/tweetnacl/nacl-fast.min.js b/node_modules/tweetnacl/nacl-fast.min.js[m
[1mnew file mode 100644[m
[1mindex 0000000..1189d80[m
[1m--- /dev/null[m
[1m+++ b/node_modules/tweetnacl/nacl-fast.min.js[m
[36m@@ -0,0 +1,2 @@[m
[32m+[m[32m!function(r){"use strict";function t(r,t,n,e){r[t]=n>>24&255,r[t+1]=n>>16&255,r[t+2]=n>>8&255,r[t+3]=255&n,r[t+4]=e>>24&255,r[t+5]=e>>16&255,r[t+6]=e>>8&255,r[t+7]=255&e}function n(r,t,n,e,o){var i,h=0;for(i=0;i<o;i++)h|=r[t+i]^n[e+i];return(1&h-1>>>8)-1}function e(r,t,e,o){return n(r,t,e,o,16)}function o(r,t,e,o){return n(r,t,e,o,32)}function i(r,t,n,e){for(var o,i=255&e[0]|(255&e[1])<<8|(255&e[2])<<16|(255&e[3])<<24,h=255&n[0]|(255&n[1])<<8|(255&n[2])<<16|(255&n[3])<<24,a=255&n[4]|(255&n[5])<<8|(255&n[6])<<16|(255&n[7])<<24,f=255&n[8]|(255&n[9])<<8|(255&n[10])<<16|(255&n[11])<<24,s=255&n[12]|(255&n[13])<<8|(255&n[14])<<16|(255&n[15])<<24,u=255&e[4]|(255&e[5])<<8|(255&e[6])<<16|(255&e[7])<<24,c=255&t[0]|(255&t[1])<<8|(255&t[2])<<16|(255&t[3])<<24,y=255&t[4]|(255&t[5])<<8|(255&t[6])<<16|(255&t[7])<<24,l=255&t[8]|(255&t[9])<<8|(255&t[10])<<16|(255&t[11])<<24,w=255&t[12]|(255&t[13])<<8|(255&t[14])<<16|(255&t[15])<<24,v=255&e[8]|(255&e[9])<<8|(255&e[10])<<16|(255&e[11])<<24,p=255&n[16]|(255&n[17])<<8|(255&n[18])<<16|(255&n[19])<<24,b=255&n[20]|(255&n[21])<<8|(255&n[22])<<16|(255&n[23])<<24,g=255&n[24]|(255&n[25])<<8|(255&n[26])<<16|(255&n[27])<<24,_=255&n[28]|(255&n[29])<<8|(255&n[30])<<16|(255&n[31])<<24,A=255&e[12]|(255&e[13])<<8|(255&e[14])<<16|(255&e[15])<<24,U=i,d=h,E=a,x=f,M=s,m=u,B=c,S=y,K=l,Y=w,k=v,T=p,L=b,z=g,R=_,P=A,N=0;N<20;N+=2)o=U+L|0,M^=o<<7|o>>>25,o=M+U|0,K^=o<<9|o>>>23,o=K+M|0,L^=o<<13|o>>>19,o=L+K|0,U^=o<<18|o>>>14,o=m+d|0,Y^=o<<7|o>>>25,o=Y+m|0,z^=o<<9|o>>>23,o=z+Y|0,d^=o<<13|o>>>19,o=d+z|0,m^=o<<18|o>>>14,o=k+B|0,R^=o<<7|o>>>25,o=R+k|0,E^=o<<9|o>>>23,o=E+R|0,B^=o<<13|o>>>19,o=B+E|0,k^=o<<18|o>>>14,o=P+T|0,x^=o<<7|o>>>25,o=x+P|0,S^=o<<9|o>>>23,o=S+x|0,T^=o<<13|o>>>19,o=T+S|0,P^=o<<18|o>>>14,o=U+x|0,d^=o<<7|o>>>25,o=d+U|0,E^=o<<9|o>>>23,o=E+d|0,x^=o<<13|o>>>19,o=x+E|0,U^=o<<18|o>>>14,o=m+M|0,B^=o<<7|o>>>25,o=B+m|0,S^=o<<9|o>>>23,o=S+B|0,M^=o<<13|o>>>19,o=M+S|0,m^=o<<18|o>>>14,o=k+Y|0,T^=o<<7|o>>>25,o=T+k|0,K^=o<<9|o>>>23,o=K+T|0,Y^=o<<13|o>>>19,o=Y+K|0,k^=o<<18|o>>>14,o=P+R|0,L^=o<<7|o>>>25,o=L+P|0,z^=o<<9|o>>>23,o=z+L|0,R^=o<<13|o>>>19,o=R+z|0,P^=o<<18|o>>>14;U=U+i|0,d=d+h|0,E=E+a|0,x=x+f|0,M=M+s|0,m=m+u|0,B=B+c|0,S=S+y|0,K=K+l|0,Y=Y+w|0,k=k+v|0,T=T+p|0,L=L+b|0,z=z+g|0,R=R+_|0,P=P+A|0,r[0]=U>>>0&255,r[1]=U>>>8&255,r[2]=U>>>16&255,r[3]=U>>>24&255,r[4]=d>>>0&255,r[5]=d>>>8&255,r[6]=d>>>16&255,r[7]=d>>>24&255,r[8]=E>>>0&255,r[9]=E>>>8&255,r[10]=E>>>16&255,r[11]=E>>>24&255,r[12]=x>>>0&255,r[13]=x>>>8&255,r[14]=x>>>16&255,r[15]=x>>>24&255,r[16]=M>>>0&255,r[17]=M>>>8&255,r[18]=M>>>16&255,r[19]=M>>>24&255,r[20]=m>>>0&255,r[21]=m>>>8&255,r[22]=m>>>16&255,r[23]=m>>>24&255,r[24]=B>>>0&255,r[25]=B>>>8&255,r[26]=B>>>16&255,r[27]=B>>>24&255,r[28]=S>>>0&255,r[29]=S>>>8&255,r[30]=S>>>16&255,r[31]=S>>>24&255,r[32]=K>>>0&255,r[33]=K>>>8&255,r[34]=K>>>16&255,r[35]=K>>>24&255,r[36]=Y>>>0&255,r[37]=Y>>>8&255,r[38]=Y>>>16&255,r[39]=Y>>>24&255,r[40]=k>>>0&255,r[41]=k>>>8&255,r[42]=k>>>16&255,r[43]=k>>>24&255,r[44]=T>>>0&255,r[45]=T>>>8&255,r[46]=T>>>16&255,r[47]=T>>>24&255,r[48]=L>>>0&255,r[49]=L>>>8&255,r[50]=L>>>16&255,r[51]=L>>>24&255,r[52]=z>>>0&255,r[53]=z>>>8&255,r[54]=z>>>16&255,r[55]=z>>>24&255,r[56]=R>>>0&255,r[57]=R>>>8&255,r[58]=R>>>16&255,r[59]=R>>>24&255,r[60]=P>>>0&255,r[61]=P>>>8&255,r[62]=P>>>16&255,r[63]=P>>>24&255}function h(r,t,n,e){for(var o,i=255&e[0]|(255&e[1])<<8|(255&e[2])<<16|(255&e[3])<<24,h=255&n[0]|(255&n[1])<<8|(255&n[2])<<16|(255&n[3])<<24,a=255&n[4]|(255&n[5])<<8|(255&n[6])<<16|(255&n[7])<<24,f=255&n[8]|(255&n[9])<<8|(255&n[10])<<16|(255&n[11])<<24,s=255&n[12]|(255&n[13])<<8|(255&n[14])<<16|(255&n[15])<<24,u=255&e[4]|(255&e[5])<<8|(255&e[6])<<16|(255&e[7])<<24,c=255&t[0]|(255&t[1])<<8|(255&t[2])<<16|(255&t[3])<<24,y=255&t[4]|(255&t[5])<<8|(255&t[6])<<16|(255&t[7])<<24,l=255&t[8]|(255&t[9])<<8|(255&t[10])<<16|(255&t[11])<<24,w=255&t[12]|(255&t[13])<<8|(255&t[14])<<16|(255&t[15])<<24,v=255&e[8]|(255&e[9])<<8|(255&e[10])<<16|(255&e[11])<<24,p=255&n[16]|(255&n[17])<<8|(255&n[18])<<16|(255&n[19])<<24,b=255&n[20]|(255&n[21])<<8|(255&n[22])<<16|(255&n[23])<<24,g=255&n[24]|(255&n[25])<<8|(255&n[26])<<16|(255&n[27])<<24,_=255&n[28]|(255&n[29])<<8|(255&n[30])<<16|(255&n[31])<<24,A=255&e[12]|(255&e[13])<<8|(255&e[14])<<16|(255&e[15])<<24,U=i,d=h,E=a,x=f,M=s,m=u,B=c,S=y,K=l,Y=w,k=v,T=p,L=b,z=g,R=_,P=A,N=0;N<20;N+=2)o=U+L|0,M^=o<<7|o>>>25,o=M+U|0,K^=o<<9|o>>>23,o=K+M|0,L^=o<<13|o>>>19,o=L+K|0,U^=o<<18|o>>>14,o=m+d|0,Y^=o<<7|o>>>25,o=Y+m|0,z^=o<<9|o>>>23,o=z+Y|0,d^=o<<13|o>>>19,o=d+z|0,m^=o<<18|o>>>14,o=k+B|0,R^=o<<7|o>>>25,o=R+k|0,E^=o<<9|o>>>23,o=E+R|0,B^=o<<13|o>>>19,o=B+E|0,k^=o<<18|o>>>14,o=P+T|0,x^=o<<7|o>>>25,o=x+P|0,S^=o<<9|o>>>23,o=S+x|0,T^=o<<13|o>>>19,o=T+S|0,P^=o<<18|o>>>14,o=U+x|0,d^=o<<7|o>>>25,o=d+U|0,E^=o<<9|o>>>23,o=E+d|0,x^=o<<13|o>>>19,o=x+E|0,U^=o<<18|o>>>14,o=m+M|0,B^=o<<7|o>>>25,o=B+m|0,S^=o<<9|o>>>23,o=S+B|0,M^=o<<13|o>>>19,o=M+S|0,m^=o<<18|o>>>14,o=k+Y|0,T^=o<<7|o>>>25,o=T+k|0,K^=o<<9|o>>>23,o=K+T|0,Y^=o<<13|o>>>19,o=Y+K|0,k^=o<<18|o>>>14,o=P+R|0,L^=o<<7|o>>>25,o=L+P|0,z^=o<<9|o>>>23,o=z+L|0,R^=o<<13|o>>>19,o=R+z|0,P^=o<<18|o>>>14;r[0]=U>>>0&255,r[1]=U>>>8&255,r[2]=U>>>16&255,r[3]=U>>>24&255,r[4]=m>>>0&255,r[5]=m>>>8&255,r[6]=m>>>16&255,r[7]=m>>>24&255,r[8]=k>>>0&255,r[9]=k>>>8&255,r[10]=k>>>16&255,r[11]=k>>>24&255,r[12]=P>>>0&255,r[13]=P>>>8&255,r[14]=P>>>16&255,r[15]=P>>>24&255,r[16]=B>>>0&255,r[17]=B>>>8&255,r[18]=B>>>16&255,r[19]=B>>>24&255,r[20]=S>>>0&255,r[21]=S>>>8&255,r[22]=S>>>16&255,r[23]=S>>>24&255,r[24]=K>>>0&255,r[25]=K>>>8&255,r[26]=K>>>16&255,r[27]=K>>>24&255,r[28]=Y>>>0&255,r[29]=Y>>>8&255,r[30]=Y>>>16&255,r[31]=Y>>>24&255}function a(r,t,n,e){i(r,t,n,e)}function f(r,t,n,e){h(r,t,n,e)}function s(r,t,n,e,o,i,h){var f,s,u=new Uint8Array(16),c=new Uint8Array(64);for(s=0;s<16;s++)u[s]=0;for(s=0;s<8;s++)u[s]=i[s];for(;o>=64;){for(a(c,u,h,cr),s=0;s<64;s++)r[t+s]=n[e+s]^c[s];for(f=1,s=8;s<16;s++)f=f+(255&u[s])|0,u[s]=255&f,f>>>=8;o-=64,t+=64,e+=64}if(o>0)for(a(c,u,h,cr),s=0;s<o;s++)r[t+s]=n[e+s]^c[s];return 0}function u(r,t,n,e,o){var i,h,f=new Uint8Array(16),s=new Uint8Array(64);for(h=0;h<16;h++)f[h]=0;for(h=0;h<8;h++)f[h]=e[h];for(;n>=64;){for(a(s,f,o,cr),h=0;h<64;h++)r[t+h]=s[h];for(i=1,h=8;h<16;h++)i=i+(255&f[h])|0,f[h]=255&i,i>>>=8;n-=64,t+=64}if(n>0)for(a(s,f,o,cr),h=0;h<n;h++)r[t+h]=s[h];return 0}function c(r,t,n,e,o){var i=new Uint8Array(32);f(i,e,o,cr);for(var h=new Uint8Array(8),a=0;a<8;a++)h[a]=e[a+16];return u(r,t,n,h,i)}function y(r,t,n,e,o,i,h){var a=new Uint8Array(32);f(a,i,h,cr);for(var u=new Uint8Array(8),c=0;c<8;c++)u[c]=i[c+16];return s(r,t,n,e,o,u,a)}function l(r,t,n,e,o,i){var h=new yr(i);return h.update(n,e,o),h.finish(r,t),0}function w(r,t,n,o,i,h){var a=new Uint8Array(16);return l(a,0,n,o,i,h),e(r,t,a,0)}function v(r,t,n,e,o){var i;if(n<32)return-1;for(y(r,0,t,0,n,e,o),l(r,16,r,32,n-32,r),i=0;i<16;i++)r[i]=0;return 0}function p(r,t,n,e,o){var i,h=new Uint8Array(32);if(n<32)return-1;if(c(h,0,32,e,o),0!==w(t,16,t,32,n-32,h))return-1;for(y(r,0,t,0,n,e,o),i=0;i<32;i++)r[i]=0;return 0}function b(r,t){var n;for(n=0;n<16;n++)r[n]=0|t[n]}function g(r){var t,n,e=1;for(t=0;t<16;t++)n=r[t]+e+65535,e=Math.floor(n/65536),r[t]=n-65536*e;r[0]+=e-1+37*(e-1)}function _(r,t,n){for(var e,o=~(n-1),i=0;i<16;i++)e=o&(r[i]^t[i]),r[i]^=e,t[i]^=e}function A(r,t){var n,e,o,i=$(),h=$();for(n=0;n<16;n++)h[n]=t[n];for(g(h),g(h),g(h),e=0;e<2;e++){for(i[0]=h[0]-65517,n=1;n<15;n++)i[n]=h[n]-65535-(i[n-1]>>16&1),i[n-1]&=65535;i[15]=h[15]-32767-(i[14]>>16&1),o=i[15]>>16&1,i[14]&=65535,_(h,i,1-o)}for(n=0;n<16;n++)r[2*n]=255&h[n],r[2*n+1]=h[n]>>8}function U(r,t){var n=new Uint8Array(32),e=new Uint8Array(32);return A(n,r),A(e,t),o(n,0,e,0)}function d(r){var t=new Uint8Array(32);return A(t,r),1&t[0]}function E(r,t){var n;for(n=0;n<16;n++)r[n]=t[2*n]+(t[2*n+1]<<8);r[15]&=32767}function x(r,t,n){for(var e=0;e<16;e++)r[e]=t[e]+n[e]}function M(r,t,n){for(var e=0;e<16;e++)r[e]=t[e]-n[e]}function m(r,t,n){var e,o,i=0,h=0,a=0,f=0,s=0,u=0,c=0,y=0,l=0,w=0,v=0,p=0,b=0,g=0,_=0,A=0,U=0,d=0,E=0,x=0,M=0,m=0,B=0,S=0,K=0,Y=0,k=0,T=0,L=0,z=0,R=0,P=n[0],N=n[1],O=n[2],C=n[3],F=n[4],I=n[5],G=n[6],Z=n[7],q=n[8],V=n[9],X=n[10],D=n[11],j=n[12],H=n[13],J=n[14],Q=n[15];e=t[0],i+=e*P,h+=e*N,a+=e*O,f+=e*C,s+=e*F,u+=e*I,c+=e*G,y+=e*Z,l+=e*q,w+=e*V,v+=e*X,p+=e*D,b+=e*j,g+=e*H,_+=e*J,A+=e*Q,e=t[1],h+=e*P,a+=e*N,f+=e*O,s+=e*C,u+=e*F,c+=e*I,y+=e*G,l+=e*Z,w+=e*q,v+=e*V,p+=e*X,b+=e*D,g+=e*j,_+=e*H,A+=e*J,U+=e*Q,e=t[2],a+=e*P,f+=e*N,s+=e*O,u+=e*C,c+=e*F,y+=e*I,l+=e*G,w+=e*Z,v+=e*q,p+=e*V,b+=e*X,g+=e*D,_+=e*j,A+=e*H,U+=e*J,d+=e*Q,e=t[3],f+=e*P,s+=e*N,u+=e*O,c+=e*C,y+=e*F,l+=e*I,w+=e*G,v+=e*Z,p+=e*q,b+=e*V,g+=e*X,_+=e*D,A+=e*j,U+=e*H,d+=e*J,E+=e*Q,e=t[4],s+=e*P,u+=e*N,c+=e*O,y+=e*C,l+=e*F,w+=e*I,v+=e*G,p+=e*Z,b+=e*q,g+=e*V,_+=e*X,A+=e*D,U+=e*j,d+=e*H,E+=e*J,x+=e*Q,e=t[5],u+=e*P,c+=e*N,y+=e*O,l+=e*C,w+=e*F,v+=e*I,p+=e*G,b+=e*Z,g+=e*q,_+=e*V,A+=e*X,U+=e*D,d+=e*j,E+=e*H,x+=e*J,M+=e*Q,e=t[6],c+=e*P,y+=e*N,l+=e*O,w+=e*C,v+=e*F,p+=e*I,b+=e*G,g+=e*Z,_+=e*q,A+=e*V,U+=e*X,d+=e*D,E+=e*j,x+=e*H,M+=e*J,m+=e*Q,e=t[7],y+=e*P,l+=e*N,w+=e*O,v+=e*C,p+=e*F,b+=e*I,g+=e*G,_+=e*Z,A+=e*q,U+=e*V,d+=e*X,E+=e*D,x+=e*j,M+=e*H,m+=e*J,B+=e*Q,e=t[8],l+=e*P,w+=e*N,v+=e*O,p+=e*C,b+=e*F,g+=e*I,_+=e*G,A+=e*Z,U+=e*q,d+=e*V,E+=e*X,x+=e*D,M+=e*j,m+=e*H,B+=e*J,S+=e*Q,e=t[9],w+=e*P,v+=e*N,p+=e*O,b+=e*C,g+=e*F,_+=e*I,A+=e*G,U+=e*Z,d+=e*q,E+=e*V,x+=e*X,M+=e*D,m+=e*j,B+=e*H,S+=e*J,K+=e*Q,e=t[10],v+=e*P,p+=e*N,b+=e*O,g+=e*C,_+=e*F,A+=e*I,U+=e*G,d+=e*Z,E+=e*q,x+=e*V,M+=e*X,m+=e*D,B+=e*j,S+=e*H,K+=e*J,Y+=e*Q,e=t[11],p+=e*P,b+=e*N,g+=e*O,_+=e*C,A+=e*F,U+=e*I,d+=e*G,E+=e*Z,x+=e*q,M+=e*V,m+=e*X,B+=e*D;S+=e*j,K+=e*H,Y+=e*J,k+=e*Q,e=t[12],b+=e*P,g+=e*N,_+=e*O,A+=e*C,U+=e*F,d+=e*I,E+=e*G,x+=e*Z,M+=e*q,m+=e*V,B+=e*X,S+=e*D,K+=e*j,Y+=e*H,k+=e*J,T+=e*Q,e=t[13],g+=e*P,_+=e*N,A+=e*O,U+=e*C,d+=e*F,E+=e*I,x+=e*G,M+=e*Z,m+=e*q,B+=e*V,S+=e*X,K+=e*D,Y+=e*j,k+=e*H,T+=e*J,L+=e*Q,e=t[14],_+=e*P,A+=e*N,U+=e*O,d+=e*C,E+=e*F,x+=e*I,M+=e*G,m+=e*Z,B+=e*q,S+=e*V,K+=e*X,Y+=e*D,k+=e*j,T+=e*H,L+=e*J,z+=e*Q,e=t[15],A+=e*P,U+=e*N,d+=e*O,E+=e*C,x+=e*F,M+=e*I,m+=e*G,B+=e*Z,S+=e*q,K+=e*V,Y+=e*X,k+=e*D,T+=e*j,L+=e*H,z+=e*J,R+=e*Q,i+=38*U,h+=38*d,a+=38*E,f+=38*x,s+=38*M,u+=38*m,c+=38*B,y+=38*S,l+=38*K,w+=38*Y,v+=38*k,p+=38*T,b+=38*L,g+=38*z,_+=38*R,o=1,e=i+o+65535,o=Math.floor(e/65536),i=e-65536*o,e=h+o+65535,o=Math.floor(e/65536),h=e-65536*o,e=a+o+65535,o=Math.floor(e/65536),a=e-65536*o,e=f+o+65535,o=Math.floor(e/65536),f=e-65536*o,e=s+o+65535,o=Math.floor(e/65536),s=e-65536*o,e=u+o+65535,o=Math.floor(e/65536),u=e-65536*o,e=c+o+65535,o=Math.floor(e/65536),c=e-65536*o,e=y+o+65535,o=Math.floor(e/65536),y=e-65536*o,e=l+o+65535,o=Math.floor(e/65536),l=e-65536*o,e=w+o+65535,o=Math.floor(e/65536),w=e-65536*o,e=v+o+65535,o=Math.floor(e/65536),v=e-65536*o,e=p+o+65535,o=Math.floor(e/65536),p=e-65536*o,e=b+o+65535,o=Math.floor(e/65536),b=e-65536*o,e=g+o+65535,o=Math.floor(e/65536),g=e-65536*o,e=_+o+65535,o=Math.floor(e/65536),_=e-65536*o,e=A+o+65535,o=Math.floor(e/65536),A=e-65536*o,i+=o-1+37*(o-1),o=1,e=i+o+65535,o=Math.floor(e/65536),i=e-65536*o,e=h+o+65535,o=Math.floor(e/65536),h=e-65536*o,e=a+o+65535,o=Math.floor(e/65536),a=e-65536*o,e=f+o+65535,o=Math.floor(e/65536),f=e-65536*o,e=s+o+65535,o=Math.floor(e/65536),s=e-65536*o,e=u+o+65535,o=Math.floor(e/65536),u=e-65536*o,e=c+o+65535,o=Math.floor(e/65536),c=e-65536*o,e=y+o+65535,o=Math.floor(e/65536),y=e-65536*o,e=l+o+65535,o=Math.floor(e/65536),l=e-65536*o,e=w+o+65535,o=Math.floor(e/65536),w=e-65536*o,e=v+o+65535,o=Math.floor(e/65536),v=e-65536*o,e=p+o+65535,o=Math.floor(e/65536),p=e-65536*o,e=b+o+65535,o=Math.floor(e/65536),b=e-65536*o,e=g+o+65535,o=Math.floor(e/65536),g=e-65536*o,e=_+o+65535,o=Math.floor(e/65536),_=e-65536*o,e=A+o+65535,o=Math.floor(e/65536),A=e-65536*o,i+=o-1+37*(o-1),r[0]=i,r[1]=h,r[2]=a,r[3]=f,r[4]=s,r[5]=u,r[6]=c,r[7]=y,r[8]=l,r[9]=w,r[10]=v,r[11]=p,r[12]=b;r[13]=g,r[14]=_,r[15]=A}function B(r,t){m(r,t,t)}function S(r,t){var n,e=$();for(n=0;n<16;n++)e[n]=t[n];for(n=253;n>=0;n--)B(e,e),2!==n&&4!==n&&m(e,e,t);for(n=0;n<16;n++)r[n]=e[n]}function K(r,t){var n,e=$();for(n=0;n<16;n++)e[n]=t[n];for(n=250;n>=0;n--)B(e,e),1!==n&&m(e,e,t);for(n=0;n<16;n++)r[n]=e[n]}function Y(r,t,n){var e,o,i=new Uint8Array(32),h=new Float64Array(80),a=$(),f=$(),s=$(),u=$(),c=$(),y=$();for(o=0;o<31;o++)i[o]=t[o];for(i[31]=127&t[31]|64,i[0]&=248,E(h,n),o=0;o<16;o++)f[o]=h[o],u[o]=a[o]=s[o]=0;for(a[0]=u[0]=1,o=254;o>=0;--o)e=i[o>>>3]>>>(7&o)&1,_(a,f,e),_(s,u,e),x(c,a,s),M(a,a,s),x(s,f,u),M(f,f,u),B(u,c),B(y,a),m(a,s,a),m(s,f,c),x(c,a,s),M(a,a,s),B(f,a),M(s,u,y),m(a,s,ir),x(a,a,u),m(s,s,a),m(a,u,y),m(u,f,h),B(f,c),_(a,f,e),_(s,u,e);for(o=0;o<16;o++)h[o+16]=a[o],h[o+32]=s[o],h[o+48]=f[o],h[o+64]=u[o];var l=h.subarray(32),w=h.subarray(16);return S(l,l),m(w,w,l),A(r,w),0}function k(r,t){return Y(r,t,nr)}function T(r,t){return rr(t,32),k(r,t)}function L(r,t,n){var e=new Uint8Array(32);return Y(e,n,t),f(r,tr,e,cr)}function z(r,t,n,e,o,i){var h=new Uint8Array(32);return L(h,o,i),lr(r,t,n,e,h)}function R(r,t,n,e,o,i){var h=new Uint8Array(32);return L(h,o,i),wr(r,t,n,e,h)}function P(r,t,n,e){for(var o,i,h,a,f,s,u,c,y,l,w,v,p,b,g,_,A,U,d,E,x,M,m,B,S,K,Y=new Int32Array(16),k=new Int32Array(16),T=r[0],L=r[1],z=r[2],R=r[3],P=r[4],N=r[5],O=r[6],C=r[7],F=t[0],I=t[1],G=t[2],Z=t[3],q=t[4],V=t[5],X=t[6],D=t[7],j=0;e>=128;){for(d=0;d<16;d++)E=8*d+j,Y[d]=n[E+0]<<24|n[E+1]<<16|n[E+2]<<8|n[E+3],k[d]=n[E+4]<<24|n[E+5]<<16|n[E+6]<<8|n[E+7];for(d=0;d<80;d++)if(o=T,i=L,h=z,a=R,f=P,s=N,u=O,c=C,y=F,l=I,w=G,v=Z,p=q,b=V,g=X,_=D,x=C,M=D,m=65535&M,B=M>>>16,S=65535&x,K=x>>>16,x=(P>>>14|q<<18)^(P>>>18|q<<14)^(q>>>9|P<<23),M=(q>>>14|P<<18)^(q>>>18|P<<14)^(P>>>9|q<<23),m+=65535&M,B+=M>>>16,S+=65535&x,K+=x>>>16,x=P&N^~P&O,M=q&V^~q&X,m+=65535&M,B+=M>>>16,S+=65535&x,K+=x>>>16,x=vr[2*d],M=vr[2*d+1],m+=65535&M,B+=M>>>16,S+=65535&x,K+=x>>>16,x=Y[d%16],M=k[d%16],m+=65535&M,B+=M>>>16,S+=65535&x,K+=x>>>16,B+=m>>>16,S+=B>>>16,K+=S>>>16,A=65535&S|K<<16,U=65535&m|B<<16,x=A,M=U,m=65535&M,B=M>>>16,S=65535&x,K=x>>>16,x=(T>>>28|F<<4)^(F>>>2|T<<30)^(F>>>7|T<<25),M=(F>>>28|T<<4)^(T>>>2|F<<30)^(T>>>7|F<<25),m+=65535&M,B+=M>>>16,S+=65535&x,K+=x>>>16,x=T&L^T&z^L&z,M=F&I^F&G^I&G,m+=65535&M,B+=M>>>16,S+=65535&x,K+=x>>>16,B+=m>>>16,S+=B>>>16,K+=S>>>16,c=65535&S|K<<16,_=65535&m|B<<16,x=a,M=v,m=65535&M,B=M>>>16,S=65535&x,K=x>>>16,x=A,M=U,m+=65535&M,B+=M>>>16,S+=65535&x,K+=x>>>16,B+=m>>>16,S+=B>>>16,K+=S>>>16,a=65535&S|K<<16,v=65535&m|B<<16,L=o,z=i,R=h,P=a,N=f,O=s,C=u,T=c,I=y,G=l,Z=w,q=v,V=p,X=b,D=g,F=_,d%16==15)for(E=0;E<16;E++)x=Y[E],M=k[E],m=65535&M,B=M>>>16,S=65535&x,K=x>>>16,x=Y[(E+9)%16],M=k[(E+9)%16],m+=65535&M,B+=M>>>16,S+=65535&x,K+=x>>>16,A=Y[(E+1)%16],U=k[(E+1)%16],x=(A>>>1|U<<31)^(A>>>8|U<<24)^A>>>7,M=(U>>>1|A<<31)^(U>>>8|A<<24)^(U>>>7|A<<25),m+=65535&M,B+=M>>>16,S+=65535&x,K+=x>>>16,A=Y[(E+14)%16],U=k[(E+14)%16],x=(A>>>19|U<<13)^(U>>>29|A<<3)^A>>>6,M=(U>>>19|A<<13)^(A>>>29|U<<3)^(U>>>6|A<<26),m+=65535&M,B+=M>>>16,S+=65535&x,K+=x>>>16,B+=m>>>16,S+=B>>>16,K+=S>>>16,Y[E]=65535&S|K<<16,k[E]=65535&m|B<<16;x=T,M=F,m=65535&M,B=M>>>16,S=65535&x,K=x>>>16,x=r[0],M=t[0],m+=65535&M,B+=M>>>16,S+=65535&x,K+=x>>>16,B+=m>>>16,S+=B>>>16,K+=S>>>16,r[0]=T=65535&S|K<<16,t[0]=F=65535&m|B<<16,x=L,M=I,m=65535&M,B=M>>>16,S=65535&x,K=x>>>16,x=r[1],M=t[1],m+=65535&M,B+=M>>>16,S+=65535&x,K+=x>>>16,B+=m>>>16,S+=B>>>16,K+=S>>>16,r[1]=L=65535&S|K<<16,t[1]=I=65535&m|B<<16,x=z,M=G,m=65535&M,B=M>>>16,S=65535&x,K=x>>>16,x=r[2],M=t[2],m+=65535&M,B+=M>>>16,S+=65535&x,K+=x>>>16,B+=m>>>16,S+=B>>>16,K+=S>>>16,r[2]=z=65535&S|K<<16,t[2]=G=65535&m|B<<16,x=R,M=Z,m=65535&M,B=M>>>16,S=65535&x,K=x>>>16,x=r[3],M=t[3],m+=65535&M,B+=M>>>16,S+=65535&x,K+=x>>>16,B+=m>>>16,S+=B>>>16,K+=S>>>16,r[3]=R=65535&S|K<<16,t[3]=Z=65535&m|B<<16,x=P,M=q,m=65535&M,B=M>>>16,S=65535&x,K=x>>>16,x=r[4],M=t[4],m+=65535&M,B+=M>>>16,S+=65535&x,K+=x>>>16,B+=m>>>16,S+=B>>>16,K+=S>>>16,r[4]=P=65535&S|K<<16,t[4]=q=65535&m|B<<16,x=N,M=V,m=65535&M,B=M>>>16,S=65535&x,K=x>>>16,x=r[5],M=t[5],m+=65535&M,B+=M>>>16,S+=65535&x,K+=x>>>16,B+=m>>>16,S+=B>>>16,K+=S>>>16,r[5]=N=65535&S|K<<16,t[5]=V=65535&m|B<<16,x=O,M=X,m=65535&M,B=M>>>16,S=65535&x,K=x>>>16,x=r[6],M=t[6],m+=65535&M,B+=M>>>16,S+=65535&x,K+=x>>>16,B+=m>>>16,S+=B>>>16,K+=S>>>16,r[6]=O=65535&S|K<<16,t[6]=X=65535&m|B<<16,x=C,M=D,m=65535&M,B=M>>>16,S=65535&x,K=x>>>16,x=r[7],M=t[7],m+=65535&M,B+=M>>>16,S+=65535&x,K+=x>>>16,B+=m>>>16,S+=B>>>16,K+=S>>>16,r[7]=C=65535&S|K<<16,t[7]=D=65535&m|B<<16,j+=128,e-=128}return e}function N(r,n,e){var o,i=new Int32Array(8),h=new Int32Array(8),a=new Uint8Array(256),f=e;for(i[0]=1779033703,i[1]=3144134277,i[2]=1013904242,i[3]=2773480762,i[4]=1359893119,i[5]=2600822924,i[6]=528734635,i[7]=1541459225,h[0]=4089235720,h[1]=2227873595,h[2]=4271175723,h[3]=1595750129,h[4]=2917565137,h[5]=725511199,h[6]=4215389547,h[7]=327033209,P(i,h,n,e),e%=128,o=0;o<e;o++)a[o]=n[f-e+o];for(a[e]=128,e=256-128*(e<112?1:0),a[e-9]=0,t(a,e-8,f/536870912|0,f<<3),P(i,h,a,e),o=0;o<8;o++)t(r,8*o,i[o],h[o]);return 0}function O(r,t){var n=$(),e=$(),o=$(),i=$(),h=$(),a=$(),f=$(),s=$(),u=$();M(n,r[1],r[0]),M(u,t[1],t[0]),m(n,n,u),x(e,r[0],r[1]),x(u,t[0],t[1]),m(e,e,u),m(o,r[3],t[3]),m(o,o,ar),m(i,r[2],t[2]),x(i,i,i),M(h,e,n),M(a,i,o),x(f,i,o),x(s,e,n),m(r[0],h,a),m(r[1],s,f),m(r[2],f,a),m(r[3],h,s)}function C(r,t,n){var e;for(e=0;e<4;e++)_(r[e],t[e],n)}function F(r,t){var n=$(),e=$(),o=$();S(o,t[2]),m(n,t[0],o),m(e,t[1],o),A(r,e),r[31]^=d(n)<<7}function I(r,t,n){var e,o;for(b(r[0],er),b(r[1],or),b(r[2],or),b(r[3],er),o=255;o>=0;--o)e=n[o/8|0]>>(7&o)&1,C(r,t,e),O(t,r),O(r,r),C(r,t,e)}function G(r,t){var n=[$(),$(),$(),$()];b(n[0],fr),b(n[1],sr),b(n[2],or),m(n[3],fr,sr),I(r,n,t)}function Z(r,t,n){var e,o=new Uint8Array(64),i=[$(),$(),$(),$()];for(n||rr(t,32),N(o,t,32),o[0]&=248,o[31]&=127,o[31]|=64,G(i,o),F(r,i),e=0;e<32;e++)t[e+32]=r[e];return 0}function q(r,t){var n,e,o,i;for(e=63;e>=32;--e){for(n=0,o=e-32,i=e-12;o<i;++o)t[o]+=n-16*t[e]*pr[o-(e-32)],n=t[o]+128>>8,t[o]-=256*n;t[o]+=n,t[e]=0}for(n=0,o=0;o<32;o++)t[o]+=n-(t[31]>>4)*pr[o],n=t[o]>>8,t[o]&=255;for(o=0;o<32;o++)t[o]-=n*pr[o];for(e=0;e<32;e++)t[e+1]+=t[e]>>8,r[e]=255&t[e]}function V(r){var t,n=new Float64Array(64);for(t=0;t<64;t++)n[t]=r[t];for(t=0;t<64;t++)r[t]=0;q(r,n)}function X(r,t,n,e){var o,i,h=new Uint8Array(64),a=new Uint8Array(64),f=new Uint8Array(64),s=new Float64Array(64),u=[$(),$(),$(),$()];N(h,e,32),h[0]&=248,h[31]&=127,h[31]|=64;var c=n+64;for(o=0;o<n;o++)r[64+o]=t[o];for(o=0;o<32;o++)r[32+o]=h[32+o];for(N(f,r.subarray(32),n+32),V(f),G(u,f),F(r,u),o=32;o<64;o++)r[o]=e[o];for(N(a,r,n+64),V(a),o=0;o<64;o++)s[o]=0;for(o=0;o<32;o++)s[o]=f[o];for(o=0;o<32;o++)for(i=0;i<32;i++)s[o+i]+=a[o]*h[i];return q(r.subarray(32),s),c}function D(r,t){var n=$(),e=$(),o=$(),i=$(),h=$(),a=$(),f=$();return b(r[2],or),E(r[1],t),B(o,r[1]),m(i,o,hr),M(o,o,r[2]),x(i,r[2],i),B(h,i),B(a,h),m(f,a,h),m(n,f,o),m(n,n,i),K(n,n),m(n,n,o),m(n,n,i),m(n,n,i),m(r[0],n,i),B(e,r[0]),m(e,e,i),U(e,o)&&m(r[0],r[0],ur),B(e,r[0]),m(e,e,i),U(e,o)?-1:(d(r[0])===t[31]>>7&&M(r[0],er,r[0]),m(r[3],r[0],r[1]),0)}function j(r,t,n,e){var i,h=new Uint8Array(32),a=new Uint8Array(64),f=[$(),$(),$(),$()],s=[$(),$(),$(),$()];if(-1,n<64)return-1;if(D(s,e))return-1;for(i=0;i<n;i++)r[i]=t[i];for(i=0;i<32;i++)r[i+32]=e[i];if(N(a,r,n),V(a),I(f,s,a),G(s,t.subarray(32)),O(f,s),F(h,f),n-=64,o(t,0,h,0)){for(i=0;i<n;i++)r[i]=0;return-1}for(i=0;i<n;i++)r[i]=t[i+64];return n}function H(r,t){if(r.length!==br)throw new Error("bad key size");if(t.length!==gr)throw new Error("bad nonce size")}function J(r,t){if(r.length!==_r)throw new Error("bad public key size");if(t.length!==Ar)throw new Error("bad secret key size")}function Q(){for(var r=0;r<arguments.length;r++)if(!(arguments[r]instanceof Uint8Array))throw new TypeError("unexpected type, use Uint8Array")}function W(r){for(var t=0;t<r.length;t++)r[t]=0}var $=function(r){var t,n=new Float64Array(16);if(r)for(t=0;t<r.length;t++)n[t]=r[t];return n},rr=function(){throw new Error("no PRNG")},tr=new Uint8Array(16),nr=new Uint8Array(32);nr[0]=9;var er=$(),or=$([1]),ir=$([56129,1]),hr=$([30883,4953,19914,30187,55467,16705,2637,112,59544,30585,16505,36039,65139,11119,27886,20995]),ar=$([61785,9906,39828,60374,45398,33411,5274,224,53552,61171,33010,6542,64743,22239,55772,9222]),fr=$([54554,36645,11616,51542,42930,38181,51040,26924,56412,64982,57905,49316,21502,52590,14035,8553]),sr=$([26200,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214]),ur=$([41136,18958,6951,50414,58488,44335,6150,12099,55207,15867,153,11085,57099,20417,9344,11139]),cr=new Uint8Array([101,120,112,97,110,100,32,51,50,45,98,121,116,101,32,107]),yr=function(r){this.buffer=new Uint8Array(16),this.r=new Uint16Array(10),this.h=new Uint16Array(10),this.pad=new Uint16Array(8),this.leftover=0,this.fin=0;var t,n,e,o,i,h,a,f;t=255&r[0]|(255&r[1])<<8,this.r[0]=8191&t,n=255&r[2]|(255&r[3])<<8,this.r[1]=8191&(t>>>13|n<<3),e=255&r[4]|(255&r[5])<<8,this.r[2]=7939&(n>>>10|e<<6),o=255&r[6]|(255&r[7])<<8,this.r[3]=8191&(e>>>7|o<<9),i=255&r[8]|(255&r[9])<<8,this.r[4]=255&(o>>>4|i<<12),this.r[5]=i>>>1&8190,h=255&r[10]|(255&r[11])<<8,this.r[6]=8191&(i>>>14|h<<2),a=255&r[12]|(255&r[13])<<8,this.r[7]=8065&(h>>>11|a<<5),f=255&r[14]|(255&r[15])<<8,this.r[8]=8191&(a>>>8|f<<8),this.r[9]=f>>>5&127,this.pad[0]=255&r[16]|(255&r[17])<<8,this.pad[1]=255&r[18]|(255&r[19])<<8,this.pad[2]=255&r[20]|(255&r[21])<<8,this.pad[3]=255&r[22]|(255&r[23])<<8,this.pad[4]=255&r[24]|(255&r[25])<<8,this.pad[5]=255&r[26]|(255&r[27])<<8,this.pad[6]=255&r[28]|(255&r[29])<<8,this.pad[7]=255&r[30]|(255&r[31])<<8};yr.prototype.blocks=function(r,t,n){for(var e,o,i,h,a,f,s,u,c,y,l,w,v,p,b,g,_,A,U,d=this.fin?0:2048,E=this.h[0],x=this.h[1],M=this.h[2],m=this.h[3],B=this.h[4],S=this.h[5],K=this.h[6],Y=this.h[7],k=this.h[8],T=this.h[9],L=this.r[0],z=this.r[1],R=this.r[2],P=this.r[3],N=this.r[4],O=this.r[5],C=this.r[6],F=this.r[7],I=this.r[8],G=this.r[9];n>=16;)e=255&r[t+0]|(255&r[t+1])<<8,E+=8191&e,o=255&r[t+2]|(255&r[t+3])<<8,x+=8191&(e>>>13|o<<3),i=255&r[t+4]|(255&r[t+5])<<8,M+=8191&(o>>>10|i<<6),h=255&r[t+6]|(255&r[t+7])<<8,m+=8191&(i>>>7|h<<9),a=255&r[t+8]|(255&r[t+9])<<8,B+=8191&(h>>>4|a<<12),S+=a>>>1&8191,f=255&r[t+10]|(255&r[t+11])<<8,K+=8191&(a>>>14|f<<2),s=255&r[t+12]|(255&r[t+13])<<8,Y+=8191&(f>>>11|s<<5),u=255&r[t+14]|(255&r[t+15])<<8,k+=8191&(s>>>8|u<<8),T+=u>>>5|d,c=0,y=c,y+=E*L,y+=x*(5*G),y+=M*(5*I),y+=m*(5*F),y+=B*(5*C),c=y>>>13,y&=8191,y+=S*(5*O),y+=K*(5*N),y+=Y*(5*P),y+=k*(5*R),y+=T*(5*z),c+=y>>>13,y&=8191,l=c,l+=E*z,l+=x*L,l+=M*(5*G),l+=m*(5*I),l+=B*(5*F),c=l>>>13,l&=8191,l+=S*(5*C),l+=K*(5*O),l+=Y*(5*N),l+=k*(5*P),l+=T*(5*R),c+=l>>>13,l&=8191,w=c,w+=E*R,w+=x*z,w+=M*L,w+=m*(5*G),w+=B*(5*I),c=w>>>13,w&=8191,w+=S*(5*F),w+=K*(5*C),w+=Y*(5*O),w+=k*(5*N),w+=T*(5*P),c+=w>>>13,w&=8191,v=c,v+=E*P,v+=x*R,v+=M*z,v+=m*L,v+=B*(5*G),c=v>>>13,v&=8191,v+=S*(5*I),v+=K*(5*F),v+=Y*(5*C),v+=k*(5*O),v+=T*(5*N),c+=v>>>13,v&=8191,p=c,p+=E*N,p+=x*P,p+=M*R,p+=m*z,p+=B*L,c=p>>>13,p&=8191,p+=S*(5*G),p+=K*(5*I),p+=Y*(5*F),p+=k*(5*C),p+=T*(5*O),c+=p>>>13,p&=8191,b=c,b+=E*O,b+=x*N,b+=M*P,b+=m*R,b+=B*z,c=b>>>13,b&=8191,b+=S*L,b+=K*(5*G),b+=Y*(5*I),b+=k*(5*F),b+=T*(5*C),c+=b>>>13,b&=8191,g=c,g+=E*C,g+=x*O,g+=M*N,g+=m*P,g+=B*R,c=g>>>13,g&=8191,g+=S*z,g+=K*L,g+=Y*(5*G),g+=k*(5*I),g+=T*(5*F),c+=g>>>13,g&=8191,_=c,_+=E*F,_+=x*C,_+=M*O,_+=m*N,_+=B*P,c=_>>>13,_&=8191,_+=S*R,_+=K*z,_+=Y*L,_+=k*(5*G),_+=T*(5*I),c+=_>>>13,_&=8191,A=c,A+=E*I,A+=x*F,A+=M*C,A+=m*O,A+=B*N,c=A>>>13,A&=8191,A+=S*P,A+=K*R,A+=Y*z,A+=k*L,A+=T*(5*G),c+=A>>>13,A&=8191,U=c,U+=E*G,U+=x*I,U+=M*F,U+=m*C,U+=B*O,c=U>>>13,U&=8191,U+=S*N,U+=K*P,U+=Y*R,U+=k*z,U+=T*L,c+=U>>>13,U&=8191,c=(c<<2)+c|0,c=c+y|0,y=8191&c,c>>>=13,l+=c,E=y,x=l,M=w,m=v,B=p,S=b,K=g,Y=_,k=A,T=U,t+=16,n-=16;this.h[0]=E,this.h[1]=x,this.h[2]=M,this.h[3]=m,this.h[4]=B,this.h[5]=S,this.h[6]=K,this.h[7]=Y,this.h[8]=k,this.h[9]=T},yr.prototype.finish=function(r,t){var n,e,o,i,h=new Uint16Array(10);if(this.leftover){for(i=this.leftover,this.buffer[i++]=1;i<16;i++)this.buffer[i]=0;this.fin=1,this.blocks(this.buffer,0,16)}for(n=this.h[1]>>>13,this.h[1]&=8191,i=2;i<10;i++)this.h[i]+=n,n=this.h[i]>>>13,this.h[i]&=8191;for(this.h[0]+=5*n,n=this.h[0]>>>13,this.h[0]&=8191,this.h[1]+=n,n=this.h[1]>>>13,this.h[1]&=8191,this.h[2]+=n,h[0]=this.h[0]+5,n=h[0]>>>13,h[0]&=8191,i=1;i<10;i++)h[i]=this.h[i]+n,n=h[i]>>>13,h[i]&=8191;for(h[9]-=8192,e=(1^n)-1,i=0;i<10;i++)h[i]&=e;for(e=~e,i=0;i<10;i++)this.h[i]=this.h[i]&e|h[i];for(this.h[0]=65535&(this.h[0]|this.h[1]<<13),this.h[1]=65535&(this.h[1]>>>3|this.h[2]<<10),this.h[2]=65535&(this.h[2]>>>6|this.h[3]<<7),this.h[3]=65535&(this.h[3]>>>9|this.h[4]<<4),this.h[4]=65535&(this.h[4]>>>12|this.h[5]<<1|this.h[6]<<14),this.h[5]=65535&(this.h[6]>>>2|this.h[7]<<11),this.h[6]=65535&(this.h[7]>>>5|this.h[8]<<8),this.h[7]=65535&(this.h[8]>>>8|this.h[9]<<5),o=this.h[0]+this.pad[0],this.h[0]=65535&o,i=1;i<8;i++)o=(this.h[i]+this.pad[i]|0)+(o>>>16)|0,this.h[i]=65535&o;r[t+0]=this.h[0]>>>0&255,r[t+1]=this.h[0]>>>8&255,r[t+2]=this.h[1]>>>0&255,r[t+3]=this.h[1]>>>8&255,r[t+4]=this.h[2]>>>0&255,r[t+5]=this.h[2]>>>8&255,r[t+6]=this.h[3]>>>0&255,r[t+7]=this.h[3]>>>8&255,r[t+8]=this.h[4]>>>0&255,r[t+9]=this.h[4]>>>8&255,r[t+10]=this.h[5]>>>0&255,r[t+11]=this.h[5]>>>8&255,r[t+12]=this.h[6]>>>0&255,r[t+13]=this.h[6]>>>8&255,r[t+14]=this.h[7]>>>0&255,r[t+15]=this.h[7]>>>8&255},yr.prototype.update=function(r,t,n){var e,o;if(this.leftover){for(o=16-this.leftover,o>n&&(o=n),e=0;e<o;e++)this.buffer[this.leftover+e]=r[t+e];if(n-=o,t+=o,this.leftover+=o,this.leftover<16)return;this.blocks(this.buffer,0,16),this.leftover=0}if(n>=16&&(o=n-n%16,this.blocks(r,t,o),t+=o,n-=o),n){for(e=0;e<n;e++)this.buffer[this.leftover+e]=r[t+e];this.leftover+=n}};var lr=v,wr=p,vr=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591],pr=new Float64Array([237,211,245,92,26,99,18,88,214,156,247,162,222,249,222,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16]),br=32,gr=24,_r=32,Ar=32,Ur=gr;r.lowlevel={crypto_core_hsalsa20:f,crypto_stream_xor:y,crypto_stream:c,crypto_stream_salsa20_xor:s,crypto_stream_salsa20:u,crypto_onetimeauth:l,crypto_onetimeauth_verify:w,crypto_verify_16:e,crypto_verify_32:o,crypto_secretbox:v,crypto_secretbox_open:p,crypto_scalarmult:Y,crypto_scalarmult_base:k,crypto_box_beforenm:L,crypto_box_afternm:lr,crypto_box:z,crypto_box_open:R,crypto_box_keypair:T,crypto_hash:N,crypto_sign:X,crypto_sign_keypair:Z,crypto_sign_open:j,crypto_secretbox_KEYBYTES:br,crypto_secretbox_NONCEBYTES:gr,crypto_secretbox_ZEROBYTES:32,crypto_secretbox_BOXZEROBYTES:16,crypto_scalarmult_BYTES:32,crypto_scalarmult_SCALARBYTES:32,crypto_box_PUBLICKEYBYTES:_r,crypto_box_SECRETKEYBYTES:Ar,crypto_box_BEFORENMBYTES:32,crypto_box_NONCEBYTES:Ur,crypto_box_ZEROBYTES:32,crypto_box_BOXZEROBYTES:16,crypto_sign_BYTES:64,crypto_sign_PUBLICKEYBYTES:32,crypto_sign_SECRETKEYBYTES:64,crypto_sign_SEEDBYTES:32,crypto_hash_BYTES:64},r.randomBytes=function(r){var t=new Uint8Array(r);return rr(t,r),t},r.secretbox=function(r,t,n){Q(r,t,n),H(n,t);for(var e=new Uint8Array(32+r.length),o=new Uint8Array(e.length),i=0;i<r.length;i++)e[i+32]=r[i];return v(o,e,e.length,t,n),o.subarray(16)},r.secretbox.open=function(r,t,n){Q(r,t,n),H(n,t);for(var e=new Uint8Array(16+r.length),o=new Uint8Array(e.length),i=0;i<r.length;i++)e[i+16]=r[i];return e.length<32?null:0!==p(o,e,e.length,t,n)?null:o.subarray(32)},r.secretbox.keyLength=br,r.secretbox.nonceLength=gr,r.secretbox.overheadLength=16,r.scalarMult=function(r,t){if(Q(r,t),32!==r.length)throw new Error("bad n size");if(32!==t.length)throw new Error("bad p size");var n=new Uint8Array(32);return Y(n,r,t),n},r.scalarMult.base=function(r){if(Q(r),32!==r.length)throw new Error("bad n size");var t=new Uint8Array(32);return k(t,r),t},r.scalarMult.scalarLength=32,r.scalarMult.groupElementLength=32,r.box=function(t,n,e,o){var i=r.box.before(e,o);return r.secretbox(t,n,i)},r.box.before=function(r,t){Q(r,t),J(r,t);var n=new Uint8Array(32);return L(n,r,t),n},r.box.after=r.secretbox,r.box.open=function(t,n,e,o){var i=r.box.before(e,o);return r.secretbox.open(t,n,i)},r.box.open.after=r.secretbox.open,r.box.keyPair=function(){var r=new Uint8Array(_r),t=new Uint8Array(Ar);return T(r,t),{publicKey:r,secretKey:t}},r.box.keyPair.fromSecretKey=function(r){if(Q(r),r.length!==Ar)throw new Error("bad secret key size");var t=new Uint8Array(_r);return k(t,r),{publicKey:t,secretKey:new Uint8Array(r)}},r.box.publicKeyLength=_r,r.box.secretKeyLength=Ar,r.box.sharedKeyLength=32,r.box.nonceLength=Ur,r.box.overheadLength=r.secretbox.overheadLength,r.sign=function(r,t){if(Q(r,t),64!==t.length)throw new Error("bad secret key size");var n=new Uint8Array(64+r.length);return X(n,r,r.length,t),n},r.sign.open=function(r,t){if(Q(r,t),32!==t.length)throw new Error("bad public key size");var n=new Uint8Array(r.length),e=j(n,r,r.length,t);if(e<0)return null;for(var o=new Uint8Array(e),i=0;i<o.length;i++)o[i]=n[i];return o},r.sign.detached=function(t,n){for(var e=r.sign(t,n),o=new Uint8Array(64),i=0;i<o.length;i++)o[i]=e[i];return o},r.sign.detached.verify=function(r,t,n){if(Q(r,t,n),64!==t.length)throw new Error("bad signature size");if(32!==n.length)throw new Error("bad public key size");var e,o=new Uint8Array(64+r.length),i=new Uint8Array(64+r.length);for(e=0;e<64;e++)o[e]=t[e];for(e=0;e<r.length;e++)o[e+64]=r[e];return j(i,o,o.length,n)>=0},r.sign.keyPair=function(){var r=new Uint8Array(32),t=new Uint8Array(64);return Z(r,t),{publicKey:r,secretKey:t}},r.sign.keyPair.fromSecretKey=function(r){if(Q(r),64!==r.length)throw new Error("bad secret key size");for(var t=new Uint8Array(32),n=0;n<t.length;n++)t[n]=r[32+n];return{publicKey:t,secretKey:new Uint8Array(r)}},r.sign.keyPair.fromSeed=function(r){if(Q(r),32!==r.length)throw new Error("bad seed size");for(var t=new Uint8Array(32),n=new Uint8Array(64),e=0;e<32;e++)n[e]=r[e];return Z(t,n,!0),{publicKey:t,secretKey:n}},r.sign.publicKeyLength=32,r.sign.secretKeyLength=64,r.sign.seedLength=32,r.sign.signatureLength=64,r.hash=function(r){Q(r);var t=new Uint8Array(64);return N(t,r,r.length),t},r.hash.hashLength=64,r.verify=function(r,t){return Q(r,t),0!==r.length&&0!==t.length&&(r.length===t.length&&0===n(r,0,t,0,r.length))},r.setPRNG=function(r){rr=r},function(){var t="undefined"!=typeof self?self.crypto||self.msCrypto:null;if(t&&t.getRandomValues){r.setPRNG(function(r,n){var e,o=new Uint8Array(n);for(e=0;e<n;e+=65536)t.getRandomValues(o.subarray(e,e+Math.min(n-e,65536)));for(e=0;e<n;e++)r[e]=o[e];W(o)})[m
[32m+[m[32m}else"undefined"!=typeof require&&(t=require("crypto"))&&t.randomBytes&&r.setPRNG(function(r,n){var e,o=t.randomBytes(n);for(e=0;e<n;e++)r[e]=o[e];W(o)})}()}("undefined"!=typeof module&&module.exports?module.exports:self.nacl=self.nacl||{});[m
\ No newline at end of file[m
[1mdiff --git a/node_modules/tweetnacl/nacl.d.ts b/node_modules/tweetnacl/nacl.d.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..78c4f78[m
[1m--- /dev/null[m
[1m+++ b/node_modules/tweetnacl/nacl.d.ts[m
[36m@@ -0,0 +1,98 @@[m
[32m+[m[32m// Type definitions for TweetNaCl.js[m
[32m+[m
[32m+[m[32mexport as namespace nacl;[m
[32m+[m
[32m+[m[32mdeclare var nacl: nacl;[m
[32m+[m[32mexport = nacl;[m
[32m+[m
[32m+[m[32mdeclare namespace nacl {[m
[32m+[m[32m    export interface BoxKeyPair {[m
[32m+[m[32m        publicKey: Uint8Array;[m
[32m+[m[32m        secretKey: Uint8Array;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    export interface SignKeyPair {[m
[32m+[m[32m        publicKey: Uint8Array;[m
[32m+[m[32m        secretKey: Uint8Array;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    export interface secretbox {[m
[32m+[m[32m        (msg: Uint8Array, nonce: Uint8Array, key: Uint8Array): Uint8Array;[m
[32m+[m[32m        open(box: Uint8Array, nonce: Uint8Array, key: Uint8Array): Uint8Array | null;[m
[32m+[m[32m        readonly keyLength: number;[m
[32m+[m[32m        readonly nonceLength: number;[m
[32m+[m[32m        readonly overheadLength: number;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    export interface scalarMult {[m
[32m+[m[32m        (n: Uint8Array, p: Uint8Array): Uint8Array;[m
[32m+[m[32m        base(n: Uint8Array): Uint8Array;[m
[32m+[m[32m        readonly scalarLength: number;[m
[32m+[m[32m        readonly groupElementLength: number;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    namespace boxProps {[m
[32m+[m[32m        export interface open {[m
[32m+[m[32m            (msg: Uint8Array, nonce: Uint8Array, publicKey: Uint8Array, secretKey: Uint8Array): Uint8Array | null;[m
[32m+[m[32m            after(box: Uint8Array, nonce: Uint8Array, key: Uint8Array): Uint8Array | null;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        export interface keyPair {[m
[32m+[m[32m            (): BoxKeyPair;[m
[32m+[m[32m            fromSecretKey(secretKey: Uint8Array): BoxKeyPair;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    export interface box {[m
[32m+[m[32m        (msg: Uint8Array, nonce: Uint8Array, publicKey: Uint8Array, secretKey: Uint8Array): Uint8Array;[m
[32m+[m[32m        before(publicKey: Uint8Array, secretKey: Uint8Array): Uint8Array;[m
[32m+[m[32m        after(msg: Uint8Array, nonce: Uint8Array, key: Uint8Array): Uint8Array;[m
[32m+[m[32m        open: boxProps.open;[m
[32m+[m[32m        keyPair: boxProps.keyPair;[m
[32m+[m[32m        readonly publicKeyLength: number;[m
[32m+[m[32m        readonly secretKeyLength: number;[m
[32m+[m[32m        readonly sharedKeyLength: number;[m
[32m+[m[32m        readonly nonceLength: number;[m
[32m+[m[32m        readonly overheadLength: number;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    namespace signProps {[m
[32m+[m[32m        export interface detached {[m
[32m+[m[32m            (msg: Uint8Array, secretKey: Uint8Array): Uint8Array;[m
[32m+[m[32m            verify(msg: Uint8Array, sig: Uint8Array, publicKey: Uint8Array): boolean;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        export interface keyPair {[m
[32m+[m[32m            (): SignKeyPair;[m
[32m+[m[32m            fromSecretKey(secretKey: Uint8Array): SignKeyPair;[m
[32m+[m[32m            fromSeed(secretKey: Uint8Array): SignKeyPair;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    export interface sign {[m
[32m+[m[32m        (msg: Uint8Array, secretKey: Uint8Array): Uint8Array;[m
[32m+[m[32m        open(signedMsg: Uint8Array, publicKey: Uint8Array): Uint8Array | null;[m
[32m+[m[32m        detached: signProps.detached;[m
[32m+[m[32m        keyPair: signProps.keyPair;[m
[32m+[m[32m        readonly publicKeyLength: number;[m
[32m+[m[32m        readonly secretKeyLength: number;[m
[32m+[m[32m        readonly seedLength: number;[m
[32m+[m[32m        readonly signatureLength: number;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    export interface hash {[m
[32m+[m[32m        (msg: Uint8Array): Uint8Array;[m
[32m+[m[32m        readonly hashLength: number;[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mdeclare interface nacl {[m
[32m+[m[32m    randomBytes(n: number): Uint8Array;[m
[32m+[m[32m    secretbox: nacl.secretbox;[m
[32m+[m[32m    scalarMult: nacl.scalarMult;[m
[32m+[m[32m    box: nacl.box;[m
[32m+[m[32m    sign: nacl.sign;[m
[32m+[m[32m    hash: nacl.hash;[m
[32m+[m[32m    verify(x: Uint8Array, y: Uint8Array): boolean;[m
[32m+[m[32m    setPRNG(fn: (x: Uint8Array, n: number) => void): void;[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/tweetnacl/nacl.js b/node_modules/tweetnacl/nacl.js[m
[1mnew file mode 100644[m
[1mindex 0000000..0c1d12f[m
[1m--- /dev/null[m
[1m+++ b/node_modules/tweetnacl/nacl.js[m
[36m@@ -0,0 +1,1164 @@[m
[32m+[m[32m(function(nacl) {[m
[32m+[m[32m'use strict';[m
[32m+[m
[32m+[m[32m// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.[m
[32m+[m[32m// Public domain.[m
[32m+[m[32m//[m
[32m+[m[32m// Implementation derived from TweetNaCl version 20140427.[m
[32m+[m[32m// See for details: http://tweetnacl.cr.yp.to/[m
[32m+[m
[32m+[m[32mvar u64 = function(h, l) { this.hi = h|0 >>> 0; this.lo = l|0 >>> 0; };[m
[32m+[m[32mvar gf = function(init) {[m
[32m+[m[32m  var i, r = new Float64Array(16);[m
[32m+[m[32m  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];[m
[32m+[m[32m  return r;[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m//  Pluggable, initialized in high-level API below.[m
[32m+[m[32mvar randombytes = function(/* x, n */) { throw new Error('no PRNG'); };[m
[32m+[m
[32m+[m[32mvar _0 = new Uint8Array(16);[m
[32m+[m[32mvar _9 = new Uint8Array(32); _9[0] = 9;[m
[32m+[m
[32m+[m[32mvar gf0 = gf(),[m
[32m+[m[32m    gf1 = gf([1]),[m
[32m+[m[32m    _121665 = gf([0xdb41, 1]),[m
[32m+[m[32m    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),[m
[32m+[m[32m    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),[m
[32m+[m[32m    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),[m
[32m+[m[32m    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),[m
[32m+[m[32m    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);[m
[32m+[m
[32m+[m[32mfunction L32(x, c) { return (x << c) | (x >>> (32 - c)); }[m
[32m+[m
[32m+[m[32mfunction ld32(x, i) {[m
[32m+[m[32m  var u = x[i+3] & 0xff;[m
[32m+[m[32m  u = (u<<8)|(x[i+2] & 0xff);[m
[32m+[m[32m  u = (u<<8)|(x[i+1] & 0xff);[m
[32m+[m[32m  return (u<<8)|(x[i+0] & 0xff);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction dl64(x, i) {[m
[32m+[m[32m  var h = (x[i] << 24) | (x[i+1] << 16) | (x[i+2] << 8) | x[i+3];[m
[32m+[m[32m  var l = (x[i+4] << 24) | (x[i+5] << 16) | (x[i+6] << 8) | x[i+7];[m
[32m+[m[32m  return new u64(h, l);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction st32(x, j, u) {[m
[32m+[m[32m  var i;[m
[32m+[m[32m  for (i = 0; i < 4; i++) { x[j+i] = u & 255; u >>>= 8; }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction ts64(x, i, u) {[m
[32m+[m[32m  x[i]   = (u.hi >> 24) & 0xff;[m
[32m+[m[32m  x[i+1] = (u.hi >> 16) & 0xff;[m
[32m+[m[32m  x[i+2] = (u.hi >>  8) & 0xff;[m
[32m+[m[32m  x[i+3] = u.hi & 0xff;[m
[32m+[m[32m  x[i+4] = (u.lo >> 24)  & 0xff;[m
[32m+[m[32m  x[i+5] = (u.lo >> 16)  & 0xff;[m
[32m+[m[32m  x[i+6] = (u.lo >>  8)  & 0xff;[m
[32m+[m[32m  x[i+7] = u.lo & 0xff;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction vn(x, xi, y, yi, n) {[m
[32m+[m[32m  var i,d = 0;[m
[32m+[m[32m  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];[m
[32m+[m[32m  return (1 & ((d - 1) >>> 8)) - 1;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction crypto_verify_16(x, xi, y, yi) {[m
[32m+[m[32m  return vn(x,xi,y,yi,16);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction crypto_verify_32(x, xi, y, yi) {[m
[32m+[m[32m  return vn(x,xi,y,yi,32);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction core(out,inp,k,c,h) {[m
[32m+[m[32m  var w = new Uint32Array(16), x = new Uint32Array(16),[m
[32m+[m[32m      y = new Uint32Array(16), t = new Uint32Array(4);[m
[32m+[m[32m  var i, j, m;[m
[32m+[m
[32m+[m[32m  for (i = 0; i < 4; i++) {[m
[32m+[m[32m    x[5*i] = ld32(c, 4*i);[m
[32m+[m[32m    x[1+i] = ld32(k, 4*i);[m
[32m+[m[32m    x[6+i] = ld32(inp, 4*i);[m
[32m+[m[32m    x[11+i] = ld32(k, 16+4*i);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  for (i = 0; i < 16; i++) y[i] = x[i];[m
[32m+[m
[32m+[m[32m  for (i = 0; i < 20; i++) {[m
[32m+[m[32m    for (j = 0; j < 4; j++) {[m
[32m+[m[32m      for (m = 0; m < 4; m++) t[m] = x[(5*j+4*m)%16];[m
[32m+[m[32m      t[1] ^= L32((t[0]+t[3])|0, 7);[m
[32m+[m[32m      t[2] ^= L32((t[1]+t[0])|0, 9);[m
[32m+[m[32m      t[3] ^= L32((t[2]+t[1])|0,13);[m
[32m+[m[32m      t[0] ^= L32((t[3]+t[2])|0,18);[m
[32m+[m[32m      for (m = 0; m < 4; m++) w[4*j+(j+m)%4] = t[m];[m
[32m+[m[32m    }[m
[32m+[m[32m    for (m = 0; m < 16; m++) x[m] = w[m];[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if (h) {[m
[32m+[m[32m    for (i = 0; i < 16; i++) x[i] = (x[i] + y[i]) | 0;[m
[32m+[m[32m    for (i = 0; i < 4; i++) {[m
[32m+[m[32m      x[5*i] = (x[5*i] - ld32(c, 4*i)) | 0;[m
[32m+[m[32m      x[6+i] = (x[6+i] - ld32(inp, 4*i)) | 0;[m
[32m+[m[32m    }[m
[32m+[m[32m    for (i = 0; i < 4; i++) {[m
[32m+[m[32m      st32(out,4*i,x[5*i]);[m
[32m+[m[32m      st32(out,16+4*i,x[6+i]);[m
[32m+[m[32m    }[m
[32m+[m[32m  } else {[m
[32m+[m[32m    for (i = 0; i < 16; i++) st32(out, 4 * i, (x[i] + y[i]) | 0);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction crypto_core_salsa20(out,inp,k,c) {[m
[32m+[m[32m  core(out,inp,k,c,false);[m
[32m+[m[32m  return 0;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction crypto_core_hsalsa20(out,inp,k,c) {[m
[32m+[m[32m  core(out,inp,k,c,true);[m
[32m+[m[32m  return 0;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mvar sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);[m
[32m+[m[32m            // "expand 32-byte k"[m
[32m+[m
[32m+[m[32mfunction crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {[m
[32m+[m[32m  var z = new Uint8Array(16), x = new Uint8Array(64);[m
[32m+[m[32m  var u, i;[m
[32m+[m[32m  if (!b) return 0;[m
[32m+[m[32m  for (i = 0; i < 16; i++) z[i] = 0;[m
[32m+[m[32m  for (i = 0; i < 8; i++) z[i] = n[i];[m
[32m+[m[32m  while (b >= 64) {[m
[32m+[m[32m    crypto_core_salsa20(x,z,k,sigma);[m
[32m+[m[32m    for (i = 0; i < 64; i++) c[cpos+i] = (m?m[mpos+i]:0) ^ x[i];[m
[32m+[m[32m    u = 1;[m
[32m+[m[32m    for (i = 8; i < 16; i++) {[m
[32m+[m[32m      u = u + (z[i] & 0xff) | 0;[m
[32m+[m[32m      z[i] = u & 0xff;[m
[32m+[m[32m      u >>>= 8;[m
[32m+[m[32m    }[m
[32m+[m[32m    b -= 64;[m
[32m+[m[32m    cpos += 64;[m
[32m+[m[32m    if (m) mpos += 64;[m
[32m+[m[32m  }[m
[32m+[m[32m  if (b > 0) {[m
[32m+[m[32m    crypto_core_salsa20(x,z,k,sigma);[m
[32m+[m[32m    for (i = 0; i < b; i++) c[cpos+i] = (m?m[mpos+i]:0) ^ x[i];[m
[32m+[m[32m  }[m
[32m+[m[32m  return 0;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction crypto_stream_salsa20(c,cpos,d,n,k) {[m
[32m+[m[32m  return crypto_stream_salsa20_xor(c,cpos,null,0,d,n,k);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction crypto_stream(c,cpos,d,n,k) {[m
[32m+[m[32m  var s = new Uint8Array(32);[m
[32m+[m[32m  crypto_core_hsalsa20(s,n,k,sigma);[m
[32m+[m[32m  return crypto_stream_salsa20(c,cpos,d,n.subarray(16),s);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction crypto_stream_xor(c,cpos,m,mpos,d,n,k) {[m
[32m+[m[32m  var s = new Uint8Array(32);[m
[32m+[m[32m  crypto_core_hsalsa20(s,n,k,sigma);[m
[32m+[m[32m  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,n.subarray(16),s);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction add1305(h, c) {[m
[32m+[m[32m  var j, u = 0;[m
[32m+[m[32m  for (j = 0; j < 17; j++) {[m
[32m+[m[32m    u = (u + ((h[j] + c[j]) | 0)) | 0;[m
[32m+[m[32m    h[j] = u & 255;[m
[32m+[m[32m    u >>>= 8;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mvar minusp = new Uint32Array([[m
[32m+[m[32m  5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 252[m
[32m+[m[32m]);[m
[32m+[m
[32m+[m[32mfunction crypto_onetimeauth(out, outpos, m, mpos, n, k) {[m
[32m+[m[32m  var s, i, j, u;[m
[32m+[m[32m  var x = new Uint32Array(17), r = new Uint32Array(17),[m
[32m+[m[32m      h = new Uint32Array(17), c = new Uint32Array(17),[m
[32m+[m[32m      g = new Uint32Array(17);[m
[32m+[m[32m  for (j = 0; j < 17; j++) r[j]=h[j]=0;[m
[32m+[m[32m  for (j = 0; j < 16; j++) r[j]=k[j];[m
[32m+[m[32m  r[3]&=15;[m
[32m+[m[32m  r[4]&=252;[m
[32m+[m[32m  r[7]&=15;[m
[32m+[m[32m  r[8]&=252;[m
[32m+[m[32m  r[11]&=15;[m
[32m+[m[32m  r[12]&=252;[m
[32m+[m[32m  r[15]&=15;[m
[32m+[m
[32m+[m[32m  while (n > 0) {[m
[32m+[m[32m    for (j = 0; j < 17; j++) c[j] = 0;[m
[32m+[m[32m    for (j = 0; (j < 16) && (j < n); ++j) c[j] = m[mpos+j];[m
[32m+[m[32m    c[j] = 1;[m
[32m+[m[32m    mpos += j; n -= j;[m
[32m+[m[32m    add1305(h,c);[m
[32m+[m[32m    for (i = 0; i < 17; i++) {[m
[32m+[m[32m      x[i] = 0;[m
[32m+[m[32m      for (j = 0; j < 17; j++) x[i] = (x[i] + (h[j] * ((j <= i) ? r[i - j] : ((320 * r[i + 17 - j])|0))) | 0) | 0;[m
[32m+[m[32m    }[m
[32m+[m[32m    for (i = 0; i < 17; i++) h[i] = x[i];[m
[32m+[m[32m    u = 0;[m
[32m+[m[32m    for (j = 0; j < 16; j++) {[m
[32m+[m[32m      u = (u + h[j]) | 0;[m
[32m+[m[32m      h[j] = u & 255;[m
[32m+[m[32m      u >>>= 8;[m
[32m+[m[32m    }[m
[32m+[m[32m    u = (u + h[16]) | 0; h[16] = u & 3;[m
[32m+[m[32m    u = (5 * (u >>> 2)) | 0;[m
[32m+[m[32m    for (j = 0; j < 16; j++) {[m
[32m+[m[32m      u = (u + h[j]) | 0;[m
[32m+[m[32m      h[j] = u & 255;[m
[32m+[m[32m      u >>>= 8;[m
[32m+[m[32m    }[m
[32m+[m[32m    u = (u + h[16]) | 0; h[16] = u;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  for (j = 0; j < 17; j++) g[j] = h[j];[m
[32m+[m[32m  add1305(h,minusp);[m
[32m+[m[32m  s = (-(h[16] >>> 7) | 0);[m
[32m+[m[32m  for (j = 0; j < 17; j++) h[j] ^= s & (g[j] ^ h[j]);[m
[32m+[m
[32m+[m[32m  for (j = 0; j < 16; j++) c[j] = k[j + 16];[m
[32m+[m[32m  c[16] = 0;[m
[32m+[m[32m  add1305(h,c);[m
[32m+[m[32m  for (j = 0; j < 16; j++) out[outpos+j] = h[j];[m
[32m+[m[32m  return 0;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {[m
[32m+[m[32m  var x = new Uint8Array(16);[m
[32m+[m[32m  crypto_onetimeauth(x,0,m,mpos,n,k);[m
[32m+[m[32m  return crypto_verify_16(h,hpos,x,0);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction crypto_secretbox(c,m,d,n,k) {[m
[32m+[m[32m  var i;[m
[32m+[m[32m  if (d < 32) return -1;[m
[32m+[m[32m  crypto_stream_xor(c,0,m,0,d,n,k);[m
[32m+[m[32m  crypto_onetimeauth(c, 16, c, 32, d - 32, c);[m
[32m+[m[32m  for (i = 0; i < 16; i++) c[i] = 0;[m
[32m+[m[32m  return 0;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction crypto_secretbox_open(m,c,d,n,k) {[m
[32m+[m[32m  var i;[m
[32m+[m[32m  var x = new Uint8Array(32);[m
[32m+[m[32m  if (d < 32) return -1;[m
[32m+[m[32m  crypto_stream(x,0,32,n,k);[m
[32m+[m[32m  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;[m
[32m+[m[32m  crypto_stream_xor(m,0,c,0,d,n,k);[m
[32m+[m[32m  for (i = 0; i < 32; i++) m[i] = 0;[m
[32m+[m[32m  return 0;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction set25519(r, a) {[m
[32m+[m[32m  var i;[m
[32m+[m[32m  for (i = 0; i < 16; i++) r[i] = a[i]|0;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction car25519(o) {[m
[32m+[m[32m  var c;[m
[32m+[m[32m  var i;[m
[32m+[m[32m  for (i = 0; i < 16; i++) {[m
[32m+[m[32m      o[i] += 65536;[m
[32m+[m[32m      c = Math.floor(o[i] / 65536);[m
[32m+[m[32m      o[(i+1)*(i<15?1:0)] += c - 1 + 37 * (c-1) * (i===15?1:0);[m
[32m+[m[32m      o[i] -= (c * 65536);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction sel25519(p, q, b) {[m
[32m+[m[32m  var t, c = ~(b-1);[m
[32m+[m[32m  for (var i = 0; i < 16; i++) {[m
[32m+[m[32m    t = c & (p[i] ^ q[i]);[m
[32m+[m[32m    p[i] ^= t;[m
[32m+[m[32m    q[i] ^= t;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction pack25519(o, n) {[m
[32m+[m[32m  var i, j, b;[m
[32m+[m[32m  var m = gf(), t = gf();[m
[32m+[m[32m  for (i = 0; i < 16; i++) t[i] = n[i];[m
[32m+[m[32m  car25519(t);[m
[32m+[m[32m  car25519(t);[m
[32m+[m[32m  car25519(t);[m
[32m+[m[32m  for (j = 0; j < 2; j++) {[m
[32m+[m[32m    m[0] = t[0] - 0xffed;[m
[32m+[m[32m    for (i = 1; i < 15; i++) {[m
[32m+[m[32m      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);[m
[32m+[m[32m      m[i-1] &= 0xffff;[m
[32m+[m[32m    }[m
[32m+[m[32m    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);[m
[32m+[m[32m    b = (m[15]>>16) & 1;[m
[32m+[m[32m    m[14] &= 0xffff;[m
[32m+[m[32m    sel25519(t, m, 1-b);[m
[32m+[m[32m  }[m
[32m+[m[32m  for (i = 0; i < 16; i++) {[m
[32m+[m[32m    o[2*i] = t[i] & 0xff;[m
[32m+[m[32m    o[2*i+1] = t[i]>>8;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction neq25519(a, b) {[m
[32m+[m[32m  var c = new Uint8Array(32), d = new Uint8Array(32);[m
[32m+[m[32m  pack25519(c, a);[m
[32m+[m[32m  pack25519(d, b);[m
[32m+[m[32m  return crypto_verify_32(c, 0, d, 0);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction par25519(a) {[m
[32m+[m[32m  var d = new Uint8Array(32);[m
[32m+[m[32m  pack25519(d, a);[m
[32m+[m[32m  return d[0] & 1;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction unpack25519(o, n) {[m
[32m+[m[32m  var i;[m
[32m+[m[32m  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);[m
[32m+[m[32m  o[15] &= 0x7fff;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction A(o, a, b) {[m
[32m+[m[32m  var i;[m
[32m+[m[32m  for (i = 0; i < 16; i++) o[i] = (a[i] + b[i])|0;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction Z(o, a, b) {[m
[32m+[m[32m  var i;[m
[32m+[m[32m  for (i = 0; i < 16; i++) o[i] = (a[i] - b[i])|0;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction M(o, a, b) {[m
[32m+[m[32m  var i, j, t = new Float64Array(31);[m
[32m+[m[32m  for (i = 0; i < 31; i++) t[i] = 0;[m
[32m+[m[32m  for (i = 0; i < 16; i++) {[m
[32m+[m[32m    for (j = 0; j < 16; j++) {[m
[32m+[m[32m      t[i+j] += a[i] * b[j];[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m  for (i = 0; i < 15; i++) {[m
[32m+[m[32m    t[i] += 38 * t[i+16];[m
[32m+[m[32m  }[m
[32m+[m[32m  for (i = 0; i < 16; i++) o[i] = t[i];[m
[32m+[m[32m  car25519(o);[m
[32m+[m[32m  car25519(o);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction S(o, a) {[m
[32m+[m[32m  M(o, a, a);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction inv25519(o, i) {[m
[32m+[m[32m  var c = gf();[m
[32m+[m[32m  var a;[m
[32m+[m[32m  for (a = 0; a < 16; a++) c[a] = i[a];[m
[32m+[m[32m  for (a = 253; a >= 0; a--) {[m
[32m+[m[32m    S(c, c);[m
[32m+[m[32m    if(a !== 2 && a !== 4) M(c, c, i);[m
[32m+[m[32m  }[m
[32m+[m[32m  for (a = 0; a < 16; a++) o[a] = c[a];[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction pow2523(o, i) {[m
[32m+[m[32m  var c = gf();[m
[32m+[m[32m  var a;[m
[32m+[m[32m  for (a = 0; a < 16; a++) c[a] = i[a];[m
[32m+[m[32m  for (a = 250; a >= 0; a--) {[m
[32m+[m[32m      S(c, c);[m
[32m+[m[32m      if(a !== 1) M(c, c, i);[m
[32m+[m[32m  }[m
[32m+[m[32m  for (a = 0; a < 16; a++) o[a] = c[a];[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction crypto_scalarmult(q, n, p) {[m
[32m+[m[32m  var z = new Uint8Array(32);[m
[32m+[m[32m  var x = new Float64Array(80), r, i;[m
[32m+[m[32m  var a = gf(), b = gf(), c = gf(),[m
[32m+[m[32m      d = gf(), e = gf(), f = gf();[m
[32m+[m[32m  for (i = 0; i < 31; i++) z[i] = n[i];[m
[32m+[m[32m  z[31]=(n[31]&127)|64;[m
[32m+[m[32m  z[0]&=248;[m
[32m+[m[32m  unpack25519(x,p);[m
[32m+[m[32m  for (i = 0; i < 16; i++) {[m
[32m+[m[32m    b[i]=x[i];[m
[32m+[m[32m    d[i]=a[i]=c[i]=0;[m
[32m+[m[32m  }[m
[32m+[m[32m  a[0]=d[0]=1;[m
[32m+[m[32m  for (i=254; i>=0; --i) {[m
[32m+[m[32m    r=(z[i>>>3]>>>(i&7))&1;[m
[32m+[m[32m    sel25519(a,b,r);[m
[32m+[m[32m    sel25519(c,d,r);[m
[32m+[m[32m    A(e,a,c);[m
[32m+[m[32m    Z(a,a,c);[m
[32m+[m[32m    A(c,b,d);[m
[32m+[m[32m    Z(b,b,d);[m
[32m+[m[32m    S(d,e);[m
[32m+[m[32m    S(f,a);[m
[32m+[m[32m    M(a,c,a);[m
[32m+[m[32m    M(c,b,e);[m
[32m+[m[32m    A(e,a,c);[m
[32m+[m[32m    Z(a,a,c);[m
[32m+[m[32m    S(b,a);[m
[32m+[m[32m    Z(c,d,f);[m
[32m+[m[32m    M(a,c,_121665);[m
[32m+[m[32m    A(a,a,d);[m
[32m+[m[32m    M(c,c,a);[m
[32m+[m[32m    M(a,d,f);[m
[32m+[m[32m    M(d,b,x);[m
[32m+[m[32m    S(b,e);[m
[32m+[m[32m    sel25519(a,b,r);[m
[32m+[m[32m    sel25519(c,d,r);[m
[32m+[m[32m  }[m
[32m+[m[32m  for (i = 0; i < 16; i++) {[m
[32m+[m[32m    x[i+16]=a[i];[m
[32m+[m[32m    x[i+32]=c[i];[m
[32m+[m[32m    x[i+48]=b[i];[m
[32m+[m[32m    x[i+64]=d[i];[m
[32m+[m[32m  }[m
[32m+[m[32m  var x32 = x.subarray(32);[m
[32m+[m[32m  var x16 = x.subarray(16);[m
[32m+[m[32m  inv25519(x32,x32);[m
[32m+[m[32m  M(x16,x16,x32);[m
[32m+[m[32m  pack25519(q,x16);[m
[32m+[m[32m  return 0;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction crypto_scalarmult_base(q, n) {[m
[32m+[m[32m  return crypto_scalarmult(q, n, _9);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction crypto_box_keypair(y, x) {[m
[32m+[m[32m  randombytes(x, 32);[m
[32m+[m[32m  return crypto_scalarmult_base(y, x);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction crypto_box_beforenm(k, y, x) {[m
[32m+[m[32m  var s = new Uint8Array(32);[m
[32m+[m[32m  crypto_scalarmult(s, x, y);[m
[32m+[m[32m  return crypto_core_hsalsa20(k, _0, s, sigma);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mvar crypto_box_afternm = crypto_secretbox;[m
[32m+[m[32mvar crypto_box_open_afternm = crypto_secretbox_open;[m
[32m+[m
[32m+[m[32mfunction crypto_box(c, m, d, n, y, x) {[m
[32m+[m[32m  var k = new Uint8Array(32);[m
[32m+[m[32m  crypto_box_beforenm(k, y, x);[m
[32m+[m[32m  return crypto_box_afternm(c, m, d, n, k);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction crypto_box_open(m, c, d, n, y, x) {[m
[32m+[m[32m  var k = new Uint8Array(32);[m
[32m+[m[32m  crypto_box_beforenm(k, y, x);[m
[32m+[m[32m  return crypto_box_open_afternm(m, c, d, n, k);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction add64() {[m
[32m+[m[32m  var a = 0, b = 0, c = 0, d = 0, m16 = 65535, l, h, i;[m
[32m+[m[32m  for (i = 0; i < arguments.length; i++) {[m
[32m+[m[32m    l = arguments[i].lo;[m
[32m+[m[32m    h = arguments[i].hi;[m
[32m+[m[32m    a += (l & m16); b += (l >>> 16);[m
[32m+[m[32m    c += (h & m16); d += (h >>> 16);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  b += (a >>> 16);[m
[32m+[m[32m  c += (b >>> 16);[m
[32m+[m[32m  d += (c >>> 16);[m
[32m+[m
[32m+[m[32m  return new u64((c & m16) | (d << 16), (a & m16) | (b << 16));[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction shr64(x, c) {[m
[32m+[m[32m  return new u64((x.hi >>> c), (x.lo >>> c) | (x.hi << (32 - c)));[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction xor64() {[m
[32m+[m[32m  var l = 0, h = 0, i;[m
[32m+[m[32m  for (i = 0; i < arguments.length; i++) {[m
[32m+[m[32m    l ^= arguments[i].lo;[m
[32m+[m[32m    h ^= arguments[i].hi;[m
[32m+[m[32m  }[m
[32m+[m[32m  return new u64(h, l);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction R(x, c) {[m
[32m+[m[32m  var h, l, c1 = 32 - c;[m
[32m+[m[32m  if (c < 32) {[m
[32m+[m[32m    h = (x.hi >>> c) | (x.lo << c1);[m
[32m+[m[32m    l = (x.lo >>> c) | (x.hi << c1);[m
[32m+[m[32m  } else if (c < 64) {[m
[32m+[m[32m    h = (x.lo >>> c) | (x.hi << c1);[m
[32m+[m[32m    l = (x.hi >>> c) | (x.lo << c1);[m
[32m+[m[32m  }[m
[32m+[m[32m  return new u64(h, l);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction Ch(x, y, z) {[m
[32m+[m[32m  var h = (x.hi & y.hi) ^ (~x.hi & z.hi),[m
[32m+[m[32m      l = (x.lo & y.lo) ^ (~x.lo & z.lo);[m
[32m+[m[32m  return new u64(h, l);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction Maj(x, y, z) {[m
[32m+[m[32m  var h = (x.hi & y.hi) ^ (x.hi & z.hi) ^ (y.hi & z.hi),[m
[32m+[m[32m      l = (x.lo & y.lo) ^ (x.lo & z.lo) ^ (y.lo & z.lo);[m
[32m+[m[32m  return new u64(h, l);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction Sigma0(x) { return xor64(R(x,28), R(x,34), R(x,39)); }[m
[32m+[m[32mfunction Sigma1(x) { return xor64(R(x,14), R(x,18), R(x,41)); }[m
[32m+[m[32mfunction sigma0(x) { return xor64(R(x, 1), R(x, 8), shr64(x,7)); }[m
[32m+[m[32mfunction sigma1(x) { return xor64(R(x,19), R(x,61), shr64(x,6)); }[m
[32m+[m
[32m+[m[32mvar K = [[m
[32m+[m[32m  new u64(0x428a2f98, 0xd728ae22), new u64(0x71374491, 0x23ef65cd),[m
[32m+[m[32m  new u64(0xb5c0fbcf, 0xec4d3b2f), new u64(0xe9b5dba5, 0x8189dbbc),[m
[32m+[m[32m  new u64(0x3956c25b, 0xf348b538), new u64(0x59f111f1, 0xb605d019),[m
[32m+[m[32m  new u64(0x923f82a4, 0xaf194f9b), new u64(0xab1c5ed5, 0xda6d8118),[m
[32m+[m[32m  new u64(0xd807aa98, 0xa3030242), new u64(0x12835b01, 0x45706fbe),[m
[32m+[m[32m  new u64(0x243185be, 0x4ee4b28c), new u64(0x550c7dc3, 0xd5ffb4e2),[m
[32m+[m[32m  new u64(0x72be5d74, 0xf27b896f), new u64(0x80deb1fe, 0x3b1696b1),[m
[32m+[m[32m  new u64(0x9bdc06a7, 0x25c71235), new u64(0xc19bf174, 0xcf692694),[m
[32m+[m[32m  new u64(0xe49b69c1, 0x9ef14ad2), new u64(0xefbe4786, 0x384f25e3),[m
[32m+[m[32m  new u64(0x0fc19dc6, 0x8b8cd5b5), new u64(0x240ca1cc, 0x77ac9c65),[m
[32m+[m[32m  new u64(0x2de92c6f, 0x592b0275), new u64(0x4a7484aa, 0x6ea6e483),[m
[32m+[m[32m  new u64(0x5cb0a9dc, 0xbd41fbd4), new u64(0x76f988da, 0x831153b5),[m
[32m+[m[32m  new u64(0x983e5152, 0xee66dfab), new u64(0xa831c66d, 0x2db43210),[m
[32m+[m[32m  new u64(0xb00327c8, 0x98fb213f), new u64(0xbf597fc7, 0xbeef0ee4),[m
[32m+[m[32m  new u64(0xc6e00bf3, 0x3da88fc2), new u64(0xd5a79147, 0x930aa725),[m
[32m+[m[32m  new u64(0x06ca6351, 0xe003826f), new u64(0x14292967, 0x0a0e6e70),[m
[32m+[m[32m  new u64(0x27b70a85, 0x46d22ffc), new u64(0x2e1b2138, 0x5c26c926),[m
[32m+[m[32m  new u64(0x4d2c6dfc, 0x5ac42aed), new u64(0x53380d13, 0x9d95b3df),[m
[32m+[m[32m  new u64(0x650a7354, 0x8baf63de), new u64(0x766a0abb, 0x3c77b2a8),[m
[32m+[m[32m  new u64(0x81c2c92e, 0x47edaee6), new u64(0x92722c85, 0x1482353b),[m
[32m+[m[32m  new u64(0xa2bfe8a1, 0x4cf10364), new u64(0xa81a664b, 0xbc423001),[m
[32m+[m[32m  new u64(0xc24b8b70, 0xd0f89791), new u64(0xc76c51a3, 0x0654be30),[m
[32m+[m[32m  new u64(0xd192e819, 0xd6ef5218), new u64(0xd6990624, 0x5565a910),[m
[32m+[m[32m  new u64(0xf40e3585, 0x5771202a), new u64(0x106aa070, 0x32bbd1b8),[m
[32m+[m[32m  new u64(0x19a4c116, 0xb8d2d0c8), new u64(0x1e376c08, 0x5141ab53),[m
[32m+[m[32m  new u64(0x2748774c, 0xdf8eeb99), new u64(0x34b0bcb5, 0xe19b48a8),[m
[32m+[m[32m  new u64(0x391c0cb3, 0xc5c95a63), new u64(0x4ed8aa4a, 0xe3418acb),[m
[32m+[m[32m  new u64(0x5b9cca4f, 0x7763e373), new u64(0x682e6ff3, 0xd6b2b8a3),[m
[32m+[m[32m  new u64(0x748f82ee, 0x5defb2fc), new u64(0x78a5636f, 0x43172f60),[m
[32m+[m[32m  new u64(0x84c87814, 0xa1f0ab72), new u64(0x8cc70208, 0x1a6439ec),[m
[32m+[m[32m  new u64(0x90befffa, 0x23631e28), new u64(0xa4506ceb, 0xde82bde9),[m
[32m+[m[32m  new u64(0xbef9a3f7, 0xb2c67915), new u64(0xc67178f2, 0xe372532b),[m
[32m+[m[32m  new u64(0xca273ece, 0xea26619c), new u64(0xd186b8c7, 0x21c0c207),[m
[32m+[m[32m  new u64(0xeada7dd6, 0xcde0eb1e), new u64(0xf57d4f7f, 0xee6ed178),[m
[32m+[m[32m  new u64(0x06f067aa, 0x72176fba), new u64(0x0a637dc5, 0xa2c898a6),[m
[32m+[m[32m  new u64(0x113f9804, 0xbef90dae), new u64(0x1b710b35, 0x131c471b),[m
[32m+[m[32m  new u64(0x28db77f5, 0x23047d84), new u64(0x32caab7b, 0x40c72493),[m
[32m+[m[32m  new u64(0x3c9ebe0a, 0x15c9bebc), new u64(0x431d67c4, 0x9c100d4c),[m
[32m+[m[32m  new u64(0x4cc5d4be, 0xcb3e42b6), new u64(0x597f299c, 0xfc657e2a),[m
[32m+[m[32m  new u64(0x5fcb6fab, 0x3ad6faec), new u64(0x6c44198c, 0x4a475817)[m
[32m+[m[32m];[m
[32m+[m
[32m+[m[32mfunction crypto_hashblocks(x, m, n) {[m
[32m+[m[32m  var z = [], b = [], a = [], w = [], t, i, j;[m
[32m+[m
[32m+[m[32m  for (i = 0; i < 8; i++) z[i] = a[i] = dl64(x, 8*i);[m
[32m+[m
[32m+[m[32m  var pos = 0;[m
[32m+[m[32m  while (n >= 128) {[m
[32m+[m[32m    for (i = 0; i < 16; i++) w[i] = dl64(m, 8*i+pos);[m
[32m+[m[32m    for (i = 0; i < 80; i++) {[m
[32m+[m[32m      for (j = 0; j < 8; j++) b[j] = a[j];[m
[32m+[m[32m      t = add64(a[7], Sigma1(a[4]), Ch(a[4], a[5], a[6]), K[i], w[i%16]);[m
[32m+[m[32m      b[7] = add64(t, Sigma0(a[0]), Maj(a[0], a[1], a[2]));[m
[32m+[m[32m      b[3] = add64(b[3], t);[m
[32m+[m[32m      for (j = 0; j < 8; j++) a[(j+1)%8] = b[j];[m
[32m+[m[32m      if (i%16 === 15) {[m
[32m+[m[32m        for (j = 0; j < 16; j++) {[m
[32m+[m[32m          w[j] = add64(w[j], w[(j+9)%16], sigma0(w[(j+1)%16]), sigma1(w[(j+14)%16]));[m
[32m+[m[32m        }[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    for (i = 0; i < 8; i++) {[m
[32m+[m[32m      a[i] = add64(a[i], z[i]);[m
[32m+[m[32m      z[i] = a[i];[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    pos += 128;[m
[32m+[m[32m    n -= 128;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  for (i = 0; i < 8; i++) ts64(x, 8*i, z[i]);[m
[32m+[m[32m  return n;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mvar iv = new Uint8Array([[m
[32m+[m[32m  0x6a,0x09,0xe6,0x67,0xf3,0xbc,0xc9,0x08,[m
[32m+[m[32m  0xbb,0x67,0xae,0x85,0x84,0xca,0xa7,0x3b,[m
[32m+[m[32m  0x3c,0x6e,0xf3,0x72,0xfe,0x94,0xf8,0x2b,[m
[32m+[m[32m  0xa5,0x4f,0xf5,0x3a,0x5f,0x1d,0x36,0xf1,[m
[32m+[m[32m  0x51,0x0e,0x52,0x7f,0xad,0xe6,0x82,0xd1,[m
[32m+[m[32m  0x9b,0x05,0x68,0x8c,0x2b,0x3e,0x6c,0x1f,[m
[32m+[m[32m  0x1f,0x83,0xd9,0xab,0xfb,0x41,0xbd,0x6b,[m
[32m+[m[32m  0x5b,0xe0,0xcd,0x19,0x13,0x7e,0x21,0x79[m
[32m+[m[32m]);[m
[32m+[m
[32m+[m[32mfunction crypto_hash(out, m, n) {[m
[32m+[m[32m  var h = new Uint8Array(64), x = new Uint8Array(256);[m
[32m+[m[32m  var i, b = n;[m
[32m+[m
[32m+[m[32m  for (i = 0; i < 64; i++) h[i] = iv[i];[m
[32m+[m
[32m+[m[32m  crypto_hashblocks(h, m, n);[m
[32m+[m[32m  n %= 128;[m
[32m+[m
[32m+[m[32m  for (i = 0; i < 256; i++) x[i] = 0;[m
[32m+[m[32m  for (i = 0; i < n; i++) x[i] = m[b-n+i];[m
[32m+[m[32m  x[n] = 128;[m
[32m+[m
[32m+[m[32m  n = 256-128*(n<112?1:0);[m
[32m+[m[32m  x[n-9] = 0;[m
[32m+[m[32m  ts64(x, n-8, new u64((b / 0x20000000) | 0, b << 3));[m
[32m+[m[32m  crypto_hashblocks(h, x, n);[m
[32m+[m
[32m+[m[32m  for (i = 0; i < 64; i++) out[i] = h[i];[m
[32m+[m
[32m+[m[32m  return 0;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction add(p, q) {[m
[32m+[m[32m  var a = gf(), b = gf(), c = gf(),[m
[32m+[m[32m      d = gf(), e = gf(), f = gf(),[m
[32m+[m[32m      g = gf(), h = gf(), t = gf();[m
[32m+[m
[32m+[m[32m  Z(a, p[1], p[0]);[m
[32m+[m[32m  Z(t, q[1], q[0]);[m
[32m+[m[32m  M(a, a, t);[m
[32m+[m[32m  A(b, p[0], p[1]);[m
[32m+[m[32m  A(t, q[0], q[1]);[m
[32m+[m[32m  M(b, b, t);[m
[32m+[m[32m  M(c, p[3], q[3]);[m
[32m+[m[32m  M(c, c, D2);[m
[32m+[m[32m  M(d, p[2], q[2]);[m
[32m+[m[32m  A(d, d, d);[m
[32m+[m[32m  Z(e, b, a);[m
[32m+[m[32m  Z(f, d, c);[m
[32m+[m[32m  A(g, d, c);[m
[32m+[m[32m  A(h, b, a);[m
[32m+[m
[32m+[m[32m  M(p[0], e, f);[m
[32m+[m[32m  M(p[1], h, g);[m
[32m+[m[32m  M(p[2], g, f);[m
[32m+[m[32m  M(p[3], e, h);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction cswap(p, q, b) {[m
[32m+[m[32m  var i;[m
[32m+[m[32m  for (i = 0; i < 4; i++) {[m
[32m+[m[32m    sel25519(p[i], q[i], b);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction pack(r, p) {[m
[32m+[m[32m  var tx = gf(), ty = gf(), zi = gf();[m
[32m+[m[32m  inv25519(zi, p[2]);[m
[32m+[m[32m  M(tx, p[0], zi);[m
[32m+[m[32m  M(ty, p[1], zi);[m
[32m+[m[32m  pack25519(r, ty);[m
[32m+[m[32m  r[31] ^= par25519(tx) << 7;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction scalarmult(p, q, s) {[m
[32m+[m[32m  var b, i;[m
[32m+[m[32m  set25519(p[0], gf0);[m
[32m+[m[32m  set25519(p[1], gf1);[m
[32m+[m[32m  set25519(p[2], gf1);[m
[32m+[m[32m  set25519(p[3], gf0);[m
[32m+[m[32m  for (i = 255; i >= 0; --i) {[m
[32m+[m[32m    b = (s[(i/8)|0] >> (i&7)) & 1;[m
[32m+[m[32m    cswap(p, q, b);[m
[32m+[m[32m    add(q, p);[m
[32m+[m[32m    add(p, p);[m
[32m+[m[32m    cswap(p, q, b);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction scalarbase(p, s) {[m
[32m+[m[32m  var q = [gf(), gf(), gf(), gf()];[m
[32m+[m[32m  set25519(q[0], X);[m
[32m+[m[32m  set25519(q[1], Y);[m
[32m+[m[32m  set25519(q[2], gf1);[m
[32m+[m[32m  M(q[3], X, Y);[m
[32m+[m[32m  scalarmult(p, q, s);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction crypto_sign_keypair(pk, sk, seeded) {[m
[32m+[m[32m  var d = new Uint8Array(64);[m
[32m+[m[32m  var p = [gf(), gf(), gf(), gf()];[m
[32m+[m[32m  var i;[m
[32m+[m
[32m+[m[32m  if (!seeded) randombytes(sk, 32);[m
[32m+[m[32m  crypto_hash(d, sk, 32);[m
[32m+[m[32m  d[0] &= 248;[m
[32m+[m[32m  d[31] &= 127;[m
[32m+[m[32m  d[31] |= 64;[m
[32m+[m
[32m+[m[32m  scalarbase(p, d);[m
[32m+[m[32m  pack(pk, p);[m
[32m+[m
[32m+[m[32m  for (i = 0; i < 32; i++) sk[i+32] = pk[i];[m
[32m+[m[32m  return 0;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mvar L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);[m
[32m+[m
[32m+[m[32mfunction modL(r, x) {[m
[32m+[m[32m  var carry, i, j, k;[m
[32m+[m[32m  for (i = 63; i >= 32; --i) {[m
[32m+[m[32m    carry = 0;[m
[32m+[m[32m    for (j = i - 32, k = i - 12; j < k; ++j) {[m
[32m+[m[32m      x[j] += carry - 16 * x[i] * L[j - (i - 32)];[m
[32m+[m[32m      carry = (x[j] + 128) >> 8;[m
[32m+[m[32m      x[j] -= carry * 256;[m
[32m+[m[32m    }[m
[32m+[m[32m    x[j] += carry;[m
[32m+[m[32m    x[i] = 0;[m
[32m+[m[32m  }[m
[32m+[m[32m  carry = 0;[m
[32m+[m[32m  for (j = 0; j < 32; j++) {[m
[32m+[m[32m    x[j] += carry - (x[31] >> 4) * L[j];[m
[32m+[m[32m    carry = x[j] >> 8;[m
[32m+[m[32m    x[j] &= 255;[m
[32m+[m[32m  }[m
[32m+[m[32m  for (j = 0; j < 32; j++) x[j] -= carry * L[j];[m
[32m+[m[32m  for (i = 0; i < 32; i++) {[m
[32m+[m[32m    x[i+1] += x[i] >> 8;[m
[32m+[m[32m    r[i] = x[i] & 255;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction reduce(r) {[m
[32m+[m[32m  var x = new Float64Array(64), i;[m
[32m+[m[32m  for (i = 0; i < 64; i++) x[i] = r[i];[m
[32m+[m[32m  for (i = 0; i < 64; i++) r[i] = 0;[m
[32m+[m[32m  modL(r, x);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m// Note: difference from C - smlen returned, not passed as argument.[m
[32m+[m[32mfunction crypto_sign(sm, m, n, sk) {[m
[32m+[m[32m  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);[m
[32m+[m[32m  var i, j, x = new Float64Array(64);[m
[32m+[m[32m  var p = [gf(), gf(), gf(), gf()];[m
[32m+[m
[32m+[m[32m  crypto_hash(d, sk, 32);[m
[32m+[m[32m  d[0] &= 248;[m
[32m+[m[32m  d[31] &= 127;[m
[32m+[m[32m  d[31] |= 64;[m
[32m+[m
[32m+[m[32m  var smlen = n + 64;[m
[32m+[m[32m  for (i = 0; i < n; i++) sm[64 + i] = m[i];[m
[32m+[m[32m  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];[m
[32m+[m
[32m+[m[32m  crypto_hash(r, sm.subarray(32), n+32);[m
[32m+[m[32m  reduce(r);[m
[32m+[m[32m  scalarbase(p, r);[m
[32m+[m[32m  pack(sm, p);[m
[32m+[m
[32m+[m[32m  for (i = 32; i < 64; i++) sm[i] = sk[i];[m
[32m+[m[32m  crypto_hash(h, sm, n + 64);[m
[32m+[m[32m  reduce(h);[m
[32m+[m
[32m+[m[32m  for (i = 0; i < 64; i++) x[i] = 0;[m
[32m+[m[32m  for (i = 0; i < 32; i++) x[i] = r[i];[m
[32m+[m[32m  for (i = 0; i < 32; i++) {[m
[32m+[m[32m    for (j = 0; j < 32; j++) {[m
[32m+[m[32m      x[i+j] += h[i] * d[j];[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  modL(sm.subarray(32), x);[m
[32m+[m[32m  return smlen;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction unpackneg(r, p) {[m
[32m+[m[32m  var t = gf(), chk = gf(), num = gf(),[m
[32m+[m[32m      den = gf(), den2 = gf(), den4 = gf(),[m
[32m+[m[32m      den6 = gf();[m
[32m+[m
[32m+[m[32m  set25519(r[2], gf1);[m
[32m+[m[32m  unpack25519(r[1], p);[m
[32m+[m[32m  S(num, r[1]);[m
[32m+[m[32m  M(den, num, D);[m
[32m+[m[32m  Z(num, num, r[2]);[m
[32m+[m[32m  A(den, r[2], den);[m
[32m+[m
[32m+[m[32m  S(den2, den);[m
[32m+[m[32m  S(den4, den2);[m
[32m+[m[32m  M(den6, den4, den2);[m
[32m+[m[32m  M(t, den6, num);[m
[32m+[m[32m  M(t, t, den);[m
[32m+[m
[32m+[m[32m  pow2523(t, t);[m
[32m+[m[32m  M(t, t, num);[m
[32m+[m[32m  M(t, t, den);[m
[32m+[m[32m  M(t, t, den);[m
[32m+[m[32m  M(r[0], t, den);[m
[32m+[m
[32m+[m[32m  S(chk, r[0]);[m
[32m+[m[32m  M(chk, chk, den);[m
[32m+[m[32m  if (neq25519(chk, num)) M(r[0], r[0], I);[m
[32m+[m
[32m+[m[32m  S(chk, r[0]);[m
[32m+[m[32m  M(chk, chk, den);[m
[32m+[m[32m  if (neq25519(chk, num)) return -1;[m
[32m+[m
[32m+[m[32m  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);[m
[32m+[m
[32m+[m[32m  M(r[3], r[0], r[1]);[m
[32m+[m[32m  return 0;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction crypto_sign_open(m, sm, n, pk) {[m
[32m+[m[32m  var i, mlen;[m
[32m+[m[32m  var t = new Uint8Array(32), h = new Uint8Array(64);[m
[32m+[m[32m  var p = [gf(), gf(), gf(), gf()],[m
[32m+[m[32m      q = [gf(), gf(), gf(), gf()];[m
[32m+[m
[32m+[m[32m  mlen = -1;[m
[32m+[m[32m  if (n < 64) return -1;[m
[32m+[m
[32m+[m[32m  if (unpackneg(q, pk)) return -1;[m
[32m+[m
[32m+[m[32m  for (i = 0; i < n; i++) m[i] = sm[i];[m
[32m+[m[32m  for (i = 0; i < 32; i++) m[i+32] = pk[i];[m
[32m+[m[32m  crypto_hash(h, m, n);[m
[32m+[m[32m  reduce(h);[m
[32m+[m[32m  scalarmult(p, q, h);[m
[32m+[m
[32m+[m[32m  scalarbase(q, sm.subarray(32));[m
[32m+[m[32m  add(p, q);[m
[32m+[m[32m  pack(t, p);[m
[32m+[m
[32m+[m[32m  n -= 64;[m
[32m+[m[32m  if (crypto_verify_32(sm, 0, t, 0)) {[m
[32m+[m[32m    for (i = 0; i < n; i++) m[i] = 0;[m
[32m+[m[32m    return -1;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  for (i = 0; i < n; i++) m[i] = sm[i + 64];[m
[32m+[m[32m  mlen = n;[m
[32m+[m[32m  return mlen;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mvar crypto_secretbox_KEYBYTES = 32,[m
[32m+[m[32m    crypto_secretbox_NONCEBYTES = 24,[m
[32m+[m[32m    crypto_secretbox_ZEROBYTES = 32,[m
[32m+[m[32m    crypto_secretbox_BOXZEROBYTES = 16,[m
[32m+[m[32m    crypto_scalarmult_BYTES = 32,[m
[32m+[m[32m    crypto_scalarmult_SCALARBYTES = 32,[m
[32m+[m[32m    crypto_box_PUBLICKEYBYTES = 32,[m
[32m+[m[32m    crypto_box_SECRETKEYBYTES = 32,[m
[32m+[m[32m    crypto_box_BEFORENMBYTES = 32,[m
[32m+[m[32m    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,[m
[32m+[m[32m    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,[m
[32m+[m[32m    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,[m
[32m+[m[32m    crypto_sign_BYTES = 64,[m
[32m+[m[32m    crypto_sign_PUBLICKEYBYTES = 32,[m
[32m+[m[32m    crypto_sign_SECRETKEYBYTES = 64,[m
[32m+[m[32m    crypto_sign_SEEDBYTES = 32,[m
[32m+[m[32m    crypto_hash_BYTES = 64;[m
[32m+[m
[32m+[m[32mnacl.lowlevel = {[m
[32m+[m[32m  crypto_core_hsalsa20: crypto_core_hsalsa20,[m
[32m+[m[32m  crypto_stream_xor: crypto_stream_xor,[m
[32m+[m[32m  crypto_stream: crypto_stream,[m
[32m+[m[32m  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,[m
[32m+[m[32m  crypto_stream_salsa20: crypto_stream_salsa20,[m
[32m+[m[32m  crypto_onetimeauth: crypto_onetimeauth,[m
[32m+[m[32m  crypto_onetimeauth_verify: crypto_onetimeauth_verify,[m
[32m+[m[32m  crypto_verify_16: crypto_verify_16,[m
[32m+[m[32m  crypto_verify_32: crypto_verify_32,[m
[32m+[m[32m  crypto_secretbox: crypto_secretbox,[m
[32m+[m[32m  crypto_secretbox_open: crypto_secretbox_open,[m
[32m+[m[32m  crypto_scalarmult: crypto_scalarmult,[m
[32m+[m[32m  crypto_scalarmult_base: crypto_scalarmult_base,[m
[32m+[m[32m  crypto_box_beforenm: crypto_box_beforenm,[m
[32m+[m[32m  crypto_box_afternm: crypto_box_afternm,[m
[32m+[m[32m  crypto_box: crypto_box,[m
[32m+[m[32m  crypto_box_open: crypto_box_open,[m
[32m+[m[32m  crypto_box_keypair: crypto_box_keypair,[m
[32m+[m[32m  crypto_hash: crypto_hash,[m
[32m+[m[32m  crypto_sign: crypto_sign,[m
[32m+[m[32m  crypto_sign_keypair: crypto_sign_keypair,[m
[32m+[m[32m  crypto_sign_open: crypto_sign_open,[m
[32m+[m
[32m+[m[32m  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,[m
[32m+[m[32m  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,[m
[32m+[m[32m  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,[m
[32m+[m[32m  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,[m
[32m+[m[32m  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,[m
[32m+[m[32m  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,[m
[32m+[m[32m  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,[m
[32m+[m[32m  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,[m
[32m+[m[32m  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,[m
[32m+[m[32m  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,[m
[32m+[m[32m  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,[m
[32m+[m[32m  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,[m
[32m+[m[32m  crypto_sign_BYTES: crypto_sign_BYTES,[m
[32m+[m[32m  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,[m
[32m+[m[32m  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,[m
[32m+[m[32m  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,[m
[32m+[m[32m  crypto_hash_BYTES: crypto_hash_BYTES[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m/* High-level API */[m
[32m+[m
[32m+[m[32mfunction checkLengths(k, n) {[m
[32m+[m[32m  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');[m
[32m+[m[32m  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction checkBoxLengths(pk, sk) {[m
[32m+[m[32m  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');[m
[32m+[m[32m  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction checkArrayTypes() {[m
[32m+[m[32m  for (var i = 0; i < arguments.length; i++) {[m
[32m+[m[32m    if (!(arguments[i] instanceof Uint8Array))[m
[32m+[m[32m      throw new TypeError('unexpected type, use Uint8Array');[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction cleanup(arr) {[m
[32m+[m[32m  for (var i = 0; i < arr.length; i++) arr[i] = 0;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mnacl.randomBytes = function(n) {[m
[32m+[m[32m  var b = new Uint8Array(n);[m
[32m+[m[32m  randombytes(b, n);[m
[32m+[m[32m  return b;[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mnacl.secretbox = function(msg, nonce, key) {[m
[32m+[m[32m  checkArrayTypes(msg, nonce, key);[m
[32m+[m[32m  checkLengths(key, nonce);[m
[32m+[m[32m  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);[m
[32m+[m[32m  var c = new Uint8Array(m.length);[m
[32m+[m[32m  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];[m
[32m+[m[32m  crypto_secretbox(c, m, m.length, nonce, key);[m
[32m+[m[32m  return c.subarray(crypto_secretbox_BOXZEROBYTES);[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mnacl.secretbox.open = function(box, nonce, key) {[m
[32m+[m[32m  checkArrayTypes(box, nonce, key);[m
[32m+[m[32m  checkLengths(key, nonce);[m
[32m+[m[32m  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);[m
[32m+[m[32m  var m = new Uint8Array(c.length);[m
[32m+[m[32m  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];[m
[32m+[m[32m  if (c.length < 32) return null;[m
[32m+[m[32m  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;[m
[32m+[m[32m  return m.subarray(crypto_secretbox_ZEROBYTES);[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mnacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;[m
[32m+[m[32mnacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;[m
[32m+[m[32mnacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;[m
[32m+[m
[32m+[m[32mnacl.scalarMult = function(n, p) {[m
[32m+[m[32m  checkArrayTypes(n, p);[m
[32m+[m[32m  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');[m
[32m+[m[32m  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');[m
[32m+[m[32m  var q = new Uint8Array(crypto_scalarmult_BYTES);[m
[32m+[m[32m  crypto_scalarmult(q, n, p);[m
[32m+[m[32m  return q;[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mnacl.scalarMult.base = function(n) {[m
[32m+[m[32m  checkArrayTypes(n);[m
[32m+[m[32m  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');[m
[32m+[m[32m  var q = new Uint8Array(crypto_scalarmult_BYTES);[m
[32m+[m[32m  crypto_scalarmult_base(q, n);[m
[32m+[m[32m  return q;[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mnacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;[m
[32m+[m[32mnacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;[m
[32m+[m
[32m+[m[32mnacl.box = function(msg, nonce, publicKey, secretKey) {[m
[32m+[m[32m  var k = nacl.box.before(publicKey, secretKey);[m
[32m+[m[32m  return nacl.secretbox(msg, nonce, k);[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mnacl.box.before = function(publicKey, secretKey) {[m
[32m+[m[32m  checkArrayTypes(publicKey, secretKey);[m
[32m+[m[32m  checkBoxLengths(publicKey, secretKey);[m
[32m+[m[32m  var k = new Uint8Array(crypto_box_BEFORENMBYTES);[m
[32m+[m[32m  crypto_box_beforenm(k, publicKey, secretKey);[m
[32m+[m[32m  return k;[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mnacl.box.after = nacl.secretbox;[m
[32m+[m
[32m+[m[32mnacl.box.open = function(msg, nonce, publicKey, secretKey) {[m
[32m+[m[32m  var k = nacl.box.before(publicKey, secretKey);[m
[32m+[m[32m  return nacl.secretbox.open(msg, nonce, k);[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mnacl.box.open.after = nacl.secretbox.open;[m
[32m+[m
[32m+[m[32mnacl.box.keyPair = function() {[m
[32m+[m[32m  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);[m
[32m+[m[32m  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);[m
[32m+[m[32m  crypto_box_keypair(pk, sk);[m
[32m+[m[32m  return {publicKey: pk, secretKey: sk};[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mnacl.box.keyPair.fromSecretKey = function(secretKey) {[m
[32m+[m[32m  checkArrayTypes(secretKey);[m
[32m+[m[32m  if (secretKey.length !== crypto_box_SECRETKEYBYTES)[m
[32m+[m[32m    throw new Error('bad secret key size');[m
[32m+[m[32m  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);[m
[32m+[m[32m  crypto_scalarmult_base(pk, secretKey);[m
[32m+[m[32m  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mnacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;[m
[32m+[m[32mnacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;[m
[32m+[m[32mnacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;[m
[32m+[m[32mnacl.box.nonceLength = crypto_box_NONCEBYTES;[m
[32m+[m[32mnacl.box.overheadLength = nacl.secretbox.overheadLength;[m
[32m+[m
[32m+[m[32mnacl.sign = function(msg, secretKey) {[m
[32m+[m[32m  checkArrayTypes(msg, secretKey);[m
[32m+[m[32m  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)[m
[32m+[m[32m    throw new Error('bad secret key size');[m
[32m+[m[32m  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);[m
[32m+[m[32m  crypto_sign(signedMsg, msg, msg.length, secretKey);[m
[32m+[m[32m  return signedMsg;[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mnacl.sign.open = function(signedMsg, publicKey) {[m
[32m+[m[32m  checkArrayTypes(signedMsg, publicKey);[m
[32m+[m[32m  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)[m
[32m+[m[32m    throw new Error('bad public key size');[m
[32m+[m[32m  var tmp = new Uint8Array(signedMsg.length);[m
[32m+[m[32m  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);[m
[32m+[m[32m  if (mlen < 0) return null;[m
[32m+[m[32m  var m = new Uint8Array(mlen);[m
[32m+[m[32m  for (var i = 0; i < m.length; i++) m[i] = tmp[i];[m
[32m+[m[32m  return m;[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mnacl.sign.detached = function(msg, secretKey) {[m
[32m+[m[32m  var signedMsg = nacl.sign(msg, secretKey);[m
[32m+[m[32m  var sig = new Uint8Array(crypto_sign_BYTES);[m
[32m+[m[32m  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];[m
[32m+[m[32m  return sig;[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mnacl.sign.detached.verify = function(msg, sig, publicKey) {[m
[32m+[m[32m  checkArrayTypes(msg, sig, publicKey);[m
[32m+[m[32m  if (sig.length !== crypto_sign_BYTES)[m
[32m+[m[32m    throw new Error('bad signature size');[m
[32m+[m[32m  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)[m
[32m+[m[32m    throw new Error('bad public key size');[m
[32m+[m[32m  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);[m
[32m+[m[32m  var m = new Uint8Array(crypto_sign_BYTES + msg.length);[m
[32m+[m[32m  var i;[m
[32m+[m[32m  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];[m
[32m+[m[32m  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];[m
[32m+[m[32m  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mnacl.sign.keyPair = function() {[m
[32m+[m[32m  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);[m
[32m+[m[32m  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);[m
[32m+[m[32m  crypto_sign_keypair(pk, sk);[m
[32m+[m[32m  return {publicKey: pk, secretKey: sk};[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mnacl.sign.keyPair.fromSecretKey = function(secretKey) {[m
[32m+[m[32m  checkArrayTypes(secretKey);[m
[32m+[m[32m  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)[m
[32m+[m[32m    throw new Error('bad secret key size');[m
[32m+[m[32m  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);[m
[32m+[m[32m  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];[m
[32m+[m[32m  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mnacl.sign.keyPair.fromSeed = function(seed) {[m
[32m+[m[32m  checkArrayTypes(seed);[m
[32m+[m[32m  if (seed.length !== crypto_sign_SEEDBYTES)[m
[32m+[m[32m    throw new Error('bad seed size');[m
[32m+[m[32m  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);[m
[32m+[m[32m  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);[m
[32m+[m[32m  for (var i = 0; i < 32; i++) sk[i] = seed[i];[m
[32m+[m[32m  crypto_sign_keypair(pk, sk, true);[m
[32m+[m[32m  return {publicKey: pk, secretKey: sk};[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mnacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;[m
[32m+[m[32mnacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;[m
[32m+[m[32mnacl.sign.seedLength = crypto_sign_SEEDBYTES;[m
[32m+[m[32mnacl.sign.signatureLength = crypto_sign_BYTES;[m
[32m+[m
[32m+[m[32mnacl.hash = function(msg) {[m
[32m+[m[32m  checkArrayTypes(msg);[m
[32m+[m[32m  var h = new Uint8Array(crypto_hash_BYTES);[m
[32m+[m[32m  crypto_hash(h, msg, msg.length);[m
[32m+[m[32m  return h;[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mnacl.hash.hashLength = crypto_hash_BYTES;[m
[32m+[m
[32m+[m[32mnacl.verify = function(x, y) {[m
[32m+[m[32m  checkArrayTypes(x, y);[m
[32m+[m[32m  // Zero length arguments are considered not equal.[m
[32m+[m[32m  if (x.length === 0 || y.length === 0) return false;[m
[32m+[m[32m  if (x.length !== y.length) return false;[m
[32m+[m[32m  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mnacl.setPRNG = function(fn) {[m
[32m+[m[32m  randombytes = fn;[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m(function() {[m
[32m+[m[32m  // Initialize PRNG if environment provides CSPRNG.[m
[32m+[m[32m  // If not, methods calling randombytes will throw.[m
[32m+[m[32m  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;[m
[32m+[m[32m  if (crypto && crypto.getRandomValues) {[m
[32m+[m[32m    // Browsers.[m
[32m+[m[32m    var QUOTA = 65536;[m
[32m+[m[32m    nacl.setPRNG(function(x, n) {[m
[32m+[m[32m      var i, v = new Uint8Array(n);[m
[32m+[m[32m      for (i = 0; i < n; i += QUOTA) {[m
[32m+[m[32m        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));[m
[32m+[m[32m      }[m
[32m+[m[32m      for (i = 0; i < n; i++) x[i] = v[i];[m
[32m+[m[32m      cleanup(v);[m
[32m+[m[32m    });[m
[32m+[m[32m  } else if (typeof require !== 'undefined') {[m
[32m+[m[32m    // Node.js.[m
[32m+[m[32m    crypto = require('crypto');[m
[32m+[m[32m    if (crypto && crypto.randomBytes) {[m
[32m+[m[32m      nacl.setPRNG(function(x, n) {[m
[32m+[m[32m        var i, v = crypto.randomBytes(n);[m
[32m+[m[32m        for (i = 0; i < n; i++) x[i] = v[i];[m
[32m+[m[32m        cleanup(v);[m
[32m+[m[32m      });[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m})();[m
[32m+[m
[32m+[m[32m})(typeof module !== 'undefined' && module.exports ? module.exports : (self.nacl = self.nacl || {}));[m
[1mdiff --git a/node_modules/tweetnacl/nacl.min.js b/node_modules/tweetnacl/nacl.min.js[m
[1mnew file mode 100644[m
[1mindex 0000000..e4c9bb2[m
[1m--- /dev/null[m
[1m+++ b/node_modules/tweetnacl/nacl.min.js[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32m!function(r){"use strict";function n(r,n){return r<<n|r>>>32-n}function e(r,n){var e=255&r[n+3];return e=e<<8|255&r[n+2],(e=e<<8|255&r[n+1])<<8|255&r[n+0]}function t(r,n){var e=r[n]<<24|r[n+1]<<16|r[n+2]<<8|r[n+3],t=r[n+4]<<24|r[n+5]<<16|r[n+6]<<8|r[n+7];return new sr(e,t)}function o(r,n,e){var t;for(t=0;t<4;t++)r[n+t]=255&e,e>>>=8}function i(r,n,e){r[n]=e.hi>>24&255,r[n+1]=e.hi>>16&255,r[n+2]=e.hi>>8&255,r[n+3]=255&e.hi,r[n+4]=e.lo>>24&255,r[n+5]=e.lo>>16&255,r[n+6]=e.lo>>8&255,r[n+7]=255&e.lo}function f(r,n,e,t,o){var i,f=0;for(i=0;i<o;i++)f|=r[n+i]^e[t+i];return(1&f-1>>>8)-1}function a(r,n,e,t){return f(r,n,e,t,16)}function u(r,n,e,t){return f(r,n,e,t,32)}function c(r,t,i,f,a){var u,c,w,y=new Uint32Array(16),l=new Uint32Array(16),s=new Uint32Array(16),h=new Uint32Array(4);for(u=0;u<4;u++)l[5*u]=e(f,4*u),l[1+u]=e(i,4*u),l[6+u]=e(t,4*u),l[11+u]=e(i,16+4*u);for(u=0;u<16;u++)s[u]=l[u];for(u=0;u<20;u++){for(c=0;c<4;c++){for(w=0;w<4;w++)h[w]=l[(5*c+4*w)%16];for(h[1]^=n(h[0]+h[3]|0,7),h[2]^=n(h[1]+h[0]|0,9),h[3]^=n(h[2]+h[1]|0,13),h[0]^=n(h[3]+h[2]|0,18),w=0;w<4;w++)y[4*c+(c+w)%4]=h[w]}for(w=0;w<16;w++)l[w]=y[w]}if(a){for(u=0;u<16;u++)l[u]=l[u]+s[u]|0;for(u=0;u<4;u++)l[5*u]=l[5*u]-e(f,4*u)|0,l[6+u]=l[6+u]-e(t,4*u)|0;for(u=0;u<4;u++)o(r,4*u,l[5*u]),o(r,16+4*u,l[6+u])}else for(u=0;u<16;u++)o(r,4*u,l[u]+s[u]|0)}function w(r,n,e,t){return c(r,n,e,t,!1),0}function y(r,n,e,t){return c(r,n,e,t,!0),0}function l(r,n,e,t,o,i,f){var a,u,c=new Uint8Array(16),y=new Uint8Array(64);if(!o)return 0;for(u=0;u<16;u++)c[u]=0;for(u=0;u<8;u++)c[u]=i[u];for(;o>=64;){for(w(y,c,f,Br),u=0;u<64;u++)r[n+u]=(e?e[t+u]:0)^y[u];for(a=1,u=8;u<16;u++)a=a+(255&c[u])|0,c[u]=255&a,a>>>=8;o-=64,n+=64,e&&(t+=64)}if(o>0)for(w(y,c,f,Br),u=0;u<o;u++)r[n+u]=(e?e[t+u]:0)^y[u];return 0}function s(r,n,e,t,o){return l(r,n,null,0,e,t,o)}function h(r,n,e,t,o){var i=new Uint8Array(32);return y(i,t,o,Br),s(r,n,e,t.subarray(16),i)}function v(r,n,e,t,o,i,f){var a=new Uint8Array(32);return y(a,i,f,Br),l(r,n,e,t,o,i.subarray(16),a)}function g(r,n){var e,t=0;for(e=0;e<17;e++)t=t+(r[e]+n[e]|0)|0,r[e]=255&t,t>>>=8}function b(r,n,e,t,o,i){var f,a,u,c,w=new Uint32Array(17),y=new Uint32Array(17),l=new Uint32Array(17),s=new Uint32Array(17),h=new Uint32Array(17);for(u=0;u<17;u++)y[u]=l[u]=0;for(u=0;u<16;u++)y[u]=i[u];for(y[3]&=15,y[4]&=252,y[7]&=15,y[8]&=252,y[11]&=15,y[12]&=252,y[15]&=15;o>0;){for(u=0;u<17;u++)s[u]=0;for(u=0;u<16&&u<o;++u)s[u]=e[t+u];for(s[u]=1,t+=u,o-=u,g(l,s),a=0;a<17;a++)for(w[a]=0,u=0;u<17;u++)w[a]=0|w[a]+l[u]*(u<=a?y[a-u]:320*y[a+17-u]|0);for(a=0;a<17;a++)l[a]=w[a];for(c=0,u=0;u<16;u++)c=c+l[u]|0,l[u]=255&c,c>>>=8;for(c=c+l[16]|0,l[16]=3&c,c=5*(c>>>2)|0,u=0;u<16;u++)c=c+l[u]|0,l[u]=255&c,c>>>=8;c=c+l[16]|0,l[16]=c}for(u=0;u<17;u++)h[u]=l[u];for(g(l,Sr),f=0|-(l[16]>>>7),u=0;u<17;u++)l[u]^=f&(h[u]^l[u]);for(u=0;u<16;u++)s[u]=i[u+16];for(s[16]=0,g(l,s),u=0;u<16;u++)r[n+u]=l[u];return 0}function p(r,n,e,t,o,i){var f=new Uint8Array(16);return b(f,0,e,t,o,i),a(r,n,f,0)}function _(r,n,e,t,o){var i;if(e<32)return-1;for(v(r,0,n,0,e,t,o),b(r,16,r,32,e-32,r),i=0;i<16;i++)r[i]=0;return 0}function A(r,n,e,t,o){var i,f=new Uint8Array(32);if(e<32)return-1;if(h(f,0,32,t,o),0!==p(n,16,n,32,e-32,f))return-1;for(v(r,0,n,0,e,t,o),i=0;i<32;i++)r[i]=0;return 0}function U(r,n){var e;for(e=0;e<16;e++)r[e]=0|n[e]}function E(r){var n,e;for(e=0;e<16;e++)r[e]+=65536,n=Math.floor(r[e]/65536),r[(e+1)*(e<15?1:0)]+=n-1+37*(n-1)*(15===e?1:0),r[e]-=65536*n}function x(r,n,e){for(var t,o=~(e-1),i=0;i<16;i++)t=o&(r[i]^n[i]),r[i]^=t,n[i]^=t}function d(r,n){var e,t,o,i=hr(),f=hr();for(e=0;e<16;e++)f[e]=n[e];for(E(f),E(f),E(f),t=0;t<2;t++){for(i[0]=f[0]-65517,e=1;e<15;e++)i[e]=f[e]-65535-(i[e-1]>>16&1),i[e-1]&=65535;i[15]=f[15]-32767-(i[14]>>16&1),o=i[15]>>16&1,i[14]&=65535,x(f,i,1-o)}for(e=0;e<16;e++)r[2*e]=255&f[e],r[2*e+1]=f[e]>>8}function m(r,n){var e=new Uint8Array(32),t=new Uint8Array(32);return d(e,r),d(t,n),u(e,0,t,0)}function B(r){var n=new Uint8Array(32);return d(n,r),1&n[0]}function S(r,n){var e;for(e=0;e<16;e++)r[e]=n[2*e]+(n[2*e+1]<<8);r[15]&=32767}function K(r,n,e){var t;for(t=0;t<16;t++)r[t]=n[t]+e[t]|0}function Y(r,n,e){var t;for(t=0;t<16;t++)r[t]=n[t]-e[t]|0}function T(r,n,e){var t,o,i=new Float64Array(31);for(t=0;t<31;t++)i[t]=0;for(t=0;t<16;t++)for(o=0;o<16;o++)i[t+o]+=n[t]*e[o];for(t=0;t<15;t++)i[t]+=38*i[t+16];for(t=0;t<16;t++)r[t]=i[t];E(r),E(r)}function L(r,n){T(r,n,n)}function k(r,n){var e,t=hr();for(e=0;e<16;e++)t[e]=n[e];for(e=253;e>=0;e--)L(t,t),2!==e&&4!==e&&T(t,t,n);for(e=0;e<16;e++)r[e]=t[e]}function z(r,n){var e,t=hr();for(e=0;e<16;e++)t[e]=n[e];for(e=250;e>=0;e--)L(t,t),1!==e&&T(t,t,n);for(e=0;e<16;e++)r[e]=t[e]}function R(r,n,e){var t,o,i=new Uint8Array(32),f=new Float64Array(80),a=hr(),u=hr(),c=hr(),w=hr(),y=hr(),l=hr();for(o=0;o<31;o++)i[o]=n[o];for(i[31]=127&n[31]|64,i[0]&=248,S(f,e),o=0;o<16;o++)u[o]=f[o],w[o]=a[o]=c[o]=0;for(a[0]=w[0]=1,o=254;o>=0;--o)t=i[o>>>3]>>>(7&o)&1,x(a,u,t),x(c,w,t),K(y,a,c),Y(a,a,c),K(c,u,w),Y(u,u,w),L(w,y),L(l,a),T(a,c,a),T(c,u,y),K(y,a,c),Y(a,a,c),L(u,a),Y(c,w,l),T(a,c,Ar),K(a,a,w),T(c,c,a),T(a,w,l),T(w,u,f),L(u,y),x(a,u,t),x(c,w,t);for(o=0;o<16;o++)f[o+16]=a[o],f[o+32]=c[o],f[o+48]=u[o],f[o+64]=w[o];var s=f.subarray(32),h=f.subarray(16);return k(s,s),T(h,h,s),d(r,h),0}function P(r,n){return R(r,n,br)}function N(r,n){return vr(n,32),P(r,n)}function O(r,n,e){var t=new Uint8Array(32);return R(t,e,n),y(r,gr,t,Br)}function C(r,n,e,t,o,i){var f=new Uint8Array(32);return O(f,o,i),Kr(r,n,e,t,f)}function F(r,n,e,t,o,i){var f=new Uint8Array(32);return O(f,o,i),Yr(r,n,e,t,f)}function M(){var r,n,e,t=0,o=0,i=0,f=0;for(e=0;e<arguments.length;e++)r=arguments[e].lo,n=arguments[e].hi,t+=65535&r,o+=r>>>16,i+=65535&n,f+=n>>>16;return o+=t>>>16,i+=o>>>16,f+=i>>>16,new sr(65535&i|f<<16,65535&t|o<<16)}function G(r,n){return new sr(r.hi>>>n,r.lo>>>n|r.hi<<32-n)}function Z(){var r,n=0,e=0;for(r=0;r<arguments.length;r++)n^=arguments[r].lo,e^=arguments[r].hi;return new sr(e,n)}function q(r,n){var e,t,o=32-n;return n<32?(e=r.hi>>>n|r.lo<<o,t=r.lo>>>n|r.hi<<o):n<64&&(e=r.lo>>>n|r.hi<<o,t=r.hi>>>n|r.lo<<o),new sr(e,t)}function I(r,n,e){var t=r.hi&n.hi^~r.hi&e.hi,o=r.lo&n.lo^~r.lo&e.lo;return new sr(t,o)}function V(r,n,e){var t=r.hi&n.hi^r.hi&e.hi^n.hi&e.hi,o=r.lo&n.lo^r.lo&e.lo^n.lo&e.lo;return new sr(t,o)}function X(r){return Z(q(r,28),q(r,34),q(r,39))}function D(r){return Z(q(r,14),q(r,18),q(r,41))}function j(r){return Z(q(r,1),q(r,8),G(r,7))}function H(r){return Z(q(r,19),q(r,61),G(r,6))}function J(r,n,e){var o,f,a,u=[],c=[],w=[],y=[];for(f=0;f<8;f++)u[f]=w[f]=t(r,8*f);for(var l=0;e>=128;){for(f=0;f<16;f++)y[f]=t(n,8*f+l);for(f=0;f<80;f++){for(a=0;a<8;a++)c[a]=w[a];for(o=M(w[7],D(w[4]),I(w[4],w[5],w[6]),Tr[f],y[f%16]),c[7]=M(o,X(w[0]),V(w[0],w[1],w[2])),c[3]=M(c[3],o),a=0;a<8;a++)w[(a+1)%8]=c[a];if(f%16==15)for(a=0;a<16;a++)y[a]=M(y[a],y[(a+9)%16],j(y[(a+1)%16]),H(y[(a+14)%16]))}for(f=0;f<8;f++)w[f]=M(w[f],u[f]),u[f]=w[f];l+=128,e-=128}for(f=0;f<8;f++)i(r,8*f,u[f]);return e}function Q(r,n,e){var t,o=new Uint8Array(64),f=new Uint8Array(256),a=e;for(t=0;t<64;t++)o[t]=Lr[t];for(J(o,n,e),e%=128,t=0;t<256;t++)f[t]=0;for(t=0;t<e;t++)f[t]=n[a-e+t];for(f[e]=128,e=256-128*(e<112?1:0),f[e-9]=0,i(f,e-8,new sr(a/536870912|0,a<<3)),J(o,f,e),t=0;t<64;t++)r[t]=o[t];return 0}function W(r,n){var e=hr(),t=hr(),o=hr(),i=hr(),f=hr(),a=hr(),u=hr(),c=hr(),w=hr();Y(e,r[1],r[0]),Y(w,n[1],n[0]),T(e,e,w),K(t,r[0],r[1]),K(w,n[0],n[1]),T(t,t,w),T(o,r[3],n[3]),T(o,o,Er),T(i,r[2],n[2]),K(i,i,i),Y(f,t,e),Y(a,i,o),K(u,i,o),K(c,t,e),T(r[0],f,a),T(r[1],c,u),T(r[2],u,a),T(r[3],f,c)}function $(r,n,e){var t;for(t=0;t<4;t++)x(r[t],n[t],e)}function rr(r,n){var e=hr(),t=hr(),o=hr();k(o,n[2]),T(e,n[0],o),T(t,n[1],o),d(r,t),r[31]^=B(e)<<7}function nr(r,n,e){var t,o;for(U(r[0],pr),U(r[1],_r),U(r[2],_r),U(r[3],pr),o=255;o>=0;--o)t=e[o/8|0]>>(7&o)&1,$(r,n,t),W(n,r),W(r,r),$(r,n,t)}function er(r,n){var e=[hr(),hr(),hr(),hr()];U(e[0],xr),U(e[1],dr),U(e[2],_r),T(e[3],xr,dr),nr(r,e,n)}function tr(r,n,e){var t,o=new Uint8Array(64),i=[hr(),hr(),hr(),hr()];for(e||vr(n,32),Q(o,n,32),o[0]&=248,o[31]&=127,o[31]|=64,er(i,o),rr(r,i),t=0;t<32;t++)n[t+32]=r[t];return 0}function or(r,n){var e,t,o,i;for(t=63;t>=32;--t){for(e=0,o=t-32,i=t-12;o<i;++o)n[o]+=e-16*n[t]*kr[o-(t-32)],e=n[o]+128>>8,n[o]-=256*e;n[o]+=e,n[t]=0}for(e=0,o=0;o<32;o++)n[o]+=e-(n[31]>>4)*kr[o],e=n[o]>>8,n[o]&=255;for(o=0;o<32;o++)n[o]-=e*kr[o];for(t=0;t<32;t++)n[t+1]+=n[t]>>8,r[t]=255&n[t]}function ir(r){var n,e=new Float64Array(64);for(n=0;n<64;n++)e[n]=r[n];for(n=0;n<64;n++)r[n]=0;or(r,e)}function fr(r,n,e,t){var o,i,f=new Uint8Array(64),a=new Uint8Array(64),u=new Uint8Array(64),c=new Float64Array(64),w=[hr(),hr(),hr(),hr()];Q(f,t,32),f[0]&=248,f[31]&=127,f[31]|=64;var y=e+64;for(o=0;o<e;o++)r[64+o]=n[o];for(o=0;o<32;o++)r[32+o]=f[32+o];for(Q(u,r.subarray(32),e+32),ir(u),er(w,u),rr(r,w),o=32;o<64;o++)r[o]=t[o];for(Q(a,r,e+64),ir(a),o=0;o<64;o++)c[o]=0;for(o=0;o<32;o++)c[o]=u[o];for(o=0;o<32;o++)for(i=0;i<32;i++)c[o+i]+=a[o]*f[i];return or(r.subarray(32),c),y}function ar(r,n){var e=hr(),t=hr(),o=hr(),i=hr(),f=hr(),a=hr(),u=hr();return U(r[2],_r),S(r[1],n),L(o,r[1]),T(i,o,Ur),Y(o,o,r[2]),K(i,r[2],i),L(f,i),L(a,f),T(u,a,f),T(e,u,o),T(e,e,i),z(e,e),T(e,e,o),T(e,e,i),T(e,e,i),T(r[0],e,i),L(t,r[0]),T(t,t,i),m(t,o)&&T(r[0],r[0],mr),L(t,r[0]),T(t,t,i),m(t,o)?-1:(B(r[0])===n[31]>>7&&Y(r[0],pr,r[0]),T(r[3],r[0],r[1]),0)}function ur(r,n,e,t){var o,i=new Uint8Array(32),f=new Uint8Array(64),a=[hr(),hr(),hr(),hr()],c=[hr(),hr(),hr(),hr()];if(-1,e<64)return-1;if(ar(c,t))return-1;for(o=0;o<e;o++)r[o]=n[o];for(o=0;o<32;o++)r[o+32]=t[o];if(Q(f,r,e),ir(f),nr(a,c,f),er(c,n.subarray(32)),W(a,c),rr(i,a),e-=64,u(n,0,i,0)){for(o=0;o<e;o++)r[o]=0;return-1}for(o=0;o<e;o++)r[o]=n[o+64];return e}function cr(r,n){if(r.length!==zr)throw new Error("bad key size");if(n.length!==Rr)throw new Error("bad nonce size")}function wr(r,n){if(r.length!==Pr)throw new Error("bad public key size");if(n.length!==Nr)throw new Error("bad secret key size")}function yr(){for(var r=0;r<arguments.length;r++)if(!(arguments[r]instanceof Uint8Array))throw new TypeError("unexpected type, use Uint8Array")}function lr(r){for(var n=0;n<r.length;n++)r[n]=0}var sr=function(r,n){this.hi=0|r,this.lo=0|n},hr=function(r){var n,e=new Float64Array(16);if(r)for(n=0;n<r.length;n++)e[n]=r[n];return e},vr=function(){throw new Error("no PRNG")},gr=new Uint8Array(16),br=new Uint8Array(32);br[0]=9;var pr=hr(),_r=hr([1]),Ar=hr([56129,1]),Ur=hr([30883,4953,19914,30187,55467,16705,2637,112,59544,30585,16505,36039,65139,11119,27886,20995]),Er=hr([61785,9906,39828,60374,45398,33411,5274,224,53552,61171,33010,6542,64743,22239,55772,9222]),xr=hr([54554,36645,11616,51542,42930,38181,51040,26924,56412,64982,57905,49316,21502,52590,14035,8553]),dr=hr([26200,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214]),mr=hr([41136,18958,6951,50414,58488,44335,6150,12099,55207,15867,153,11085,57099,20417,9344,11139]),Br=new Uint8Array([101,120,112,97,110,100,32,51,50,45,98,121,116,101,32,107]),Sr=new Uint32Array([5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,252]),Kr=_,Yr=A,Tr=[new sr(1116352408,3609767458),new sr(1899447441,602891725),new sr(3049323471,3964484399),new sr(3921009573,2173295548),new sr(961987163,4081628472),new sr(1508970993,3053834265),new sr(2453635748,2937671579),new sr(2870763221,3664609560),new sr(3624381080,2734883394),new sr(310598401,1164996542),new sr(607225278,1323610764),new sr(1426881987,3590304994),new sr(1925078388,4068182383),new sr(2162078206,991336113),new sr(2614888103,633803317),new sr(3248222580,3479774868),new sr(3835390401,2666613458),new sr(4022224774,944711139),new sr(264347078,2341262773),new sr(604807628,2007800933),new sr(770255983,1495990901),new sr(1249150122,1856431235),new sr(1555081692,3175218132),new sr(1996064986,2198950837),new sr(2554220882,3999719339),new sr(2821834349,766784016),new sr(2952996808,2566594879),new sr(3210313671,3203337956),new sr(3336571891,1034457026),new sr(3584528711,2466948901),new sr(113926993,3758326383),new sr(338241895,168717936),new sr(666307205,1188179964),new sr(773529912,1546045734),new sr(1294757372,1522805485),new sr(1396182291,2643833823),new sr(1695183700,2343527390),new sr(1986661051,1014477480),new sr(2177026350,1206759142),new sr(2456956037,344077627),new sr(2730485921,1290863460),new sr(2820302411,3158454273),new sr(3259730800,3505952657),new sr(3345764771,106217008),new sr(3516065817,3606008344),new sr(3600352804,1432725776),new sr(4094571909,1467031594),new sr(275423344,851169720),new sr(430227734,3100823752),new sr(506948616,1363258195),new sr(659060556,3750685593),new sr(883997877,3785050280),new sr(958139571,3318307427),new sr(1322822218,3812723403),new sr(1537002063,2003034995),new sr(1747873779,3602036899),new sr(1955562222,1575990012),new sr(2024104815,1125592928),new sr(2227730452,2716904306),new sr(2361852424,442776044),new sr(2428436474,593698344),new sr(2756734187,3733110249),new sr(3204031479,2999351573),new sr(3329325298,3815920427),new sr(3391569614,3928383900),new sr(3515267271,566280711),new sr(3940187606,3454069534),new sr(4118630271,4000239992),new sr(116418474,1914138554),new sr(174292421,2731055270),new sr(289380356,3203993006),new sr(460393269,320620315),new sr(685471733,587496836),new sr(852142971,1086792851),new sr(1017036298,365543100),new sr(1126000580,2618297676),new sr(1288033470,3409855158),new sr(1501505948,4234509866),new sr(1607167915,987167468),new sr(1816402316,1246189591)],Lr=new Uint8Array([106,9,230,103,243,188,201,8,187,103,174,133,132,202,167,59,60,110,243,114,254,148,248,43,165,79,245,58,95,29,54,241,81,14,82,127,173,230,130,209,155,5,104,140,43,62,108,31,31,131,217,171,251,65,189,107,91,224,205,25,19,126,33,121]),kr=new Float64Array([237,211,245,92,26,99,18,88,214,156,247,162,222,249,222,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16]),zr=32,Rr=24,Pr=32,Nr=32,Or=Rr;r.lowlevel={crypto_core_hsalsa20:y,crypto_stream_xor:v,crypto_stream:h,crypto_stream_salsa20_xor:l,crypto_stream_salsa20:s,crypto_onetimeauth:b,crypto_onetimeauth_verify:p,crypto_verify_16:a,crypto_verify_32:u,crypto_secretbox:_,crypto_secretbox_open:A,crypto_scalarmult:R,crypto_scalarmult_base:P,crypto_box_beforenm:O,crypto_box_afternm:Kr,crypto_box:C,crypto_box_open:F,crypto_box_keypair:N,crypto_hash:Q,crypto_sign:fr,crypto_sign_keypair:tr,crypto_sign_open:ur,crypto_secretbox_KEYBYTES:zr,crypto_secretbox_NONCEBYTES:Rr,crypto_secretbox_ZEROBYTES:32,crypto_secretbox_BOXZEROBYTES:16,crypto_scalarmult_BYTES:32,crypto_scalarmult_SCALARBYTES:32,crypto_box_PUBLICKEYBYTES:Pr,crypto_box_SECRETKEYBYTES:Nr,crypto_box_BEFORENMBYTES:32,crypto_box_NONCEBYTES:Or,crypto_box_ZEROBYTES:32,crypto_box_BOXZEROBYTES:16,crypto_sign_BYTES:64,crypto_sign_PUBLICKEYBYTES:32,crypto_sign_SECRETKEYBYTES:64,crypto_sign_SEEDBYTES:32,crypto_hash_BYTES:64},r.randomBytes=function(r){var n=new Uint8Array(r);return vr(n,r),n},r.secretbox=function(r,n,e){yr(r,n,e),cr(e,n);for(var t=new Uint8Array(32+r.length),o=new Uint8Array(t.length),i=0;i<r.length;i++)t[i+32]=r[i];return _(o,t,t.length,n,e),o.subarray(16)},r.secretbox.open=function(r,n,e){yr(r,n,e),cr(e,n);for(var t=new Uint8Array(16+r.length),o=new Uint8Array(t.length),i=0;i<r.length;i++)t[i+16]=r[i];return t.length<32?null:0!==A(o,t,t.length,n,e)?null:o.subarray(32)},r.secretbox.keyLength=zr,r.secretbox.nonceLength=Rr,r.secretbox.overheadLength=16,r.scalarMult=function(r,n){if(yr(r,n),32!==r.length)throw new Error("bad n size");if(32!==n.length)throw new Error("bad p size");var e=new Uint8Array(32);return R(e,r,n),e},r.scalarMult.base=function(r){if(yr(r),32!==r.length)throw new Error("bad n size");var n=new Uint8Array(32);return P(n,r),n},r.scalarMult.scalarLength=32,r.scalarMult.groupElementLength=32,r.box=function(n,e,t,o){var i=r.box.before(t,o);return r.secretbox(n,e,i)},r.box.before=function(r,n){yr(r,n),wr(r,n);var e=new Uint8Array(32);return O(e,r,n),e},r.box.after=r.secretbox,r.box.open=function(n,e,t,o){var i=r.box.before(t,o);return r.secretbox.open(n,e,i)},r.box.open.after=r.secretbox.open,r.box.keyPair=function(){var r=new Uint8Array(Pr),n=new Uint8Array(Nr);return N(r,n),{publicKey:r,secretKey:n}},r.box.keyPair.fromSecretKey=function(r){if(yr(r),r.length!==Nr)throw new Error("bad secret key size");var n=new Uint8Array(Pr);return P(n,r),{publicKey:n,secretKey:new Uint8Array(r)}},r.box.publicKeyLength=Pr,r.box.secretKeyLength=Nr,r.box.sharedKeyLength=32,r.box.nonceLength=Or,r.box.overheadLength=r.secretbox.overheadLength,r.sign=function(r,n){if(yr(r,n),64!==n.length)throw new Error("bad secret key size");var e=new Uint8Array(64+r.length);return fr(e,r,r.length,n),e},r.sign.open=function(r,n){if(yr(r,n),32!==n.length)throw new Error("bad public key size");var e=new Uint8Array(r.length),t=ur(e,r,r.length,n);if(t<0)return null;for(var o=new Uint8Array(t),i=0;i<o.length;i++)o[i]=e[i];return o},r.sign.detached=function(n,e){for(var t=r.sign(n,e),o=new Uint8Array(64),i=0;i<o.length;i++)o[i]=t[i];return o},r.sign.detached.verify=function(r,n,e){if(yr(r,n,e),64!==n.length)throw new Error("bad signature size");if(32!==e.length)throw new Error("bad public key size");var t,o=new Uint8Array(64+r.length),i=new Uint8Array(64+r.length);for(t=0;t<64;t++)o[t]=n[t];for(t=0;t<r.length;t++)o[t+64]=r[t];return ur(i,o,o.length,e)>=0},r.sign.keyPair=function(){var r=new Uint8Array(32),n=new Uint8Array(64);return tr(r,n),{publicKey:r,secretKey:n}},r.sign.keyPair.fromSecretKey=function(r){if(yr(r),64!==r.length)throw new Error("bad secret key size");for(var n=new Uint8Array(32),e=0;e<n.length;e++)n[e]=r[32+e];return{publicKey:n,secretKey:new Uint8Array(r)}},r.sign.keyPair.fromSeed=function(r){if(yr(r),32!==r.length)throw new Error("bad seed size");for(var n=new Uint8Array(32),e=new Uint8Array(64),t=0;t<32;t++)e[t]=r[t];return tr(n,e,!0),{publicKey:n,secretKey:e}},r.sign.publicKeyLength=32,r.sign.secretKeyLength=64,r.sign.seedLength=32,r.sign.signatureLength=64,r.hash=function(r){yr(r);var n=new Uint8Array(64);return Q(n,r,r.length),n},r.hash.hashLength=64,r.verify=function(r,n){return yr(r,n),0!==r.length&&0!==n.length&&(r.length===n.length&&0===f(r,0,n,0,r.length))},r.setPRNG=function(r){vr=r},function(){var n="undefined"!=typeof self?self.crypto||self.msCrypto:null;if(n&&n.getRandomValues){r.setPRNG(function(r,e){var t,o=new Uint8Array(e);for(t=0;t<e;t+=65536)n.getRandomValues(o.subarray(t,t+Math.min(e-t,65536)));for(t=0;t<e;t++)r[t]=o[t];lr(o)})}else"undefined"!=typeof require&&(n=require("crypto"))&&n.randomBytes&&r.setPRNG(function(r,e){var t,o=n.randomBytes(e);for(t=0;t<e;t++)r[t]=o[t];lr(o)})}()}("undefined"!=typeof module&&module.exports?module.exports:self.nacl=self.nacl||{});[m
\ No newline at end of file[m
[1mdiff --git a/node_modules/tweetnacl/package.json b/node_modules/tweetnacl/package.json[m
[1mnew file mode 100644[m
[1mindex 0000000..a5dfe66[m
[1m--- /dev/null[m
[1m+++ b/node_modules/tweetnacl/package.json[m
[36m@@ -0,0 +1,83 @@[m
[32m+[m[32m{[m
[32m+[m[32m  "_from": "tweetnacl@^1.0.0",[m
[32m+[m[32m  "_id": "tweetnacl@1.0.1",[m
[32m+[m[32m  "_inBundle": false,[m
[32m+[m[32m  "_integrity": "sha512-kcoMoKTPYnoeS50tzoqjPY3Uv9axeuuFAZY9M/9zFnhoVvRfxz9K29IMPD7jGmt2c8SW7i3gT9WqDl2+nV7p4A==",[m
[32m+[m[32m  "_location": "/tweetnacl",[m
[32m+[m[32m  "_phantomChildren": {},[m
[32m+[m[32m  "_requested": {[m
[32m+[m[32m    "type": "range",[m
[32m+[m[32m    "registry": true,[m
[32m+[m[32m    "raw": "tweetnacl@^1.0.0",[m
[32m+[m[32m    "name": "tweetnacl",[m
[32m+[m[32m    "escapedName": "tweetnacl",[m
[32m+[m[32m    "rawSpec": "^1.0.0",[m
[32m+[m[32m    "saveSpec": null,[m
[32m+[m[32m    "fetchSpec": "^1.0.0"[m
[32m+[m[32m  },[m
[32m+[m[32m  "_requiredBy": [[m
[32m+[m[32m    "/discord.js"[m
[32m+[m[32m  ],[m
[32m+[m[32m  "_resolved": "https://registry.npmjs.org/tweetnacl/-/tweetnacl-1.0.1.tgz",[m
[32m+[m[32m  "_shasum": "2594d42da73cd036bd0d2a54683dd35a6b55ca17",[m
[32m+[m[32m  "_spec": "tweetnacl@^1.0.0",[m
[32m+[m[32m  "_where": "C:\\Users\\jojo2\\Documents\\Discord Bots\\Discord-Basic-Bot\\node_modules\\discord.js",[m
[32m+[m[32m  "author": {[m
[32m+[m[32m    "name": "TweetNaCl-js contributors"[m
[32m+[m[32m  },[m
[32m+[m[32m  "browser": {[m
[32m+[m[32m    "buffer": false,[m
[32m+[m[32m    "crypto": false[m
[32m+[m[32m  },[m
[32m+[m[32m  "bugs": {[m
[32m+[m[32m    "url": "https://github.com/dchest/tweetnacl-js/issues"[m
[32m+[m[32m  },[m
[32m+[m[32m  "bundleDependencies": false,[m
[32m+[m[32m  "deprecated": false,[m
[32m+[m[32m  "description": "Port of TweetNaCl cryptographic library to JavaScript",[m
[32m+[m[32m  "devDependencies": {[m
[32m+[m[32m    "browserify": "^13.1.1",[m
[32m+[m[32m    "eslint": "^3.12.1",[m
[32m+[m[32m    "faucet": "^0.0.1",[m
[32m+[m[32m    "tap-browser-color": "^0.1.2",[m
[32m+[m[32m    "tape": "^4.6.3",[m
[32m+[m[32m    "tweetnacl-util": "^0.13.5",[m
[32m+[m[32m    "uglify-js": "^2.7.5"[m
[32m+[m[32m  },[m
[32m+[m[32m  "directories": {[m
[32m+[m[32m    "test": "test"[m
[32m+[m[32m  },[m
[32m+[m[32m  "homepage": "https://tweetnacl.js.org",[m
[32m+[m[32m  "keywords": [[m
[32m+[m[32m    "crypto",[m
[32m+[m[32m    "cryptography",[m
[32m+[m[32m    "curve25519",[m
[32m+[m[32m    "ed25519",[m
[32m+[m[32m    "encrypt",[m
[32m+[m[32m    "hash",[m
[32m+[m[32m    "key",[m
[32m+[m[32m    "nacl",[m
[32m+[m[32m    "poly1305",[m
[32m+[m[32m    "public",[m
[32m+[m[32m    "salsa20",[m
[32m+[m[32m    "signatures"[m
[32m+[m[32m  ],[m
[32m+[m[32m  "license": "Unlicense",[m
[32m+[m[32m  "main": "nacl-fast.js",[m
[32m+[m[32m  "name": "tweetnacl",[m
[32m+[m[32m  "repository": {[m
[32m+[m[32m    "type": "git",[m
[32m+[m[32m    "url": "git+https://github.com/dchest/tweetnacl-js.git"[m
[32m+[m[32m  },[m
[32m+[m[32m  "scripts": {[m
[32m+[m[32m    "bench": "node test/benchmark/bench.js",[m
[32m+[m[32m    "build": "uglifyjs nacl.js -c -m -o nacl.min.js && uglifyjs nacl-fast.js -c -m -o nacl-fast.min.js",[m
[32m+[m[32m    "build-test-browser": "browserify test/browser/init.js test/*.js | uglifyjs -c -m -o test/browser/_bundle.js 2>/dev/null && browserify test/browser/init.js test/*.quick.js | uglifyjs -c -m -o test/browser/_bundle-quick.js 2>/dev/null",[m
[32m+[m[32m    "lint": "eslint nacl.js nacl-fast.js test/*.js test/benchmark/*.js",[m
[32m+[m[32m    "test": "npm run test-node-all",[m
[32m+[m[32m    "test-node": "tape test/*.js | faucet",[m
[32m+[m[32m    "test-node-all": "make -C test/c && tape test/*.js test/c/*.js | faucet"[m
[32m+[m[32m  },[m
[32m+[m[32m  "types": "nacl.d.ts",[m
[32m+[m[32m  "version": "1.0.1"[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/ws/LICENSE b/node_modules/ws/LICENSE[m
[1mnew file mode 100644[m
[1mindex 0000000..a145cd1[m
[1m--- /dev/null[m
[1m+++ b/node_modules/ws/LICENSE[m
[36m@@ -0,0 +1,21 @@[m
[32m+[m[32mThe MIT License (MIT)[m
[32m+[m
[32m+[m[32mCopyright (c) 2011 Einar Otto Stangvik <einaros@gmail.com>[m
[32m+[m
[32m+[m[32mPermission is hereby granted, free of charge, to any person obtaining a copy[m
[32m+[m[32mof this software and associated documentation files (the "Software"), to deal[m
[32m+[m[32min the Software without restriction, including without limitation the rights[m
[32m+[m[32mto use, copy, modify, merge, publish, distribute, sublicense, and/or sell[m
[32m+[m[32mcopies of the Software, and to permit persons to whom the Software is[m
[32m+[m[32mfurnished to do so, subject to the following conditions:[m
[32m+[m
[32m+[m[32mThe above copyright notice and this permission notice shall be included in all[m
[32m+[m[32mcopies or substantial portions of the Software.[m
[32m+[m
[32m+[m[32mTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR[m
[32m+[m[32mIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,[m
[32m+[m[32mFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE[m
[32m+[m[32mAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER[m
[32m+[m[32mLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,[m
[32m+[m[32mOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE[m
[32m+[m[32mSOFTWARE.[m
[1mdiff --git a/node_modules/ws/README.md b/node_modules/ws/README.md[m
[1mnew file mode 100644[m
[1mindex 0000000..2b5c611[m
[1m--- /dev/null[m
[1m+++ b/node_modules/ws/README.md[m
[36m@@ -0,0 +1,449 @@[m
[32m+[m[32m# ws: a Node.js WebSocket library[m
[32m+[m
[32m+[m[32m[![Version npm](https://img.shields.io/npm/v/ws.svg?logo=npm)](https://www.npmjs.com/package/ws)[m
[32m+[m[32m[![Linux Build](https://img.shields.io/travis/websockets/ws/master.svg?logo=travis)](https://travis-ci.org/websockets/ws)[m
[32m+[m[32m[![Windows Build](https://img.shields.io/appveyor/ci/lpinca/ws/master.svg?logo=appveyor)](https://ci.appveyor.com/project/lpinca/ws)[m
[32m+[m[32m[![Coverage Status](https://img.shields.io/coveralls/websockets/ws/master.svg)](https://coveralls.io/github/websockets/ws)[m
[32m+[m
[32m+[m[32mws is a simple to use, blazing fast, and thoroughly tested WebSocket client and[m
[32m+[m[32mserver implementation.[m
[32m+[m
[32m+[m[32mPasses the quite extensive Autobahn test suite: [server][server-report],[m
[32m+[m[32m[client][client-report].[m
[32m+[m
[32m+[m[32m**Note**: This module does not work in the browser. The client in the docs is a[m
[32m+[m[32mreference to a back end with the role of a client in the WebSocket[m
[32m+[m[32mcommunication. Browser clients must use the native[m
[32m+[m[32m[`WebSocket`](https://developer.mozilla.org/en-US/docs/Web/API/WebSocket)[m
[32m+[m[32mobject. To make the same code work seamlessly on Node.js and the browser, you[m
[32m+[m[32mcan use one of the many wrappers available on npm, like[m
[32m+[m[32m[isomorphic-ws](https://github.com/heineiuo/isomorphic-ws).[m
[32m+[m
[32m+[m[32m## Table of Contents[m
[32m+[m
[32m+[m[32m- [Protocol support](#protocol-support)[m
[32m+[m[32m- [Installing](#installing)[m
[32m+[m[32m  - [Opt-in for performance and spec compliance](#opt-in-for-performance-and-spec-compliance)[m
[32m+[m[32m- [API docs](#api-docs)[m
[32m+[m[32m- [WebSocket compression](#websocket-compression)[m
[32m+[m[32m- [Usage examples](#usage-examples)[m
[32m+[m[32m  - [Sending and receiving text data](#sending-and-receiving-text-data)[m
[32m+[m[32m  - [Sending binary data](#sending-binary-data)[m
[32m+[m[32m  - [Simple server](#simple-server)[m
[32m+[m[32m  - [External HTTP/S server](#external-https-server)[m
[32m+[m[32m  - [Multiple servers sharing a single HTTP/S server](#multiple-servers-sharing-a-single-https-server)[m
[32m+[m[32m  - [Server broadcast](#server-broadcast)[m
[32m+[m[32m  - [echo.websocket.org demo](#echowebsocketorg-demo)[m
[32m+[m[32m  - [Other examples](#other-examples)[m
[32m+[m[32m- [Error handling best practices](#error-handling-best-practices)[m
[32m+[m[32m- [FAQ](#faq)[m
[32m+[m[32m  - [How to get the IP address of the client?](#how-to-get-the-ip-address-of-the-client)[m
[32m+[m[32m  - [How to detect and close broken connections?](#how-to-detect-and-close-broken-connections)[m
[32m+[m[32m  - [How to connect via a proxy?](#how-to-connect-via-a-proxy)[m
[32m+[m[32m- [Changelog](#changelog)[m
[32m+[m[32m- [License](#license)[m
[32m+[m
[32m+[m[32m## Protocol support[m
[32m+[m
[32m+[m[32m- **HyBi drafts 07-12** (Use the option `protocolVersion: 8`)[m
[32m+[m[32m- **HyBi drafts 13-17** (Current default, alternatively option[m
[32m+[m[32m  `protocolVersion: 13`)[m
[32m+[m
[32m+[m[32m## Installing[m
[32m+[m
[32m+[m[32m```[m
[32m+[m[32mnpm install ws[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m### Opt-in for performance and spec compliance[m
[32m+[m
[32m+[m[32mThere are 2 optional modules that can be installed along side with the ws[m
[32m+[m[32mmodule. These modules are binary addons which improve certain operations.[m
[32m+[m[32mPrebuilt binaries are available for the most popular platforms so you don't[m
[32m+[m[32mnecessarily need to have a C++ compiler installed on your machine.[m
[32m+[m
[32m+[m[32m- `npm install --save-optional bufferutil`: Allows to efficiently perform[m
[32m+[m[32m  operations such as masking and unmasking the data payload of the WebSocket[m
[32m+[m[32m  frames.[m
[32m+[m[32m- `npm install --save-optional utf-8-validate`: Allows to efficiently check if a[m
[32m+[m[32m  message contains valid UTF-8 as required by the spec.[m
[32m+[m
[32m+[m[32m## API docs[m
[32m+[m
[32m+[m[32mSee [`/doc/ws.md`](./doc/ws.md) for Node.js-like docs for the ws classes.[m
[32m+[m
[32m+[m[32m## WebSocket compression[m
[32m+[m
[32m+[m[32mws supports the [permessage-deflate extension][permessage-deflate] which enables[m
[32m+[m[32mthe client and server to negotiate a compression algorithm and its parameters,[m
[32m+[m[32mand then selectively apply it to the data payloads of each WebSocket message.[m
[32m+[m
[32m+[m[32mThe extension is disabled by default on the server and enabled by default on the[m
[32m+[m[32mclient. It adds a significant overhead in terms of performance and memory[m
[32m+[m[32mconsumption so we suggest to enable it only if it is really needed.[m
[32m+[m
[32m+[m[32mNote that Node.js has a variety of issues with high-performance compression,[m
[32m+[m[32mwhere increased concurrency, especially on Linux, can lead to [catastrophic[m
[32m+[m[32mmemory fragmentation][node-zlib-bug] and slow performance. If you intend to use[m
[32m+[m[32mpermessage-deflate in production, it is worthwhile to set up a test[m
[32m+[m[32mrepresentative of your workload and ensure Node.js/zlib will handle it with[m
[32m+[m[32macceptable performance and memory usage.[m
[32m+[m
[32m+[m[32mTuning of permessage-deflate can be done via the options defined below. You can[m
[32m+[m[32malso use `zlibDeflateOptions` and `zlibInflateOptions`, which is passed directly[m
[32m+[m[32minto the creation of [raw deflate/inflate streams][node-zlib-deflaterawdocs].[m
[32m+[m
[32m+[m[32mSee [the docs][ws-server-options] for more options.[m
[32m+[m
[32m+[m[32m```js[m
[32m+[m[32mconst WebSocket = require('ws');[m
[32m+[m
[32m+[m[32mconst wss = new WebSocket.Server({[m
[32m+[m[32m  port: 8080,[m
[32m+[m[32m  perMessageDeflate: {[m
[32m+[m[32m    zlibDeflateOptions: {[m
[32m+[m[32m      // See zlib defaults.[m
[32m+[m[32m      chunkSize: 1024,[m
[32m+[m[32m      memLevel: 7,[m
[32m+[m[32m      level: 3[m
[32m+[m[32m    },[m
[32m+[m[32m    zlibInflateOptions: {[m
[32m+[m[32m      chunkSize: 10 * 1024[m
[32m+[m[32m    },[m
[32m+[m[32m    // Other options settable:[m
[32m+[m[32m    clientNoContextTakeover: true, // Defaults to negotiated value.[m
[32m+[m[32m    serverNoContextTakeover: true, // Defaults to negotiated value.[m
[32m+[m[32m    serverMaxWindowBits: 10, // Defaults to negotiated value.[m
[32m+[m[32m    // Below options specified as default values.[m
[32m+[m[32m    concurrencyLimit: 10, // Limits zlib concurrency for perf.[m
[32m+[m[32m    threshold: 1024 // Size (in bytes) below which messages[m
[32m+[m[32m    // should not be compressed.[m
[32m+[m[32m  }[m
[32m+[m[32m});[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mThe client will only use the extension if it is supported and enabled on the[m
[32m+[m[32mserver. To always disable the extension on the client set the[m
[32m+[m[32m`perMessageDeflate` option to `false`.[m
[32m+[m
[32m+[m[32m```js[m
[32m+[m[32mconst WebSocket = require('ws');[m
[32m+[m
[32m+[m[32mconst ws = new WebSocket('ws://www.host.com/path', {[m
[32m+[m[32m  perMessageDeflate: false[m
[32m+[m[32m});[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## Usage examples[m
[32m+[m
[32m+[m[32m### Sending and receiving text data[m
[32m+[m
[32m+[m[32m```js[m
[32m+[m[32mconst WebSocket = require('ws');[m
[32m+[m
[32m+[m[32mconst ws = new WebSocket('ws://www.host.com/path');[m
[32m+[m
[32m+[m[32mws.on('open', function open() {[m
[32m+[m[32m  ws.send('something');[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mws.on('message', function incoming(data) {[m
[32m+[m[32m  console.log(data);[m
[32m+[m[32m});[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m### Sending binary data[m
[32m+[m
[32m+[m[32m```js[m
[32m+[m[32mconst WebSocket = require('ws');[m
[32m+[m
[32m+[m[32mconst ws = new WebSocket('ws://www.host.com/path');[m
[32m+[m
[32m+[m[32mws.on('open', function open() {[m
[32m+[m[32m  const array = new Float32Array(5);[m
[32m+[m
[32m+[m[32m  for (var i = 0; i < array.length; ++i) {[m
[32m+[m[32m    array[i] = i / 2;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  ws.send(array);[m
[32m+[m[32m});[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m### Simple server[m
[32m+[m
[32m+[m[32m```js[m
[32m+[m[32mconst WebSocket = require('ws');[m
[32m+[m
[32m+[m[32mconst wss = new WebSocket.Server({ port: 8080 });[m
[32m+[m
[32m+[m[32mwss.on('connection', function connection(ws) {[m
[32m+[m[32m  ws.on('message', function incoming(message) {[m
[32m+[m[32m    console.log('received: %s', message);[m
[32m+[m[32m  });[m
[32m+[m
[32m+[m[32m  ws.send('something');[m
[32m+[m[32m});[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m### External HTTP/S server[m
[32m+[m
[32m+[m[32m```js[m
[32m+[m[32mconst fs = require('fs');[m
[32m+[m[32mconst https = require('https');[m
[32m+[m[32mconst WebSocket = require('ws');[m
[32m+[m
[32m+[m[32mconst server = new https.createServer({[m
[32m+[m[32m  cert: fs.readFileSync('/path/to/cert.pem'),[m
[32m+[m[32m  key: fs.readFileSync('/path/to/key.pem')[m
[32m+[m[32m});[m
[32m+[m[32mconst wss = new WebSocket.Server({ server });[m
[32m+[m
[32m+[m[32mwss.on('connection', function connection(ws) {[m
[32m+[m[32m  ws.on('message', function incoming(message) {[m
[32m+[m[32m    console.log('received: %s', message);[m
[32m+[m[32m  });[m
[32m+[m
[32m+[m[32m  ws.send('something');[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mserver.listen(8080);[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m### Multiple servers sharing a single HTTP/S server[m
[32m+[m
[32m+[m[32m```js[m
[32m+[m[32mconst http = require('http');[m
[32m+[m[32mconst WebSocket = require('ws');[m
[32m+[m
[32m+[m[32mconst server = http.createServer();[m
[32m+[m[32mconst wss1 = new WebSocket.Server({ noServer: true });[m
[32m+[m[32mconst wss2 = new WebSocket.Server({ noServer: true });[m
[32m+[m
[32m+[m[32mwss1.on('connection', function connection(ws) {[m
[32m+[m[32m  // ...[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mwss2.on('connection', function connection(ws) {[m
[32m+[m[32m  // ...[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mserver.on('upgrade', function upgrade(request, socket, head) {[m
[32m+[m[32m  const pathname = url.parse(request.url).pathname;[m
[32m+[m
[32m+[m[32m  if (pathname === '/foo') {[m
[32m+[m[32m    wss1.handleUpgrade(request, socket, head, function done(ws) {[m
[32m+[m[32m      wss1.emit('connection', ws, request);[m
[32m+[m[32m    });[m
[32m+[m[32m  } else if (pathname === '/bar') {[m
[32m+[m[32m    wss2.handleUpgrade(request, socket, head, function done(ws) {[m
[32m+[m[32m      wss2.emit('connection', ws, request);[m
[32m+[m[32m    });[m
[32m+[m[32m  } else {[m
[32m+[m[32m    socket.destroy();[m
[32m+[m[32m  }[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mserver.listen(8080);[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m### Server broadcast[m
[32m+[m
[32m+[m[32m```js[m
[32m+[m[32mconst WebSocket = require('ws');[m
[32m+[m
[32m+[m[32mconst wss = new WebSocket.Server({ port: 8080 });[m
[32m+[m
[32m+[m[32m// Broadcast to all.[m
[32m+[m[32mwss.broadcast = function broadcast(data) {[m
[32m+[m[32m  wss.clients.forEach(function each(client) {[m
[32m+[m[32m    if (client.readyState === WebSocket.OPEN) {[m
[32m+[m[32m      client.send(data);[m
[32m+[m[32m    }[m
[32m+[m[32m  });[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mwss.on('connection', function connection(ws) {[m
[32m+[m[32m  ws.on('message', function incoming(data) {[m
[32m+[m[32m    // Broadcast to everyone else.[m
[32m+[m[32m    wss.clients.forEach(function each(client) {[m
[32m+[m[32m      if (client !== ws && client.readyState === WebSocket.OPEN) {[m
[32m+[m[32m        client.send(data);[m
[32m+[m[32m      }[m
[32m+[m[32m    });[m
[32m+[m[32m  });[m
[32m+[m[32m});[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m### echo.websocket.org demo[m
[32m+[m
[32m+[m[32m```js[m
[32m+[m[32mconst WebSocket = require('ws');[m
[32m+[m
[32m+[m[32mconst ws = new WebSocket('wss://echo.websocket.org/', {[m
[32m+[m[32m  origin: 'https://websocket.org'[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mws.on('open', function open() {[m
[32m+[m[32m  console.log('connected');[m
[32m+[m[32m  ws.send(Date.now());[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mws.on('close', function close() {[m
[32m+[m[32m  console.log('disconnected');[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mws.on('message', function incoming(data) {[m
[32m+[m[32m  console.log(`Roundtrip time: ${Date.now() - data} ms`);[m
[32m+[m
[32m+[m[32m  setTimeout(function timeout() {[m
[32m+[m[32m    ws.send(Date.now());[m
[32m+[m[32m  }, 500);[m
[32m+[m[32m});[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m### Other examples[m
[32m+[m
[32m+[m[32mFor a full example with a browser client communicating with a ws server, see the[m
[32m+[m[32mexamples folder.[m
[32m+[m
[32m+[m[32mOtherwise, see the test cases.[m
[32m+[m
[32m+[m[32m## Error handling best practices[m
[32m+[m
[32m+[m[32m```js[m
[32m+[m[32m// If the WebSocket is closed before the following send is attempted[m
[32m+[m[32mws.send('something');[m
[32m+[m
[32m+[m[32m// Errors (both immediate and async write errors) can be detected in an optional[m
[32m+[m[32m// callback. The callback is also the only way of being notified that data has[m
[32m+[m[32m// actually been sent.[m
[32m+[m[32mws.send('something', function ack(error) {[m
[32m+[m[32m  // If error is not defined, the send has been completed, otherwise the error[m
[32m+[m[32m  // object will indicate what failed.[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32m// Immediate errors can also be handled with `try...catch`, but **note** that[m
[32m+[m[32m// since sends are inherently asynchronous, socket write failures will *not* be[m
[32m+[m[32m// captured when this technique is used.[m
[32m+[m[32mtry {[m
[32m+[m[32m  ws.send('something');[m
[32m+[m[32m} catch (e) {[m
[32m+[m[32m  /* handle error */[m
[32m+[m[32m}[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## FAQ[m
[32m+[m
[32m+[m[32m### How to get the IP address of the client?[m
[32m+[m
[32m+[m[32mThe remote IP address can be obtained from the raw socket.[m
[32m+[m
[32m+[m[32m```js[m
[32m+[m[32mconst WebSocket = require('ws');[m
[32m+[m
[32m+[m[32mconst wss = new WebSocket.Server({ port: 8080 });[m
[32m+[m
[32m+[m[32mwss.on('connection', function connection(ws, req) {[m
[32m+[m[32m  const ip = req.connection.remoteAddress;[m
[32m+[m[32m});[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mWhen the server runs behind a proxy like NGINX, the de-facto standard is to use[m
[32m+[m[32mthe `X-Forwarded-For` header.[m
[32m+[m
[32m+[m[32m```js[m
[32m+[m[32mwss.on('connection', function connection(ws, req) {[m
[32m+[m[32m  const ip = req.headers['x-forwarded-for'].split(/\s*,\s*/)[0];[m
[32m+[m[32m});[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m### How to detect and close broken connections?[m
[32m+[m
[32m+[m[32mSometimes the link between the server and the client can be interrupted in a way[m
[32m+[m[32mthat keeps both the server and the client unaware of the broken state of the[m
[32m+[m[32mconnection (e.g. when pulling the cord).[m
[32m+[m
[32m+[m[32mIn these cases ping messages can be used as a means to verify that the remote[m
[32m+[m[32mendpoint is still responsive.[m
[32m+[m
[32m+[m[32m```js[m
[32m+[m[32mconst WebSocket = require('ws');[m
[32m+[m
[32m+[m[32mfunction noop() {}[m
[32m+[m
[32m+[m[32mfunction heartbeat() {[m
[32m+[m[32m  this.isAlive = true;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mconst wss = new WebSocket.Server({ port: 8080 });[m
[32m+[m
[32m+[m[32mwss.on('connection', function connection(ws) {[m
[32m+[m[32m  ws.isAlive = true;[m
[32m+[m[32m  ws.on('pong', heartbeat);[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mconst interval = setInterval(function ping() {[m
[32m+[m[32m  wss.clients.forEach(function each(ws) {[m
[32m+[m[32m    if (ws.isAlive === false) return ws.terminate();[m
[32m+[m
[32m+[m[32m    ws.isAlive = false;[m
[32m+[m[32m    ws.ping(noop);[m
[32m+[m[32m  });[m
[32m+[m[32m}, 30000);[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mPong messages are automatically sent in response to ping messages as required by[m
[32m+[m[32mthe spec.[m
[32m+[m
[32m+[m[32mJust like the server example above your clients might as well lose connection[m
[32m+[m[32mwithout knowing it. You might want to add a ping listener on your clients to[m
[32m+[m[32mprevent that. A simple implementation would be:[m
[32m+[m
[32m+[m[32m```js[m
[32m+[m[32mconst WebSocket = require('ws');[m
[32m+[m
[32m+[m[32mfunction heartbeat() {[m
[32m+[m[32m  clearTimeout(this.pingTimeout);[m
[32m+[m
[32m+[m[32m  // Use `WebSocket#terminate()` and not `WebSocket#close()`. Delay should be[m
[32m+[m[32m  // equal to the interval at which your server sends out pings plus a[m
[32m+[m[32m  // conservative assumption of the latency.[m
[32m+[m[32m  this.pingTimeout = setTimeout(() => {[m
[32m+[m[32m    this.terminate();[m
[32m+[m[32m  }, 30000 + 1000);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mconst client = new WebSocket('wss://echo.websocket.org/');[m
[32m+[m
[32m+[m[32mclient.on('open', heartbeat);[m
[32m+[m[32mclient.on('ping', heartbeat);[m
[32m+[m[32mclient.on('close', function clear() {[m
[32m+[m[32m  clearTimeout(this.pingTimeout);[m
[32m+[m[32m});[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m### How to connect via a proxy?[m
[32m+[m
[32m+[m[32mUse a custom `http.Agent` implementation like [https-proxy-agent][] or[m
[32m+[m[32m[socks-proxy-agent][].[m
[32m+[m
[32m+[m[32m## Changelog[m
[32m+[m
[32m+[m[32mWe're using the GitHub [releases][changelog] for changelog entries.[m
[32m+[m
[32m+[m[32m## License[m
[32m+[m
[32m+[m[32m[MIT](LICENSE)[m
[32m+[m
[32m+[m[32m[https-proxy-agent]: https://github.com/TooTallNate/node-https-proxy-agent[m
[32m+[m[32m[socks-proxy-agent]: https://github.com/TooTallNate/node-socks-proxy-agent[m
[32m+[m[32m[client-report]: http://websockets.github.io/ws/autobahn/clients/[m
[32m+[m[32m[server-report]: http://websockets.github.io/ws/autobahn/servers/[m
[32m+[m[32m[permessage-deflate]: https://tools.ietf.org/html/rfc7692[m
[32m+[m[32m[changelog]: https://github.com/websockets/ws/releases[m
[32m+[m[32m[node-zlib-bug]: https://github.com/nodejs/node/issues/8871[m
[32m+[m[32m[node-zlib-deflaterawdocs]:[m
[32m+[m[32m  https://nodejs.org/api/zlib.html#zlib_zlib_createdeflateraw_options[m
[32m+[m[32m[ws-server-options]:[m
[32m+[m[32m  https://github.com/websockets/ws/blob/master/doc/ws.md#new-websocketserveroptions-callback[m
[1mdiff --git a/node_modules/ws/browser.js b/node_modules/ws/browser.js[m
[1mnew file mode 100644[m
[1mindex 0000000..7820779[m
[1m--- /dev/null[m
[1m+++ b/node_modules/ws/browser.js[m
[36m@@ -0,0 +1,8 @@[m
[32m+[m[32m'use strict';[m
[32m+[m
[32m+[m[32mmodule.exports = function() {[m
[32m+[m[32m  throw new Error([m
[32m+[m[32m    'ws does not work in the browser. Browser clients must use the native ' +[m
[32m+[m[32m      'WebSocket object'[m
[32m+[m[32m  );[m
[32m+[m[32m};[m
[1mdiff --git a/node_modules/ws/index.js b/node_modules/ws/index.js[m
[1mnew file mode 100644[m
[1mindex 0000000..b8d6be1[m
[1m--- /dev/null[m
[1m+++ b/node_modules/ws/index.js[m
[36m@@ -0,0 +1,9 @@[m
[32m+[m[32m'use strict';[m
[32m+[m
[32m+[m[32mconst WebSocket = require('./lib/websocket');[m
[32m+[m
[32m+[m[32mWebSocket.Server = require('./lib/websocket-server');[m
[32m+[m[32mWebSocket.Receiver = require('./lib/receiver');[m
[32m+[m[32mWebSocket.Sender = require('./lib/sender');[m
[32m+[m
[32m+[m[32mmodule.exports = WebSocket;[m
[1mdiff --git a/node_modules/ws/lib/buffer-util.js b/node_modules/ws/lib/buffer-util.js[m
[1mnew file mode 100644[m
[1mindex 0000000..8fcb88f[m
[1m--- /dev/null[m
[1m+++ b/node_modules/ws/lib/buffer-util.js[m
[36m@@ -0,0 +1,144 @@[m
[32m+[m[32m'use strict';[m
[32m+[m
[32m+[m[32mconst { EMPTY_BUFFER } = require('./constants');[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Merges an array of buffers into a new buffer.[m
[32m+[m[32m *[m
[32m+[m[32m * @param {Buffer[]} list The array of buffers to concat[m
[32m+[m[32m * @param {Number} totalLength The total length of buffers in the list[m
[32m+[m[32m * @return {Buffer} The resulting buffer[m
[32m+[m[32m * @public[m
[32m+[m[32m */[m
[32m+[m[32mfunction concat(list, totalLength) {[m
[32m+[m[32m  if (list.length === 0) return EMPTY_BUFFER;[m
[32m+[m[32m  if (list.length === 1) return list[0];[m
[32m+[m
[32m+[m[32m  const target = Buffer.allocUnsafe(totalLength);[m
[32m+[m[32m  var offset = 0;[m
[32m+[m
[32m+[m[32m  for (var i = 0; i < list.length; i++) {[m
[32m+[m[32m    const buf = list[i];[m
[32m+[m[32m    buf.copy(target, offset);[m
[32m+[m[32m    offset += buf.length;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  return target;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Masks a buffer using the given mask.[m
[32m+[m[32m *[m
[32m+[m[32m * @param {Buffer} source The buffer to mask[m
[32m+[m[32m * @param {Buffer} mask The mask to use[m
[32m+[m[32m * @param {Buffer} output The buffer where to store the result[m
[32m+[m[32m * @param {Number} offset The offset at which to start writing[m
[32m+[m[32m * @param {Number} length The number of bytes to mask.[m
[32m+[m[32m * @public[m
[32m+[m[32m */[m
[32m+[m[32mfunction _mask(source, mask, output, offset, length) {[m
[32m+[m[32m  for (var i = 0; i < length; i++) {[m
[32m+[m[32m    output[offset + i] = source[i] ^ mask[i & 3];[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Unmasks a buffer using the given mask.[m
[32m+[m[32m *[m
[32m+[m[32m * @param {Buffer} buffer The buffer to unmask[m
[32m+[m[32m * @param {Buffer} mask The mask to use[m
[32m+[m[32m * @public[m
[32m+[m[32m */[m
[32m+[m[32mfunction _unmask(buffer, mask) {[m
[32m+[m[32m  // Required until https://github.com/nodejs/node/issues/9006 is resolved.[m
[32m+[m[32m  const length = buffer.length;[m
[32m+[m[32m  for (var i = 0; i < length; i++) {[m
[32m+[m[32m    buffer[i] ^= mask[i & 3];[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Converts a buffer to an `ArrayBuffer`.[m
[32m+[m[32m *[m
[32m+[m[32m * @param {Buffer} buf The buffer to convert[m
[32m+[m[32m * @return {ArrayBuffer} Converted buffer[m
[32m+[m[32m * @public[m
[32m+[m[32m */[m
[32m+[m[32mfunction toArrayBuffer(buf) {[m
[32m+[m[32m  if (buf.byteLength === buf.buffer.byteLength) {[m
[32m+[m[32m    return buf.buffer;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Converts `data` to a `Buffer`.[m
[32m+[m[32m *[m
[32m+[m[32m * @param {*} data The data to convert[m
[32m+[m[32m * @return {Buffer} The buffer[m
[32m+[m[32m * @throws {TypeError}[m
[32m+[m[32m * @public[m
[32m+[m[32m */[m
[32m+[m[32mfunction toBuffer(data) {[m
[32m+[m[32m  toBuffer.readOnly = true;[m
[32m+[m
[32m+[m[32m  if (Buffer.isBuffer(data)) return data;[m
[32m+[m
[32m+[m[32m  var buf;[m
[32m+[m
[32m+[m[32m  if (data instanceof ArrayBuffer) {[m
[32m+[m[32m    buf = Buffer.from(data);[m
[32m+[m[32m  } else if (ArrayBuffer.isView(data)) {[m
[32m+[m[32m    buf = viewToBuffer(data);[m
[32m+[m[32m  } else {[m
[32m+[m[32m    buf = Buffer.from(data);[m
[32m+[m[32m    toBuffer.readOnly = false;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  return buf;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Converts an `ArrayBuffer` view into a buffer.[m
[32m+[m[32m *[m
[32m+[m[32m * @param {(DataView|TypedArray)} view The view to convert[m
[32m+[m[32m * @return {Buffer} Converted view[m
[32m+[m[32m * @private[m
[32m+[m[32m */[m
[32m+[m[32mfunction viewToBuffer(view) {[m
[32m+[m[32m  const buf = Buffer.from(view.buffer);[m
[32m+[m
[32m+[m[32m  if (view.byteLength !== view.buffer.byteLength) {[m
[32m+[m[32m    return buf.slice(view.byteOffset, view.byteOffset + view.byteLength);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  return buf;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mtry {[m
[32m+[m[32m  const bufferUtil = require('bufferutil');[m
[32m+[m[32m  const bu = bufferUtil.BufferUtil || bufferUtil;[m
[32m+[m
[32m+[m[32m  module.exports = {[m
[32m+[m[32m    concat,[m
[32m+[m[32m    mask(source, mask, output, offset, length) {[m
[32m+[m[32m      if (length < 48) _mask(source, mask, output, offset, length);[m
[32m+[m[32m      else bu.mask(source, mask, output, offset, length);[m
[32m+[m[32m    },[m
[32m+[m[32m    toArrayBuffer,[m
[32m+[m[32m    toBuffer,[m
[32m+[m[32m    unmask(buffer, mask) {[m
[32m+[m[32m      if (buffer.length < 32) _unmask(buffer, mask);[m
[32m+[m[32m      else bu.unmask(buffer, mask);[m
[32m+[m[32m    }[m
[32m+[m[32m  };[m
[32m+[m[32m} catch (e) /* istanbul ignore next */ {[m
[32m+[m[32m  module.exports = {[m
[32m+[m[32m    concat,[m
[32m+[m[32m    mask: _mask,[m
[32m+[m[32m    toArrayBuffer,[m
[32m+[m[32m    toBuffer,[m
[32m+[m[32m    unmask: _unmask[m
[32m+[m[32m  };[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/ws/lib/constants.js b/node_modules/ws/lib/constants.js[m
[1mnew file mode 100644[m
[1mindex 0000000..4082981[m
[1m--- /dev/null[m
[1m+++ b/node_modules/ws/lib/constants.js[m
[36m@@ -0,0 +1,10 @@[m
[32m+[m[32m'use strict';[m
[32m+[m
[32m+[m[32mmodule.exports = {[m
[32m+[m[32m  BINARY_TYPES: ['nodebuffer', 'arraybuffer', 'fragments'],[m
[32m+[m[32m  GUID: '258EAFA5-E914-47DA-95CA-C5AB0DC85B11',[m
[32m+[m[32m  kStatusCode: Symbol('status-code'),[m
[32m+[m[32m  kWebSocket: Symbol('websocket'),[m
[32m+[m[32m  EMPTY_BUFFER: Buffer.alloc(0),[m
[32m+[m[32m  NOOP: () => {}[m
[32m+[m[32m};[m
[1mdiff --git a/node_modules/ws/lib/event-target.js b/node_modules/ws/lib/event-target.js[m
[1mnew file mode 100644[m
[1mindex 0000000..44c81d9[m
[1m--- /dev/null[m
[1m+++ b/node_modules/ws/lib/event-target.js[m
[36m@@ -0,0 +1,170 @@[m
[32m+[m[32m'use strict';[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Class representing an event.[m
[32m+[m[32m *[m
[32m+[m[32m * @private[m
[32m+[m[32m */[m
[32m+[m[32mclass Event {[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Create a new `Event`.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param {String} type The name of the event[m
[32m+[m[32m   * @param {Object} target A reference to the target to which the event was dispatched[m
[32m+[m[32m   */[m
[32m+[m[32m  constructor(type, target) {[m
[32m+[m[32m    this.target = target;[m
[32m+[m[32m    this.type = type;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Class representing a message event.[m
[32m+[m[32m *[m
[32m+[m[32m * @extends Event[m
[32m+[m[32m * @private[m
[32m+[m[32m */[m
[32m+[m[32mclass MessageEvent extends Event {[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Create a new `MessageEvent`.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param {(String|Buffer|ArrayBuffer|Buffer[])} data The received data[m
[32m+[m[32m   * @param {WebSocket} target A reference to the target to which the event was dispatched[m
[32m+[m[32m   */[m
[32m+[m[32m  constructor(data, target) {[m
[32m+[m[32m    super('message', target);[m
[32m+[m
[32m+[m[32m    this.data = data;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Class representing a close event.[m
[32m+[m[32m *[m
[32m+[m[32m * @extends Event[m
[32m+[m[32m * @private[m
[32m+[m[32m */[m
[32m+[m[32mclass CloseEvent extends Event {[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Create a new `CloseEvent`.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param {Number} code The status code explaining why the connection is being closed[m
[32m+[m[32m   * @param {String} reason A human-readable string explaining why the connection is closing[m
[32m+[m[32m   * @param {WebSocket} target A reference to the target to which the event was dispatched[m
[32m+[m[32m   */[m
[32m+[m[32m  constructor(code, reason, target) {[m
[32m+[m[32m    super('close', target);[m
[32m+[m
[32m+[m[32m    this.wasClean = target._closeFrameReceived && target._closeFrameSent;[m
[32m+[m[32m    this.reason = reason;[m
[32m+[m[32m    this.code = code;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Class representing an open event.[m
[32m+[m[32m *[m
[32m+[m[32m * @extends Event[m
[32m+[m[32m * @private[m
[32m+[m[32m */[m
[32m+[m[32mclass OpenEvent extends Event {[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Create a new `OpenEvent`.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param {WebSocket} target A reference to the target to which the event was dispatched[m
[32m+[m[32m   */[m
[32m+[m[32m  constructor(target) {[m
[32m+[m[32m    super('open', target);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Class representing an error event.[m
[32m+[m[32m *[m
[32m+[m[32m * @extends Event[m
[32m+[m[32m * @private[m
[32m+[m[32m */[m
[32m+[m[32mclass ErrorEvent extends Event {[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Create a new `ErrorEvent`.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param {Object} error The error that generated this event[m
[32m+[m[32m   * @param {WebSocket} target A reference to the target to which the event was dispatched[m
[32m+[m[32m   */[m
[32m+[m[32m  constructor(error, target) {[m
[32m+[m[32m    super('error', target);[m
[32m+[m
[32m+[m[32m    this.message = error.message;[m
[32m+[m[32m    this.error = error;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * This provides methods for emulating the `EventTarget` interface. It's not[m
[32m+[m[32m * meant to be used directly.[m
[32m+[m[32m *[m
[32m+[m[32m * @mixin[m
[32m+[m[32m */[m
[32m+[m[32mconst EventTarget = {[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Register an event listener.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param {String} method A string representing the event type to listen for[m
[32m+[m[32m   * @param {Function} listener The listener to add[m
[32m+[m[32m   * @public[m
[32m+[m[32m   */[m
[32m+[m[32m  addEventListener(method, listener) {[m
[32m+[m[32m    if (typeof listener !== 'function') return;[m
[32m+[m
[32m+[m[32m    function onMessage(data) {[m
[32m+[m[32m      listener.call(this, new MessageEvent(data, this));[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    function onClose(code, message) {[m
[32m+[m[32m      listener.call(this, new CloseEvent(code, message, this));[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    function onError(error) {[m
[32m+[m[32m      listener.call(this, new ErrorEvent(error, this));[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    function onOpen() {[m
[32m+[m[32m      listener.call(this, new OpenEvent(this));[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (method === 'message') {[m
[32m+[m[32m      onMessage._listener = listener;[m
[32m+[m[32m      this.on(method, onMessage);[m
[32m+[m[32m    } else if (method === 'close') {[m
[32m+[m[32m      onClose._listener = listener;[m
[32m+[m[32m      this.on(method, onClose);[m
[32m+[m[32m    } else if (method === 'error') {[m
[32m+[m[32m      onError._listener = listener;[m
[32m+[m[32m      this.on(method, onError);[m
[32m+[m[32m    } else if (method === 'open') {[m
[32m+[m[32m      onOpen._listener = listener;[m
[32m+[m[32m      this.on(method, onOpen);[m
[32m+[m[32m    } else {[m
[32m+[m[32m      this.on(method, listener);[m
[32m+[m[32m    }[m
[32m+[m[32m  },[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Remove an event listener.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param {String} method A string representing the event type to remove[m
[32m+[m[32m   * @param {Function} listener The listener to remove[m
[32m+[m[32m   * @public[m
[32m+[m[32m   */[m
[32m+[m[32m  removeEventListener(method, listener) {[m
[32m+[m[32m    const listeners = this.listeners(method);[m
[32m+[m
[32m+[m[32m    for (var i = 0; i < listeners.length; i++) {[m
[32m+[m[32m      if (listeners[i] === listener || listeners[i]._listener === listener) {[m
[32m+[m[32m        this.removeListener(method, listeners[i]);[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mmodule.exports = EventTarget;[m
[1mdiff --git a/node_modules/ws/lib/extension.js b/node_modules/ws/lib/extension.js[m
[1mnew file mode 100644[m
[1mindex 0000000..47096b9[m
[1m--- /dev/null[m
[1m+++ b/node_modules/ws/lib/extension.js[m
[36m@@ -0,0 +1,222 @@[m
[32m+[m[32m'use strict';[m
[32m+[m
[32m+[m[32m//[m
[32m+[m[32m// Allowed token characters:[m
[32m+[m[32m//[m
[32m+[m[32m// '!', '#', '$', '%', '&', ''', '*', '+', '-',[m
[32m+[m[32m// '.', 0-9, A-Z, '^', '_', '`', a-z, '|', '~'[m
[32m+[m[32m//[m
[32m+[m[32m// tokenChars[32] === 0 // ' '[m
[32m+[m[32m// tokenChars[33] === 1 // '!'[m
[32m+[m[32m// tokenChars[34] === 0 // '"'[m
[32m+[m[32m// ...[m
[32m+[m[32m//[m
[32m+[m[32m// prettier-ignore[m
[32m+[m[32mconst tokenChars = [[m
[32m+[m[32m  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 0 - 15[m
[32m+[m[32m  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 16 - 31[m
[32m+[m[32m  0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, // 32 - 47[m
[32m+[m[32m  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, // 48 - 63[m
[32m+[m[32m  0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 64 - 79[m
[32m+[m[32m  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, // 80 - 95[m
[32m+[m[32m  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 96 - 111[m
[32m+[m[32m  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 // 112 - 127[m
[32m+[m[32m];[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Adds an offer to the map of extension offers or a parameter to the map of[m
[32m+[m[32m * parameters.[m
[32m+[m[32m *[m
[32m+[m[32m * @param {Object} dest The map of extension offers or parameters[m
[32m+[m[32m * @param {String} name The extension or parameter name[m
[32m+[m[32m * @param {(Object|Boolean|String)} elem The extension parameters or the[m
[32m+[m[32m *     parameter value[m
[32m+[m[32m * @private[m
[32m+[m[32m */[m
[32m+[m[32mfunction push(dest, name, elem) {[m
[32m+[m[32m  if (Object.prototype.hasOwnProperty.call(dest, name)) dest[name].push(elem);[m
[32m+[m[32m  else dest[name] = [elem];[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Parses the `Sec-WebSocket-Extensions` header into an object.[m
[32m+[m[32m *[m
[32m+[m[32m * @param {String} header The field value of the header[m
[32m+[m[32m * @return {Object} The parsed object[m
[32m+[m[32m * @public[m
[32m+[m[32m */[m
[32m+[m[32mfunction parse(header) {[m
[32m+[m[32m  const offers = {};[m
[32m+[m
[32m+[m[32m  if (header === undefined || header === '') return offers;[m
[32m+[m
[32m+[m[32m  var params = {};[m
[32m+[m[32m  var mustUnescape = false;[m
[32m+[m[32m  var isEscaping = false;[m
[32m+[m[32m  var inQuotes = false;[m
[32m+[m[32m  var extensionName;[m
[32m+[m[32m  var paramName;[m
[32m+[m[32m  var start = -1;[m
[32m+[m[32m  var end = -1;[m
[32m+[m
[32m+[m[32m  for (var i = 0; i < header.length; i++) {[m
[32m+[m[32m    const code = header.charCodeAt(i);[m
[32m+[m
[32m+[m[32m    if (extensionName === undefined) {[m
[32m+[m[32m      if (end === -1 && tokenChars[code] === 1) {[m
[32m+[m[32m        if (start === -1) start = i;[m
[32m+[m[32m      } else if (code === 0x20 /* ' ' */ || code === 0x09 /* '\t' */) {[m
[32m+[m[32m        if (end === -1 && start !== -1) end = i;[m
[32m+[m[32m      } else if (code === 0x3b /* ';' */ || code === 0x2c /* ',' */) {[m
[32m+[m[32m        if (start === -1) {[m
[32m+[m[32m          throw new SyntaxError(`Unexpected character at index ${i}`);[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        if (end === -1) end = i;[m
[32m+[m[32m        const name = header.slice(start, end);[m
[32m+[m[32m        if (code === 0x2c) {[m
[32m+[m[32m          push(offers, name, params);[m
[32m+[m[32m          params = {};[m
[32m+[m[32m        } else {[m
[32m+[m[32m          extensionName = name;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        start = end = -1;[m
[32m+[m[32m      } else {[m
[32m+[m[32m        throw new SyntaxError(`Unexpected character at index ${i}`);[m
[32m+[m[32m      }[m
[32m+[m[32m    } else if (paramName === undefined) {[m
[32m+[m[32m      if (end === -1 && tokenChars[code] === 1) {[m
[32m+[m[32m        if (start === -1) start = i;[m
[32m+[m[32m      } else if (code === 0x20 || code === 0x09) {[m
[32m+[m[32m        if (end === -1 && start !== -1) end = i;[m
[32m+[m[32m      } else if (code === 0x3b || code === 0x2c) {[m
[32m+[m[32m        if (start === -1) {[m
[32m+[m[32m          throw new SyntaxError(`Unexpected character at index ${i}`);[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        if (end === -1) end = i;[m
[32m+[m[32m        push(params, header.slice(start, end), true);[m
[32m+[m[32m        if (code === 0x2c) {[m
[32m+[m[32m          push(offers, extensionName, params);[m
[32m+[m[32m          params = {};[m
[32m+[m[32m          extensionName = undefined;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        start = end = -1;[m
[32m+[m[32m      } else if (code === 0x3d /* '=' */ && start !== -1 && end === -1) {[m
[32m+[m[32m        paramName = header.slice(start, i);[m
[32m+[m[32m        start = end = -1;[m
[32m+[m[32m      } else {[m
[32m+[m[32m        throw new SyntaxError(`Unexpected character at index ${i}`);[m
[32m+[m[32m      }[m
[32m+[m[32m    } else {[m
[32m+[m[32m      //[m
[32m+[m[32m      // The value of a quoted-string after unescaping must conform to the[m
[32m+[m[32m      // token ABNF, so only token characters are valid.[m
[32m+[m[32m      // Ref: https://tools.ietf.org/html/rfc6455#section-9.1[m
[32m+[m[32m      //[m
[32m+[m[32m      if (isEscaping) {[m
[32m+[m[32m        if (tokenChars[code] !== 1) {[m
[32m+[m[32m          throw new SyntaxError(`Unexpected character at index ${i}`);[m
[32m+[m[32m        }[m
[32m+[m[32m        if (start === -1) start = i;[m
[32m+[m[32m        else if (!mustUnescape) mustUnescape = true;[m
[32m+[m[32m        isEscaping = false;[m
[32m+[m[32m      } else if (inQuotes) {[m
[32m+[m[32m        if (tokenChars[code] === 1) {[m
[32m+[m[32m          if (start === -1) start = i;[m
[32m+[m[32m        } else if (code === 0x22 /* '"' */ && start !== -1) {[m
[32m+[m[32m          inQuotes = false;[m
[32m+[m[32m          end = i;[m
[32m+[m[32m        } else if (code === 0x5c /* '\' */) {[m
[32m+[m[32m          isEscaping = true;[m
[32m+[m[32m        } else {[m
[32m+[m[32m          throw new SyntaxError(`Unexpected character at index ${i}`);[m
[32m+[m[32m        }[m
[32m+[m[32m      } else if (code === 0x22 && header.charCodeAt(i - 1) === 0x3d) {[m
[32m+[m[32m        inQuotes = true;[m
[32m+[m[32m      } else if (end === -1 && tokenChars[code] === 1) {[m
[32m+[m[32m        if (start === -1) start = i;[m
[32m+[m[32m      } else if (start !== -1 && (code === 0x20 || code === 0x09)) {[m
[32m+[m[32m        if (end === -1) end = i;[m
[32m+[m[32m      } else if (code === 0x3b || code === 0x2c) {[m
[32m+[m[32m        if (start === -1) {[m
[32m+[m[32m          throw new SyntaxError(`Unexpected character at index ${i}`);[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        if (end === -1) end = i;[m
[32m+[m[32m        var value = header.slice(start, end);[m
[32m+[m[32m        if (mustUnescape) {[m
[32m+[m[32m          value = value.replace(/\\/g, '');[m
[32m+[m[32m          mustUnescape = false;[m
[32m+[m[32m        }[m
[32m+[m[32m        push(params, paramName, value);[m
[32m+[m[32m        if (code === 0x2c) {[m
[32m+[m[32m          push(offers, extensionName, params);[m
[32m+[m[32m          params = {};[m
[32m+[m[32m          extensionName = undefined;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        paramName = undefined;[m
[32m+[m[32m        start = end = -1;[m
[32m+[m[32m      } else {[m
[32m+[m[32m        throw new SyntaxError(`Unexpected character at index ${i}`);[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if (start === -1 || inQuotes) {[m
[32m+[m[32m    throw new SyntaxError('Unexpected end of input');[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if (end === -1) end = i;[m
[32m+[m[32m  const token = header.slice(start, end);[m
[32m+[m[32m  if (extensionName === undefined) {[m
[32m+[m[32m    push(offers, token, {});[m
[32m+[m[32m  } else {[m
[32m+[m[32m    if (paramName === undefined) {[m
[32m+[m[32m      push(params, token, true);[m
[32m+[m[32m    } else if (mustUnescape) {[m
[32m+[m[32m      push(params, paramName, token.replace(/\\/g, ''));[m
[32m+[m[32m    } else {[m
[32m+[m[32m      push(params, paramName, token);[m
[32m+[m[32m    }[m
[32m+[m[32m    push(offers, extensionName, params);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  return offers;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Builds the `Sec-WebSocket-Extensions` header field value.[m
[32m+[m[32m *[m
[32m+[m[32m * @param {Object} extensions The map of extensions and parameters to format[m
[32m+[m[32m * @return {String} A string representing the given object[m
[32m+[m[32m * @public[m
[32m+[m[32m */[m
[32m+[m[32mfunction format(extensions) {[m
[32m+[m[32m  return Object.keys(extensions)[m
[32m+[m[32m    .map((extension) => {[m
[32m+[m[32m      var configurations = extensions[extension];[m
[32m+[m[32m      if (!Array.isArray(configurations)) configurations = [configurations];[m
[32m+[m[32m      return configurations[m
[32m+[m[32m        .map((params) => {[m
[32m+[m[32m          return [extension][m
[32m+[m[32m            .concat([m
[32m+[m[32m              Object.keys(params).map((k) => {[m
[32m+[m[32m                var values = params[k];[m
[32m+[m[32m                if (!Array.isArray(values)) values = [values];[m
[32m+[m[32m                return values[m
[32m+[m[32m                  .map((v) => (v === true ? k : `${k}=${v}`))[m
[32m+[m[32m                  .join('; ');[m
[32m+[m[32m              })[m
[32m+[m[32m            )[m
[32m+[m[32m            .join('; ');[m
[32m+[m[32m        })[m
[32m+[m[32m        .join(', ');[m
[32m+[m[32m    })[m
[32m+[m[32m    .join(', ');[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = { format, parse };[m
[1mdiff --git a/node_modules/ws/lib/permessage-deflate.js b/node_modules/ws/lib/permessage-deflate.js[m
[1mnew file mode 100644[m
[1mindex 0000000..9c88764[m
[1m--- /dev/null[m
[1m+++ b/node_modules/ws/lib/permessage-deflate.js[m
[36m@@ -0,0 +1,502 @@[m
[32m+[m[32m'use strict';[m
[32m+[m
[32m+[m[32mconst Limiter = require('async-limiter');[m
[32m+[m[32mconst zlib = require('zlib');[m
[32m+[m
[32m+[m[32mconst bufferUtil = require('./buffer-util');[m
[32m+[m[32mconst { kStatusCode, NOOP } = require('./constants');[m
[32m+[m
[32m+[m[32mconst TRAILER = Buffer.from([0x00, 0x00, 0xff, 0xff]);[m
[32m+[m[32mconst EMPTY_BLOCK = Buffer.from([0x00]);[m
[32m+[m
[32m+[m[32mconst kPerMessageDeflate = Symbol('permessage-deflate');[m
[32m+[m[32mconst kTotalLength = Symbol('total-length');[m
[32m+[m[32mconst kCallback = Symbol('callback');[m
[32m+[m[32mconst kBuffers = Symbol('buffers');[m
[32m+[m[32mconst kError = Symbol('error');[m
[32m+[m
[32m+[m[32m//[m
[32m+[m[32m// We limit zlib concurrency, which prevents severe memory fragmentation[m
[32m+[m[32m// as documented in https://github.com/nodejs/node/issues/8871#issuecomment-250915913[m
[32m+[m[32m// and https://github.com/websockets/ws/issues/1202[m
[32m+[m[32m//[m
[32m+[m[32m// Intentionally global; it's the global thread pool that's an issue.[m
[32m+[m[32m//[m
[32m+[m[32mlet zlibLimiter;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * permessage-deflate implementation.[m
[32m+[m[32m */[m
[32m+[m[32mclass PerMessageDeflate {[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Creates a PerMessageDeflate instance.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param {Object} options Configuration options[m
[32m+[m[32m   * @param {Boolean} options.serverNoContextTakeover Request/accept disabling[m
[32m+[m[32m   *     of server context takeover[m
[32m+[m[32m   * @param {Boolean} options.clientNoContextTakeover Advertise/acknowledge[m
[32m+[m[32m   *     disabling of client context takeover[m
[32m+[m[32m   * @param {(Boolean|Number)} options.serverMaxWindowBits Request/confirm the[m
[32m+[m[32m   *     use of a custom server window size[m
[32m+[m[32m   * @param {(Boolean|Number)} options.clientMaxWindowBits Advertise support[m
[32m+[m[32m   *     for, or request, a custom client window size[m
[32m+[m[32m   * @param {Object} options.zlibDeflateOptions Options to pass to zlib on deflate[m
[32m+[m[32m   * @param {Object} options.zlibInflateOptions Options to pass to zlib on inflate[m
[32m+[m[32m   * @param {Number} options.threshold Size (in bytes) below which messages[m
[32m+[m[32m   *     should not be compressed[m
[32m+[m[32m   * @param {Number} options.concurrencyLimit The number of concurrent calls to[m
[32m+[m[32m   *     zlib[m
[32m+[m[32m   * @param {Boolean} isServer Create the instance in either server or client[m
[32m+[m[32m   *     mode[m
[32m+[m[32m   * @param {Number} maxPayload The maximum allowed message length[m
[32m+[m[32m   */[m
[32m+[m[32m  constructor(options, isServer, maxPayload) {[m
[32m+[m[32m    this._maxPayload = maxPayload | 0;[m
[32m+[m[32m    this._options = options || {};[m
[32m+[m[32m    this._threshold =[m
[32m+[m[32m      this._options.threshold !== undefined ? this._options.threshold : 1024;[m
[32m+[m[32m    this._isServer = !!isServer;[m
[32m+[m[32m    this._deflate = null;[m
[32m+[m[32m    this._inflate = null;[m
[32m+[m
[32m+[m[32m    this.params = null;[m
[32m+[m
[32m+[m[32m    if (!zlibLimiter) {[m
[32m+[m[32m      const concurrency =[m
[32m+[m[32m        this._options.concurrencyLimit !== undefined[m
[32m+[m[32m          ? this._options.concurrencyLimit[m
[32m+[m[32m          : 10;[m
[32m+[m[32m      zlibLimiter = new Limiter({ concurrency });[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * @type {String}[m
[32m+[m[32m   */[m
[32m+[m[32m  static get extensionName() {[m
[32m+[m[32m    return 'permessage-deflate';[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Create an extension negotiation offer.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @return {Object} Extension parameters[m
[32m+[m[32m   * @public[m
[32m+[m[32m   */[m
[32m+[m[32m  offer() {[m
[32m+[m[32m    const params = {};[m
[32m+[m
[32m+[m[32m    if (this._options.serverNoContextTakeover) {[m
[32m+[m[32m      params.server_no_context_takeover = true;[m
[32m+[m[32m    }[m
[32m+[m[32m    if (this._options.clientNoContextTakeover) {[m
[32m+[m[32m      params.client_no_context_takeover = true;[m
[32m+[m[32m    }[m
[32m+[m[32m    if (this._options.serverMaxWindowBits) {[m
[32m+[m[32m      params.server_max_window_bits = this._options.serverMaxWindowBits;[m
[32m+[m[32m    }[m
[32m+[m[32m    if (this._options.clientMaxWindowBits) {[m
[32m+[m[32m      params.client_max_window_bits = this._options.clientMaxWindowBits;[m
[32m+[m[32m    } else if (this._options.clientMaxWindowBits == null) {[m
[32m+[m[32m      params.client_max_window_bits = true;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return params;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Accept an extension negotiation offer/response.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param {Array} configurations The extension negotiation offers/reponse[m
[32m+[m[32m   * @return {Object} Accepted configuration[m
[32m+[m[32m   * @public[m
[32m+[m[32m   */[m
[32m+[m[32m  accept(configurations) {[m
[32m+[m[32m    configurations = this.normalizeParams(configurations);[m
[32m+[m
[32m+[m[32m    this.params = this._isServer[m
[32m+[m[32m      ? this.acceptAsServer(configurations)[m
[32m+[m[32m      : this.acceptAsClient(configurations);[m
[32m+[m
[32m+[m[32m    return this.params;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Releases all resources used by the extension.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @public[m
[32m+[m[32m   */[m
[32m+[m[32m  cleanup() {[m
[32m+[m[32m    if (this._inflate) {[m
[32m+[m[32m      this._inflate.close();[m
[32m+[m[32m      this._inflate = null;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (this._deflate) {[m
[32m+[m[32m      this._deflate.close();[m
[32m+[m[32m      this._deflate = null;[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   *  Accept an extension negotiation offer.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param {Array} offers The extension negotiation offers[m
[32m+[m[32m   * @return {Object} Accepted configuration[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  acceptAsServer(offers) {[m
[32m+[m[32m    const opts = this._options;[m
[32m+[m[32m    const accepted = offers.find((params) => {[m
[32m+[m[32m      if ([m
[32m+[m[32m        (opts.serverNoContextTakeover === false &&[m
[32m+[m[32m          params.server_no_context_takeover) ||[m
[32m+[m[32m        (params.server_max_window_bits &&[m
[32m+[m[32m          (opts.serverMaxWindowBits === false ||[m
[32m+[m[32m            (typeof opts.serverMaxWindowBits === 'number' &&[m
[32m+[m[32m              opts.serverMaxWindowBits > params.server_max_window_bits))) ||[m
[32m+[m[32m        (typeof opts.clientMaxWindowBits === 'number' &&[m
[32m+[m[32m          !params.client_max_window_bits)[m
[32m+[m[32m      ) {[m
[32m+[m[32m        return false;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      return true;[m
[32m+[m[32m    });[m
[32m+[m
[32m+[m[32m    if (!accepted) {[m
[32m+[m[32m      throw new Error('None of the extension offers can be accepted');[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (opts.serverNoContextTakeover) {[m
[32m+[m[32m      accepted.server_no_context_takeover = true;[m
[32m+[m[32m    }[m
[32m+[m[32m    if (opts.clientNoContextTakeover) {[m
[32m+[m[32m      accepted.client_no_context_takeover = true;[m
[32m+[m[32m    }[m
[32m+[m[32m    if (typeof opts.serverMaxWindowBits === 'number') {[m
[32m+[m[32m      accepted.server_max_window_bits = opts.serverMaxWindowBits;[m
[32m+[m[32m    }[m
[32m+[m[32m    if (typeof opts.clientMaxWindowBits === 'number') {[m
[32m+[m[32m      accepted.client_max_window_bits = opts.clientMaxWindowBits;[m
[32m+[m[32m    } else if ([m
[32m+[m[32m      accepted.client_max_window_bits === true ||[m
[32m+[m[32m      opts.clientMaxWindowBits === false[m
[32m+[m[32m    ) {[m
[32m+[m[32m      delete accepted.client_max_window_bits;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return accepted;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Accept the extension negotiation response.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param {Array} response The extension negotiation response[m
[32m+[m[32m   * @return {Object} Accepted configuration[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  acceptAsClient(response) {[m
[32m+[m[32m    const params = response[0];[m
[32m+[m
[32m+[m[32m    if ([m
[32m+[m[32m      this._options.clientNoContextTakeover === false &&[m
[32m+[m[32m      params.client_no_context_takeover[m
[32m+[m[32m    ) {[m
[32m+[m[32m      throw new Error('Unexpected parameter "client_no_context_takeover"');[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (!params.client_max_window_bits) {[m
[32m+[m[32m      if (typeof this._options.clientMaxWindowBits === 'number') {[m
[32m+[m[32m        params.client_max_window_bits = this._options.clientMaxWindowBits;[m
[32m+[m[32m      }[m
[32m+[m[32m    } else if ([m
[32m+[m[32m      this._options.clientMaxWindowBits === false ||[m
[32m+[m[32m      (typeof this._options.clientMaxWindowBits === 'number' &&[m
[32m+[m[32m        params.client_max_window_bits > this._options.clientMaxWindowBits)[m
[32m+[m[32m    ) {[m
[32m+[m[32m      throw new Error([m
[32m+[m[32m        'Unexpected or invalid parameter "client_max_window_bits"'[m
[32m+[m[32m      );[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return params;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Normalize parameters.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param {Array} configurations The extension negotiation offers/reponse[m
[32m+[m[32m   * @return {Array} The offers/response with normalized parameters[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  normalizeParams(configurations) {[m
[32m+[m[32m    configurations.forEach((params) => {[m
[32m+[m[32m      Object.keys(params).forEach((key) => {[m
[32m+[m[32m        var value = params[key];[m
[32m+[m
[32m+[m[32m        if (value.length > 1) {[m
[32m+[m[32m          throw new Error(`Parameter "${key}" must have only a single value`);[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        value = value[0];[m
[32m+[m
[32m+[m[32m        if (key === 'client_max_window_bits') {[m
[32m+[m[32m          if (value !== true) {[m
[32m+[m[32m            const num = +value;[m
[32m+[m[32m            if (!Number.isInteger(num) || num < 8 || num > 15) {[m
[32m+[m[32m              throw new TypeError([m
[32m+[m[32m                `Invalid value for parameter "${key}": ${value}`[m
[32m+[m[32m              );[m
[32m+[m[32m            }[m
[32m+[m[32m            value = num;[m
[32m+[m[32m          } else if (!this._isServer) {[m
[32m+[m[32m            throw new TypeError([m
[32m+[m[32m              `Invalid value for parameter "${key}": ${value}`[m
[32m+[m[32m            );[m
[32m+[m[32m          }[m
[32m+[m[32m        } else if (key === 'server_max_window_bits') {[m
[32m+[m[32m          const num = +value;[m
[32m+[m[32m          if (!Number.isInteger(num) || num < 8 || num > 15) {[m
[32m+[m[32m            throw new TypeError([m
[32m+[m[32m              `Invalid value for parameter "${key}": ${value}`[m
[32m+[m[32m            );[m
[32m+[m[32m          }[m
[32m+[m[32m          value = num;[m
[32m+[m[32m        } else if ([m
[32m+[m[32m          key === 'client_no_context_takeover' ||[m
[32m+[m[32m          key === 'server_no_context_takeover'[m
[32m+[m[32m        ) {[m
[32m+[m[32m          if (value !== true) {[m
[32m+[m[32m            throw new TypeError([m
[32m+[m[32m              `Invalid value for parameter "${key}": ${value}`[m
[32m+[m[32m            );[m
[32m+[m[32m          }[m
[32m+[m[32m        } else {[m
[32m+[m[32m          throw new Error(`Unknown parameter "${key}"`);[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        params[key] = value;[m
[32m+[m[32m      });[m
[32m+[m[32m    });[m
[32m+[m
[32m+[m[32m    return configurations;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Decompress data. Concurrency limited by async-limiter.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param {Buffer} data Compressed data[m
[32m+[m[32m   * @param {Boolean} fin Specifies whether or not this is the last fragment[m
[32m+[m[32m   * @param {Function} callback Callback[m
[32m+[m[32m   * @public[m
[32m+[m[32m   */[m
[32m+[m[32m  decompress(data, fin, callback) {[m
[32m+[m[32m    zlibLimiter.push((done) => {[m
[32m+[m[32m      this._decompress(data, fin, (err, result) => {[m
[32m+[m[32m        done();[m
[32m+[m[32m        callback(err, result);[m
[32m+[m[32m      });[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Compress data. Concurrency limited by async-limiter.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param {Buffer} data Data to compress[m
[32m+[m[32m   * @param {Boolean} fin Specifies whether or not this is the last fragment[m
[32m+[m[32m   * @param {Function} callback Callback[m
[32m+[m[32m   * @public[m
[32m+[m[32m   */[m
[32m+[m[32m  compress(data, fin, callback) {[m
[32m+[m[32m    zlibLimiter.push((done) => {[m
[32m+[m[32m      this._compress(data, fin, (err, result) => {[m
[32m+[m[32m        done();[m
[32m+[m[32m        callback(err, result);[m
[32m+[m[32m      });[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Decompress data.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param {Buffer} data Compressed data[m
[32m+[m[32m   * @param {Boolean} fin Specifies whether or not this is the last fragment[m
[32m+[m[32m   * @param {Function} callback Callback[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  _decompress(data, fin, callback) {[m
[32m+[m[32m    const endpoint = this._isServer ? 'client' : 'server';[m
[32m+[m
[32m+[m[32m    if (!this._inflate) {[m
[32m+[m[32m      const key = `${endpoint}_max_window_bits`;[m
[32m+[m[32m      const windowBits =[m
[32m+[m[32m        typeof this.params[key] !== 'number'[m
[32m+[m[32m          ? zlib.Z_DEFAULT_WINDOWBITS[m
[32m+[m[32m          : this.params[key];[m
[32m+[m
[32m+[m[32m      this._inflate = zlib.createInflateRaw([m
[32m+[m[32m        Object.assign({}, this._options.zlibInflateOptions, { windowBits })[m
[32m+[m[32m      );[m
[32m+[m[32m      this._inflate[kPerMessageDeflate] = this;[m
[32m+[m[32m      this._inflate[kTotalLength] = 0;[m
[32m+[m[32m      this._inflate[kBuffers] = [];[m
[32m+[m[32m      this._inflate.on('error', inflateOnError);[m
[32m+[m[32m      this._inflate.on('data', inflateOnData);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    this._inflate[kCallback] = callback;[m
[32m+[m
[32m+[m[32m    this._inflate.write(data);[m
[32m+[m[32m    if (fin) this._inflate.write(TRAILER);[m
[32m+[m
[32m+[m[32m    this._inflate.flush(() => {[m
[32m+[m[32m      const err = this._inflate[kError];[m
[32m+[m
[32m+[m[32m      if (err) {[m
[32m+[m[32m        this._inflate.close();[m
[32m+[m[32m        this._inflate = null;[m
[32m+[m[32m        callback(err);[m
[32m+[m[32m        return;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      const data = bufferUtil.concat([m
[32m+[m[32m        this._inflate[kBuffers],[m
[32m+[m[32m        this._inflate[kTotalLength][m
[32m+[m[32m      );[m
[32m+[m
[32m+[m[32m      if (fin && this.params[`${endpoint}_no_context_takeover`]) {[m
[32m+[m[32m        this._inflate.close();[m
[32m+[m[32m        this._inflate = null;[m
[32m+[m[32m      } else {[m
[32m+[m[32m        this._inflate[kTotalLength] = 0;[m
[32m+[m[32m        this._inflate[kBuffers] = [];[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      callback(null, data);[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Compress data.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param {Buffer} data Data to compress[m
[32m+[m[32m   * @param {Boolean} fin Specifies whether or not this is the last fragment[m
[32m+[m[32m   * @param {Function} callback Callback[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  _compress(data, fin, callback) {[m
[32m+[m[32m    if (!data || data.length === 0) {[m
[32m+[m[32m      process.nextTick(callback, null, EMPTY_BLOCK);[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    const endpoint = this._isServer ? 'server' : 'client';[m
[32m+[m
[32m+[m[32m    if (!this._deflate) {[m
[32m+[m[32m      const key = `${endpoint}_max_window_bits`;[m
[32m+[m[32m      const windowBits =[m
[32m+[m[32m        typeof this.params[key] !== 'number'[m
[32m+[m[32m          ? zlib.Z_DEFAULT_WINDOWBITS[m
[32m+[m[32m          : this.params[key];[m
[32m+[m
[32m+[m[32m      this._deflate = zlib.createDeflateRaw([m
[32m+[m[32m        Object.assign({}, this._options.zlibDeflateOptions, { windowBits })[m
[32m+[m[32m      );[m
[32m+[m
[32m+[m[32m      this._deflate[kTotalLength] = 0;[m
[32m+[m[32m      this._deflate[kBuffers] = [];[m
[32m+[m
[32m+[m[32m      //[m
[32m+[m[32m      // An `'error'` event is emitted, only on Node.js < 10.0.0, if the[m
[32m+[m[32m      // `zlib.DeflateRaw` instance is closed while data is being processed.[m
[32m+[m[32m      // This can happen if `PerMessageDeflate#cleanup()` is called at the wrong[m
[32m+[m[32m      // time due to an abnormal WebSocket closure.[m
[32m+[m[32m      //[m
[32m+[m[32m      this._deflate.on('error', NOOP);[m
[32m+[m[32m      this._deflate.on('data', deflateOnData);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    this._deflate.write(data);[m
[32m+[m[32m    this._deflate.flush(zlib.Z_SYNC_FLUSH, () => {[m
[32m+[m[32m      if (!this._deflate) {[m
[32m+[m[32m        //[m
[32m+[m[32m        // This `if` statement is only needed for Node.js < 10.0.0 because as of[m
[32m+[m[32m        // commit https://github.com/nodejs/node/commit/5e3f5164, the flush[m
[32m+[m[32m        // callback is no longer called if the deflate stream is closed while[m
[32m+[m[32m        // data is being processed.[m
[32m+[m[32m        //[m
[32m+[m[32m        return;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      var data = bufferUtil.concat([m
[32m+[m[32m        this._deflate[kBuffers],[m
[32m+[m[32m        this._deflate[kTotalLength][m
[32m+[m[32m      );[m
[32m+[m
[32m+[m[32m      if (fin) data = data.slice(0, data.length - 4);[m
[32m+[m
[32m+[m[32m      if (fin && this.params[`${endpoint}_no_context_takeover`]) {[m
[32m+[m[32m        this._deflate.close();[m
[32m+[m[32m        this._deflate = null;[m
[32m+[m[32m      } else {[m
[32m+[m[32m        this._deflate[kTotalLength] = 0;[m
[32m+[m[32m        this._deflate[kBuffers] = [];[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      callback(null, data);[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = PerMessageDeflate;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * The listener of the `zlib.DeflateRaw` stream `'data'` event.[m
[32m+[m[32m *[m
[32m+[m[32m * @param {Buffer} chunk A chunk of data[m
[32m+[m[32m * @private[m
[32m+[m[32m */[m
[32m+[m[32mfunction deflateOnData(chunk) {[m
[32m+[m[32m  this[kBuffers].push(chunk);[m
[32m+[m[32m  this[kTotalLength] += chunk.length;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * The listener of the `zlib.InflateRaw` stream `'data'` event.[m
[32m+[m[32m *[m
[32m+[m[32m * @param {Buffer} chunk A chunk of data[m
[32m+[m[32m * @private[m
[32m+[m[32m */[m
[32m+[m[32mfunction inflateOnData(chunk) {[m
[32m+[m[32m  this[kTotalLength] += chunk.length;[m
[32m+[m
[32m+[m[32m  if ([m
[32m+[m[32m    this[kPerMessageDeflate]._maxPayload < 1 ||[m
[32m+[m[32m    this[kTotalLength] <= this[kPerMessageDeflate]._maxPayload[m
[32m+[m[32m  ) {[m
[32m+[m[32m    this[kBuffers].push(chunk);[m
[32m+[m[32m    return;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  this[kError] = new RangeError('Max payload size exceeded');[m
[32m+[m[32m  this[kError][kStatusCode] = 1009;[m
[32m+[m[32m  this.removeListener('data', inflateOnData);[m
[32m+[m[32m  this.reset();[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * The listener of the `zlib.InflateRaw` stream `'error'` event.[m
[32m+[m[32m *[m
[32m+[m[32m * @param {Error} err The emitted error[m
[32m+[m[32m * @private[m
[32m+[m[32m */[m
[32m+[m[32mfunction inflateOnError(err) {[m
[32m+[m[32m  //[m
[32m+[m[32m  // There is no need to call `Zlib#close()` as the handle is automatically[m
[32m+[m[32m  // closed when an error is emitted.[m
[32m+[m[32m  //[m
[32m+[m[32m  this[kPerMessageDeflate]._inflate = null;[m
[32m+[m[32m  err[kStatusCode] = 1007;[m
[32m+[m[32m  this[kCallback](err);[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/ws/lib/receiver.js b/node_modules/ws/lib/receiver.js[m
[1mnew file mode 100644[m
[1mindex 0000000..0a8d76d[m
[1m--- /dev/null[m
[1m+++ b/node_modules/ws/lib/receiver.js[m
[36m@@ -0,0 +1,492 @@[m
[32m+[m[32m'use strict';[m
[32m+[m
[32m+[m[32mconst { Writable } = require('stream');[m
[32m+[m
[32m+[m[32mconst PerMessageDeflate = require('./permessage-deflate');[m
[32m+[m[32mconst {[m
[32m+[m[32m  BINARY_TYPES,[m
[32m+[m[32m  EMPTY_BUFFER,[m
[32m+[m[32m  kStatusCode,[m
[32m+[m[32m  kWebSocket[m
[32m+[m[32m} = require('./constants');[m
[32m+[m[32mconst { concat, toArrayBuffer, unmask } = require('./buffer-util');[m
[32m+[m[32mconst { isValidStatusCode, isValidUTF8 } = require('./validation');[m
[32m+[m
[32m+[m[32mconst GET_INFO = 0;[m
[32m+[m[32mconst GET_PAYLOAD_LENGTH_16 = 1;[m
[32m+[m[32mconst GET_PAYLOAD_LENGTH_64 = 2;[m
[32m+[m[32mconst GET_MASK = 3;[m
[32m+[m[32mconst GET_DATA = 4;[m
[32m+[m[32mconst INFLATING = 5;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * HyBi Receiver implementation.[m
[32m+[m[32m *[m
[32m+[m[32m * @extends stream.Writable[m
[32m+[m[32m */[m
[32m+[m[32mclass Receiver extends Writable {[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Creates a Receiver instance.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param {String} binaryType The type for binary data[m
[32m+[m[32m   * @param {Object} extensions An object containing the negotiated extensions[m
[32m+[m[32m   * @param {Number} maxPayload The maximum allowed message length[m
[32m+[m[32m   */[m
[32m+[m[32m  constructor(binaryType, extensions, maxPayload) {[m
[32m+[m[32m    super();[m
[32m+[m
[32m+[m[32m    this._binaryType = binaryType || BINARY_TYPES[0];[m
[32m+[m[32m    this[kWebSocket] = undefined;[m
[32m+[m[32m    this._extensions = extensions || {};[m
[32m+[m[32m    this._maxPayload = maxPayload | 0;[m
[32m+[m
[32m+[m[32m    this._bufferedBytes = 0;[m
[32m+[m[32m    this._buffers = [];[m
[32m+[m
[32m+[m[32m    this._compressed = false;[m
[32m+[m[32m    this._payloadLength = 0;[m
[32m+[m[32m    this._mask = undefined;[m
[32m+[m[32m    this._fragmented = 0;[m
[32m+[m[32m    this._masked = false;[m
[32m+[m[32m    this._fin = false;[m
[32m+[m[32m    this._opcode = 0;[m
[32m+[m
[32m+[m[32m    this._totalPayloadLength = 0;[m
[32m+[m[32m    this._messageLength = 0;[m
[32m+[m[32m    this._fragments = [];[m
[32m+[m
[32m+[m[32m    this._state = GET_INFO;[m
[32m+[m[32m    this._loop = false;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Implements `Writable.prototype._write()`.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param {Buffer} chunk The chunk of data to write[m
[32m+[m[32m   * @param {String} encoding The character encoding of `chunk`[m
[32m+[m[32m   * @param {Function} cb Callback[m
[32m+[m[32m   */[m
[32m+[m[32m  _write(chunk, encoding, cb) {[m
[32m+[m[32m    if (this._opcode === 0x08 && this._state == GET_INFO) return cb();[m
[32m+[m
[32m+[m[32m    this._bufferedBytes += chunk.length;[m
[32m+[m[32m    this._buffers.push(chunk);[m
[32m+[m[32m    this.startLoop(cb);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Consumes `n` bytes from the buffered data.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param {Number} n The number of bytes to consume[m
[32m+[m[32m   * @return {Buffer} The consumed bytes[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  consume(n) {[m
[32m+[m[32m    this._bufferedBytes -= n;[m
[32m+[m
[32m+[m[32m    if (n === this._buffers[0].length) return this._buffers.shift();[m
[32m+[m
[32m+[m[32m    if (n < this._buffers[0].length) {[m
[32m+[m[32m      const buf = this._buffers[0];[m
[32m+[m[32m      this._buffers[0] = buf.slice(n);[m
[32m+[m[32m      return buf.slice(0, n);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    const dst = Buffer.allocUnsafe(n);[m
[32m+[m
[32m+[m[32m    do {[m
[32m+[m[32m      const buf = this._buffers[0];[m
[32m+[m
[32m+[m[32m      if (n >= buf.length) {[m
[32m+[m[32m        this._buffers.shift().copy(dst, dst.length - n);[m
[32m+[m[32m      } else {[m
[32m+[m[32m        buf.copy(dst, dst.length - n, 0, n);[m
[32m+[m[32m        this._buffers[0] = buf.slice(n);[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      n -= buf.length;[m
[32m+[m[32m    } while (n > 0);[m
[32m+[m
[32m+[m[32m    return dst;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Starts the parsing loop.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param {Function} cb Callback[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  startLoop(cb) {[m
[32m+[m[32m    var err;[m
[32m+[m[32m    this._loop = true;[m
[32m+[m
[32m+[m[32m    do {[m
[32m+[m[32m      switch (this._state) {[m
[32m+[m[32m        case GET_INFO:[m
[32m+[m[32m          err = this.getInfo();[m
[32m+[m[32m          break;[m
[32m+[m[32m        case GET_PAYLOAD_LENGTH_16:[m
[32m+[m[32m          err = this.getPayloadLength16();[m
[32m+[m[32m          break;[m
[32m+[m[32m        case GET_PAYLOAD_LENGTH_64:[m
[32m+[m[32m          err = this.getPayloadLength64();[m
[32m+[m[32m          break;[m
[32m+[m[32m        case GET_MASK:[m
[32m+[m[32m          this.getMask();[m
[32m+[m[32m          break;[m
[32m+[m[32m        case GET_DATA:[m
[32m+[m[32m          err = this.getData(cb);[m
[32m+[m[32m          break;[m
[32m+[m[32m        default:[m
[32m+[m[32m          // `INFLATING`[m
[32m+[m[32m          this._loop = false;[m
[32m+[m[32m          return;[m
[32m+[m[32m      }[m
[32m+[m[32m    } while (this._loop);[m
[32m+[m
[32m+[m[32m    cb(err);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Reads the first two bytes of a frame.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @return {(RangeError|undefined)} A possible error[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  getInfo() {[m
[32m+[m[32m    if (this._bufferedBytes < 2) {[m
[32m+[m[32m      this._loop = false;[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    const buf = this.consume(2);[m
[32m+[m
[32m+[m[32m    if ((buf[0] & 0x30) !== 0x00) {[m
[32m+[m[32m      this._loop = false;[m
[32m+[m[32m      return error(RangeError, 'RSV2 and RSV3 must be clear', true, 1002);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    const compressed = (buf[0] & 0x40) === 0x40;[m
[32m+[m
[32m+[m[32m    if (compressed && !this._extensions[PerMessageDeflate.extensionName]) {[m
[32m+[m[32m      this._loop = false;[m
[32m+[m[32m      return error(RangeError, 'RSV1 must be clear', true, 1002);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    this._fin = (buf[0] & 0x80) === 0x80;[m
[32m+[m[32m    this._opcode = buf[0] & 0x0f;[m
[32m+[m[32m    this._payloadLength = buf[1] & 0x7f;[m
[32m+[m
[32m+[m[32m    if (this._opcode === 0x00) {[m
[32m+[m[32m      if (compressed) {[m
[32m+[m[32m        this._loop = false;[m
[32m+[m[32m        return error(RangeError, 'RSV1 must be clear', true, 1002);[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      if (!this._fragmented) {[m
[32m+[m[32m        this._loop = false;[m
[32m+[m[32m        return error(RangeError, 'invalid opcode 0', true, 1002);[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      this._opcode = this._fragmented;[m
[32m+[m[32m    } else if (this._opcode === 0x01 || this._opcode === 0x02) {[m
[32m+[m[32m      if (this._fragmented) {[m
[32m+[m[32m        this._loop = false;[m
[32m+[m[32m        return error(RangeError, `invalid opcode ${this._opcode}`, true, 1002);[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      this._compressed = compressed;[m
[32m+[m[32m    } else if (this._opcode > 0x07 && this._opcode < 0x0b) {[m
[32m+[m[32m      if (!this._fin) {[m
[32m+[m[32m        this._loop = false;[m
[32m+[m[32m        return error(RangeError, 'FIN must be set', true, 1002);[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      if (compressed) {[m
[32m+[m[32m        this._loop = false;[m
[32m+[m[32m        return error(RangeError, 'RSV1 must be clear', true, 1002);[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      if (this._payloadLength > 0x7d) {[m
[32m+[m[32m        this._loop = false;[m
[32m+[m[32m        return error([m
[32m+[m[32m          RangeError,[m
[32m+[m[32m          `invalid payload length ${this._payloadLength}`,[m
[32m+[m[32m          true,[m
[32m+[m[32m          1002[m
[32m+[m[32m        );[m
[32m+[m[32m      }[m
[32m+[m[32m    } else {[m
[32m+[m[32m      this._loop = false;[m
[32m+[m[32m      return error(RangeError, `invalid opcode ${this._opcode}`, true, 1002);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (!this._fin && !this._fragmented) this._fragmented = this._opcode;[m
[32m+[m[32m    this._masked = (buf[1] & 0x80) === 0x80;[m
[32m+[m
[32m+[m[32m    if (this._payloadLength === 126) this._state = GET_PAYLOAD_LENGTH_16;[m
[32m+[m[32m    else if (this._payloadLength === 127) this._state = GET_PAYLOAD_LENGTH_64;[m
[32m+[m[32m    else return this.haveLength();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Gets extended payload length (7+16).[m
[32m+[m[32m   *[m
[32m+[m[32m   * @return {(RangeError|undefined)} A possible error[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  getPayloadLength16() {[m
[32m+[m[32m    if (this._bufferedBytes < 2) {[m
[32m+[m[32m      this._loop = false;[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    this._payloadLength = this.consume(2).readUInt16BE(0);[m
[32m+[m[32m    return this.haveLength();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Gets extended payload length (7+64).[m
[32m+[m[32m   *[m
[32m+[m[32m   * @return {(RangeError|undefined)} A possible error[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  getPayloadLength64() {[m
[32m+[m[32m    if (this._bufferedBytes < 8) {[m
[32m+[m[32m      this._loop = false;[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    const buf = this.consume(8);[m
[32m+[m[32m    const num = buf.readUInt32BE(0);[m
[32m+[m
[32m+[m[32m    //[m
[32m+[m[32m    // The maximum safe integer in JavaScript is 2^53 - 1. An error is returned[m
[32m+[m[32m    // if payload length is greater than this number.[m
[32m+[m[32m    //[m
[32m+[m[32m    if (num > Math.pow(2, 53 - 32) - 1) {[m
[32m+[m[32m      this._loop = false;[m
[32m+[m[32m      return error([m
[32m+[m[32m        RangeError,[m
[32m+[m[32m        'Unsupported WebSocket frame: payload length > 2^53 - 1',[m
[32m+[m[32m        false,[m
[32m+[m[32m        1009[m
[32m+[m[32m      );[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    this._payloadLength = num * Math.pow(2, 32) + buf.readUInt32BE(4);[m
[32m+[m[32m    return this.haveLength();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Payload length has been read.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @return {(RangeError|undefined)} A possible error[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  haveLength() {[m
[32m+[m[32m    if (this._payloadLength && this._opcode < 0x08) {[m
[32m+[m[32m      this._totalPayloadLength += this._payloadLength;[m
[32m+[m[32m      if (this._totalPayloadLength > this._maxPayload && this._maxPayload > 0) {[m
[32m+[m[32m        this._loop = false;[m
[32m+[m[32m        return error(RangeError, 'Max payload size exceeded', false, 1009);[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (this._masked) this._state = GET_MASK;[m
[32m+[m[32m    else this._state = GET_DATA;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Reads mask bytes.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  getMask() {[m
[32m+[m[32m    if (this._bufferedBytes < 4) {[m
[32m+[m[32m      this._loop = false;[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    this._mask = this.consume(4);[m
[32m+[m[32m    this._state = GET_DATA;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Reads data bytes.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param {Function} cb Callback[m
[32m+[m[32m   * @return {(Error|RangeError|undefined)} A possible error[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  getData(cb) {[m
[32m+[m[32m    var data = EMPTY_BUFFER;[m
[32m+[m
[32m+[m[32m    if (this._payloadLength) {[m
[32m+[m[32m      if (this._bufferedBytes < this._payloadLength) {[m
[32m+[m[32m        this._loop = false;[m
[32m+[m[32m        return;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      data = this.consume(this._payloadLength);[m
[32m+[m[32m      if (this._masked) unmask(data, this._mask);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (this._opcode > 0x07) return this.controlMessage(data);[m
[32m+[m
[32m+[m[32m    if (this._compressed) {[m
[32m+[m[32m      this._state = INFLATING;[m
[32m+[m[32m      this.decompress(data, cb);[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (data.length) {[m
[32m+[m[32m      //[m
[32m+[m[32m      // This message is not compressed so its lenght is the sum of the payload[m
[32m+[m[32m      // length of all fragments.[m
[32m+[m[32m      //[m
[32m+[m[32m      this._messageLength = this._totalPayloadLength;[m
[32m+[m[32m      this._fragments.push(data);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return this.dataMessage();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Decompresses data.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param {Buffer} data Compressed data[m
[32m+[m[32m   * @param {Function} cb Callback[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  decompress(data, cb) {[m
[32m+[m[32m    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];[m
[32m+[m
[32m+[m[32m    perMessageDeflate.decompress(data, this._fin, (err, buf) => {[m
[32m+[m[32m      if (err) return cb(err);[m
[32m+[m
[32m+[m[32m      if (buf.length) {[m
[32m+[m[32m        this._messageLength += buf.length;[m
[32m+[m[32m        if (this._messageLength > this._maxPayload && this._maxPayload > 0) {[m
[32m+[m[32m          return cb([m
[32m+[m[32m            error(RangeError, 'Max payload size exceeded', false, 1009)[m
[32m+[m[32m          );[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        this._fragments.push(buf);[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      const er = this.dataMessage();[m
[32m+[m[32m      if (er) return cb(er);[m
[32m+[m
[32m+[m[32m      this.startLoop(cb);[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Handles a data message.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @return {(Error|undefined)} A possible error[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  dataMessage() {[m
[32m+[m[32m    if (this._fin) {[m
[32m+[m[32m      const messageLength = this._messageLength;[m
[32m+[m[32m      const fragments = this._fragments;[m
[32m+[m
[32m+[m[32m      this._totalPayloadLength = 0;[m
[32m+[m[32m      this._messageLength = 0;[m
[32m+[m[32m      this._fragmented = 0;[m
[32m+[m[32m      this._fragments = [];[m
[32m+[m
[32m+[m[32m      if (this._opcode === 2) {[m
[32m+[m[32m        var data;[m
[32m+[m
[32m+[m[32m        if (this._binaryType === 'nodebuffer') {[m
[32m+[m[32m          data = concat(fragments, messageLength);[m
[32m+[m[32m        } else if (this._binaryType === 'arraybuffer') {[m
[32m+[m[32m          data = toArrayBuffer(concat(fragments, messageLength));[m
[32m+[m[32m        } else {[m
[32m+[m[32m          data = fragments;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        this.emit('message', data);[m
[32m+[m[32m      } else {[m
[32m+[m[32m        const buf = concat(fragments, messageLength);[m
[32m+[m
[32m+[m[32m        if (!isValidUTF8(buf)) {[m
[32m+[m[32m          this._loop = false;[m
[32m+[m[32m          return error(Error, 'invalid UTF-8 sequence', true, 1007);[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        this.emit('message', buf.toString());[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    this._state = GET_INFO;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Handles a control message.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param {Buffer} data Data to handle[m
[32m+[m[32m   * @return {(Error|RangeError|undefined)} A possible error[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  controlMessage(data) {[m
[32m+[m[32m    if (this._opcode === 0x08) {[m
[32m+[m[32m      this._loop = false;[m
[32m+[m
[32m+[m[32m      if (data.length === 0) {[m
[32m+[m[32m        this.emit('conclude', 1005, '');[m
[32m+[m[32m        this.end();[m
[32m+[m[32m      } else if (data.length === 1) {[m
[32m+[m[32m        return error(RangeError, 'invalid payload length 1', true, 1002);[m
[32m+[m[32m      } else {[m
[32m+[m[32m        const code = data.readUInt16BE(0);[m
[32m+[m
[32m+[m[32m        if (!isValidStatusCode(code)) {[m
[32m+[m[32m          return error(RangeError, `invalid status code ${code}`, true, 1002);[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        const buf = data.slice(2);[m
[32m+[m
[32m+[m[32m        if (!isValidUTF8(buf)) {[m
[32m+[m[32m          return error(Error, 'invalid UTF-8 sequence', true, 1007);[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        this.emit('conclude', code, buf.toString());[m
[32m+[m[32m        this.end();[m
[32m+[m[32m      }[m
[32m+[m[32m    } else if (this._opcode === 0x09) {[m
[32m+[m[32m      this.emit('ping', data);[m
[32m+[m[32m    } else {[m
[32m+[m[32m      this.emit('pong', data);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    this._state = GET_INFO;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = Receiver;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Builds an error object.[m
[32m+[m[32m *[m
[32m+[m[32m * @param {(Error|RangeError)} ErrorCtor The error constructor[m
[32m+[m[32m * @param {String} message The error message[m
[32m+[m[32m * @param {Boolean} prefix Specifies whether or not to add a default prefix to[m
[32m+[m[32m *     `message`[m
[32m+[m[32m * @param {Number} statusCode The status code[m
[32m+[m[32m * @return {(Error|RangeError)} The error[m
[32m+[m[32m * @private[m
[32m+[m[32m */[m
[32m+[m[32mfunction error(ErrorCtor, message, prefix, statusCode) {[m
[32m+[m[32m  const err = new ErrorCtor([m
[32m+[m[32m    prefix ? `Invalid WebSocket frame: ${message}` : message[m
[32m+[m[32m  );[m
[32m+[m
[32m+[m[32m  Error.captureStackTrace(err, error);[m
[32m+[m[32m  err[kStatusCode] = statusCode;[m
[32m+[m[32m  return err;[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/ws/lib/sender.js b/node_modules/ws/lib/sender.js[m
[1mnew file mode 100644[m
[1mindex 0000000..51158b1[m
[1m--- /dev/null[m
[1m+++ b/node_modules/ws/lib/sender.js[m
[36m@@ -0,0 +1,358 @@[m
[32m+[m[32m'use strict';[m
[32m+[m
[32m+[m[32mconst { randomBytes } = require('crypto');[m
[32m+[m
[32m+[m[32mconst PerMessageDeflate = require('./permessage-deflate');[m
[32m+[m[32mconst { EMPTY_BUFFER } = require('./constants');[m
[32m+[m[32mconst { isValidStatusCode } = require('./validation');[m
[32m+[m[32mconst { mask: applyMask, toBuffer } = require('./buffer-util');[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * HyBi Sender implementation.[m
[32m+[m[32m */[m
[32m+[m[32mclass Sender {[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Creates a Sender instance.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param {net.Socket} socket The connection socket[m
[32m+[m[32m   * @param {Object} extensions An object containing the negotiated extensions[m
[32m+[m[32m   */[m
[32m+[m[32m  constructor(socket, extensions) {[m
[32m+[m[32m    this._extensions = extensions || {};[m
[32m+[m[32m    this._socket = socket;[m
[32m+[m
[32m+[m[32m    this._firstFragment = true;[m
[32m+[m[32m    this._compress = false;[m
[32m+[m
[32m+[m[32m    this._bufferedBytes = 0;[m
[32m+[m[32m    this._deflating = false;[m
[32m+[m[32m    this._queue = [];[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Frames a piece of data according to the HyBi WebSocket protocol.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param {Buffer} data The data to frame[m
[32m+[m[32m   * @param {Object} options Options object[m
[32m+[m[32m   * @param {Number} options.opcode The opcode[m
[32m+[m[32m   * @param {Boolean} options.readOnly Specifies whether `data` can be modified[m
[32m+[m[32m   * @param {Boolean} options.fin Specifies whether or not to set the FIN bit[m
[32m+[m[32m   * @param {Boolean} options.mask Specifies whether or not to mask `data`[m
[32m+[m[32m   * @param {Boolean} options.rsv1 Specifies whether or not to set the RSV1 bit[m
[32m+[m[32m   * @return {Buffer[]} The framed data as a list of `Buffer` instances[m
[32m+[m[32m   * @public[m
[32m+[m[32m   */[m
[32m+[m[32m  static frame(data, options) {[m
[32m+[m[32m    const merge = options.mask && options.readOnly;[m
[32m+[m[32m    var offset = options.mask ? 6 : 2;[m
[32m+[m[32m    var payloadLength = data.length;[m
[32m+[m
[32m+[m[32m    if (data.length >= 65536) {[m
[32m+[m[32m      offset += 8;[m
[32m+[m[32m      payloadLength = 127;[m
[32m+[m[32m    } else if (data.length > 125) {[m
[32m+[m[32m      offset += 2;[m
[32m+[m[32m      payloadLength = 126;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    const target = Buffer.allocUnsafe(merge ? data.length + offset : offset);[m
[32m+[m
[32m+[m[32m    target[0] = options.fin ? options.opcode | 0x80 : options.opcode;[m
[32m+[m[32m    if (options.rsv1) target[0] |= 0x40;[m
[32m+[m
[32m+[m[32m    target[1] = payloadLength;[m
[32m+[m
[32m+[m[32m    if (payloadLength === 126) {[m
[32m+[m[32m      target.writeUInt16BE(data.length, 2);[m
[32m+[m[32m    } else if (payloadLength === 127) {[m
[32m+[m[32m      target.writeUInt32BE(0, 2);[m
[32m+[m[32m      target.writeUInt32BE(data.length, 6);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (!options.mask) return [target, data];[m
[32m+[m
[32m+[m[32m    const mask = randomBytes(4);[m
[32m+[m
[32m+[m[32m    target[1] |= 0x80;[m
[32m+[m[32m    target[offset - 4] = mask[0];[m
[32m+[m[32m    target[offset - 3] = mask[1];[m
[32m+[m[32m    target[offset - 2] = mask[2];[m
[32m+[m[32m    target[offset - 1] = mask[3];[m
[32m+[m
[32m+[m[32m    if (merge) {[m
[32m+[m[32m      applyMask(data, mask, target, offset, data.length);[m
[32m+[m[32m      return [target];[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    applyMask(data, mask, data, 0, data.length);[m
[32m+[m[32m    return [target, data];[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sends a close message to the other peer.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param {(Number|undefined)} code The status code component of the body[m
[32m+[m[32m   * @param {String} data The message component of the body[m
[32m+[m[32m   * @param {Boolean} mask Specifies whether or not to mask the message[m
[32m+[m[32m   * @param {Function} cb Callback[m
[32m+[m[32m   * @public[m
[32m+[m[32m   */[m
[32m+[m[32m  close(code, data, mask, cb) {[m
[32m+[m[32m    var buf;[m
[32m+[m
[32m+[m[32m    if (code === undefined) {[m
[32m+[m[32m      buf = EMPTY_BUFFER;[m
[32m+[m[32m    } else if (typeof code !== 'number' || !isValidStatusCode(code)) {[m
[32m+[m[32m      throw new TypeError('First argument must be a valid error code number');[m
[32m+[m[32m    } else if (data === undefined || data === '') {[m
[32m+[m[32m      buf = Buffer.allocUnsafe(2);[m
[32m+[m[32m      buf.writeUInt16BE(code, 0);[m
[32m+[m[32m    } else {[m
[32m+[m[32m      buf = Buffer.allocUnsafe(2 + Buffer.byteLength(data));[m
[32m+[m[32m      buf.writeUInt16BE(code, 0);[m
[32m+[m[32m      buf.write(data, 2);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (this._deflating) {[m
[32m+[m[32m      this.enqueue([this.doClose, buf, mask, cb]);[m
[32m+[m[32m    } else {[m
[32m+[m[32m      this.doClose(buf, mask, cb);[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Frames and sends a close message.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param {Buffer} data The message to send[m
[32m+[m[32m   * @param {Boolean} mask Specifies whether or not to mask `data`[m
[32m+[m[32m   * @param {Function} cb Callback[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  doClose(data, mask, cb) {[m
[32m+[m[32m    this.sendFrame([m
[32m+[m[32m      Sender.frame(data, {[m
[32m+[m[32m        fin: true,[m
[32m+[m[32m        rsv1: false,[m
[32m+[m[32m        opcode: 0x08,[m
[32m+[m[32m        mask,[m
[32m+[m[32m        readOnly: false[m
[32m+[m[32m      }),[m
[32m+[m[32m      cb[m
[32m+[m[32m    );[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sends a ping message to the other peer.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param {*} data The message to send[m
[32m+[m[32m   * @param {Boolean} mask Specifies whether or not to mask `data`[m
[32m+[m[32m   * @param {Function} cb Callback[m
[32m+[m[32m   * @public[m
[32m+[m[32m   */[m
[32m+[m[32m  ping(data, mask, cb) {[m
[32m+[m[32m    const buf = toBuffer(data);[m
[32m+[m
[32m+[m[32m    if (this._deflating) {[m
[32m+[m[32m      this.enqueue([this.doPing, buf, mask, toBuffer.readOnly, cb]);[m
[32m+[m[32m    } else {[m
[32m+[m[32m      this.doPing(buf, mask, toBuffer.readOnly, cb);[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Frames and sends a ping message.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param {*} data The message to send[m
[32m+[m[32m   * @param {Boolean} mask Specifies whether or not to mask `data`[m
[32m+[m[32m   * @param {Boolean} readOnly Specifies whether `data` can be modified[m
[32m+[m[32m   * @param {Function} cb Callback[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  doPing(data, mask, readOnly, cb) {[m
[32m+[m[32m    this.sendFrame([m
[32m+[m[32m      Sender.frame(data, {[m
[32m+[m[32m        fin: true,[m
[32m+[m[32m        rsv1: false,[m
[32m+[m[32m        opcode: 0x09,[m
[32m+[m[32m        mask,[m
[32m+[m[32m        readOnly[m
[32m+[m[32m      }),[m
[32m+[m[32m      cb[m
[32m+[m[32m    );[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sends a pong message to the other peer.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param {*} data The message to send[m
[32m+[m[32m   * @param {Boolean} mask Specifies whether or not to mask `data`[m
[32m+[m[32m   * @param {Function} cb Callback[m
[32m+[m[32m   * @public[m
[32m+[m[32m   */[m
[32m+[m[32m  pong(data, mask, cb) {[m
[32m+[m[32m    const buf = toBuffer(data);[m
[32m+[m
[32m+[m[32m    if (this._deflating) {[m
[32m+[m[32m      this.enqueue([this.doPong, buf, mask, toBuffer.readOnly, cb]);[m
[32m+[m[32m    } else {[m
[32m+[m[32m      this.doPong(buf, mask, toBuffer.readOnly, cb);[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Frames and sends a pong message.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param {*} data The message to send[m
[32m+[m[32m   * @param {Boolean} mask Specifies whether or not to mask `data`[m
[32m+[m[32m   * @param {Boolean} readOnly Specifies whether `data` can be modified[m
[32m+[m[32m   * @param {Function} cb Callback[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  doPong(data, mask, readOnly, cb) {[m
[32m+[m[32m    this.sendFrame([m
[32m+[m[32m      Sender.frame(data, {[m
[32m+[m[32m        fin: true,[m
[32m+[m[32m        rsv1: false,[m
[32m+[m[32m        opcode: 0x0a,[m
[32m+[m[32m        mask,[m
[32m+[m[32m        readOnly[m
[32m+[m[32m      }),[m
[32m+[m[32m      cb[m
[32m+[m[32m    );[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sends a data message to the other peer.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param {*} data The message to send[m
[32m+[m[32m   * @param {Object} options Options object[m
[32m+[m[32m   * @param {Boolean} options.compress Specifies whether or not to compress `data`[m
[32m+[m[32m   * @param {Boolean} options.binary Specifies whether `data` is binary or text[m
[32m+[m[32m   * @param {Boolean} options.fin Specifies whether the fragment is the last one[m
[32m+[m[32m   * @param {Boolean} options.mask Specifies whether or not to mask `data`[m
[32m+[m[32m   * @param {Function} cb Callback[m
[32m+[m[32m   * @public[m
[32m+[m[32m   */[m
[32m+[m[32m  send(data, options, cb) {[m
[32m+[m[32m    const buf = toBuffer(data);[m
[32m+[m[32m    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];[m
[32m+[m[32m    var opcode = options.binary ? 2 : 1;[m
[32m+[m[32m    var rsv1 = options.compress;[m
[32m+[m
[32m+[m[32m    if (this._firstFragment) {[m
[32m+[m[32m      this._firstFragment = false;[m
[32m+[m[32m      if (rsv1 && perMessageDeflate) {[m
[32m+[m[32m        rsv1 = buf.length >= perMessageDeflate._threshold;[m
[32m+[m[32m      }[m
[32m+[m[32m      this._compress = rsv1;[m
[32m+[m[32m    } else {[m
[32m+[m[32m      rsv1 = false;[m
[32m+[m[32m      opcode = 0;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (options.fin) this._firstFragment = true;[m
[32m+[m
[32m+[m[32m    if (perMessageDeflate) {[m
[32m+[m[32m      const opts = {[m
[32m+[m[32m        fin: options.fin,[m
[32m+[m[32m        rsv1,[m
[32m+[m[32m        opcode,[m
[32m+[m[32m        mask: options.mask,[m
[32m+[m[32m        readOnly: toBuffer.readOnly[m
[32m+[m[32m      };[m
[32m+[m
[32m+[m[32m      if (this._deflating) {[m
[32m+[m[32m        this.enqueue([this.dispatch, buf, this._compress, opts, cb]);[m
[32m+[m[32m      } else {[m
[32m+[m[32m        this.dispatch(buf, this._compress, opts, cb);[m
[32m+[m[32m      }[m
[32m+[m[32m    } else {[m
[32m+[m[32m      this.sendFrame([m
[32m+[m[32m        Sender.frame(buf, {[m
[32m+[m[32m          fin: options.fin,[m
[32m+[m[32m          rsv1: false,[m
[32m+[m[32m          opcode,[m
[32m+[m[32m          mask: options.mask,[m
[32m+[m[32m          readOnly: toBuffer.readOnly[m
[32m+[m[32m        }),[m
[32m+[m[32m        cb[m
[32m+[m[32m      );[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Dispatches a data message.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param {Buffer} data The message to send[m
[32m+[m[32m   * @param {Boolean} compress Specifies whether or not to compress `data`[m
[32m+[m[32m   * @param {Object} options Options object[m
[32m+[m[32m   * @param {Number} options.opcode The opcode[m
[32m+[m[32m   * @param {Boolean} options.readOnly Specifies whether `data` can be modified[m
[32m+[m[32m   * @param {Boolean} options.fin Specifies whether or not to set the FIN bit[m
[32m+[m[32m   * @param {Boolean} options.mask Specifies whether or not to mask `data`[m
[32m+[m[32m   * @param {Boolean} options.rsv1 Specifies whether or not to set the RSV1 bit[m
[32m+[m[32m   * @param {Function} cb Callback[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  dispatch(data, compress, options, cb) {[m
[32m+[m[32m    if (!compress) {[m
[32m+[m[32m      this.sendFrame(Sender.frame(data, options), cb);[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];[m
[32m+[m
[32m+[m[32m    this._deflating = true;[m
[32m+[m[32m    perMessageDeflate.compress(data, options.fin, (_, buf) => {[m
[32m+[m[32m      this._deflating = false;[m
[32m+[m[32m      options.readOnly = false;[m
[32m+[m[32m      this.sendFrame(Sender.frame(buf, options), cb);[m
[32m+[m[32m      this.dequeue();[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Executes queued send operations.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  dequeue() {[m
[32m+[m[32m    while (!this._deflating && this._queue.length) {[m
[32m+[m[32m      const params = this._queue.shift();[m
[32m+[m
[32m+[m[32m      this._bufferedBytes -= params[1].length;[m
[32m+[m[32m      params[0].apply(this, params.slice(1));[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Enqueues a send operation.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param {Array} params Send operation parameters.[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  enqueue(params) {[m
[32m+[m[32m    this._bufferedBytes += params[1].length;[m
[32m+[m[32m    this._queue.push(params);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sends a frame.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param {Buffer[]} list The frame to send[m
[32m+[m[32m   * @param {Function} cb Callback[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  sendFrame(list, cb) {[m
[32m+[m[32m    if (list.length === 2) {[m
[32m+[m[32m      this._socket.cork();[m
[32m+[m[32m      this._socket.write(list[0]);[m
[32m+[m[32m      this._socket.write(list[1], cb);[m
[32m+[m[32m      this._socket.uncork();[m
[32m+[m[32m    } else {[m
[32m+[m[32m      this._socket.write(list[0], cb);[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = Sender;[m
[1mdiff --git a/node_modules/ws/lib/validation.js b/node_modules/ws/lib/validation.js[m
[1mnew file mode 100644[m
[1mindex 0000000..479a7db[m
[1m--- /dev/null[m
[1m+++ b/node_modules/ws/lib/validation.js[m
[36m@@ -0,0 +1,30 @@[m
[32m+[m[32m'use strict';[m
[32m+[m
[32m+[m[32mtry {[m
[32m+[m[32m  const isValidUTF8 = require('utf-8-validate');[m
[32m+[m
[32m+[m[32m  exports.isValidUTF8 =[m
[32m+[m[32m    typeof isValidUTF8 === 'object'[m
[32m+[m[32m      ? isValidUTF8.Validation.isValidUTF8 // utf-8-validate@<3.0.0[m
[32m+[m[32m      : isValidUTF8;[m
[32m+[m[32m} catch (e) /* istanbul ignore next */ {[m
[32m+[m[32m  exports.isValidUTF8 = () => true;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Checks if a status code is allowed in a close frame.[m
[32m+[m[32m *[m
[32m+[m[32m * @param {Number} code The status code[m
[32m+[m[32m * @return {Boolean} `true` if the status code is valid, else `false`[m
[32m+[m[32m * @public[m
[32m+[m[32m */[m
[32m+[m[32mexports.isValidStatusCode = (code) => {[m
[32m+[m[32m  return ([m
[32m+[m[32m    (code >= 1000 &&[m
[32m+[m[32m      code <= 1013 &&[m
[32m+[m[32m      code !== 1004 &&[m
[32m+[m[32m      code !== 1005 &&[m
[32m+[m[32m      code !== 1006) ||[m
[32m+[m[32m    (code >= 3000 && code <= 4999)[m
[32m+[m[32m  );[m
[32m+[m[32m};[m
[1mdiff --git a/node_modules/ws/lib/websocket-server.js b/node_modules/ws/lib/websocket-server.js[m
[1mnew file mode 100644[m
[1mindex 0000000..9b061d9[m
[1m--- /dev/null[m
[1m+++ b/node_modules/ws/lib/websocket-server.js[m
[36m@@ -0,0 +1,401 @@[m
[32m+[m[32m'use strict';[m
[32m+[m
[32m+[m[32mconst EventEmitter = require('events');[m
[32m+[m[32mconst crypto = require('crypto');[m
[32m+[m[32mconst http = require('http');[m
[32m+[m
[32m+[m[32mconst PerMessageDeflate = require('./permessage-deflate');[m
[32m+[m[32mconst extension = require('./extension');[m
[32m+[m[32mconst WebSocket = require('./websocket');[m
[32m+[m[32mconst { GUID } = require('./constants');[m
[32m+[m
[32m+[m[32mconst keyRegex = /^[+/0-9A-Za-z]{22}==$/;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Class representing a WebSocket server.[m
[32m+[m[32m *[m
[32m+[m[32m * @extends EventEmitter[m
[32m+[m[32m */[m
[32m+[m[32mclass WebSocketServer extends EventEmitter {[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Create a `WebSocketServer` instance.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param {Object} options Configuration options[m
[32m+[m[32m   * @param {Number} options.backlog The maximum length of the queue of pending[m
[32m+[m[32m   *     connections[m
[32m+[m[32m   * @param {Boolean} options.clientTracking Specifies whether or not to track[m
[32m+[m[32m   *     clients[m
[32m+[m[32m   * @param {Function} options.handleProtocols An hook to handle protocols[m
[32m+[m[32m   * @param {String} options.host The hostname where to bind the server[m
[32m+[m[32m   * @param {Number} options.maxPayload The maximum allowed message size[m
[32m+[m[32m   * @param {Boolean} options.noServer Enable no server mode[m
[32m+[m[32m   * @param {String} options.path Accept only connections matching this path[m
[32m+[m[32m   * @param {(Boolean|Object)} options.perMessageDeflate Enable/disable[m
[32m+[m[32m   *     permessage-deflate[m
[32m+[m[32m   * @param {Number} options.port The port where to bind the server[m
[32m+[m[32m   * @param {http.Server} options.server A pre-created HTTP/S server to use[m
[32m+[m[32m   * @param {Function} options.verifyClient An hook to reject connections[m
[32m+[m[32m   * @param {Function} callback A listener for the `listening` event[m
[32m+[m[32m   */[m
[32m+[m[32m  constructor(options, callback) {[m
[32m+[m[32m    super();[m
[32m+[m
[32m+[m[32m    options = Object.assign([m
[32m+[m[32m      {[m
[32m+[m[32m        maxPayload: 100 * 1024 * 1024,[m
[32m+[m[32m        perMessageDeflate: false,[m
[32m+[m[32m        handleProtocols: null,[m
[32m+[m[32m        clientTracking: true,[m
[32m+[m[32m        verifyClient: null,[m
[32m+[m[32m        noServer: false,[m
[32m+[m[32m        backlog: null, // use default (511 as implemented in net.js)[m
[32m+[m[32m        server: null,[m
[32m+[m[32m        host: null,[m
[32m+[m[32m        path: null,[m
[32m+[m[32m        port: null[m
[32m+[m[32m      },[m
[32m+[m[32m      options[m
[32m+[m[32m    );[m
[32m+[m
[32m+[m[32m    if (options.port == null && !options.server && !options.noServer) {[m
[32m+[m[32m      throw new TypeError([m
[32m+[m[32m        'One of the "port", "server", or "noServer" options must be specified'[m
[32m+[m[32m      );[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (options.port != null) {[m
[32m+[m[32m      this._server = http.createServer((req, res) => {[m
[32m+[m[32m        const body = http.STATUS_CODES[426];[m
[32m+[m
[32m+[m[32m        res.writeHead(426, {[m
[32m+[m[32m          'Content-Length': body.length,[m
[32m+[m[32m          'Content-Type': 'text/plain'[m
[32m+[m[32m        });[m
[32m+[m[32m        res.end(body);[m
[32m+[m[32m      });[m
[32m+[m[32m      this._server.listen([m
[32m+[m[32m        options.port,[m
[32m+[m[32m        options.host,[m
[32m+[m[32m        options.backlog,[m
[32m+[m[32m        callback[m
[32m+[m[32m      );[m
[32m+[m[32m    } else if (options.server) {[m
[32m+[m[32m      this._server = options.server;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (this._server) {[m
[32m+[m[32m      this._removeListeners = addListeners(this._server, {[m
[32m+[m[32m        listening: this.emit.bind(this, 'listening'),[m
[32m+[m[32m        error: this.emit.bind(this, 'error'),[m
[32m+[m[32m        upgrade: (req, socket, head) => {[m
[32m+[m[32m          this.handleUpgrade(req, socket, head, (ws) => {[m
[32m+[m[32m            this.emit('connection', ws, req);[m
[32m+[m[32m          });[m
[32m+[m[32m        }[m
[32m+[m[32m      });[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (options.perMessageDeflate === true) options.perMessageDeflate = {};[m
[32m+[m[32m    if (options.clientTracking) this.clients = new Set();[m
[32m+[m[32m    this.options = options;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Returns the bound address, the address family name, and port of the server[m
[32m+[m[32m   * as reported by the operating system if listening on an IP socket.[m
[32m+[m[32m   * If the server is listening on a pipe or UNIX domain socket, the name is[m
[32m+[m[32m   * returned as a string.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @return {(Object|String|null)} The address of the server[m
[32m+[m[32m   * @public[m
[32m+[m[32m   */[m
[32m+[m[32m  address() {[m
[32m+[m[32m    if (this.options.noServer) {[m
[32m+[m[32m      throw new Error('The server is operating in "noServer" mode');[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (!this._server) return null;[m
[32m+[m[32m    return this._server.address();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Close the server.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param {Function} cb Callback[m
[32m+[m[32m   * @public[m
[32m+[m[32m   */[m
[32m+[m[32m  close(cb) {[m
[32m+[m[32m    if (cb) this.once('close', cb);[m
[32m+[m
[32m+[m[32m    //[m
[32m+[m[32m    // Terminate all associated clients.[m
[32m+[m[32m    //[m
[32m+[m[32m    if (this.clients) {[m
[32m+[m[32m      for (const client of this.clients) client.terminate();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    const server = this._server;[m
[32m+[m
[32m+[m[32m    if (server) {[m
[32m+[m[32m      this._removeListeners();[m
[32m+[m[32m      this._removeListeners = this._server = null;[m
[32m+[m
[32m+[m[32m      //[m
[32m+[m[32m      // Close the http server if it was internally created.[m
[32m+[m[32m      //[m
[32m+[m[32m      if (this.options.port != null) {[m
[32m+[m[32m        server.close(() => this.emit('close'));[m
[32m+[m[32m        return;[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    process.nextTick(emitClose, this);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * See if a given request should be handled by this server instance.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param {http.IncomingMessage} req Request object to inspect[m
[32m+[m[32m   * @return {Boolean} `true` if the request is valid, else `false`[m
[32m+[m[32m   * @public[m
[32m+[m[32m   */[m
[32m+[m[32m  shouldHandle(req) {[m
[32m+[m[32m    if (this.options.path) {[m
[32m+[m[32m      const index = req.url.indexOf('?');[m
[32m+[m[32m      const pathname = index !== -1 ? req.url.slice(0, index) : req.url;[m
[32m+[m
[32m+[m[32m      if (pathname !== this.options.path) return false;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return true;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Handle a HTTP Upgrade request.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param {http.IncomingMessage} req The request object[m
[32m+[m[32m   * @param {net.Socket} socket The network socket between the server and client[m
[32m+[m[32m   * @param {Buffer} head The first packet of the upgraded stream[m
[32m+[m[32m   * @param {Function} cb Callback[m
[32m+[m[32m   * @public[m
[32m+[m[32m   */[m
[32m+[m[32m  handleUpgrade(req, socket, head, cb) {[m
[32m+[m[32m    socket.on('error', socketOnError);[m
[32m+[m
[32m+[m[32m    const key =[m
[32m+[m[32m      req.headers['sec-websocket-key'] !== undefined[m
[32m+[m[32m        ? req.headers['sec-websocket-key'].trim()[m
[32m+[m[32m        : false;[m
[32m+[m[32m    const version = +req.headers['sec-websocket-version'];[m
[32m+[m[32m    const extensions = {};[m
[32m+[m
[32m+[m[32m    if ([m
[32m+[m[32m      req.method !== 'GET' ||[m
[32m+[m[32m      req.headers.upgrade.toLowerCase() !== 'websocket' ||[m
[32m+[m[32m      !key ||[m
[32m+[m[32m      !keyRegex.test(key) ||[m
[32m+[m[32m      (version !== 8 && version !== 13) ||[m
[32m+[m[32m      !this.shouldHandle(req)[m
[32m+[m[32m    ) {[m
[32m+[m[32m      return abortHandshake(socket, 400);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (this.options.perMessageDeflate) {[m
[32m+[m[32m      const perMessageDeflate = new PerMessageDeflate([m
[32m+[m[32m        this.options.perMessageDeflate,[m
[32m+[m[32m        true,[m
[32m+[m[32m        this.options.maxPayload[m
[32m+[m[32m      );[m
[32m+[m
[32m+[m[32m      try {[m
[32m+[m[32m        const offers = extension.parse(req.headers['sec-websocket-extensions']);[m
[32m+[m
[32m+[m[32m        if (offers[PerMessageDeflate.extensionName]) {[m
[32m+[m[32m          perMessageDeflate.accept(offers[PerMessageDeflate.extensionName]);[m
[32m+[m[32m          extensions[PerMessageDeflate.extensionName] = perMessageDeflate;[m
[32m+[m[32m        }[m
[32m+[m[32m      } catch (err) {[m
[32m+[m[32m        return abortHandshake(socket, 400);[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    //[m
[32m+[m[32m    // Optionally call external client verification handler.[m
[32m+[m[32m    //[m
[32m+[m[32m    if (this.options.verifyClient) {[m
[32m+[m[32m      const info = {[m
[32m+[m[32m        origin:[m
[32m+[m[32m          req.headers[`${version === 8 ? 'sec-websocket-origin' : 'origin'}`],[m
[32m+[m[32m        secure: !!(req.connection.authorized || req.connection.encrypted),[m
[32m+[m[32m        req[m
[32m+[m[32m      };[m
[32m+[m
[32m+[m[32m      if (this.options.verifyClient.length === 2) {[m
[32m+[m[32m        this.options.verifyClient(info, (verified, code, message, headers) => {[m
[32m+[m[32m          if (!verified) {[m
[32m+[m[32m            return abortHandshake(socket, code || 401, message, headers);[m
[32m+[m[32m          }[m
[32m+[m
[32m+[m[32m          this.completeUpgrade(key, extensions, req, socket, head, cb);[m
[32m+[m[32m        });[m
[32m+[m[32m        return;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      if (!this.options.verifyClient(info)) return abortHandshake(socket, 401);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    this.completeUpgrade(key, extensions, req, socket, head, cb);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Upgrade the connection to WebSocket.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param {String} key The value of the `Sec-WebSocket-Key` header[m
[32m+[m[32m   * @param {Object} extensions The accepted extensions[m
[32m+[m[32m   * @param {http.IncomingMessage} req The request object[m
[32m+[m[32m   * @param {net.Socket} socket The network socket between the server and client[m
[32m+[m[32m   * @param {Buffer} head The first packet of the upgraded stream[m
[32m+[m[32m   * @param {Function} cb Callback[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  completeUpgrade(key, extensions, req, socket, head, cb) {[m
[32m+[m[32m    //[m
[32m+[m[32m    // Destroy the socket if the client has already sent a FIN packet.[m
[32m+[m[32m    //[m
[32m+[m[32m    if (!socket.readable || !socket.writable) return socket.destroy();[m
[32m+[m
[32m+[m[32m    const digest = crypto[m
[32m+[m[32m      .createHash('sha1')[m
[32m+[m[32m      .update(key + GUID)[m
[32m+[m[32m      .digest('base64');[m
[32m+[m
[32m+[m[32m    const headers = [[m
[32m+[m[32m      'HTTP/1.1 101 Switching Protocols',[m
[32m+[m[32m      'Upgrade: websocket',[m
[32m+[m[32m      'Connection: Upgrade',[m
[32m+[m[32m      `Sec-WebSocket-Accept: ${digest}`[m
[32m+[m[32m    ];[m
[32m+[m
[32m+[m[32m    const ws = new WebSocket(null);[m
[32m+[m[32m    var protocol = req.headers['sec-websocket-protocol'];[m
[32m+[m
[32m+[m[32m    if (protocol) {[m
[32m+[m[32m      protocol = protocol.trim().split(/ *, */);[m
[32m+[m
[32m+[m[32m      //[m
[32m+[m[32m      // Optionally call external protocol selection handler.[m
[32m+[m[32m      //[m
[32m+[m[32m      if (this.options.handleProtocols) {[m
[32m+[m[32m        protocol = this.options.handleProtocols(protocol, req);[m
[32m+[m[32m      } else {[m
[32m+[m[32m        protocol = protocol[0];[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      if (protocol) {[m
[32m+[m[32m        headers.push(`Sec-WebSocket-Protocol: ${protocol}`);[m
[32m+[m[32m        ws.protocol = protocol;[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (extensions[PerMessageDeflate.extensionName]) {[m
[32m+[m[32m      const params = extensions[PerMessageDeflate.extensionName].params;[m
[32m+[m[32m      const value = extension.format({[m
[32m+[m[32m        [PerMessageDeflate.extensionName]: [params][m
[32m+[m[32m      });[m
[32m+[m[32m      headers.push(`Sec-WebSocket-Extensions: ${value}`);[m
[32m+[m[32m      ws._extensions = extensions;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    //[m
[32m+[m[32m    // Allow external modification/inspection of handshake headers.[m
[32m+[m[32m    //[m
[32m+[m[32m    this.emit('headers', headers, req);[m
[32m+[m
[32m+[m[32m    socket.write(headers.concat('\r\n').join('\r\n'));[m
[32m+[m[32m    socket.removeListener('error', socketOnError);[m
[32m+[m
[32m+[m[32m    ws.setSocket(socket, head, this.options.maxPayload);[m
[32m+[m
[32m+[m[32m    if (this.clients) {[m
[32m+[m[32m      this.clients.add(ws);[m
[32m+[m[32m      ws.on('close', () => this.clients.delete(ws));[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    cb(ws);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = WebSocketServer;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Add event listeners on an `EventEmitter` using a map of <event, listener>[m
[32m+[m[32m * pairs.[m
[32m+[m[32m *[m
[32m+[m[32m * @param {EventEmitter} server The event emitter[m
[32m+[m[32m * @param {Object.<String, Function>} map The listeners to add[m
[32m+[m[32m * @return {Function} A function that will remove the added listeners when called[m
[32m+[m[32m * @private[m
[32m+[m[32m */[m
[32m+[m[32mfunction addListeners(server, map) {[m
[32m+[m[32m  for (const event of Object.keys(map)) server.on(event, map[event]);[m
[32m+[m
[32m+[m[32m  return function removeListeners() {[m
[32m+[m[32m    for (const event of Object.keys(map)) {[m
[32m+[m[32m      server.removeListener(event, map[event]);[m
[32m+[m[32m    }[m
[32m+[m[32m  };[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Emit a `'close'` event on an `EventEmitter`.[m
[32m+[m[32m *[m
[32m+[m[32m * @param {EventEmitter} server The event emitter[m
[32m+[m[32m * @private[m
[32m+[m[32m */[m
[32m+[m[32mfunction emitClose(server) {[m
[32m+[m[32m  server.emit('close');[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Handle premature socket errors.[m
[32m+[m[32m *[m
[32m+[m[32m * @private[m
[32m+[m[32m */[m
[32m+[m[32mfunction socketOnError() {[m
[32m+[m[32m  this.destroy();[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Close the connection when preconditions are not fulfilled.[m
[32m+[m[32m *[m
[32m+[m[32m * @param {net.Socket} socket The socket of the upgrade request[m
[32m+[m[32m * @param {Number} code The HTTP response status code[m
[32m+[m[32m * @param {String} [message] The HTTP response body[m
[32m+[m[32m * @param {Object} [headers] Additional HTTP response headers[m
[32m+[m[32m * @private[m
[32m+[m[32m */[m
[32m+[m[32mfunction abortHandshake(socket, code, message, headers) {[m
[32m+[m[32m  if (socket.writable) {[m
[32m+[m[32m    message = message || http.STATUS_CODES[code];[m
[32m+[m[32m    headers = Object.assign([m
[32m+[m[32m      {[m
[32m+[m[32m        Connection: 'close',[m
[32m+[m[32m        'Content-type': 'text/html',[m
[32m+[m[32m        'Content-Length': Buffer.byteLength(message)[m
[32m+[m[32m      },[m
[32m+[m[32m      headers[m
[32m+[m[32m    );[m
[32m+[m
[32m+[m[32m    socket.write([m
[32m+[m[32m      `HTTP/1.1 ${code} ${http.STATUS_CODES[code]}\r\n` +[m
[32m+[m[32m        Object.keys(headers)[m
[32m+[m[32m          .map((h) => `${h}: ${headers[h]}`)[m
[32m+[m[32m          .join('\r\n') +[m
[32m+[m[32m        '\r\n\r\n' +[m
[32m+[m[32m        message[m
[32m+[m[32m    );[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  socket.removeListener('error', socketOnError);[m
[32m+[m[32m  socket.destroy();[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/ws/lib/websocket.js b/node_modules/ws/lib/websocket.js[m
[1mnew file mode 100644[m
[1mindex 0000000..af81084[m
[1m--- /dev/null[m
[1m+++ b/node_modules/ws/lib/websocket.js[m
[36m@@ -0,0 +1,895 @@[m
[32m+[m[32m'use strict';[m
[32m+[m
[32m+[m[32mconst EventEmitter = require('events');[m
[32m+[m[32mconst crypto = require('crypto');[m
[32m+[m[32mconst https = require('https');[m
[32m+[m[32mconst http = require('http');[m
[32m+[m[32mconst net = require('net');[m
[32m+[m[32mconst tls = require('tls');[m
[32m+[m[32mconst url = require('url');[m
[32m+[m
[32m+[m[32mconst PerMessageDeflate = require('./permessage-deflate');[m
[32m+[m[32mconst EventTarget = require('./event-target');[m
[32m+[m[32mconst extension = require('./extension');[m
[32m+[m[32mconst Receiver = require('./receiver');[m
[32m+[m[32mconst Sender = require('./sender');[m
[32m+[m[32mconst {[m
[32m+[m[32m  BINARY_TYPES,[m
[32m+[m[32m  EMPTY_BUFFER,[m
[32m+[m[32m  GUID,[m
[32m+[m[32m  kStatusCode,[m
[32m+[m[32m  kWebSocket,[m
[32m+[m[32m  NOOP[m
[32m+[m[32m} = require('./constants');[m
[32m+[m
[32m+[m[32mconst readyStates = ['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'];[m
[32m+[m[32mconst protocolVersions = [8, 13];[m
[32m+[m[32mconst closeTimeout = 30 * 1000;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Class representing a WebSocket.[m
[32m+[m[32m *[m
[32m+[m[32m * @extends EventEmitter[m
[32m+[m[32m */[m
[32m+[m[32mclass WebSocket extends EventEmitter {[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Create a new `WebSocket`.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param {(String|url.Url|url.URL)} address The URL to which to connect[m
[32m+[m[32m   * @param {(String|String[])} protocols The subprotocols[m
[32m+[m[32m   * @param {Object} options Connection options[m
[32m+[m[32m   */[m
[32m+[m[32m  constructor(address, protocols, options) {[m
[32m+[m[32m    super();[m
[32m+[m
[32m+[m[32m    this.readyState = WebSocket.CONNECTING;[m
[32m+[m[32m    this.protocol = '';[m
[32m+[m
[32m+[m[32m    this._binaryType = BINARY_TYPES[0];[m
[32m+[m[32m    this._closeFrameReceived = false;[m
[32m+[m[32m    this._closeFrameSent = false;[m
[32m+[m[32m    this._closeMessage = '';[m
[32m+[m[32m    this._closeTimer = null;[m
[32m+[m[32m    this._closeCode = 1006;[m
[32m+[m[32m    this._extensions = {};[m
[32m+[m[32m    this._receiver = null;[m
[32m+[m[32m    this._sender = null;[m
[32m+[m[32m    this._socket = null;[m
[32m+[m
[32m+[m[32m    if (address !== null) {[m
[32m+[m[32m      this._isServer = false;[m
[32m+[m[32m      this._redirects = 0;[m
[32m+[m
[32m+[m[32m      if (Array.isArray(protocols)) {[m
[32m+[m[32m        protocols = protocols.join(', ');[m
[32m+[m[32m      } else if (typeof protocols === 'object' && protocols !== null) {[m
[32m+[m[32m        options = protocols;[m
[32m+[m[32m        protocols = undefined;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      initAsClient(this, address, protocols, options);[m
[32m+[m[32m    } else {[m
[32m+[m[32m      this._isServer = true;[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  get CONNECTING() {[m
[32m+[m[32m    return WebSocket.CONNECTING;[m
[32m+[m[32m  }[m
[32m+[m[32m  get CLOSING() {[m
[32m+[m[32m    return WebSocket.CLOSING;[m
[32m+[m[32m  }[m
[32m+[m[32m  get CLOSED() {[m
[32m+[m[32m    return WebSocket.CLOSED;[m
[32m+[m[32m  }[m
[32m+[m[32m  get OPEN() {[m
[32m+[m[32m    return WebSocket.OPEN;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * This deviates from the WHATWG interface since ws doesn't support the[m
[32m+[m[32m   * required default "blob" type (instead we define a custom "nodebuffer"[m
[32m+[m[32m   * type).[m
[32m+[m[32m   *[m
[32m+[m[32m   * @type {String}[m
[32m+[m[32m   */[m
[32m+[m[32m  get binaryType() {[m
[32m+[m[32m    return this._binaryType;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  set binaryType(type) {[m
[32m+[m[32m    if (!BINARY_TYPES.includes(type)) return;[m
[32m+[m
[32m+[m[32m    this._binaryType = type;[m
[32m+[m
[32m+[m[32m    //[m
[32m+[m[32m    // Allow to change `binaryType` on the fly.[m
[32m+[m[32m    //[m
[32m+[m[32m    if (this._receiver) this._receiver._binaryType = type;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * @type {Number}[m
[32m+[m[32m   */[m
[32m+[m[32m  get bufferedAmount() {[m
[32m+[m[32m    if (!this._socket) return 0;[m
[32m+[m
[32m+[m[32m    //[m
[32m+[m[32m    // `socket.bufferSize` is `undefined` if the socket is closed.[m
[32m+[m[32m    //[m
[32m+[m[32m    return (this._socket.bufferSize || 0) + this._sender._bufferedBytes;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * @type {String}[m
[32m+[m[32m   */[m
[32m+[m[32m  get extensions() {[m
[32m+[m[32m    return Object.keys(this._extensions).join();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Set up the socket and the internal resources.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param {net.Socket} socket The network socket between the server and client[m
[32m+[m[32m   * @param {Buffer} head The first packet of the upgraded stream[m
[32m+[m[32m   * @param {Number} maxPayload The maximum allowed message size[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  setSocket(socket, head, maxPayload) {[m
[32m+[m[32m    const receiver = new Receiver([m
[32m+[m[32m      this._binaryType,[m
[32m+[m[32m      this._extensions,[m
[32m+[m[32m      maxPayload[m
[32m+[m[32m    );[m
[32m+[m
[32m+[m[32m    this._sender = new Sender(socket, this._extensions);[m
[32m+[m[32m    this._receiver = receiver;[m
[32m+[m[32m    this._socket = socket;[m
[32m+[m
[32m+[m[32m    receiver[kWebSocket] = this;[m
[32m+[m[32m    socket[kWebSocket] = this;[m
[32m+[m
[32m+[m[32m    receiver.on('conclude', receiverOnConclude);[m
[32m+[m[32m    receiver.on('drain', receiverOnDrain);[m
[32m+[m[32m    receiver.on('error', receiverOnError);[m
[32m+[m[32m    receiver.on('message', receiverOnMessage);[m
[32m+[m[32m    receiver.on('ping', receiverOnPing);[m
[32m+[m[32m    receiver.on('pong', receiverOnPong);[m
[32m+[m
[32m+[m[32m    socket.setTimeout(0);[m
[32m+[m[32m    socket.setNoDelay();[m
[32m+[m
[32m+[m[32m    if (head.length > 0) socket.unshift(head);[m
[32m+[m
[32m+[m[32m    socket.on('close', socketOnClose);[m
[32m+[m[32m    socket.on('data', socketOnData);[m
[32m+[m[32m    socket.on('end', socketOnEnd);[m
[32m+[m[32m    socket.on('error', socketOnError);[m
[32m+[m
[32m+[m[32m    this.readyState = WebSocket.OPEN;[m
[32m+[m[32m    this.emit('open');[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Emit the `'close'` event.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @private[m
[32m+[m[32m   */[m
[32m+[m[32m  emitClose() {[m
[32m+[m[32m    this.readyState = WebSocket.CLOSED;[m
[32m+[m
[32m+[m[32m    if (!this._socket) {[m
[32m+[m[32m      this.emit('close', this._closeCode, this._closeMessage);[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (this._extensions[PerMessageDeflate.extensionName]) {[m
[32m+[m[32m      this._extensions[PerMessageDeflate.extensionName].cleanup();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    this._receiver.removeAllListeners();[m
[32m+[m[32m    this.emit('close', this._closeCode, this._closeMessage);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Start a closing handshake.[m
[32m+[m[32m   *[m
[32m+[m[32m   *          +----------+   +-----------+   +----------+[m
[32m+[m[32m   *     - - -|ws.close()|-->|close frame|-->|ws.close()|- - -[m
[32m+[m[32m   *    |     +----------+   +-----------+   +----------+     |[m
[32m+[m[32m   *          +----------+   +-----------+         |[m
[32m+[m[32m   * CLOSING  |ws.close()|<--|close frame|<--+-----+       CLOSING[m
[32m+[m[32m   *          +----------+   +-----------+   |[m
[32m+[m[32m   *    |           |                        |   +---+        |[m
[32m+[m[32m   *                +------------------------+-->|fin| - - - -[m
[32m+[m[32m   *    |         +---+                      |   +---+[m
[32m+[m[32m   *     - - - - -|fin|<---------------------+[m
[32m+[m[32m   *              +---+[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param {Number} code Status code explaining why the connection is closing[m
[32m+[m[32m   * @param {String} data A string explaining why the connection is closing[m
[32m+[m[32m   * @public[m
[32m+[m[32m   */[m
[32m+[m[32m  close(code, data) {[m
[32m+[m[32m    if (this.readyState === WebSocket.CLOSED) return;[m
[32m+[m[32m    if (this.readyState === WebSocket.CONNECTING) {[m
[32m+[m[32m      const msg = 'WebSocket was closed before the connection was established';[m
[32m+[m[32m      return abortHandshake(this, this._req, msg);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (this.readyState === WebSocket.CLOSING) {[m
[32m+[m[32m      if (this._closeFrameSent && this._closeFrameReceived) this._socket.end();[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    this.readyState = WebSocket.CLOSING;[m
[32m+[m[32m    this._sender.close(code, data, !this._isServer, (err) => {[m
[32m+[m[32m      //[m
[32m+[m[32m      // This error is handled by the `'error'` listener on the socket. We only[m
[32m+[m[32m      // want to know if the close frame has been sent here.[m
[32m+[m[32m      //[m
[32m+[m[32m      if (err) return;[m
[32m+[m
[32m+[m[32m      this._closeFrameSent = true;[m
[32m+[m[32m      if (this._closeFrameReceived) this._socket.end();[m
[32m+[m[32m    });[m
[32m+[m
[32m+[m[32m    //[m
[32m+[m[32m    // Specify a timeout for the closing handshake to complete.[m
[32m+[m[32m    //[m
[32m+[m[32m    this._closeTimer = setTimeout([m
[32m+[m[32m      this._socket.destroy.bind(this._socket),[m
[32m+[m[32m      closeTimeout[m
[32m+[m[32m    );[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Send a ping.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param {*} data The data to send[m
[32m+[m[32m   * @param {Boolean} mask Indicates whether or not to mask `data`[m
[32m+[m[32m   * @param {Function} cb Callback which is executed when the ping is sent[m
[32m+[m[32m   * @public[m
[32m+[m[32m   */[m
[32m+[m[32m  ping(data, mask, cb) {[m
[32m+[m[32m    if (typeof data === 'function') {[m
[32m+[m[32m      cb = data;[m
[32m+[m[32m      data = mask = undefined;[m
[32m+[m[32m    } else if (typeof mask === 'function') {[m
[32m+[m[32m      cb = mask;[m
[32m+[m[32m      mask = undefined;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (this.readyState !== WebSocket.OPEN) {[m
[32m+[m[32m      const err = new Error([m
[32m+[m[32m        `WebSocket is not open: readyState ${this.readyState} ` +[m
[32m+[m[32m          `(${readyStates[this.readyState]})`[m
[32m+[m[32m      );[m
[32m+[m
[32m+[m[32m      if (cb) return cb(err);[m
[32m+[m[32m      throw err;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (typeof data === 'number') data = data.toString();[m
[32m+[m[32m    if (mask === undefined) mask = !this._isServer;[m
[32m+[m[32m    this._sender.ping(data || EMPTY_BUFFER, mask, cb);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Send a pong.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param {*} data The data to send[m
[32m+[m[32m   * @param {Boolean} mask Indicates whether or not to mask `data`[m
[32m+[m[32m   * @param {Function} cb Callback which is executed when the pong is sent[m
[32m+[m[32m   * @public[m
[32m+[m[32m   */[m
[32m+[m[32m  pong(data, mask, cb) {[m
[32m+[m[32m    if (typeof data === 'function') {[m
[32m+[m[32m      cb = data;[m
[32m+[m[32m      data = mask = undefined;[m
[32m+[m[32m    } else if (typeof mask === 'function') {[m
[32m+[m[32m      cb = mask;[m
[32m+[m[32m      mask = undefined;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (this.readyState !== WebSocket.OPEN) {[m
[32m+[m[32m      const err = new Error([m
[32m+[m[32m        `WebSocket is not open: readyState ${this.readyState} ` +[m
[32m+[m[32m          `(${readyStates[this.readyState]})`[m
[32m+[m[32m      );[m
[32m+[m
[32m+[m[32m      if (cb) return cb(err);[m
[32m+[m[32m      throw err;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (typeof data === 'number') data = data.toString();[m
[32m+[m[32m    if (mask === undefined) mask = !this._isServer;[m
[32m+[m[32m    this._sender.pong(data || EMPTY_BUFFER, mask, cb);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Send a data message.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param {*} data The message to send[m
[32m+[m[32m   * @param {Object} options Options object[m
[32m+[m[32m   * @param {Boolean} options.compress Specifies whether or not to compress `data`[m
[32m+[m[32m   * @param {Boolean} options.binary Specifies whether `data` is binary or text[m
[32m+[m[32m   * @param {Boolean} options.fin Specifies whether the fragment is the last one[m
[32m+[m[32m   * @param {Boolean} options.mask Specifies whether or not to mask `data`[m
[32m+[m[32m   * @param {Function} cb Callback which is executed when data is written out[m
[32m+[m[32m   * @public[m
[32m+[m[32m   */[m
[32m+[m[32m  send(data, options, cb) {[m
[32m+[m[32m    if (typeof options === 'function') {[m
[32m+[m[32m      cb = options;[m
[32m+[m[32m      options = {};[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (this.readyState !== WebSocket.OPEN) {[m
[32m+[m[32m      const err = new Error([m
[32m+[m[32m        `WebSocket is not open: readyState ${this.readyState} ` +[m
[32m+[m[32m          `(${readyStates[this.readyState]})`[m
[32m+[m[32m      );[m
[32m+[m
[32m+[m[32m      if (cb) return cb(err);[m
[32m+[m[32m      throw err;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (typeof data === 'number') data = data.toString();[m
[32m+[m
[32m+[m[32m    const opts = Object.assign([m
[32m+[m[32m      {[m
[32m+[m[32m        binary: typeof data !== 'string',[m
[32m+[m[32m        mask: !this._isServer,[m
[32m+[m[32m        compress: true,[m
[32m+[m[32m        fin: true[m
[32m+[m[32m      },[m
[32m+[m[32m      options[m
[32m+[m[32m    );[m
[32m+[m
[32m+[m[32m    if (!this._extensions[PerMessageDeflate.extensionName]) {[m
[32m+[m[32m      opts.compress = false;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    this._sender.send(data || EMPTY_BUFFER, opts, cb);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Forcibly close the connection.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @public[m
[32m+[m[32m   */[m
[32m+[m[32m  terminate() {[m
[32m+[m[32m    if (this.readyState === WebSocket.CLOSED) return;[m
[32m+[m[32m    if (this.readyState === WebSocket.CONNECTING) {[m
[32m+[m[32m      const msg = 'WebSocket was closed before the connection was established';[m
[32m+[m[32m      return abortHandshake(this, this._req, msg);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (this._socket) {[m
[32m+[m[32m      this.readyState = WebSocket.CLOSING;[m
[32m+[m[32m      this._socket.destroy();[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mreadyStates.forEach((readyState, i) => {[m
[32m+[m[32m  WebSocket[readyState] = i;[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32m//[m
[32m+[m[32m// Add the `onopen`, `onerror`, `onclose`, and `onmessage` attributes.[m
[32m+[m[32m// See https://html.spec.whatwg.org/multipage/comms.html#the-websocket-interface[m
[32m+[m[32m//[m
[32m+[m[32m['open', 'error', 'close', 'message'].forEach((method) => {[m
[32m+[m[32m  Object.defineProperty(WebSocket.prototype, `on${method}`, {[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Return the listener of the event.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @return {(Function|undefined)} The event listener or `undefined`[m
[32m+[m[32m     * @public[m
[32m+[m[32m     */[m
[32m+[m[32m    get() {[m
[32m+[m[32m      const listeners = this.listeners(method);[m
[32m+[m[32m      for (var i = 0; i < listeners.length; i++) {[m
[32m+[m[32m        if (listeners[i]._listener) return listeners[i]._listener;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      return undefined;[m
[32m+[m[32m    },[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Add a listener for the event.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param {Function} listener The listener to add[m
[32m+[m[32m     * @public[m
[32m+[m[32m     */[m
[32m+[m[32m    set(listener) {[m
[32m+[m[32m      const listeners = this.listeners(method);[m
[32m+[m[32m      for (var i = 0; i < listeners.length; i++) {[m
[32m+[m[32m        //[m
[32m+[m[32m        // Remove only the listeners added via `addEventListener`.[m
[32m+[m[32m        //[m
[32m+[m[32m        if (listeners[i]._listener) this.removeListener(method, listeners[i]);[m
[32m+[m[32m      }[m
[32m+[m[32m      this.addEventListener(method, listener);[m
[32m+[m[32m    }[m
[32m+[m[32m  });[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mWebSocket.prototype.addEventListener = EventTarget.addEventListener;[m
[32m+[m[32mWebSocket.prototype.removeEventListener = EventTarget.removeEventListener;[m
[32m+[m
[32m+[m[32mmodule.exports = WebSocket;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Initialize a WebSocket client.[m
[32m+[m[32m *[m
[32m+[m[32m * @param {WebSocket} websocket The client to initialize[m
[32m+[m[32m * @param {(String|url.Url|url.URL)} address The URL to which to connect[m
[32m+[m[32m * @param {String} protocols The subprotocols[m
[32m+[m[32m * @param {Object} options Connection options[m
[32m+[m[32m * @param {(Boolean|Object)} options.perMessageDeflate Enable/disable[m
[32m+[m[32m *     permessage-deflate[m
[32m+[m[32m * @param {Number} options.handshakeTimeout Timeout in milliseconds for the[m
[32m+[m[32m *     handshake request[m
[32m+[m[32m * @param {Number} options.protocolVersion Value of the `Sec-WebSocket-Version`[m
[32m+[m[32m *     header[m
[32m+[m[32m * @param {String} options.origin Value of the `Origin` or[m
[32m+[m[32m *     `Sec-WebSocket-Origin` header[m
[32m+[m[32m * @param {Number} options.maxPayload The maximum allowed message size[m
[32m+[m[32m * @param {Boolean} options.followRedirects Whether or not to follow redirects[m
[32m+[m[32m * @param {Number} options.maxRedirects The maximum number of redirects allowed[m
[32m+[m[32m * @private[m
[32m+[m[32m */[m
[32m+[m[32mfunction initAsClient(websocket, address, protocols, options) {[m
[32m+[m[32m  const opts = Object.assign([m
[32m+[m[32m    {[m
[32m+[m[32m      protocolVersion: protocolVersions[1],[m
[32m+[m[32m      maxPayload: 100 * 1024 * 1024,[m
[32m+[m[32m      perMessageDeflate: true,[m
[32m+[m[32m      followRedirects: false,[m
[32m+[m[32m      maxRedirects: 10[m
[32m+[m[32m    },[m
[32m+[m[32m    options,[m
[32m+[m[32m    {[m
[32m+[m[32m      createConnection: undefined,[m
[32m+[m[32m      socketPath: undefined,[m
[32m+[m[32m      hostname: undefined,[m
[32m+[m[32m      protocol: undefined,[m
[32m+[m[32m      timeout: undefined,[m
[32m+[m[32m      method: undefined,[m
[32m+[m[32m      auth: undefined,[m
[32m+[m[32m      host: undefined,[m
[32m+[m[32m      path: undefined,[m
[32m+[m[32m      port: undefined[m
[32m+[m[32m    }[m
[32m+[m[32m  );[m
[32m+[m
[32m+[m[32m  if (!protocolVersions.includes(opts.protocolVersion)) {[m
[32m+[m[32m    throw new RangeError([m
[32m+[m[32m      `Unsupported protocol version: ${opts.protocolVersion} ` +[m
[32m+[m[32m        `(supported versions: ${protocolVersions.join(', ')})`[m
[32m+[m[32m    );[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  var parsedUrl;[m
[32m+[m
[32m+[m[32m  if (typeof address === 'object' && address.href !== undefined) {[m
[32m+[m[32m    parsedUrl = address;[m
[32m+[m[32m    websocket.url = address.href;[m
[32m+[m[32m  } else {[m
[32m+[m[32m    //[m
[32m+[m[32m    // The WHATWG URL constructor is not available on Node.js < 6.13.0[m
[32m+[m[32m    //[m
[32m+[m[32m    parsedUrl = url.URL ? new url.URL(address) : url.parse(address);[m
[32m+[m[32m    websocket.url = address;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  const isUnixSocket = parsedUrl.protocol === 'ws+unix:';[m
[32m+[m
[32m+[m[32m  if (!parsedUrl.host && (!isUnixSocket || !parsedUrl.pathname)) {[m
[32m+[m[32m    throw new Error(`Invalid URL: ${websocket.url}`);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  const isSecure =[m
[32m+[m[32m    parsedUrl.protocol === 'wss:' || parsedUrl.protocol === 'https:';[m
[32m+[m[32m  const defaultPort = isSecure ? 443 : 80;[m
[32m+[m[32m  const key = crypto.randomBytes(16).toString('base64');[m
[32m+[m[32m  const get = isSecure ? https.get : http.get;[m
[32m+[m[32m  const path = parsedUrl.search[m
[32m+[m[32m    ? `${parsedUrl.pathname || '/'}${parsedUrl.search}`[m
[32m+[m[32m    : parsedUrl.pathname || '/';[m
[32m+[m[32m  var perMessageDeflate;[m
[32m+[m
[32m+[m[32m  opts.createConnection = isSecure ? tlsConnect : netConnect;[m
[32m+[m[32m  opts.defaultPort = opts.defaultPort || defaultPort;[m
[32m+[m[32m  opts.port = parsedUrl.port || defaultPort;[m
[32m+[m[32m  opts.host = parsedUrl.hostname.startsWith('[')[m
[32m+[m[32m    ? parsedUrl.hostname.slice(1, -1)[m
[32m+[m[32m    : parsedUrl.hostname;[m
[32m+[m[32m  opts.headers = Object.assign([m
[32m+[m[32m    {[m
[32m+[m[32m      'Sec-WebSocket-Version': opts.protocolVersion,[m
[32m+[m[32m      'Sec-WebSocket-Key': key,[m
[32m+[m[32m      Connection: 'Upgrade',[m
[32m+[m[32m      Upgrade: 'websocket'[m
[32m+[m[32m    },[m
[32m+[m[32m    opts.headers[m
[32m+[m[32m  );[m
[32m+[m[32m  opts.path = path;[m
[32m+[m[32m  opts.timeout = opts.handshakeTimeout;[m
[32m+[m
[32m+[m[32m  if (opts.perMessageDeflate) {[m
[32m+[m[32m    perMessageDeflate = new PerMessageDeflate([m
[32m+[m[32m      opts.perMessageDeflate !== true ? opts.perMessageDeflate : {},[m
[32m+[m[32m      false,[m
[32m+[m[32m      opts.maxPayload[m
[32m+[m[32m    );[m
[32m+[m[32m    opts.headers['Sec-WebSocket-Extensions'] = extension.format({[m
[32m+[m[32m      [PerMessageDeflate.extensionName]: perMessageDeflate.offer()[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m[32m  if (protocols) {[m
[32m+[m[32m    opts.headers['Sec-WebSocket-Protocol'] = protocols;[m
[32m+[m[32m  }[m
[32m+[m[32m  if (opts.origin) {[m
[32m+[m[32m    if (opts.protocolVersion < 13) {[m
[32m+[m[32m      opts.headers['Sec-WebSocket-Origin'] = opts.origin;[m
[32m+[m[32m    } else {[m
[32m+[m[32m      opts.headers.Origin = opts.origin;[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m  if (parsedUrl.auth) {[m
[32m+[m[32m    opts.auth = parsedUrl.auth;[m
[32m+[m[32m  } else if (parsedUrl.username || parsedUrl.password) {[m
[32m+[m[32m    opts.auth = `${parsedUrl.username}:${parsedUrl.password}`;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if (isUnixSocket) {[m
[32m+[m[32m    const parts = path.split(':');[m
[32m+[m
[32m+[m[32m    opts.socketPath = parts[0];[m
[32m+[m[32m    opts.path = parts[1];[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  var req = (websocket._req = get(opts));[m
[32m+[m
[32m+[m[32m  if (opts.timeout) {[m
[32m+[m[32m    req.on('timeout', () => {[m
[32m+[m[32m      abortHandshake(websocket, req, 'Opening handshake has timed out');[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  req.on('error', (err) => {[m
[32m+[m[32m    if (websocket._req.aborted) return;[m
[32m+[m
[32m+[m[32m    req = websocket._req = null;[m
[32m+[m[32m    websocket.readyState = WebSocket.CLOSING;[m
[32m+[m[32m    websocket.emit('error', err);[m
[32m+[m[32m    websocket.emitClose();[m
[32m+[m[32m  });[m
[32m+[m
[32m+[m[32m  req.on('response', (res) => {[m
[32m+[m[32m    const location = res.headers.location;[m
[32m+[m[32m    const statusCode = res.statusCode;[m
[32m+[m
[32m+[m[32m    if ([m
[32m+[m[32m      location &&[m
[32m+[m[32m      opts.followRedirects &&[m
[32m+[m[32m      statusCode >= 300 &&[m
[32m+[m[32m      statusCode < 400[m
[32m+[m[32m    ) {[m
[32m+[m[32m      if (++websocket._redirects > opts.maxRedirects) {[m
[32m+[m[32m        abortHandshake(websocket, req, 'Maximum redirects exceeded');[m
[32m+[m[32m        return;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      req.abort();[m
[32m+[m
[32m+[m[32m      const addr = url.URL[m
[32m+[m[32m        ? new url.URL(location, address)[m
[32m+[m[32m        : url.resolve(address, location);[m
[32m+[m
[32m+[m[32m      initAsClient(websocket, addr, protocols, options);[m
[32m+[m[32m    } else if (!websocket.emit('unexpected-response', req, res)) {[m
[32m+[m[32m      abortHandshake([m
[32m+[m[32m        websocket,[m
[32m+[m[32m        req,[m
[32m+[m[32m        `Unexpected server response: ${res.statusCode}`[m
[32m+[m[32m      );[m
[32m+[m[32m    }[m
[32m+[m[32m  });[m
[32m+[m
[32m+[m[32m  req.on('upgrade', (res, socket, head) => {[m
[32m+[m[32m    websocket.emit('upgrade', res);[m
[32m+[m
[32m+[m[32m    //[m
[32m+[m[32m    // The user may have closed the connection from a listener of the `upgrade`[m
[32m+[m[32m    // event.[m
[32m+[m[32m    //[m
[32m+[m[32m    if (websocket.readyState !== WebSocket.CONNECTING) return;[m
[32m+[m
[32m+[m[32m    req = websocket._req = null;[m
[32m+[m
[32m+[m[32m    const digest = crypto[m
[32m+[m[32m      .createHash('sha1')[m
[32m+[m[32m      .update(key + GUID)[m
[32m+[m[32m      .digest('base64');[m
[32m+[m
[32m+[m[32m    if (res.headers['sec-websocket-accept'] !== digest) {[m
[32m+[m[32m      abortHandshake(websocket, socket, 'Invalid Sec-WebSocket-Accept header');[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    const serverProt = res.headers['sec-websocket-protocol'];[m
[32m+[m[32m    const protList = (protocols || '').split(/, */);[m
[32m+[m[32m    var protError;[m
[32m+[m
[32m+[m[32m    if (!protocols && serverProt) {[m
[32m+[m[32m      protError = 'Server sent a subprotocol but none was requested';[m
[32m+[m[32m    } else if (protocols && !serverProt) {[m
[32m+[m[32m      protError = 'Server sent no subprotocol';[m
[32m+[m[32m    } else if (serverProt && !protList.includes(serverProt)) {[m
[32m+[m[32m      protError = 'Server sent an invalid subprotocol';[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (protError) {[m
[32m+[m[32m      abortHandshake(websocket, socket, protError);[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (serverProt) websocket.protocol = serverProt;[m
[32m+[m
[32m+[m[32m    if (perMessageDeflate) {[m
[32m+[m[32m      try {[m
[32m+[m[32m        const extensions = extension.parse([m
[32m+[m[32m          res.headers['sec-websocket-extensions'][m
[32m+[m[32m        );[m
[32m+[m
[32m+[m[32m        if (extensions[PerMessageDeflate.extensionName]) {[m
[32m+[m[32m          perMessageDeflate.accept(extensions[PerMessageDeflate.extensionName]);[m
[32m+[m[32m          websocket._extensions[[m
[32m+[m[32m            PerMessageDeflate.extensionName[m
[32m+[m[32m          ] = perMessageDeflate;[m
[32m+[m[32m        }[m
[32m+[m[32m      } catch (err) {[m
[32m+[m[32m        abortHandshake([m
[32m+[m[32m          websocket,[m
[32m+[m[32m          socket,[m
[32m+[m[32m          'Invalid Sec-WebSocket-Extensions header'[m
[32m+[m[32m        );[m
[32m+[m[32m        return;[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    websocket.setSocket(socket, head, opts.maxPayload);[m
[32m+[m[32m  });[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Create a `net.Socket` and initiate a connection.[m
[32m+[m[32m *[m
[32m+[m[32m * @param {Object} options Connection options[m
[32m+[m[32m * @return {net.Socket} The newly created socket used to start the connection[m
[32m+[m[32m * @private[m
[32m+[m[32m */[m
[32m+[m[32mfunction netConnect(options) {[m
[32m+[m[32m  //[m
[32m+[m[32m  // Override `options.path` only if `options` is a copy of the original options[m
[32m+[m[32m  // object. This is always true on Node.js >= 8 but not on Node.js 6 where[m
[32m+[m[32m  // `options.socketPath` might be `undefined` even if the `socketPath` option[m
[32m+[m[32m  // was originally set.[m
[32m+[m[32m  //[m
[32m+[m[32m  if (options.protocolVersion) options.path = options.socketPath;[m
[32m+[m[32m  return net.connect(options);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Create a `tls.TLSSocket` and initiate a connection.[m
[32m+[m[32m *[m
[32m+[m[32m * @param {Object} options Connection options[m
[32m+[m[32m * @return {tls.TLSSocket} The newly created socket used to start the connection[m
[32m+[m[32m * @private[m
[32m+[m[32m */[m
[32m+[m[32mfunction tlsConnect(options) {[m
[32m+[m[32m  options.path = undefined;[m
[32m+[m[32m  options.servername = options.servername || options.host;[m
[32m+[m[32m  return tls.connect(options);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Abort the handshake and emit an error.[m
[32m+[m[32m *[m
[32m+[m[32m * @param {WebSocket} websocket The WebSocket instance[m
[32m+[m[32m * @param {(http.ClientRequest|net.Socket)} stream The request to abort or the[m
[32m+[m[32m *     socket to destroy[m
[32m+[m[32m * @param {String} message The error message[m
[32m+[m[32m * @private[m
[32m+[m[32m */[m
[32m+[m[32mfunction abortHandshake(websocket, stream, message) {[m
[32m+[m[32m  websocket.readyState = WebSocket.CLOSING;[m
[32m+[m
[32m+[m[32m  const err = new Error(message);[m
[32m+[m[32m  Error.captureStackTrace(err, abortHandshake);[m
[32m+[m
[32m+[m[32m  if (stream.setHeader) {[m
[32m+[m[32m    stream.abort();[m
[32m+[m[32m    stream.once('abort', websocket.emitClose.bind(websocket));[m
[32m+[m[32m    websocket.emit('error', err);[m
[32m+[m[32m  } else {[m
[32m+[m[32m    stream.destroy(err);[m
[32m+[m[32m    stream.once('error', websocket.emit.bind(websocket, 'error'));[m
[32m+[m[32m    stream.once('close', websocket.emitClose.bind(websocket));[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * The listener of the `Receiver` `'conclude'` event.[m
[32m+[m[32m *[m
[32m+[m[32m * @param {Number} code The status code[m
[32m+[m[32m * @param {String} reason The reason for closing[m
[32m+[m[32m * @private[m
[32m+[m[32m */[m
[32m+[m[32mfunction receiverOnConclude(code, reason) {[m
[32m+[m[32m  const websocket = this[kWebSocket];[m
[32m+[m
[32m+[m[32m  websocket._socket.removeListener('data', socketOnData);[m
[32m+[m[32m  websocket._socket.resume();[m
[32m+[m
[32m+[m[32m  websocket._closeFrameReceived = true;[m
[32m+[m[32m  websocket._closeMessage = reason;[m
[32m+[m[32m  websocket._closeCode = code;[m
[32m+[m
[32m+[m[32m  if (code === 1005) websocket.close();[m
[32m+[m[32m  else websocket.close(code, reason);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * The listener of the `Receiver` `'drain'` event.[m
[32m+[m[32m *[m
[32m+[m[32m * @private[m
[32m+[m[32m */[m
[32m+[m[32mfunction receiverOnDrain() {[m
[32m+[m[32m  this[kWebSocket]._socket.resume();[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * The listener of the `Receiver` `'error'` event.[m
[32m+[m[32m *[m
[32m+[m[32m * @param {(RangeError|Error)} err The emitted error[m
[32m+[m[32m * @private[m
[32m+[m[32m */[m
[32m+[m[32mfunction receiverOnError(err) {[m
[32m+[m[32m  const websocket = this[kWebSocket];[m
[32m+[m
[32m+[m[32m  websocket._socket.removeListener('data', socketOnData);[m
[32m+[m
[32m+[m[32m  websocket.readyState = WebSocket.CLOSING;[m
[32m+[m[32m  websocket._closeCode = err[kStatusCode];[m
[32m+[m[32m  websocket.emit('error', err);[m
[32m+[m[32m  websocket._socket.destroy();[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * The listener of the `Receiver` `'finish'` event.[m
[32m+[m[32m *[m
[32m+[m[32m * @private[m
[32m+[m[32m */[m
[32m+[m[32mfunction receiverOnFinish() {[m
[32m+[m[32m  this[kWebSocket].emitClose();[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * The listener of the `Receiver` `'message'` event.[m
[32m+[m[32m *[m
[32m+[m[32m * @param {(String|Buffer|ArrayBuffer|Buffer[])} data The message[m
[32m+[m[32m * @private[m
[32m+[m[32m */[m
[32m+[m[32mfunction receiverOnMessage(data) {[m
[32m+[m[32m  this[kWebSocket].emit('message', data);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * The listener of the `Receiver` `'ping'` event.[m
[32m+[m[32m *[m
[32m+[m[32m * @param {Buffer} data The data included in the ping frame[m
[32m+[m[32m * @private[m
[32m+[m[32m */[m
[32m+[m[32mfunction receiverOnPing(data) {[m
[32m+[m[32m  const websocket = this[kWebSocket];[m
[32m+[m
[32m+[m[32m  websocket.pong(data, !websocket._isServer, NOOP);[m
[32m+[m[32m  websocket.emit('ping', data);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * The listener of the `Receiver` `'pong'` event.[m
[32m+[m[32m *[m
[32m+[m[32m * @param {Buffer} data The data included in the pong frame[m
[32m+[m[32m * @private[m
[32m+[m[32m */[m
[32m+[m[32mfunction receiverOnPong(data) {[m
[32m+[m[32m  this[kWebSocket].emit('pong', data);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * The listener of the `net.Socket` `'close'` event.[m
[32m+[m[32m *[m
[32m+[m[32m * @private[m
[32m+[m[32m */[m
[32m+[m[32mfunction socketOnClose() {[m
[32m+[m[32m  const websocket = this[kWebSocket];[m
[32m+[m
[32m+[m[32m  this.removeListener('close', socketOnClose);[m
[32m+[m[32m  this.removeListener('end', socketOnEnd);[m
[32m+[m
[32m+[m[32m  websocket.readyState = WebSocket.CLOSING;[m
[32m+[m
[32m+[m[32m  //[m
[32m+[m[32m  // The close frame might not have been received or the `'end'` event emitted,[m
[32m+[m[32m  // for example, if the socket was destroyed due to an error. Ensure that the[m
[32m+[m[32m  // `receiver` stream is closed after writing any remaining buffered data to[m
[32m+[m[32m  // it. If the readable side of the socket is in flowing mode then there is no[m
[32m+[m[32m  // buffered data as everything has been already written and `readable.read()`[m
[32m+[m[32m  // will return `null`. If instead, the socket is paused, any possible buffered[m
[32m+[m[32m  // data will be read as a single chunk and emitted synchronously in a single[m
[32m+[m[32m  // `'data'` event.[m
[32m+[m[32m  //[m
[32m+[m[32m  websocket._socket.read();[m
[32m+[m[32m  websocket._receiver.end();[m
[32m+[m
[32m+[m[32m  this.removeListener('data', socketOnData);[m
[32m+[m[32m  this[kWebSocket] = undefined;[m
[32m+[m
[32m+[m[32m  clearTimeout(websocket._closeTimer);[m
[32m+[m
[32m+[m[32m  if ([m
[32m+[m[32m    websocket._receiver._writableState.finished ||[m
[32m+[m[32m    websocket._receiver._writableState.errorEmitted[m
[32m+[m[32m  ) {[m
[32m+[m[32m    websocket.emitClose();[m
[32m+[m[32m  } else {[m
[32m+[m[32m    websocket._receiver.on('error', receiverOnFinish);[m
[32m+[m[32m    websocket._receiver.on('finish', receiverOnFinish);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * The listener of the `net.Socket` `'data'` event.[m
[32m+[m[32m *[m
[32m+[m[32m * @param {Buffer} chunk A chunk of data[m
[32m+[m[32m * @private[m
[32m+[m[32m */[m
[32m+[m[32mfunction socketOnData(chunk) {[m
[32m+[m[32m  if (!this[kWebSocket]._receiver.write(chunk)) {[m
[32m+[m[32m    this.pause();[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * The listener of the `net.Socket` `'end'` event.[m
[32m+[m[32m *[m
[32m+[m[32m * @private[m
[32m+[m[32m */[m
[32m+[m[32mfunction socketOnEnd() {[m
[32m+[m[32m  const websocket = this[kWebSocket];[m
[32m+[m
[32m+[m[32m  websocket.readyState = WebSocket.CLOSING;[m
[32m+[m[32m  websocket._receiver.end();[m
[32m+[m[32m  this.end();[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * The listener of the `net.Socket` `'error'` event.[m
[32m+[m[32m *[m
[32m+[m[32m * @private[m
[32m+[m[32m */[m
[32m+[m[32mfunction socketOnError() {[m
[32m+[m[32m  const websocket = this[kWebSocket];[m
[32m+[m
[32m+[m[32m  this.removeListener('error', socketOnError);[m
[32m+[m[32m  this.on('error', NOOP);[m
[32m+[m
[32m+[m[32m  websocket.readyState = WebSocket.CLOSING;[m
[32m+[m[32m  this.destroy();[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/ws/package.json b/node_modules/ws/package.json[m
[1mnew file mode 100644[m
[1mindex 0000000..110c860[m
[1m--- /dev/null[m
[1m+++ b/node_modules/ws/package.json[m
[36m@@ -0,0 +1,79 @@[m
[32m+[m[32m{[m
[32m+[m[32m  "_from": "ws@^6.0.0",[m
[32m+[m[32m  "_id": "ws@6.2.1",[m
[32m+[m[32m  "_inBundle": false,[m
[32m+[m[32m  "_integrity": "sha512-GIyAXC2cB7LjvpgMt9EKS2ldqr0MTrORaleiOno6TweZ6r3TKtoFQWay/2PceJ3RuBasOHzXNn5Lrw1X0bEjqA==",[m
[32m+[m[32m  "_location": "/ws",[m
[32m+[m[32m  "_phantomChildren": {},[m
[32m+[m[32m  "_requested": {[m
[32m+[m[32m    "type": "range",[m
[32m+[m[32m    "registry": true,[m
[32m+[m[32m    "raw": "ws@^6.0.0",[m
[32m+[m[32m    "name": "ws",[m
[32m+[m[32m    "escapedName": "ws",[m
[32m+[m[32m    "rawSpec": "^6.0.0",[m
[32m+[m[32m    "saveSpec": null,[m
[32m+[m[32m    "fetchSpec": "^6.0.0"[m
[32m+[m[32m  },[m
[32m+[m[32m  "_requiredBy": [[m
[32m+[m[32m    "/discord.js"[m
[32m+[m[32m  ],[m
[32m+[m[32m  "_resolved": "https://registry.npmjs.org/ws/-/ws-6.2.1.tgz",[m
[32m+[m[32m  "_shasum": "442fdf0a47ed64f59b6a5d8ff130f4748ed524fb",[m
[32m+[m[32m  "_spec": "ws@^6.0.0",[m
[32m+[m[32m  "_where": "C:\\Users\\jojo2\\Documents\\Discord Bots\\Discord-Basic-Bot\\node_modules\\discord.js",[m
[32m+[m[32m  "author": {[m
[32m+[m[32m    "name": "Einar Otto Stangvik",[m
[32m+[m[32m    "email": "einaros@gmail.com",[m
[32m+[m[32m    "url": "http://2x.io"[m
[32m+[m[32m  },[m
[32m+[m[32m  "browser": "browser.js",[m
[32m+[m[32m  "bugs": {[m
[32m+[m[32m    "url": "https://github.com/websockets/ws/issues"[m
[32m+[m[32m  },[m
[32m+[m[32m  "bundleDependencies": false,[m
[32m+[m[32m  "dependencies": {[m
[32m+[m[32m    "async-limiter": "~1.0.0"[m
[32m+[m[32m  },[m
[32m+[m[32m  "deprecated": false,[m
[32m+[m[32m  "description": "Simple to use, blazing fast and thoroughly tested websocket client and server for Node.js",[m
[32m+[m[32m  "devDependencies": {[m
[32m+[m[32m    "benchmark": "~2.1.4",[m
[32m+[m[32m    "bufferutil": "~4.0.0",[m
[32m+[m[32m    "coveralls": "~3.0.3",[m
[32m+[m[32m    "eslint": "~5.15.0",[m
[32m+[m[32m    "eslint-config-prettier": "~4.1.0",[m
[32m+[m[32m    "eslint-plugin-prettier": "~3.0.0",[m
[32m+[m[32m    "mocha": "~6.0.0",[m
[32m+[m[32m    "nyc": "~13.3.0",[m
[32m+[m[32m    "prettier": "~1.16.1",[m
[32m+[m[32m    "utf-8-validate": "~5.0.0"[m
[32m+[m[32m  },[m
[32m+[m[32m  "files": [[m
[32m+[m[32m    "browser.js",[m
[32m+[m[32m    "index.js",[m
[32m+[m[32m    "lib/*.js"[m
[32m+[m[32m  ],[m
[32m+[m[32m  "homepage": "https://github.com/websockets/ws",[m
[32m+[m[32m  "keywords": [[m
[32m+[m[32m    "HyBi",[m
[32m+[m[32m    "Push",[m
[32m+[m[32m    "RFC-6455",[m
[32m+[m[32m    "WebSocket",[m
[32m+[m[32m    "WebSockets",[m
[32m+[m[32m    "real-time"[m
[32m+[m[32m  ],[m
[32m+[m[32m  "license": "MIT",[m
[32m+[m[32m  "main": "index.js",[m
[32m+[m[32m  "name": "ws",[m
[32m+[m[32m  "repository": {[m
[32m+[m[32m    "type": "git",[m
[32m+[m[32m    "url": "git+https://github.com/websockets/ws.git"[m
[32m+[m[32m  },[m
[32m+[m[32m  "scripts": {[m
[32m+[m[32m    "integration": "npm run lint && mocha test/*.integration.js",[m
[32m+[m[32m    "lint": "eslint --ignore-path .gitignore . && prettier --check --ignore-path .gitignore \"**/*.{json,md,yml}\"",[m
[32m+[m[32m    "test": "npm run lint && nyc --reporter=html --reporter=text mocha test/*.test.js"[m
[32m+[m[32m  },[m
[32m+[m[32m  "version": "6.2.1"[m
[32m+[m[32m}[m
[1mdiff --git a/package-lock.json b/package-lock.json[m
[1mnew file mode 100644[m
[1mindex 0000000..3a1ac7c[m
[1m--- /dev/null[m
[1m+++ b/package-lock.json[m
[36m@@ -0,0 +1,53 @@[m
[32m+[m[32m{[m
[32m+[m[32m  "name": "discord-basic-bot",[m
[32m+[m[32m  "version": "1.0.0",[m
[32m+[m[32m  "lockfileVersion": 1,[m
[32m+[m[32m  "requires": true,[m
[32m+[m[32m  "dependencies": {[m
[32m+[m[32m    "async-limiter": {[m
[32m+[m[32m      "version": "1.0.1",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/async-limiter/-/async-limiter-1.0.1.tgz",[m
[32m+[m[32m      "integrity": "sha512-csOlWGAcRFJaI6m+F2WKdnMKr4HhdhFVBk0H/QbJFMCr+uO2kwohwXQPxw/9OCxp05r5ghVBFSyioixx3gfkNQ=="[m
[32m+[m[32m    },[m
[32m+[m[32m    "discord.js": {[m
[32m+[m[32m      "version": "11.5.1",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/discord.js/-/discord.js-11.5.1.tgz",[m
[32m+[m[32m      "integrity": "sha512-tGhV5xaZXE3Z+4uXJb3hYM6gQ1NmnSxp9PClcsSAYFVRzH6AJH74040mO3afPDMWEAlj8XsoPXXTJHTxesqcGw==",[m
[32m+[m[32m      "requires": {[m
[32m+[m[32m        "long": "^4.0.0",[m
[32m+[m[32m        "prism-media": "^0.0.3",[m
[32m+[m[32m        "snekfetch": "^3.6.4",[m
[32m+[m[32m        "tweetnacl": "^1.0.0",[m
[32m+[m[32m        "ws": "^6.0.0"[m
[32m+[m[32m      }[m
[32m+[m[32m    },[m
[32m+[m[32m    "long": {[m
[32m+[m[32m      "version": "4.0.0",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/long/-/long-4.0.0.tgz",[m
[32m+[m[32m      "integrity": "sha512-XsP+KhQif4bjX1kbuSiySJFNAehNxgLb6hPRGJ9QsUr8ajHkuXGdrHmFUTUUXhDwVX2R5bY4JNZEwbUiMhV+MA=="[m
[32m+[m[32m    },[m
[32m+[m[32m    "prism-media": {[m
[32m+[m[32m      "version": "0.0.3",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/prism-media/-/prism-media-0.0.3.tgz",[m
[32m+[m[32m      "integrity": "sha512-c9KkNifSMU/iXT8FFTaBwBMr+rdVcN+H/uNv1o+CuFeTThNZNTOrQ+RgXA1yL/DeLk098duAeRPP3QNPNbhxYQ=="[m
[32m+[m[32m    },[m
[32m+[m[32m    "snekfetch": {[m
[32m+[m[32m      "version": "3.6.4",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/snekfetch/-/snekfetch-3.6.4.tgz",[m
[32m+[m[32m      "integrity": "sha512-NjxjITIj04Ffqid5lqr7XdgwM7X61c/Dns073Ly170bPQHLm6jkmelye/eglS++1nfTWktpP6Y2bFXjdPlQqdw=="[m
[32m+[m[32m    },[m
[32m+[m[32m    "tweetnacl": {[m
[32m+[m[32m      "version": "1.0.1",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/tweetnacl/-/tweetnacl-1.0.1.tgz",[m
[32m+[m[32m      "integrity": "sha512-kcoMoKTPYnoeS50tzoqjPY3Uv9axeuuFAZY9M/9zFnhoVvRfxz9K29IMPD7jGmt2c8SW7i3gT9WqDl2+nV7p4A=="[m
[32m+[m[32m    },[m
[32m+[m[32m    "ws": {[m
[32m+[m[32m      "version": "6.2.1",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/ws/-/ws-6.2.1.tgz",[m
[32m+[m[32m      "integrity": "sha512-GIyAXC2cB7LjvpgMt9EKS2ldqr0MTrORaleiOno6TweZ6r3TKtoFQWay/2PceJ3RuBasOHzXNn5Lrw1X0bEjqA==",[m
[32m+[m[32m      "requires": {[m
[32m+[m[32m        "async-limiter": "~1.0.0"[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[1mdiff --git a/package.json b/package.json[m
[1mindex 9d50dda..37aaa31 100644[m
[1m--- a/package.json[m
[1m+++ b/package.json[m
[36m@@ -15,5 +15,8 @@[m
   "bugs": {[m
     "url": "https://github.com/jojo20872/Discord-Basic-Bot/issues"[m
   },[m
[31m-  "homepage": "https://github.com/jojo20872/Discord-Basic-Bot#readme"[m
[32m+[m[32m  "homepage": "https://github.com/jojo20872/Discord-Basic-Bot#readme",[m
[32m+[m[32m  "dependencies": {[m
[32m+[m[32m    "discord.js": "^11.5.1"[m
[32m+[m[32m  }[m
 }[m
